<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>数据结构初识</title>
    <url>/2022/05/09/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%88%9D%E8%AF%86/</url>
    <content><![CDATA[<blockquote>
<center>路漫漫其修远兮，吾将上下而求索</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<h2 id="1-绪论"><a href="#1-绪论" class="headerlink" title="1. 绪论"></a>1. 绪论</h2><h3 id="1-1-基本概念和术语"><a href="#1-1-基本概念和术语" class="headerlink" title="1.1 基本概念和术语"></a>1.1 基本概念和术语</h3><ul>
<li><p>数据</p>
</li>
<li><p>数据元素</p>
</li>
<li><p>数据对象【数据元素的集合】</p>
</li>
<li><p>数据类型</p>
<ul>
<li>原子类型</li>
<li>结构类型</li>
<li>抽象数据类型</li>
</ul>
</li>
<li><p>数据结构</p>
<blockquote>
<p>数据结构是相互之间存在一种或多种特定关系的数据元素的集合</p>
</blockquote>
<ul>
<li><p>逻辑结构</p>
</li>
<li><p>存储结构</p>
</li>
<li><p>数据的运算</p>
</li>
</ul>
</li>
</ul>
<h3 id="1-2-数据结构三要素"><a href="#1-2-数据结构三要素" class="headerlink" title="1.2 数据结构三要素"></a>1.2 数据结构三要素</h3><ul>
<li>逻辑结构</li>
</ul>
<blockquote>
<p>包括线性结构【一对一】：一般线性表、受限线性表【栈、队列、串】、线性表推广【数组】</p>
<p>非线性结构【一对多或同属一个集合】：集合、树形结构【一般树、二叉树、B+树】、图状结构【有向图、无向图，网状结构】</p>
</blockquote>
<ul>
<li>存储结构【物理】</li>
</ul>
<blockquote>
<p>顺序存储、链式存储、索引存储、散列存储【hash】</p>
</blockquote>
<ul>
<li>数据的运算</li>
</ul>
<blockquote>
<p>运算的定义【逻辑结构】和实现【存储结构】</p>
</blockquote>
<h3 id="1-3-算法"><a href="#1-3-算法" class="headerlink" title="1.3  算法"></a>1.3  算法</h3><p>&lt;1&gt; 五个特性</p>
<ul>
<li>有穷性</li>
<li>确定性</li>
<li>可行性</li>
<li>输入</li>
<li>输出</li>
</ul>
<p>&lt;2&gt;效率的度量</p>
<ul>
<li>时间复杂度</li>
</ul>
<blockquote>
<p>最坏时间复杂度，平均时间复杂度，最好时间复杂度</p>
</blockquote>
<ul>
<li>空间复杂度</li>
</ul>
<h2 id="2-线性表"><a href="#2-线性表" class="headerlink" title="2. 线性表"></a>2. 线性表</h2><h3 id="2-1-定义"><a href="#2-1-定义" class="headerlink" title="2.1 定义"></a>2.1 定义</h3><blockquote>
<p>线性表是具有相同数据类型的n（n &gt;&#x3D; 0）个数据元素的优先序列</p>
</blockquote>
<h3 id="2-2-线性表的基本操作"><a href="#2-2-线性表的基本操作" class="headerlink" title="2.2 线性表的基本操作"></a>2.2 线性表的基本操作</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">InitList</span>(&amp;L) <span class="comment">//初始化表</span></span><br><span class="line">Length（L）<span class="comment">//求表长</span></span><br><span class="line">   <span class="built_in">LocateElem</span>(L,e)<span class="comment">//按值查找操作</span></span><br><span class="line">   <span class="built_in">GetElem</span>(L,i)<span class="comment">//按位查找操作</span></span><br><span class="line">   <span class="built_in">ListInsert</span>(&amp;L,i,e)<span class="comment">//插入操作</span></span><br><span class="line">   <span class="built_in">ListDelete</span>(&amp;L,i,&amp;e)<span class="comment">//删除操作</span></span><br><span class="line">   <span class="built_in">PrintList</span>(L)<span class="comment">//输出操作</span></span><br><span class="line">   <span class="built_in">Empty</span>(L)<span class="comment">//判空操作</span></span><br><span class="line">   <span class="built_in">DestoryList</span>(&amp;L)<span class="comment">//销毁操作</span></span><br></pre></td></tr></table></figure>

<h3 id="2-3-顺序表【数组】"><a href="#2-3-顺序表【数组】" class="headerlink" title="2.3 顺序表【数组】"></a>2.3 顺序表【数组】</h3><blockquote>
<p>线性表的顺序存储【随机存储的存储结构】，其逻辑顺序与其物理顺序相同，线性表中元素的位序是从1开始的，高级程序设计语言数组的下标从0开始</p>
</blockquote>
<ul>
<li>顺序表不适合插入和删除</li>
</ul>
<h3 id="2-4-单链表"><a href="#2-4-单链表" class="headerlink" title="2.4 单链表"></a>2.4 单链表</h3><blockquote>
<p>线性表的链式存储</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">LNode</span> &#123; <span class="comment">//定义单链表结点类型</span></span><br><span class="line">    ElemType data;<span class="comment">//数据域</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">LNode</span> *next;<span class="comment">//指针域</span></span><br><span class="line">&#125;LNode,*LinkList;</span><br></pre></td></tr></table></figure>

<ul>
<li>采用头插法建立单链表</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">LinkList <span class="title">List_HeadInsert</span><span class="params">(LinkList &amp;L)</span> </span>&#123;<span class="comment">//逆向建立单链表</span></span><br><span class="line">    LNode *s;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    L = (LinkList)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode));<span class="comment">//创建头结点</span></span><br><span class="line">    L-&gt;next = null;<span class="comment">//初始为空链表</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);<span class="comment">//输入结点的值</span></span><br><span class="line">    <span class="keyword">while</span>(x != <span class="number">9999</span>) &#123;<span class="comment">//输入9999表示结束</span></span><br><span class="line">        s = (LNode*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode))；<span class="comment">//创建新结点</span></span><br><span class="line">        s -&gt; data = x;</span><br><span class="line">        s -&gt; next = L -&gt; next;</span><br><span class="line">        L -&gt; next = s;<span class="comment">//将新结点插入表中，L为头指针</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>缺点和优点：简单，生成结点的次序和输入数据的顺序不一致</p>
</blockquote>
<ul>
<li>采用尾插法建立单链表</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">LinkList <span class="title">List_TailInsert</span><span class="params">(LinkList &amp;L)</span> </span>&#123;<span class="comment">//正向建立单链表</span></span><br><span class="line">    <span class="type">int</span> x;<span class="comment">//设置元素类型为整型</span></span><br><span class="line">    L = (LinkList)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode));<span class="comment">//创建头结点</span></span><br><span class="line">    LNode *s，*r = L;<span class="comment">//r为表尾指针</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    <span class="keyword">while</span>(x != <span class="number">9999</span>) &#123;<span class="comment">//输入9999表示结束</span></span><br><span class="line">        s = (LNode*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode))；<span class="comment">//创建新结点</span></span><br><span class="line">        s -&gt; data = x;</span><br><span class="line">        r -&gt; next = s;</span><br><span class="line">        r = s;<span class="comment">//r指向新的表尾结点</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    &#125;</span><br><span class="line">    r -&gt; next = null;<span class="comment">//尾结点指针置空</span></span><br><span class="line">    <span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>按序号查找节点值</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">LNode *<span class="title">GetElem</span><span class="params">(LinkList L,<span class="type">int</span> i)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">1</span>;<span class="comment">//计数，初始为1</span></span><br><span class="line">    LNode *p = L -&gt; next;<span class="comment">//头结点指针赋值给p</span></span><br><span class="line">    <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;<span class="comment">//若i等于0，则返回头结点</span></span><br><span class="line">        <span class="keyword">return</span> L;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> null;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (p &amp;&amp; j &lt; i) &#123;</span><br><span class="line">        p = p -&gt; next;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>按值查找表节点</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">LNode *<span class="title">LocateElem</span><span class="params">(LinkList L,ElemType e)</span> </span>&#123;</span><br><span class="line">    LNode *p = L -&gt; next;</span><br><span class="line">    <span class="keyword">while</span>(p != null &amp;&amp; p -&gt; date != e) &#123;</span><br><span class="line">        p = p -&gt; next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>插入节点操作</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">p = <span class="built_in">GetElem</span>(L,i<span class="number">-1</span>);</span><br><span class="line">s -&gt; next = p -&gt; next;</span><br><span class="line">p -&gt; next = s;</span><br></pre></td></tr></table></figure>

<ul>
<li>对某一结点进行前插操作</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">s -&gt; next = p -&gt; next;</span><br><span class="line">p -&gt; next = s;</span><br><span class="line">temp = p -&gt; data;<span class="comment">//交换数据域</span></span><br><span class="line">p -&gt; data = s-&gt;data;</span><br><span class="line">s-&gt;data = temp;</span><br></pre></td></tr></table></figure>

<ul>
<li>删除节点操作</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">p = <span class="built_in">GetElem</span>(L,i<span class="number">-1</span>);<span class="comment">//查找删除位置的前驱结点</span></span><br><span class="line">q = p-&gt;next; <span class="comment">//令q指向被删除结点</span></span><br><span class="line">p-&gt;next = q-&gt;next;<span class="comment">//将*q结点从链中断开</span></span><br><span class="line"><span class="built_in">free</span>(q);<span class="comment">//释放结点的存储空间</span></span><br></pre></td></tr></table></figure>

<ul>
<li>删除结点 *p</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">q = p-&gt;next;</span><br><span class="line">p-&gt;data = p-&gt;next-&gt;data;</span><br><span class="line">p-&gt;next = q-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(q);</span><br></pre></td></tr></table></figure>

<ul>
<li>求表长操作</li>
</ul>
<blockquote>
<p>带头结点和不带头结点是不同的</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> count = <span class="number">0</span>;<span class="comment">//计数器</span></span><br><span class="line">q = p-&gt;next;</span><br><span class="line"><span class="keyword">while</span> (q != null) &#123;</span><br><span class="line">    count ++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> count;</span><br></pre></td></tr></table></figure>

<h3 id="2-5-双链表"><a href="#2-5-双链表" class="headerlink" title="2.5 双链表"></a>2.5 双链表</h3><blockquote>
<p>线性表的链式存储，增加了指向前驱的prior指针，双链表按位查找和按值查找与单链表相同,插入和删除的实现上有不同</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">DNode</span> &#123;</span><br><span class="line">    ElemType e;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">DNode</span> *prior,*next;</span><br><span class="line">&#125; DNode,*DLinkList;</span><br></pre></td></tr></table></figure>

<ul>
<li>双链表的插入操作</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">s-&gt;next = p-&gt;next;<span class="comment">//将结点 *s 插入到 *p结点之后</span></span><br><span class="line">p -&gt; next -&gt;prior = s;</span><br><span class="line">s-&gt;prior = p;</span><br><span class="line">p-&gt;next = s;</span><br></pre></td></tr></table></figure>

<ul>
<li>双链表的删除操作</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">p-&gt;next = q-&gt;next;</span><br><span class="line">q-&gt;next-prior = p;</span><br><span class="line"><span class="built_in">free</span>(q);</span><br></pre></td></tr></table></figure>

<h3 id="2-6-循环链表"><a href="#2-6-循环链表" class="headerlink" title="2.6 循环链表"></a>2.6 循环链表</h3><h4 id="2-6-1-循环单链表"><a href="#2-6-1-循环单链表" class="headerlink" title="2.6.1 循环单链表"></a>2.6.1 循环单链表</h4><blockquote>
<p>最后一个结点的指针不是NULL，而改为指向头结点，判空判断是否为头指针，插入和删除和单链表一致，无需判断是否为表尾</p>
</blockquote>
<h4 id="2-6-2-循环双链表"><a href="#2-6-2-循环双链表" class="headerlink" title="2.6.2 循环双链表"></a>2.6.2 循环双链表</h4><blockquote>
<p>在循环双链表中，某结点 *p为尾结点时，p-&gt;next &#x3D;&#x3D; L;当循环双链表为空表时，其头结点的prior和next都等于L；</p>
</blockquote>
<h3 id="2-7-静态链表"><a href="#2-7-静态链表" class="headerlink" title="2.7 静态链表"></a>2.7 静态链表</h3><blockquote>
<p>静态链表借助数组来描述线性表的链式存储结构，结点也有data和next，next表示为相对地址【相当于数组下标】，叫游标，以next &#x3D;&#x3D; -1 作为结束的标志</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MaxSize 50<span class="comment">//静态链表的最大长度</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span>&#123;</span><br><span class="line">    ElemType data;<span class="comment">//存储数据元素</span></span><br><span class="line">    <span class="type">int</span> next;<span class="comment">//下一个元素的数组下标</span></span><br><span class="line">&#125; SLinkList[MaxSize] </span><br></pre></td></tr></table></figure>

<h3 id="2-8-顺序表和链表的比较"><a href="#2-8-顺序表和链表的比较" class="headerlink" title="2.8 顺序表和链表的比较"></a>2.8 顺序表和链表的比较</h3><h4 id="2-8-1-存储（读写）方式"><a href="#2-8-1-存储（读写）方式" class="headerlink" title="2.8.1 存储（读写）方式"></a>2.8.1 存储（读写）方式</h4><blockquote>
<p>顺序表可以顺序存取，也可以随机存取，链表只能从表头顺序存取</p>
</blockquote>
<h4 id="2-8-2-逻辑与物理结构"><a href="#2-8-2-逻辑与物理结构" class="headerlink" title="2.8.2 逻辑与物理结构"></a>2.8.2 逻辑与物理结构</h4><blockquote>
<p>顺序存储，逻辑相邻，物理存储也相邻；链式存储，逻辑相邻，物理存储不一定相邻</p>
</blockquote>
<h4 id="2-8-3-查找、插入和删除操作"><a href="#2-8-3-查找、插入和删除操作" class="headerlink" title="2.8.3 查找、插入和删除操作"></a>2.8.3 查找、插入和删除操作</h4><h4 id="2-8-4-空间分配"><a href="#2-8-4-空间分配" class="headerlink" title="2.8.4 空间分配"></a>2.8.4 空间分配</h4><blockquote>
<p>顺序存储在静态存储分配情形下，不能够扩充，动态存储扩充需要移动大量的元素</p>
</blockquote>
<h3 id="2-9-栈和队列"><a href="#2-9-栈和队列" class="headerlink" title="2.9 栈和队列"></a>2.9 栈和队列</h3><h4 id="2-9-1-栈的属性"><a href="#2-9-1-栈的属性" class="headerlink" title="2.9.1 栈的属性"></a>2.9.1 栈的属性</h4><blockquote>
<p>栈是只允许在一端进行插入和删除操作的受限线性表，其操作的特性是后进先出【Last In First Out】LIFO</p>
</blockquote>
<ul>
<li>栈顶</li>
<li>栈底</li>
<li>空栈</li>
</ul>
<h4 id="2-9-2-栈的基本操作"><a href="#2-9-2-栈的基本操作" class="headerlink" title="2.9.2 栈的基本操作"></a>2.9.2 栈的基本操作</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">InitStack</span>(&amp;S) <span class="comment">//初始化一个栈</span></span><br><span class="line">   <span class="built_in">StackEmpty</span>(S)<span class="comment">//判空</span></span><br><span class="line">   <span class="built_in">Push</span>(&amp;S,x)<span class="comment">//进栈</span></span><br><span class="line">   <span class="built_in">Pop</span>(&amp;S,x)<span class="comment">//出栈</span></span><br><span class="line">   <span class="built_in">GetTop</span>(S,&amp;x)<span class="comment">//读栈顶元素</span></span><br><span class="line">   <span class="built_in">DestoryStack</span>(&amp;S)<span class="comment">//销毁栈</span></span><br></pre></td></tr></table></figure>

<h4 id="2-9-3-栈的顺序存储"><a href="#2-9-3-栈的顺序存储" class="headerlink" title="2.9.3 栈的顺序存储"></a>2.9.3 栈的顺序存储</h4><ul>
<li>顺序栈的实现</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MaxSize 50</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">    ElemType data[MaxSize];</span><br><span class="line">    <span class="type">int</span> top;</span><br><span class="line">&#125;sqStack;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>栈顶指针 ：S.top,初始化时设置S.top &#x3D; -1 或者S.top &#x3D; 0,栈顶元素：S.data[S.top]</p>
</blockquote>
<ul>
<li>初始化</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">InitStack</span><span class="params">(SqStack &amp;S)</span> </span>&#123;</span><br><span class="line">    S.top = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>判栈空</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">StackEmpty</span><span class="params">(SqStack S)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (S.top == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>进栈</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Push</span><span class="params">(SqStack &amp;S,ElemType x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (S.top == MaxSize - <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//栈满</span></span><br><span class="line">    &#125;</span><br><span class="line">    S.data[++S.top] = x;<span class="comment">//指针先加1，再入栈,top指向栈顶</span></span><br><span class="line">    <span class="comment">//S.data[S.top++] = x; //top指向栈顶元素的下一个位置</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>出栈</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Pop</span><span class="params">(SqStack &amp;S,ElemType &amp;x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (S.top == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    x = S.data[S.top--];<span class="comment">//先出栈，指针减一，top指向栈顶</span></span><br><span class="line">    <span class="comment">//x = S.data[--S.top]//top指向栈顶元素的下一个位置</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>读栈顶元素</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">GetTop</span><span class="params">(SqStack &amp;S,ElemType &amp;x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (S.top == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    x = S.data[S.top];</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-9-4-共享栈"><a href="#2-9-4-共享栈" class="headerlink" title="2.9.4 共享栈"></a>2.9.4 共享栈</h4><blockquote>
<p>利用栈底位置相对不变的特性，可让两个顺序栈共享一个一维数组空间</p>
</blockquote>
<h4 id="2-9-5-栈的链式存储结构"><a href="#2-9-5-栈的链式存储结构" class="headerlink" title="2.9.5 栈的链式存储结构"></a>2.9.5 栈的链式存储结构</h4><ul>
<li>链式存储</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">Linknode</span>&#123;</span><br><span class="line">    ElemType data;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">Linknode</span> *next;</span><br><span class="line">&#125; *LiStack;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>入栈与出栈都在链表的表头进行</p>
</blockquote>
<h4 id="2-9-6-队列的属性"><a href="#2-9-6-队列的属性" class="headerlink" title="2.9.6 队列的属性"></a>2.9.6 队列的属性</h4><blockquote>
<p>队列简称队，也是一种操作受限的线性表，只允许在表的一端进行插入，而在表的另一端进行删除，其操作特性是先进先出【First In First Out】FIFO</p>
</blockquote>
<ul>
<li>队列基本操作</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">InitQueue</span>(&amp;Q) <span class="comment">//初始化队列</span></span><br><span class="line">   <span class="built_in">QueueEmpty</span>(Q) <span class="comment">//判队列空</span></span><br><span class="line">   <span class="built_in">EnQueue</span>(&amp;Q,x)<span class="comment">//入队</span></span><br><span class="line">   <span class="built_in">DeQueue</span>(&amp;Q,&amp;x)<span class="comment">//出队</span></span><br><span class="line">   <span class="built_in">GetHead</span>(Q,&amp;x)<span class="comment">//读取头元素</span></span><br></pre></td></tr></table></figure>

<h4 id="2-9-7-队列的顺序存储"><a href="#2-9-7-队列的顺序存储" class="headerlink" title="2.9.7 队列的顺序存储"></a>2.9.7 队列的顺序存储</h4><ul>
<li>顺序队的实现</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MaxSize 50</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">    ElemType data[MaxSize];</span><br><span class="line">    <span class="type">int</span> front,rear;<span class="comment">//队头指针和队尾指针</span></span><br><span class="line">&#125; SqQueue；</span><br></pre></td></tr></table></figure>

<blockquote>
<p>初始状态（队空条件）：Q.front &#x3D;&#x3D; Q.rear &#x3D;&#x3D; 0</p>
<p>【入】进队操作：队不满时，先送值到队尾元素，队尾指针+1</p>
<p>【出】离队操作：队不空时，先取队头元素值，再将队头指针+1</p>
<p>顺序存储可能会造成假溢出的情况</p>
</blockquote>
<h4 id="2-9-8-循环队列"><a href="#2-9-8-循环队列" class="headerlink" title="2.9.8 循环队列"></a>2.9.8 循环队列</h4><ul>
<li>初始化</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">InitQueue</span><span class="params">(SqQueue &amp;Q)</span> </span>&#123;</span><br><span class="line">  Q.front = Q.rear = <span class="number">0</span>；  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>判队空</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isEmpty</span><span class="params">(SqQueue Q)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Q.front == Q.rear) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>入队</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">EnQueue</span><span class="params">(SqQueue &amp;Q,ElemType x)</span> </span>&#123;<span class="comment">//入队</span></span><br><span class="line">    <span class="keyword">if</span> ((Q.rear + <span class="number">1</span>) % MaxSize == Q.front) &#123; <span class="comment">//队满则报错</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Q.data[Q.rear] = x;</span><br><span class="line">    Q.rear = (Q.rear +<span class="number">1</span>) % Maxsize;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>出队</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">DeQueue</span><span class="params">(SqQueue &amp;Q,ElemType &amp;x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Q.front == Q.rear) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    x = data[Q.front];</span><br><span class="line">    Q.front = (Q.front + <span class="number">1</span>) % MaxSize;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-9-9-队列的链式存储"><a href="#2-9-9-队列的链式存储" class="headerlink" title="2.9.9 队列的链式存储"></a>2.9.9 队列的链式存储</h4><ul>
<li>链式存储的定义</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span>&#123;<span class="comment">//链式队列结点</span></span><br><span class="line">    ElemType data;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">LinkNode</span> *next;</span><br><span class="line">&#125;LinkNode;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">    LinkNode *front,*rear;</span><br><span class="line">&#125;LinkQueue;</span><br></pre></td></tr></table></figure>

<ul>
<li>初始化</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">InitQueue</span><span class="params">(LinkQueue &amp;Q)</span> </span>&#123;</span><br><span class="line">    Q.front = Q.rear = (LinkNode*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LinkNode));<span class="comment">//建立头结点</span></span><br><span class="line">    Q.front -&gt; next = null;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>判队空</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isEmpty</span><span class="params">(LinkQueue Q)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Q.front == Q.rear) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>入队</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">EnQueue</span><span class="params">(LinkQueue &amp;Q,ElemType e)</span> </span>&#123;</span><br><span class="line">   LinkNode *s = (LinkNode*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LinkNode));</span><br><span class="line">    s-&gt;data = x;</span><br><span class="line">    s-next = null;</span><br><span class="line">    Q.rear-&gt;next = s;</span><br><span class="line">    Q.rear = s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>出队</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">DeQueue</span><span class="params">(LinkQueue &amp;Q,ElemType &amp;x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Q.front == Q.rear) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    LinkNode *p = Q.front -&gt; next;</span><br><span class="line">    x = p -&gt; data;</span><br><span class="line">    Q.front-&gt;next = p -&gt; next;</span><br><span class="line">    <span class="keyword">if</span>(Q.rear == p) &#123;</span><br><span class="line">        Q.rear = Q.front;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">free</span>(p);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-9-10-双端队列"><a href="#2-9-10-双端队列" class="headerlink" title="2.9.10 双端队列"></a>2.9.10 双端队列</h4><blockquote>
<p>双端队列是指允许两端都可以进行入队和出队的操作，逻辑结构仍是线性结构</p>
</blockquote>
<h4 id="2-9-11-栈和队列的应用"><a href="#2-9-11-栈和队列的应用" class="headerlink" title="2.9.11 栈和队列的应用"></a>2.9.11 栈和队列的应用</h4><ul>
<li><p>栈在括号匹配的应用</p>
</li>
<li><p>栈在表达式求值中的应用</p>
</li>
<li><p>栈在递归中的应用【通常情况下，减少了代码量，但效率不是太高】</p>
</li>
<li><p>队列在层次遍历中的应用</p>
</li>
<li><p>队列在计算机系统的应用</p>
<ul>
<li>解决主机和外部设备之间速度不匹配的问题</li>
<li>解决多用户引起的资源竞争问题</li>
</ul>
</li>
</ul>
<h4 id="2-9-12-特殊矩阵的压缩存储"><a href="#2-9-12-特殊矩阵的压缩存储" class="headerlink" title="2.9.12 特殊矩阵的压缩存储"></a>2.9.12 特殊矩阵的压缩存储</h4><ul>
<li>对称矩阵</li>
<li>三角矩阵</li>
<li>三对角矩阵</li>
<li>洗漱矩阵</li>
</ul>
<h2 id="3-串"><a href="#3-串" class="headerlink" title="3. 串"></a>3. 串</h2><h3 id="3-1-串的概念和属性"><a href="#3-1-串的概念和属性" class="headerlink" title="3.1 串的概念和属性"></a>3.1 串的概念和属性</h3><blockquote>
<p>串是由零个或者多个字符组成的有限序列</p>
</blockquote>
<ul>
<li><p>串中任意多个连续的字符组成的子序列称为该串的子串，包含子串的串称为主串</p>
</li>
<li><p>定长顺序存储表示</p>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAXLEN 255</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">    <span class="type">char</span> ch[MAXLEN];</span><br><span class="line">    <span class="type">int</span> length;</span><br><span class="line">&#125;SString;</span><br></pre></td></tr></table></figure>

<ul>
<li>堆分配存储表示</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">    <span class="type">char</span> *ch;</span><br><span class="line">    <span class="type">int</span> length;</span><br><span class="line">&#125;HString;</span><br></pre></td></tr></table></figure>

<ul>
<li>块链存储表示</li>
</ul>
<blockquote>
<p>类似于线性表的链式存储结构，也可采用链表方式的存储串值，最后一个结点占不满时用#补上；</p>
</blockquote>
<h3 id="3-2-串的基本操作"><a href="#3-2-串的基本操作" class="headerlink" title="3.2 串的基本操作"></a>3.2 串的基本操作</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">StrAssign</span>(&amp;T,chars)<span class="comment">//赋值操作</span></span><br><span class="line">   <span class="built_in">StrCopy</span>(&amp;T,S)<span class="comment">//复制操作</span></span><br><span class="line">   <span class="built_in">StrEmpty</span>(S)<span class="comment">//判空操作</span></span><br><span class="line">   <span class="built_in">StrCompare</span>(S,T)<span class="comment">//比较操作，S&gt;T,返回值&gt;0,S=T,返回值=0，S&lt;T,返回值&lt;0</span></span><br><span class="line">   <span class="built_in">StrLength</span>(S)<span class="comment">//求串长</span></span><br><span class="line">   <span class="built_in">SubString</span>(&amp;Sub,S,pos,len)<span class="comment">//求子串</span></span><br><span class="line">   <span class="built_in">Concat</span>(&amp;T,S1,S2)<span class="comment">//由T返回S1和S2联接而成的新串</span></span><br><span class="line">   <span class="built_in">Index</span>(S,T)<span class="comment">//定位操作</span></span><br><span class="line">   <span class="built_in">ClearString</span>(&amp;S)<span class="comment">//清空操作</span></span><br><span class="line">   <span class="built_in">DestoryString</span>(&amp;S)<span class="comment">//销毁串S</span></span><br></pre></td></tr></table></figure>

<h3 id="3-3-串的模式匹配"><a href="#3-3-串的模式匹配" class="headerlink" title="3.3 串的模式匹配"></a>3.3 串的模式匹配</h3><ul>
<li>简单的模式匹配算法</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">Index</span><span class="params">(SString S,SString T)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>,j = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;=S.length &amp;&amp; j &lt;= T.length) &#123;</span><br><span class="line">        <span class="keyword">if</span>(S.<span class="built_in">ch</span>(i) == <span class="built_in">Tch</span>(j)) &#123;</span><br><span class="line">            ++i;</span><br><span class="line">            ++j;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            i = i - j + <span class="number">2</span>;</span><br><span class="line">            j = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (j &gt; T.length) &#123;</span><br><span class="line">        <span class="keyword">return</span> i - T.length;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>；</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>KMP算法</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">Index_KMP</span><span class="params">(String S,String T,next[])</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>,j = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;=S.length &amp;&amp; j &lt;= T.length) &#123;</span><br><span class="line">       <span class="keyword">if</span> (j == <span class="number">0</span> || S.ch[i] == T.ch[j]) &#123;</span><br><span class="line">           ++i;</span><br><span class="line">           ++j;</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           j = next[j];</span><br><span class="line">       &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (j &gt; T.length) &#123;</span><br><span class="line">        <span class="keyword">return</span> i - T.length;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>；</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>KMP算法进一步-nextval数组</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">Index_KMP</span><span class="params">(String S,String T,next[])</span> </span>&#123;</span><br><span class="line">	<span class="built_in">get_nextval</span>(String T,<span class="type">int</span> nextval[])</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">get_nextval</span><span class="params">(String T,<span class="type">int</span> nextval[])</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>, j = <span class="number">0</span>;</span><br><span class="line">    nextval[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; T.length) &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">0</span> || T.ch[i] == T.ch[j]) &#123;</span><br><span class="line">            ++i;</span><br><span class="line">            ++j;</span><br><span class="line">            <span class="keyword">if</span> (T.ch[i] != T.ch[j]) &#123;</span><br><span class="line">                nextval[i] = j;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                nextval[i] = nextval[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            j = nextval[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (j &gt; T.length) &#123;</span><br><span class="line">        <span class="keyword">return</span> i - T.length;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>；</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-树与二叉树"><a href="#4-树与二叉树" class="headerlink" title="4. 树与二叉树"></a>4. 树与二叉树</h2><h3 id="4-1-树的概念和属性"><a href="#4-1-树的概念和属性" class="headerlink" title="4.1 树的概念和属性"></a>4.1 树的概念和属性</h3><blockquote>
<p>树是指n(n&gt;&#x3D;0)个结点的有限值，树适合具有层次结构的数据</p>
</blockquote>
<ul>
<li>祖先 子孙 双亲 孩子 兄弟</li>
<li>结点的度 树的度</li>
</ul>
<blockquote>
<p>树中一个结点孩子的个数称之为该结点的度，树中结点的最大度数称之为树的度</p>
</blockquote>
<ul>
<li>分支结点【非终端结点】 叶子结点【终端结点】</li>
</ul>
<blockquote>
<p>度大于0 叫分支结点，度等于0叫叶子结点</p>
</blockquote>
<ul>
<li>深度 高度 层次</li>
</ul>
<blockquote>
<p>结点的层次从根开始定义，深度是从根节点自顶向下逐层累加，高度是从叶节点开始自底向上逐层累加</p>
</blockquote>
<ul>
<li>有序树 无序树</li>
</ul>
<blockquote>
<p>树中结点的各子树从左到右是有次序的，不能互换，称之为有序树，否则为无序树</p>
</blockquote>
<ul>
<li>路径和路径长度</li>
</ul>
<blockquote>
<p>路径是这两个结点之间所经过的结点序列构成，路径长度是指路径上所经过的边的个数</p>
</blockquote>
<ul>
<li>森林</li>
</ul>
<blockquote>
<p>森林是m(m&gt;&#x3D;0)棵互不相交的树的集合</p>
</blockquote>
<h3 id="4-2-二叉树的定义"><a href="#4-2-二叉树的定义" class="headerlink" title="4.2  二叉树的定义"></a>4.2  二叉树的定义</h3><blockquote>
<p>二叉树是一种树形结构，子树有左右之分，次序不能任意颠倒，每个结点至多有两棵子树</p>
</blockquote>
<ul>
<li>特殊二叉树<ul>
<li>满二叉树</li>
<li>完全二叉树</li>
<li>二叉排序树</li>
<li>平衡二叉树</li>
</ul>
</li>
</ul>
<h3 id="4-3-二叉树的存储结构"><a href="#4-3-二叉树的存储结构" class="headerlink" title="4.3 二叉树的存储结构"></a>4.3 二叉树的存储结构</h3><h4 id="4-3-1-顺序存储结构"><a href="#4-3-1-顺序存储结构" class="headerlink" title="4.3.1  顺序存储结构"></a>4.3.1  顺序存储结构</h4><blockquote>
<p>二叉树的顺序存储是指用一组地址连续的存储单元依次从上到下，从左到右存储完全二叉树上的结点元素</p>
</blockquote>
<ul>
<li>完全二叉树</li>
<li>满二叉树</li>
</ul>
<h4 id="4-3-2-链式存储结构"><a href="#4-3-2-链式存储结构" class="headerlink" title="4.3.2 链式存储结构"></a>4.3.2 链式存储结构</h4><blockquote>
<p>由于顺序存储的空间利用率比较低，因此二叉树一般采用链式存储结构</p>
</blockquote>
<ul>
<li>二叉树的链式存储结构</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">BiTNode</span> &#123;</span><br><span class="line">    ElemType data;<span class="comment">//数据域</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">BiTNode</span> *lchild,*rchid;<span class="comment">//左右孩子指针</span></span><br><span class="line">&#125;BiTNode,*BiTree;</span><br></pre></td></tr></table></figure>

<h3 id="4-4-二叉树的遍历"><a href="#4-4-二叉树的遍历" class="headerlink" title="4.4 二叉树的遍历"></a>4.4 二叉树的遍历</h3><ul>
<li>先序遍历&lt;从上到下，从左到右&gt;</li>
</ul>
<blockquote>
<p>若二叉树为空，什么也不做，否则，访问根节点，先序遍历左子树，先序遍历右子树</p>
</blockquote>
<ul>
<li>递归</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">PreOrder</span><span class="params">(BiTree T)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (T != null) &#123;</span><br><span class="line">        <span class="built_in">visit</span>(T);<span class="comment">//访问根节点</span></span><br><span class="line">        <span class="built_in">PreOrder</span>(T -&gt; lchild);<span class="comment">//递归遍历左子树</span></span><br><span class="line">        <span class="built_in">PreOrder</span>(T -&gt; rchild);<span class="comment">//递归遍历右子树</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>非递归</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">PreOrder2</span><span class="params">(BiTree T)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">InitStack</span>(S);</span><br><span class="line">    BiTree p = T;</span><br><span class="line">    <span class="keyword">while</span>(p || !<span class="built_in">isEmpty</span>(S)) &#123;</span><br><span class="line">		<span class="keyword">if</span> (p) &#123;</span><br><span class="line">            <span class="built_in">visit</span>(p)</span><br><span class="line">            <span class="built_in">Push</span>(S,p);</span><br><span class="line">            p = p-&gt;lchild;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">Pop</span>(S,p);</span><br><span class="line">            p = p -&gt; rchild;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>中序遍历&lt;从左到右&gt;</li>
</ul>
<blockquote>
<p>若二叉树为空，什么也不做，否则，中序遍历左子树，访问根节点，中序遍历右子树</p>
</blockquote>
<ul>
<li>递归</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">InOrder</span><span class="params">(BiTree T)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (T != null) &#123;</span><br><span class="line">        <span class="built_in">InOrder</span>(lchild);</span><br><span class="line">        <span class="built_in">visit</span>(T);</span><br><span class="line">        <span class="built_in">InOrder</span>(rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>非递归</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">InOrder2</span><span class="params">(BiTree T)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">InitStack</span>(S);</span><br><span class="line">    BiTree p = T;</span><br><span class="line">    <span class="keyword">while</span>(p || !<span class="built_in">isEmpty</span>(S)) &#123;</span><br><span class="line">		<span class="keyword">if</span> (p) &#123;</span><br><span class="line">            <span class="built_in">Push</span>(S,p);</span><br><span class="line">            p = p-&gt;lchild;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">Pop</span>(S,p);</span><br><span class="line">            <span class="built_in">visit</span>(p);</span><br><span class="line">            p = p -&gt; rchild;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>后序遍历(从下到上，从左到右)</li>
</ul>
<blockquote>
<p>若二叉树为空，什么也不做，否则，后序遍历左子树，后序遍历右子树，访问根节点</p>
</blockquote>
<ul>
<li>递归</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">PostOrder</span><span class="params">(BiTree T)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (T != null) &#123;</span><br><span class="line">       <span class="built_in">PostOrder</span>(lchild);</span><br><span class="line">        <span class="built_in">PostOrder</span>(rchild);</span><br><span class="line">        <span class="built_in">visit</span>(T);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>非递归</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">PostOrder2</span><span class="params">(BiTree T)</span> </span>&#123;</span><br><span class="line">   <span class="built_in">InitStack</span>(S);</span><br><span class="line">   p = T;</span><br><span class="line">   r = null;</span><br><span class="line">    <span class="keyword">while</span>(p || !<span class="built_in">isEmpty</span>(S)) &#123;</span><br><span class="line">		<span class="keyword">if</span> (p) &#123;</span><br><span class="line">            <span class="built_in">Push</span>(S,p);</span><br><span class="line">            p = p-&gt;lchild;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           <span class="built_in">GetTop</span>(S,p);</span><br><span class="line">            <span class="keyword">if</span> (p-&gt;rchild &amp;&amp; p-&gt;rchild != r) &#123;</span><br><span class="line">                p = p-&gt; rchild;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">pop</span>(S,p);</span><br><span class="line">                <span class="built_in">visit</span>(p-&gt;data);</span><br><span class="line">                r = p;</span><br><span class="line">                p = null;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<ul>
<li>层次遍历</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">levelOrder</span><span class="params">(BiTree T)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">InitQueue</span>(Q);</span><br><span class="line">    BiTree p;</span><br><span class="line">    <span class="built_in">EnQueue</span>(Q,T);</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">IsEmpty</span>(Q)) &#123;</span><br><span class="line"> 		<span class="built_in">DeQueue</span>(Q,q);</span><br><span class="line">        <span class="built_in">visit</span>(p);</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;lchild != null) &#123;</span><br><span class="line">            <span class="built_in">EnQueue</span>(Q,p-&gt;lchild);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;rchild != null) &#123;</span><br><span class="line">            <span class="built_in">EnQueue</span>(Q,p-&gt;rchild);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>由遍历序列构造二叉树</li>
</ul>
<blockquote>
<p>由二叉树的先序序列和中序序列可以唯一确定一棵二叉树</p>
<p>由二叉树的后序序列和中序序列可以唯一确定一棵二叉树</p>
<p>由二叉树的层序序列和中序序列可以唯一确定一棵二叉树</p>
<p>只知道二叉树的先序序列和后序序列无法唯一确定一棵二叉树</p>
</blockquote>
<h3 id="4-5-线索二叉树"><a href="#4-5-线索二叉树" class="headerlink" title="4.5 线索二叉树"></a>4.5 线索二叉树</h3><h4 id="4-5-1-线索二叉树的定义"><a href="#4-5-1-线索二叉树的定义" class="headerlink" title="4.5.1 线索二叉树的定义"></a>4.5.1 线索二叉树的定义</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">ThreadNode</span>&#123;</span><br><span class="line">    ElemType data;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">ThreadNode</span> *lchild,*rchild;<span class="comment">//左右孩子指针</span></span><br><span class="line">    <span class="type">int</span> ltag,rtag;<span class="comment">//左右线索标志</span></span><br><span class="line">&#125;ThreadNode,*ThreadTree;</span><br></pre></td></tr></table></figure>

<h4 id="4-5-2-中序线索二叉树的构造"><a href="#4-5-2-中序线索二叉树的构造" class="headerlink" title="4.5.2 中序线索二叉树的构造"></a>4.5.2 中序线索二叉树的构造</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">InTread</span><span class="params">(ThreadTree &amp;p,ThreadTree &amp;pre)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (p != null) &#123;</span><br><span class="line">       <span class="built_in">InTread</span>(p-&gt;lchild,pre);</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;lchild == null) &#123;</span><br><span class="line">            p-&gt;lchild = pre</span><br><span class="line">            p-&gt;ltag = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (pre != null &amp;&amp; pre -&gt; rchild == null) &#123;</span><br><span class="line">            pre-rchild = p;</span><br><span class="line">            pre -&gt; rtag = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        pre = p;</span><br><span class="line">        <span class="built_in">InTread</span>(p-&gt;rchild,pre);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-5-3-中序线索二叉树的遍历"><a href="#4-5-3-中序线索二叉树的遍历" class="headerlink" title="4.5.3 中序线索二叉树的遍历"></a>4.5.3 中序线索二叉树的遍历</h4><ul>
<li>中序线索二叉树中中序序列下的第一个结点</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">ThreadNode * <span class="title">Firstnode</span><span class="params">(ThreadNode *p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(p-&gt;ltag == <span class="number">0</span>) &#123;</span><br><span class="line">        p = p-&gt;lchild;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>中序线索二叉树中结点p在中序序列下的后继</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">ThreadNode *<span class="title">Nextnode</span><span class="params">(ThreadNode *p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p-&gt;rtag == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Firstnode</span>(p-&gt;rchild);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> p-&gt;rchild;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>利用上面两个算法，可以写出不含头结点的中序线索二叉树的中序遍历的算法</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Inorder</span><span class="params">(ThreadTree *T)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (ThreadNode *p = <span class="built_in">FirstNode</span>(T); p != null; p = <span class="built_in">Nextnode</span>(p)) &#123;</span><br><span class="line">        <span class="built_in">visit</span>(p);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-6-森林"><a href="#4-6-森林" class="headerlink" title="4.6 森林"></a>4.6 森林</h3><h4 id="4-6-1-树的存储结构"><a href="#4-6-1-树的存储结构" class="headerlink" title="4.6.1 树的存储结构"></a>4.6.1 树的存储结构</h4><ul>
<li>双亲表示法</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_TREE_SIZE 100<span class="comment">//树最多结点数</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">    ElemType data;</span><br><span class="line">    <span class="type">int</span> parent;</span><br><span class="line">&#125;PTree;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">    PTNode nodes[MAX_TREE_SIZE];</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">&#125;PTree;</span><br></pre></td></tr></table></figure>

<ul>
<li>孩子表示法</li>
<li>孩子兄弟表示法</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">CSNode</span>&#123;</span><br><span class="line">    ElemType data;<span class="comment">//数据域</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">CSNode</span> *firstchild,*nextsibling;<span class="comment">//第一个孩子和右兄弟指针</span></span><br><span class="line">&#125;CSNode,*CSTree;</span><br></pre></td></tr></table></figure>

<h4 id="4-6-2-树，森林，二叉树的转换"><a href="#4-6-2-树，森林，二叉树的转换" class="headerlink" title="4.6.2 树，森林，二叉树的转换"></a>4.6.2 树，森林，二叉树的转换</h4><ul>
<li>树转换为二叉树</li>
</ul>
<blockquote>
<p>&lt;1&gt; 在兄弟结点之间加一条连线</p>
<p>&lt;2&gt;对于每一个结点，只保留它与第一个孩子的连线，而与其他孩子的连线全部抹掉</p>
<p>&lt;3&gt;以树根为轴心，顺时针旋转45度</p>
</blockquote>
<ul>
<li>森林转换为二叉树</li>
</ul>
<blockquote>
<p>&lt;1&gt; 先将森林中每棵树转换为相应的二叉树</p>
<p>&lt;2&gt; 每棵树的根也可以视为兄弟关系，在每棵树的根之间加一根连线</p>
<p>&lt;3&gt; 以第一棵树的根为轴心顺时针旋转45度</p>
</blockquote>
<h4 id="4-6-3-树和森林的遍历"><a href="#4-6-3-树和森林的遍历" class="headerlink" title="4.6.3 树和森林的遍历"></a>4.6.3 树和森林的遍历</h4><ul>
<li><p>树的遍历</p>
<ul>
<li>先根遍历</li>
<li>后根遍历</li>
</ul>
</li>
<li><p>森林的遍历</p>
<ul>
<li>先序遍历森林</li>
<li>中序遍历森林【后根遍历】</li>
</ul>
</li>
</ul>
<h4 id="4-6-4-树与二叉树的应用"><a href="#4-6-4-树与二叉树的应用" class="headerlink" title="4.6.4 树与二叉树的应用"></a>4.6.4 树与二叉树的应用</h4><ul>
<li>二叉排序树【BST】</li>
<li>非递归查找算法</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">BSTNode *<span class="title">BST_Search</span><span class="params">(BiTree T,ElemType key)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (T != null &amp;&amp; key != T-&gt;data) 【</span><br><span class="line">        <span class="keyword">if</span>(key &lt; T-&gt;data) &#123;</span><br><span class="line">            T = T -&gt; lchild;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> T;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>二叉排序树的插入</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">BST_Insert</span><span class="params">(BiTree &amp;T,KeyType k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(T == null) &#123;</span><br><span class="line">        T = (BiTree)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(BSTNode));</span><br><span class="line">        T -&gt; key = k;</span><br><span class="line">        T-&gt;lchild = T-&gt;rchild = Null;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(k == T-&gt;key) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (k &lt; T-&gt; key) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">BST_Insert</span>(T-&gt;lchild,k);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">BST_Insert</span>(T-&gt;rchild,k);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>二叉排序树的构造</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Creat_BST</span><span class="params">(BiTree &amp;T,KeyType str[],<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    T = null;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; n) &#123;</span><br><span class="line">        <span class="built_in">BST_Insert</span>(T,str[i]);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>平衡二叉树</p>
</li>
<li><p>哈夫曼树和哈夫曼编码</p>
</li>
</ul>
<h2 id="5-图"><a href="#5-图" class="headerlink" title="5. 图"></a>5. 图</h2><blockquote>
<p>图不可以是空图，图的顶点集V一定非空</p>
</blockquote>
<h3 id="5-1-图的属性"><a href="#5-1-图的属性" class="headerlink" title="5.1 图的属性"></a>5.1 图的属性</h3><ul>
<li>有向图</li>
<li>无向图</li>
<li>简单图、多重图</li>
<li>完全图【简单完全图】</li>
<li>子图</li>
<li>连通，连通图，连通分量</li>
<li>强连通图，强连通分量</li>
<li>生成树，生成森林</li>
<li>顶点的度，入度和出度</li>
<li>边的权和网</li>
<li>稠密图、稀疏图</li>
<li>路径，路径长度和回路</li>
<li>简单路径、简单回路</li>
<li>距离</li>
<li>有向树</li>
</ul>
<h3 id="5-2-图的存储和操作"><a href="#5-2-图的存储和操作" class="headerlink" title="5.2 图的存储和操作"></a>5.2 图的存储和操作</h3><h4 id="5-2-1-邻接矩阵法"><a href="#5-2-1-邻接矩阵法" class="headerlink" title="5.2.1 邻接矩阵法"></a>5.2.1 邻接矩阵法</h4><ul>
<li>存储结构定义</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MaxVertexNum 100 <span class="comment">//顶点项目的最大值</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> VertexType;<span class="comment">//顶点的数据类型</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> EdgeType;<span class="comment">//带权图中边上权值的数据类型</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">    VertexType Vex[MaxVertexNum];<span class="comment">//顶点表</span></span><br><span class="line">    EdgeType Edge[MaxVertexNum][MaxVertexNum]<span class="comment">//邻接矩阵，边表</span></span><br><span class="line">    <span class="type">int</span> vexnum,arcnum;<span class="comment">//图的当前顶点数和弧数 </span></span><br><span class="line">&#125;MGraph;</span><br></pre></td></tr></table></figure>

<h4 id="5-2-2-邻接表法"><a href="#5-2-2-邻接表法" class="headerlink" title="5.2.2 邻接表法"></a>5.2.2 邻接表法</h4><ul>
<li>存储结构定义</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MaxVertexNum 100 <span class="comment">//顶点项目的最大值</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">ArcNode</span>&#123; <span class="comment">//边表结点</span></span><br><span class="line">    <span class="type">int</span> adjvex;<span class="comment">//该弧所指向的的顶点的位置</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">ArcNode</span> *next；<span class="comment">//指向下一条弧的指针</span></span><br><span class="line">   <span class="comment">//InfoType info;//网的边权值</span></span><br><span class="line">&#125;ArcNode；</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">VNode</span>&#123;<span class="comment">//顶点表结点</span></span><br><span class="line">    VertexType data;<span class="comment">//顶点信息</span></span><br><span class="line">     ArcNode *first；<span class="comment">//指向第一条依附该顶点的</span></span><br><span class="line">&#125;VNode,AdjList[MaxVertexNum];</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">    AdjList vertices;<span class="comment">//邻接表</span></span><br><span class="line">    <span class="type">int</span> vexnum,arcnum;<span class="comment">//图的顶点数和弧数</span></span><br><span class="line">&#125;ALGraph;<span class="comment">//ALGraph是以邻接表存储的图类型</span></span><br></pre></td></tr></table></figure>

<h4 id="5-2-3-十字链表"><a href="#5-2-3-十字链表" class="headerlink" title="5.2.3 十字链表"></a>5.2.3 十字链表</h4><h4 id="5-2-4-邻接多重表"><a href="#5-2-4-邻接多重表" class="headerlink" title="5.2.4 邻接多重表"></a>5.2.4 邻接多重表</h4><h3 id="5-3-图的基本操作"><a href="#5-3-图的基本操作" class="headerlink" title="5.3 图的基本操作"></a>5.3 图的基本操作</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Adjacent</span>(G,x,y)<span class="comment">//判断图是否存在边&lt;x,y&gt;或(x,y)</span></span><br><span class="line">   <span class="built_in">Neighbors</span>(G,x)<span class="comment">//列出图G中与结点x邻接的边</span></span><br><span class="line">   <span class="built_in">InsertVertex</span>(G,x)<span class="comment">//在图G中插入顶点x</span></span><br><span class="line">   <span class="built_in">DeleteVertex</span>(G,x)<span class="comment">//从图G中删除顶点x</span></span><br><span class="line">   <span class="built_in">AddEdge</span>(G,x,y)<span class="comment">//若无向边(x,y)或有向边&lt;x,y&gt;不存在，则向图G中添加该边</span></span><br><span class="line">   <span class="built_in">RemoveEdge</span>(G,x,y)<span class="comment">//若无向边(x,y)或有向边&lt;x,y&gt;存在，则向图G中删除该边</span></span><br><span class="line">   <span class="built_in">FirstNeighbor</span>(G,x)<span class="comment">//求图G中顶点x的第一个邻接点</span></span><br><span class="line">   <span class="built_in">NextNeighbor</span>(G,x，y)<span class="comment">//假设图G中顶点y是顶点x的一个邻接点，返回除y外顶点x的下一个邻接点的顶点号</span></span><br><span class="line">   <span class="built_in">Get_edge_value</span>(G,x,y)<span class="comment">//获取图G中边(x,y)或&lt;x,y&gt;对应的权值</span></span><br><span class="line">   <span class="built_in">Set_dege_value</span>(G,x,y,v)<span class="comment">//设置图G中边(x,y)或&lt;x,y&gt;对应的权值为v</span></span><br></pre></td></tr></table></figure>

<h3 id="5-4-图的遍历"><a href="#5-4-图的遍历" class="headerlink" title="5.4 图的遍历"></a>5.4 图的遍历</h3><h4 id="5-4-1-广度优先搜索【Breadth-First-Search-BFS】"><a href="#5-4-1-广度优先搜索【Breadth-First-Search-BFS】" class="headerlink" title="5.4.1 广度优先搜索【Breadth-First-Search,BFS】"></a>5.4.1 广度优先搜索【Breadth-First-Search,BFS】</h4><blockquote>
<p>类似树的层序遍历算法</p>
</blockquote>
<ul>
<li>伪代码</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">bool</span> visited[Max_Vertex_num];<span class="comment">//访问标记数组</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">BFSTraverse</span><span class="params">(Graph G)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; G.vexnum;++i) &#123;</span><br><span class="line">        visited[i] = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">InitQueue</span>(Q);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; G.vexnum;++i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!visited[i]) &#123;</span><br><span class="line">            <span class="built_in">BFS</span>(G,i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">BFS</span><span class="params">(Graph G,<span class="type">int</span> v)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">visit</span>(v);</span><br><span class="line">    visited[v] = <span class="literal">true</span>;</span><br><span class="line">    <span class="built_in">enqueue</span>(Q,v);</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isEmpty</span>(Q)) &#123;</span><br><span class="line">        <span class="built_in">DeQueue</span>(Q,v);</span><br><span class="line">        <span class="keyword">for</span> (w = <span class="built_in">FirstNeighbor</span>(G,v);w&gt;=<span class="number">0</span>;w=<span class="built_in">NextNeighbor</span>(G,v,w)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!visited[w]) &#123;</span><br><span class="line">                <span class="built_in">visit</span>(w);</span><br><span class="line">                visited[w] = <span class="literal">true</span>;</span><br><span class="line">                <span class="built_in">Enqueue</span>(Q,w);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="5-4-2-深度优先搜索【Depth-First-Search，DFS】"><a href="#5-4-2-深度优先搜索【Depth-First-Search，DFS】" class="headerlink" title="5.4.2 深度优先搜索【Depth-First-Search，DFS】"></a>5.4.2 深度优先搜索【Depth-First-Search，DFS】</h4><blockquote>
<p>类似树的先序遍历</p>
</blockquote>
<ul>
<li>伪代码</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">bool</span> visited[Max_verTex_Num];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">DFSTraverse</span><span class="params">(Graph G)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(v = <span class="number">0</span>; v &lt; G.vexnum; ++v) &#123;</span><br><span class="line">        visited[v] = <span class="literal">false</span>；</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(v = <span class="number">0</span>; v &lt; G.vexnum; ++v) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!visited[v]) &#123;</span><br><span class="line">            <span class="built_in">DFS</span>(G,v);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">DFS</span><span class="params">(Graph G,<span class="type">int</span> v)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">visit</span>(v);</span><br><span class="line">    visited[v] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(w = <span class="built_in">FirstNeighbor</span>(G,r); w &gt;= <span class="number">0</span>; w = <span class="built_in">NextNeighbor</span>(G,v，w)) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!visited[w]) &#123;</span><br><span class="line">            <span class="built_in">DFS</span>(G,w);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>图的遍历与图的连通性</li>
</ul>
<h3 id="5-5-图的应用"><a href="#5-5-图的应用" class="headerlink" title="5.5 图的应用"></a>5.5 图的应用</h3><ul>
<li><p>最小生成树</p>
<ul>
<li>Prim算法</li>
<li>Kruskal算法</li>
</ul>
</li>
<li><p>最短路径</p>
<ul>
<li>Dijkstra算法求单源最短路径问题</li>
<li>Floyd算法求各顶点之间最短路径问题</li>
</ul>
</li>
<li><p>有向无环图描述表达式</p>
</li>
<li><p>拓扑排序</p>
</li>
<li><p>关键路径</p>
</li>
</ul>
<h2 id="6-查找"><a href="#6-查找" class="headerlink" title="6. 查找"></a>6. 查找</h2><blockquote>
<p>在数据集合中寻找满足某种条件的数据元素的过程称为查找</p>
</blockquote>
<h3 id="6-1-查找的属性"><a href="#6-1-查找的属性" class="headerlink" title="6.1 查找的属性"></a>6.1 查找的属性</h3><ul>
<li>查找表【查找结构】</li>
</ul>
<blockquote>
<p>用于查找的数据集合</p>
</blockquote>
<ul>
<li>静态查找表</li>
<li>关键字</li>
<li>平均查找长度</li>
</ul>
<h3 id="6-2-顺序查找"><a href="#6-2-顺序查找" class="headerlink" title="6.2 顺序查找"></a>6.2 顺序查找</h3><ul>
<li>一般线性表的顺序查找</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">    ElemType *elem;</span><br><span class="line">    <span class="type">int</span> TableLen;</span><br><span class="line">&#125;SStable;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Search_Seq</span><span class="params">(SSTable ST,Elemtype key)</span> </span>&#123;</span><br><span class="line">    St.elem[<span class="number">0</span>] = key;<span class="comment">//哨兵 提高程序效率</span></span><br><span class="line">    <span class="keyword">for</span>(i = ST.TableLen;ST.elem[i] != key;--i) &#123;</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>有序表的顺序查找</li>
<li>折半查找【二分查找】</li>
</ul>
<blockquote>
<p>仅适用于有序的顺序表</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">Binary_Search</span><span class="params">(SeqList L，ElemType key)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> low = <span class="number">0</span>,high = L.TabLen - <span class="number">1</span>,mid;</span><br><span class="line">    <span class="keyword">while</span> (low &lt;= high) &#123;</span><br><span class="line">        mid = (low + high) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(L.elem[mid] == key) &#123;</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (L.elem[mid] &gt; key) &#123;</span><br><span class="line">            high = mid - <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            low = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>分块查找【索引顺序查找】</li>
</ul>
<h3 id="6-3-B树和B-树"><a href="#6-3-B树和B-树" class="headerlink" title="6.3 B树和B+树"></a>6.3 B树和B+树</h3><h4 id="6-3-1-B树的属性"><a href="#6-3-1-B树的属性" class="headerlink" title="6.3.1 B树的属性"></a>6.3.1 B树的属性</h4><blockquote>
<p>B树，多路平衡查找树</p>
</blockquote>
<ul>
<li>B树的高度(磁盘存取次数)</li>
<li>B树的查找</li>
</ul>
<blockquote>
<p>在B树中找结点，在结点内找关键词</p>
</blockquote>
<ul>
<li>B树的插入</li>
<li>B树的删除</li>
</ul>
<h4 id="6-3-2-B-树的基本概念"><a href="#6-3-2-B-树的基本概念" class="headerlink" title="6.3.2 B+树的基本概念"></a>6.3.2 B+树的基本概念</h4><blockquote>
<p>B+树是应数据库所需而出现的一种B树的变形树</p>
</blockquote>
<p>一棵m阶的B+树需满足下列条件：</p>
<ul>
<li>每个分支结点最多有m棵子树(孩子结点)</li>
<li>非叶根结点至少有两棵子树，其他每个分支结点至少有[m&#x2F;2]棵子树</li>
<li>结点子树的个数与关键字个数相等</li>
<li>所有叶节点包含全部关键字及指向相应记录的指针，叶结点中将关键字按大小顺序排列，并且相邻叶结点按大小顺序相互链接起来</li>
<li>所有分支结点(可视为索引的索引)中仅包含它的各个子结点(即下一级的索引块)中关键字的最大值及指向其子结点的指针</li>
</ul>
<h3 id="6-4-散列表"><a href="#6-4-散列表" class="headerlink" title="6.4 散列表"></a>6.4 散列表</h3><blockquote>
<p>根据关键字而直接进行访问的数据结构</p>
</blockquote>
<h4 id="6-4-1-散列表的构造方法"><a href="#6-4-1-散列表的构造方法" class="headerlink" title="6.4.1 散列表的构造方法"></a>6.4.1 散列表的构造方法</h4><ul>
<li>直接定址法</li>
</ul>
<blockquote>
<p>H(key) &#x3D; key 或H(key) &#x3D; a*key + b</p>
</blockquote>
<ul>
<li>除留余数法</li>
</ul>
<blockquote>
<p>H(key) &#x3D; key % p</p>
</blockquote>
<ul>
<li>数字分析法</li>
<li>平方取中法</li>
</ul>
<h4 id="6-4-2-处理冲突的方法"><a href="#6-4-2-处理冲突的方法" class="headerlink" title="6.4.2 处理冲突的方法"></a>6.4.2 处理冲突的方法</h4><ul>
<li><p>开放定址法</p>
<ul>
<li>线性探测法</li>
<li>平方探测法</li>
<li>再散列法</li>
<li>伪随机序列法</li>
</ul>
</li>
<li><p>拉链法【链接法，chaining】</p>
</li>
</ul>
<h2 id="7-排序"><a href="#7-排序" class="headerlink" title="7. 排序"></a>7. 排序</h2><blockquote>
<p>就是重新排列表中的元素，通常由比较和移动，分为插入排序、交换排序、选择排序、归并排序、基数排序，大部分排序算法仅适用于顺序存储的线性表</p>
</blockquote>
<h3 id="7-1-插入排序"><a href="#7-1-插入排序" class="headerlink" title="7.1 插入排序"></a>7.1 插入排序</h3><ul>
<li>普通插入排序</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">InsertSort</span><span class="params">(ElemType A[],<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (A[i] &lt; A[i<span class="number">-1</span>]) &#123;</span><br><span class="line">            A[<span class="number">0</span>] = A[i];<span class="comment">//哨兵</span></span><br><span class="line">        	<span class="keyword">for</span> (<span class="type">int</span> j= i <span class="number">-1</span>;A[<span class="number">0</span>] &lt; A[j];--j) &#123;</span><br><span class="line">                A[j+<span class="number">1</span>] = A[j];</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            A[j+<span class="number">1</span>] = A[<span class="number">0</span>];</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>折半插入排序</li>
</ul>
<blockquote>
<p>稳定的排序方法</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">InsertSort</span><span class="params">(ElemType A[],<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> i,j,low,high,mid;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        A[<span class="number">0</span>] = A[i];</span><br><span class="line">        low = <span class="number">1</span>;</span><br><span class="line">        high = i - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(low &lt;= high) &#123;</span><br><span class="line">            mid = (low + high)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(A[mid] &gt; A[<span class="number">0</span>]) &#123;</span><br><span class="line">                high = mid - <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                low = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (j = i - <span class="number">1</span>; j &gt;= high + <span class="number">1</span>; --j) &#123;</span><br><span class="line">            A[j+<span class="number">1</span>] = A[j];</span><br><span class="line">        &#125;</span><br><span class="line">        A[high+<span class="number">1</span>] = A[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>希尔排序【缩小增量排序】</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">ShellSort</span><span class="params">(ElemType A[], <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (dk = n/<span class="number">2</span>;dk&gt;=<span class="number">1</span>;dk = dk/<span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = dk + <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">			<span class="keyword">if</span>(A[i] &lt; A[i-dk]) &#123;</span><br><span class="line">                A[<span class="number">0</span>] = A[i];</span><br><span class="line">                <span class="keyword">for</span>(j = i - dk; j&gt;<span class="number">0</span>&amp;&amp;A[<span class="number">0</span>] &lt; A[j];j-=dk)  &#123;</span><br><span class="line">                    A[j + dk] = A[j];</span><br><span class="line">                &#125;</span><br><span class="line">                A[j + dk] = A[<span class="number">0</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="7-2-交换排序"><a href="#7-2-交换排序" class="headerlink" title="7.2 交换排序"></a>7.2 交换排序</h3><ul>
<li>冒泡排序</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">BubbleSort</span><span class="params">(ElemType A[],<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        flag = <span class="literal">false</span>;</span><br><span class="line"> 		<span class="keyword">for</span>(j = n <span class="number">-1</span>; j &gt; i; j--) &#123;</span><br><span class="line">            <span class="keyword">if</span>(A[j<span class="number">-1</span>] &gt; A[j]) &#123;</span><br><span class="line">                <span class="built_in">swap</span>(A[j<span class="number">-1</span>],A[j]);</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="literal">false</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>快速排序</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">QuickSort</span><span class="params">(ElemType A[],<span class="type">int</span> low,<span class="type">int</span> high)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (low &lt; high) &#123;</span><br><span class="line">        <span class="type">int</span> pivotpos = <span class="built_in">Partition</span>(A,low,high);</span><br><span class="line">        <span class="built_in">QuickSort</span>(A,low,pivotpos <span class="number">-1</span>);</span><br><span class="line">        <span class="built_in">QuickSort</span>(A,pivotpos + <span class="number">1</span>，high);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Partition</span><span class="params">(ElemType A[],<span class="type">int</span> low,<span class="type">int</span> high)</span> </span>&#123;</span><br><span class="line">    ElemType pivot = A[low];</span><br><span class="line">    <span class="keyword">while</span>(low &lt; high) &#123;</span><br><span class="line">        <span class="keyword">while</span> (low &lt; high &amp;&amp; A[high] &gt;= pivot) &#123;</span><br><span class="line">            --high;</span><br><span class="line">        &#125;</span><br><span class="line">        A[low] = A[high];</span><br><span class="line">        <span class="keyword">while</span>(low &lt; high &amp;&amp; A[low] &lt;= pivot) &#123;</span><br><span class="line">            ++low;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    A[low] = pivot;</span><br><span class="line">    <span class="keyword">return</span> low;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="7-3-选择排序"><a href="#7-3-选择排序" class="headerlink" title="7.3 选择排序"></a>7.3 选择排序</h3><ul>
<li>简单选择排序</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">SelectSort</span><span class="params">(ElemType A[],<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        min = i;</span><br><span class="line">        <span class="keyword">for</span>(j = i +<span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(A[j] &lt; A[min]) &#123;</span><br><span class="line">                min = j;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(min != i) &#123;</span><br><span class="line">                <span class="built_in">swap</span>(A[i],A[min]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>堆排序</li>
<li>建立大根堆</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">BuildMaxHeap</span><span class="params">(ElemType A[], <span class="type">int</span> len)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = len/<span class="number">2</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="built_in">HeadAdjust</span>(A,i,len);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">HeadAdjust</span><span class="params">(ElemType A[],<span class="type">int</span> k,<span class="type">int</span> len)</span> </span>&#123;</span><br><span class="line">        A[<span class="number">0</span>] = A[k];</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">2</span>*k; i &lt;= len; i *= <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i &lt; len &amp;&amp; A[i] &lt; A[i+<span class="number">1</span>]) &#123;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(A[<span class="number">0</span>] &gt;= A[i]) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                A[k] = A[i];</span><br><span class="line">                k = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    A[k] = A[<span class="number">0</span>] </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>堆排序算法</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">HeapSort</span><span class="params">(ElemType A[], <span class="type">int</span> len)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">BuildMaxHeap</span>(A,len);</span><br><span class="line">    <span class="keyword">for</span>(i = len; i &gt; <span class="number">1</span>; i--) &#123;</span><br><span class="line">        <span class="built_in">swap</span>(A[i],A[<span class="number">1</span>]);</span><br><span class="line">        <span class="built_in">HeadAdjust</span>(A,<span class="number">1</span>,i<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>堆排序是一种不稳定的排序方法</p>
</blockquote>
<h3 id="7-4-归并排序和基数排序"><a href="#7-4-归并排序和基数排序" class="headerlink" title="7.4 归并排序和基数排序"></a>7.4 归并排序和基数排序</h3><ul>
<li>归并排序</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">ElemType *B = (ElemType *)<span class="built_in">malloc</span>((n+<span class="number">1</span>)*<span class="built_in">sizeof</span>(ElemType));</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Merge</span><span class="params">(ElemType A[],<span class="type">int</span> low,<span class="type">int</span> mid,<span class="type">int</span> high)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k = low; k &lt;= high;k++) &#123;</span><br><span class="line">        B[k] = A[k];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i = low,j = mid + <span class="number">1</span>,k = i;i &lt;= mid &amp;&amp; j &lt;= high; k++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(b[i] &lt; B[j]) &#123;</span><br><span class="line">            A[k] = B[i++];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            A[k] = B[j++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid) &#123;</span><br><span class="line">        A[k++] = B[i++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(j &lt;= high) &#123;</span><br><span class="line">        A[k++] = B[j++];</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<blockquote>
<p>上面的代码中，只有一个while会执行</p>
</blockquote>
<ul>
<li>合并</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MergSort</span><span class="params">(ElemType A[],<span class="type">int</span> low,<span class="type">int</span> high)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(low &lt; high) &#123;</span><br><span class="line">        <span class="type">int</span> mid = (low + high)/<span class="number">2</span>;</span><br><span class="line">        <span class="built_in">MergeSort</span>(A,low,mid);</span><br><span class="line">        <span class="built_in">MergeSort</span>(A,mid + <span class="number">1</span>,high);</span><br><span class="line">        <span class="built_in">Merge</span>(A,low,mid,high);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="7-5-各种内部排序算法的比较"><a href="#7-5-各种内部排序算法的比较" class="headerlink" title="7.5 各种内部排序算法的比较"></a>7.5 各种内部排序算法的比较</h3><table>
<thead>
<tr>
<th>序号</th>
<th>算法种类</th>
<th>时间复杂度最好情况</th>
<th>时间复杂度平均情况</th>
<th>时间复杂度最坏情况</th>
<th>空间复杂度</th>
<th>是否稳定</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>直接插入排序</td>
<td>O(n)</td>
<td>O(n^2)</td>
<td>O(n^2)</td>
<td>O(1)</td>
<td>是</td>
</tr>
<tr>
<td>2</td>
<td>冒泡排序</td>
<td>O(n)</td>
<td>O(n^2)</td>
<td>O(n^2)</td>
<td>O(1)</td>
<td>是</td>
</tr>
<tr>
<td>3</td>
<td>简单选择排序</td>
<td>O(n^2)</td>
<td>O(n^2)</td>
<td>O(n^2)</td>
<td>O(1)</td>
<td>否</td>
</tr>
<tr>
<td>4</td>
<td>希尔排序</td>
<td></td>
<td></td>
<td></td>
<td>O(1)</td>
<td>否</td>
</tr>
<tr>
<td>5</td>
<td>快速排序</td>
<td>O(nlog2n)</td>
<td>O(nlog2n)</td>
<td>O(n^2)</td>
<td>O(nlog2n)</td>
<td>否</td>
</tr>
<tr>
<td>6</td>
<td>堆排序</td>
<td>O(nlog2n)</td>
<td>O(nlog2n)</td>
<td>O(nlog2n)</td>
<td>O(1)</td>
<td>否</td>
</tr>
<tr>
<td>7</td>
<td>2路归并排序</td>
<td>O(nlog2n)</td>
<td>O(nlog2n)</td>
<td>O(nlog2n)</td>
<td>O(n)</td>
<td>是</td>
</tr>
<tr>
<td>8</td>
<td>基数排序</td>
<td>O(d(n+r))</td>
<td>O(d(n+r))</td>
<td>O(d(n+r))</td>
<td>O(r)</td>
<td>是</td>
</tr>
</tbody></table>
<h3 id="7-6-外部排序"><a href="#7-6-外部排序" class="headerlink" title="7.6 外部排序"></a>7.6 外部排序</h3><blockquote>
<p>外部排序是指待排序文件较大，内存一次放不下，需存放在外存的文件的排序，通常采用归并排序法</p>
</blockquote>
<ul>
<li>外部排序的总时间 &#x3D; 内部排序的所需时间 + 外存信息读写的时间 + 内部归并所需的时间</li>
<li>多路平衡归并与败者树</li>
<li>置换选择排序</li>
<li>最佳归并树</li>
</ul>
<h2 id="8-总结"><a href="#8-总结" class="headerlink" title="8. 总结"></a>8. 总结</h2><p>这次对于数据结构有了基本的了解，自己不知道的东西还是有许多的。</p>
]]></content>
      <tags>
        <tag>思想</tag>
      </tags>
  </entry>
  <entry>
    <title>github/gitee+hexo搭建博客</title>
    <url>/2022/05/06/github%E6%88%96gitee-hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<blockquote>
<center>人生天地间，忽如远行客</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<h2 id="1-工具"><a href="#1-工具" class="headerlink" title="1. 工具"></a>1. 工具</h2><ul>
<li>github账号</li>
</ul>
<blockquote>
<p><a href="https://github.com/">注册github账号</a></p>
</blockquote>
<ul>
<li>node.js</li>
</ul>
<blockquote>
<p>让js能作为服务端脚本语言 </p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检测 node版本尽量高点，不高先升级nodejs版本，我的是v16.15.0，windows建议直接下载安装包覆盖安装地址</span></span><br><span class="line">node -v</span><br><span class="line"><span class="comment"># windows查询node安装地址</span></span><br><span class="line"><span class="built_in">where</span> node</span><br><span class="line"><span class="comment"># 清除npm缓存【Linux】</span></span><br><span class="line">npm cache clean -f</span><br><span class="line"><span class="comment"># 全局安装n【Linux】</span></span><br><span class="line">npm install -g n</span><br><span class="line"><span class="comment"># 升级到最新稳定版</span></span><br><span class="line">$ n stable</span><br><span class="line"><span class="comment"># 升级到最新版</span></span><br><span class="line">$ n latest</span><br><span class="line"><span class="comment"># 升级到定制版</span></span><br><span class="line">$ n v14.6.0</span><br><span class="line"><span class="comment"># 切换使用版本</span></span><br><span class="line">$ n 13.10.0 (ENTER)</span><br><span class="line"><span class="comment"># 删除制定版本</span></span><br><span class="line">$ n <span class="built_in">rm</span> 13.10.0</span><br><span class="line"><span class="comment"># 用制定的版本执行脚本</span></span><br><span class="line">$ n use 13.10.0 some.js</span><br></pre></td></tr></table></figure>

<ul>
<li>npm</li>
</ul>
<blockquote>
<p>非官方的NodeJS包管理和分发工具</p>
</blockquote>
<p><a href="https://nodejs.org/zh-cn/download/releases/">nodejs对应npm版本</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看版本</span></span><br><span class="line">npm -v</span><br><span class="line">cnpm -v</span><br><span class="line"><span class="comment"># 升级到指定版本</span></span><br><span class="line">npm install -g npm@8.5.5</span><br></pre></td></tr></table></figure>

<ul>
<li>git</li>
</ul>
<blockquote>
<p>分布式版本控制</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检测</span></span><br><span class="line">git --version</span><br><span class="line"><span class="comment"># 配置用户名和邮箱</span></span><br><span class="line">git config --global user.name <span class="string">&quot;github 用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;github 注册邮箱&quot;</span></span><br><span class="line"><span class="comment"># 生成SSH密钥，免于登录，进行比较，四次回车</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;github 注册邮箱&quot;</span></span><br><span class="line"><span class="comment"># 测试是否成功</span></span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<ul>
<li>hexo</li>
</ul>
<blockquote>
<p>一个快速、简洁且高效的博客框架，默认端口4000</p>
</blockquote>
<p><a href="https://hexo.io/zh-cn/docs/">hexo文档</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">npm i hexo-cli -g</span><br><span class="line"><span class="comment"># 是否成功，出现版本号</span></span><br><span class="line">hexo -v</span><br><span class="line"><span class="comment"># 进入创建的文件夹初始化</span></span><br><span class="line">hexo init .</span><br><span class="line">npm install</span><br><span class="line"><span class="comment"># 本地测试</span></span><br><span class="line"><span class="comment"># 新建博客</span></span><br><span class="line">hexo new <span class="string">&quot;博客名&quot;</span></span><br><span class="line"><span class="comment"># 生成静态网页</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="comment"># 打开本地服务器</span></span><br><span class="line">hexo s</span><br><span class="line"><span class="comment"># 输入localhost:4000</span></span><br><span class="line"><span class="comment"># 部署</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<h2 id="2-搭建个人仓库"><a href="#2-搭建个人仓库" class="headerlink" title="2. 搭建个人仓库"></a>2. 搭建个人仓库</h2><ul>
<li>名字要和登录名相同【特别注意】</li>
</ul>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">用户名.github.io</span><br></pre></td></tr></table></figure>

<ul>
<li>是公开的</li>
</ul>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">public</span><br></pre></td></tr></table></figure>

<ul>
<li>将博客目录下的_config.yml，加入deploy设置为个人仓库名</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">你的地址</span></span><br><span class="line">  <span class="comment"># github更新后为main，不能是master，gitee是master</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure>

<ul>
<li>安装hexo-deployer-git自动化部署发布工具</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<ul>
<li>令牌</li>
</ul>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">开发者设置 Developer settings </span><br><span class="line">个人访问令牌 Personal access tokens</span><br></pre></td></tr></table></figure>

<ul>
<li>发布博客</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 清除已生成文件及缓存</span></span><br><span class="line">hexo clean </span><br><span class="line"><span class="comment"># hexo 新建，简写为hexo n</span></span><br><span class="line">hexo new <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment"># 生成静态页面，简写做hexo g</span></span><br><span class="line">hexo generate </span><br><span class="line"><span class="comment">#推送到github库，简写做hexo d</span></span><br><span class="line">hexo deploy</span><br><span class="line"><span class="comment"># 用户名</span></span><br><span class="line">你的用户名</span><br><span class="line"><span class="comment"># 密码</span></span><br><span class="line">令牌密码</span><br></pre></td></tr></table></figure>

<ul>
<li><p>gitee</p>
</li>
<li><p>gitee pages需要实名</p>
</li>
<li><p>公开且仓库名要是用户名，不需要是 <strong>用户名.gitee.io</strong></p>
</li>
<li><p>确定公钥，私人令牌</p>
</li>
<li><p>部署到gitee，需要你每次推送后，去更新一下，如果想要自动更新，就需要开通 Gitee 的会员。</p>
</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/xxy8/xxy8.github.io.git</span></span><br><span class="line">  		<span class="string">https://gitee.com/xxy8/xxy8.git,master</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure>

<h2 id="3-美化博客"><a href="#3-美化博客" class="headerlink" title="3. 美化博客"></a>3. 美化博客</h2><blockquote>
<p>美化博客根据自己风格来定，我比较喜欢next风格</p>
</blockquote>
<ul>
<li>下载next，我用的是稳定版5.1.4</li>
</ul>
<p><a href="https://github.com/iissnan/hexo-theme-next.git">next</a></p>
<ul>
<li>将next复制到博客根目录的themes文件下</li>
<li>修改博客主配置文件_config.yml文件</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># theme: landscape</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure>

<ul>
<li>报错</li>
</ul>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">&#123;% extends &#x27;_layout.swig&#x27; %&#125; &#123;% import &#x27;_macro/post.swig&#x27; as post_template %&#125; &#123;% import &#x27;_macro/sidebar.swig&#x27; as sidebar_template %&#125; &#123;% block title %&#125;&#123;&#123; config.title &#125;&#125;&#123;% if theme.index_with_subtitle and config.subtitle %&#125; - &#123;&#123;config.subtitle &#125;&#125;&#123;% endif %&#125;&#123;% endblock %&#125; &#123;% block page_class %&#125; &#123;% if is_home() %&#125;page-home&#123;% endif -%&#125; &#123;% endblock %&#125; &#123;% block content %&#125;</span><br><span class="line">&#123;% for post in page.posts %&#125; &#123;&#123; post_template.render(post, true) &#125;&#125; &#123;% endfor %&#125;</span><br><span class="line">&#123;% include &#x27;_partials/pagination.swig&#x27; %&#125; &#123;% endblock %&#125; &#123;% block sidebar %&#125; &#123;&#123; sidebar_template.render(false) &#125;&#125; &#123;% endblock %&#125; </span><br></pre></td></tr></table></figure>

<ul>
<li>解决方案 没有hexo-renderer-swig模块</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i hexo-renderer-swig</span><br></pre></td></tr></table></figure>

<blockquote>
<p>这里可能需要等待，会出现为一片空白的情况，因为github速度限制</p>
</blockquote>
<ul>
<li>主配置的_config.yml</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="comment"># 网站标题</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">xxy</span></span><br><span class="line"><span class="comment"># 网站副标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;一笑之语&#x27;</span></span><br><span class="line"><span class="comment"># 网站描述 用于SEO</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;镜中花，水中月，无至无&#x27;</span></span><br><span class="line"><span class="comment"># 网站的关键词。支持多个关键词。</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">xxy</span></span><br><span class="line"><span class="comment"># 您的名字</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">xxy</span></span><br><span class="line"><span class="comment"># 网站使用的语言，常见的有 zh-Hans和 zh-CN,建议zh-Hans</span></span><br><span class="line"><span class="comment"># language: en</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-Hans</span></span><br><span class="line"><span class="comment"># 网站时区</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="comment"># url: http://example.com</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://xxy8.github.io</span></span><br><span class="line"><span class="comment"># 文章的 永久链接 格式</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="comment"># 永久链接中各部分的默认值</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="comment"># 改写 permalink 的值来美化 URL</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line"><span class="comment"># 是否在永久链接中保留尾部的index.html</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span></span><br><span class="line"><span class="comment"># 是否在永久链接中保留尾部的 .html, 设置为 false 时去除，对尾部的 index.html无效</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;.html&#x27; from permalinks</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory 如果您刚刚开始接触 Hexo，通常没有必要修改这一部分的值。</span></span><br><span class="line"><span class="comment"># 资源文件夹</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="comment"># 公共文件夹</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="comment"># 标签文件夹</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="comment"># 归档文件夹</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="comment"># 分类文件夹</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="comment"># Include code 文件夹，source_dir 下的子目录</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="comment"># 国际化（i18n）文件夹</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="comment"># 跳过指定文件的渲染</span></span><br><span class="line"><span class="attr">skip_render:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="comment"># 新文章的文件名称</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="comment"># 预设布局</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="comment"># 把标题转换为 title case</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="comment"># 在新标签中打开链接</span></span><br><span class="line"><span class="attr">external_link:</span></span><br><span class="line"><span class="comment"># 在新标签中打开链接</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line">  <span class="comment"># 对整个网站（site）生效或仅对文章（post）生效</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span> <span class="comment"># Apply to the whole site</span></span><br><span class="line">  <span class="comment"># 需要排除的域名。主域名和子域名如 www 需分别配置</span></span><br><span class="line">  <span class="attr">exclude:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># 把文件名称转换为 (1) 小写或 (2) 大写</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="comment"># 显示草稿</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># 启动 Asset 文件夹</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># 把链接改为与根目录的相对位址,通常情况下，建议使用绝对地址。</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># 显示未来的文章</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 代码块的设置</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># 代码块的设置</span></span><br><span class="line"><span class="attr">prismjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">preprocess:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = &#x27;&#x27;)</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="comment"># 默认分类</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="comment"># 分类别名</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="comment"># 标签别名</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Metadata elements</span></span><br><span class="line"><span class="comment">## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta</span></span><br><span class="line"><span class="attr">meta_generator:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="comment"># 日期格式</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="comment"># 时间格式</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="string">HH:mm:ss</span></span><br><span class="line"><span class="comment">## updated_option supports &#x27;mtime&#x27;, &#x27;date&#x27;, &#x27;empty&#x27;</span></span><br><span class="line"><span class="comment"># 当 Front Matter 中没有指定 updated 时 updated 的取值</span></span><br><span class="line"><span class="attr">updated_option:</span> <span class="string">&#x27;mtime&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="comment"># 每页显示的文章量 (0 = 关闭分页功能)</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="comment"># 分页目录</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Include / Exclude file(s)</span></span><br><span class="line"><span class="comment">## include:/exclude: options only apply to the &#x27;source/&#x27; folder</span></span><br><span class="line"><span class="comment"># include 和 exclude 选项只会应用到 source/ ，而 ignore 选项会应用到所有文件夹.</span></span><br><span class="line"><span class="attr">include:</span></span><br><span class="line"><span class="attr">exclude:</span></span><br><span class="line"><span class="attr">ignore:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="comment"># theme: landscape</span></span><br><span class="line"><span class="comment"># 当前主题名称。值为false时禁用主题</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/xxy8/xxy8.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>主题配置文件next 中的_config.yml</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash from link value (/archives -&gt; archives).</span></span><br><span class="line"><span class="comment"># Usage: `Key: /link/ || icon`</span></span><br><span class="line"><span class="comment"># Key is the name of menu item. If translate for this menu will find in languages - this translate will be loaded; if not - Key name will be used. Key is case-senstive.</span></span><br><span class="line"><span class="comment"># Value before `||` delimeter is the target link.</span></span><br><span class="line"><span class="comment"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, question icon will be loaded.</span></span><br><span class="line"><span class="comment"># 设置导航栏菜单</span></span><br><span class="line"><span class="attr">menu_settings:</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">badges:</span> <span class="literal">true</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">user</span></span><br><span class="line">  <span class="comment">#tags: /tags/ || tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || heartbeat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable/Disable menu icons.</span></span><br><span class="line"><span class="attr">menu_icons:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Scheme Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Schemes 主题风格，根据自己喜欢的来</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Gemini</span></span><br></pre></td></tr></table></figure>

<ul>
<li>版权信息声明</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Creative Commons 4.0 International License.</span></span><br><span class="line"><span class="comment"># http://creativecommons.org/</span></span><br><span class="line"><span class="comment"># Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span></span><br><span class="line"><span class="comment">#creative_commons: by-nc-sa</span></span><br><span class="line"><span class="attr">creative_commons:</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">by-nc-sa</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">language:</span> <span class="string">zh_CN</span></span><br></pre></td></tr></table></figure>

<ul>
<li>展示侧边栏</li>
</ul>
<blockquote>
<p>侧边栏还受动画影响motion. enable为false时，侧边栏不显示，影响版本5.0.0及其以下</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">sidebar:</span></span><br><span class="line">  <span class="comment"># Sidebar Position, available value: left | right (only for Pisces | Gemini).</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">left</span></span><br><span class="line">  <span class="comment">#position: right</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Sidebar Display, available value (only for Muse | Mist):</span></span><br><span class="line">  <span class="comment">#  - post    expand on posts automatically. Default.</span></span><br><span class="line">  <span class="comment">#  - always  expand for all pages automatically</span></span><br><span class="line">  <span class="comment">#  - hide    expand only when click on the sidebar toggle icon.</span></span><br><span class="line">  <span class="comment">#  - remove  Totally remove sidebar including sidebar toggle.</span></span><br><span class="line">  <span class="comment">#display: post</span></span><br><span class="line">  <span class="attr">display:</span> <span class="string">always</span></span><br><span class="line">  <span class="comment">#display: hide</span></span><br><span class="line">  <span class="comment">#display: remove</span></span><br></pre></td></tr></table></figure>

<ul>
<li>侧边栏头像</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="comment">#头像图片地址</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/tx.jpg</span>  </span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.圆形选true 方形选false</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.魔性转动，打开选true</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<ul>
<li>侧边栏外链</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">地址</span> <span class="string">||</span> <span class="string">github</span></span><br><span class="line">  <span class="attr">CSDN:</span> <span class="string">地址</span> <span class="string">||</span> <span class="string">CSDN</span></span><br><span class="line"><span class="attr">social_icons:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">icons_only:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">transition:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<ul>
<li>友情链接</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#links:</span></span><br><span class="line">  <span class="comment">#Title: http://example.com/</span></span><br></pre></td></tr></table></figure>

<ul>
<li>打赏功能</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#reward_settings:</span></span><br><span class="line">  <span class="comment"># If true, a donate button will be displayed in every article by default.</span></span><br><span class="line">  <span class="comment">#enable: true</span></span><br><span class="line">  <span class="comment">#animation: false</span></span><br><span class="line">  <span class="comment">#comment: Q：阅读本文需要付费，你是否愿意？</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#reward:</span></span><br><span class="line">  <span class="comment">#wechatpay: /images/wechatpay.png</span></span><br><span class="line">  <span class="comment">#alipay: /images/alipay.png</span></span><br></pre></td></tr></table></figure>

<ul>
<li>返回顶部</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Back to top in sidebar (only for Pisces | Gemini).</span></span><br><span class="line"><span class="attr">b2t:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Scroll percent label in b2t button.</span></span><br><span class="line"><span class="attr">scrollpercent:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<ul>
<li>关闭动画</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">async:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">transition:</span></span><br><span class="line">  <span class="comment"># Transition variants:</span></span><br><span class="line">  <span class="comment"># fadeIn | fadeOut | flipXIn | flipXOut | flipYIn | flipYOut | flipBounceXIn | flipBounceXOut | flipBounceYIn | flipBounceYOut</span></span><br><span class="line">  <span class="comment"># swoopIn | swoopOut | whirlIn | whirlOut | shrinkIn | shrinkOut | expandIn | expandOut</span></span><br><span class="line">  <span class="comment"># bounceIn | bounceOut | bounceUpIn | bounceUpOut | bounceDownIn | bounceDownOut | bounceLeftIn | bounceLeftOut | bounceRightIn | bounceRightOut</span></span><br><span class="line">  <span class="comment"># slideUpIn | slideUpOut | slideDownIn | slideDownOut | slideLeftIn | slideLeftOut | slideRightIn | slideRightOut</span></span><br><span class="line">  <span class="comment"># slideUpBigIn | slideUpBigOut | slideDownBigIn | slideDownBigOut | slideLeftBigIn | slideLeftBigOut | slideRightBigIn | slideRightBigOut</span></span><br><span class="line">  <span class="comment"># perspectiveUpIn | perspectiveUpOut | perspectiveDownIn | perspectiveDownOut | perspectiveLeftIn | perspectiveLeftOut | perspectiveRightIn | perspectiveRightOut</span></span><br><span class="line">  <span class="attr">post_block:</span> <span class="string">fadeIn</span></span><br><span class="line">  <span class="attr">post_header:</span> <span class="string">slideDownIn</span></span><br><span class="line">  <span class="attr">post_body:</span> <span class="string">slideDownIn</span></span><br><span class="line">  <span class="attr">coll_header:</span> <span class="string">slideLeftIn</span></span><br><span class="line">  <span class="comment"># Only for Pisces | Gemini.</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="string">slideUpIn</span></span><br></pre></td></tr></table></figure>

<ul>
<li>网站图标设置</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">favicon:</span></span><br><span class="line">  <span class="attr">small:</span> <span class="string">/images/favicon-16x16-next.png</span></span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/favicon-32x32-next.png</span></span><br><span class="line">  <span class="attr">apple_touch_icon:</span> <span class="string">/images/apple-touch-icon-next.png</span></span><br><span class="line">  <span class="attr">safari_pinned_tab:</span> <span class="string">/images/logo.svg</span></span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure>

<ul>
<li>底部页脚</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="comment"># Specify the date when the site was setup.</span></span><br><span class="line">  <span class="comment"># If not defined, current year will be used.</span></span><br><span class="line">  <span class="comment">#since: 2015</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Icon between year and copyright info.</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">user</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># If not defined, will be used `author` from Hexo main config.</span></span><br><span class="line">  <span class="attr">copyright:</span> <span class="string">xxy</span></span><br><span class="line">  <span class="comment"># -------------------------------------------------------------</span></span><br><span class="line">  <span class="comment"># Hexo link (Powered by Hexo).</span></span><br><span class="line">  <span class="attr">powered:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">theme:</span></span><br><span class="line">    <span class="comment"># Theme &amp; scheme info link (Theme - NexT.scheme).</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># Version info of NexT after scheme info (vX.X.X).</span></span><br><span class="line">    <span class="attr">version:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<ul>
<li>文章设置</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Automatically excerpt description in homepage as preamble text.</span></span><br><span class="line"><span class="comment"># 自动摘录描述在主页作为序言文本</span></span><br><span class="line"><span class="attr">excerpt_description:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line">  <span class="comment">#enable: false</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">length:</span> <span class="number">150</span></span><br><span class="line">  <span class="comment"># Post meta display settings</span></span><br><span class="line"><span class="attr">post_meta:</span></span><br><span class="line"><span class="comment"># 是否显示每项的文字</span></span><br><span class="line">  <span class="attr">item_text:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 是否显示发表时间</span></span><br><span class="line">  <span class="attr">created_at:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 是否显示更新时间</span></span><br><span class="line">  <span class="attr">updated_at:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 是否显示分类</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<ul>
<li>好看的画布</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">canvas_nest:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<ul>
<li>标签</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">tags:</span> </span><br><span class="line"><span class="bullet">-</span> <span class="string">工具</span></span><br></pre></td></tr></table></figure>

<ul>
<li>预览效果摘要</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">escape</span>&gt;</span></span>&lt;!-- more --&gt;<span class="language-xml"><span class="tag">&lt;/<span class="name">escape</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<ul>
<li>增加模块zh-Hans.yml</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">首页</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">归档</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">分类</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">标签</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">关于</span></span><br><span class="line">  <span class="attr">search:</span> <span class="string">搜索</span></span><br><span class="line">  <span class="attr">schedule:</span> <span class="string">日程表</span></span><br><span class="line">  <span class="attr">sitemap:</span> <span class="string">站点地图</span></span><br><span class="line">  <span class="attr">commonweal:</span> <span class="string">公益404</span></span><br><span class="line">  <span class="attr">shuyu:</span> <span class="string">书宇</span></span><br></pre></td></tr></table></figure>

<ul>
<li>主站配置文件</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 标签文件夹</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="comment"># 书宇文件夹</span></span><br><span class="line"><span class="attr">shuyu_dir:</span> <span class="string">shuyu</span></span><br></pre></td></tr></table></figure>

<ul>
<li>主题配置文件</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/||home</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/||tags</span></span><br><span class="line">  <span class="comment">#categories: /categories/ || th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/||fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/||user</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || heartbeat</span></span><br><span class="line">  <span class="attr">shuyu:</span> <span class="string">/shuyu/||book</span></span><br></pre></td></tr></table></figure>

<ul>
<li>增加文件夹</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo n page shuyu</span><br></pre></td></tr></table></figure>

<ul>
<li>文章加密</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;# 文章加密 #&#125;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    (function()&#123;</span><br><span class="line">        if(&#x27;&#123;&#123; page.password &#125;&#125;&#x27;)&#123;</span><br><span class="line">            if (prompt(&#x27;请输入文章密码&#x27;) !== &#x27;&#123;&#123; page.password &#125;&#125;&#x27;)&#123;</span><br><span class="line">                alert(&#x27;密码错误！&#x27;);</span><br><span class="line">                history.back();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>markdown文件</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">date: 2022/4/13 20:46:25</span><br><span class="line">categories:</span><br><span class="line"><span class="bullet">-</span> Diary</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">  -</span> Testing</span><br><span class="line"><span class="bullet">  -</span> Another Tag</span><br><span class="line"><span class="section">password: 你的密码</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>

<ul>
<li>图片下面的日志链接bug，在<code>\themes\next\layout\_macro\sidebar.swig</code>中</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;#   &lt;a href=&quot;&#123;&#123; url_for(theme.menu.archives).split(&#x27;||&#x27;)[0] | trim &#125;&#125;&quot;&gt;   #&#125;</span><br><span class="line">                改为</span><br><span class="line">&lt;a href=&quot;&#123;&#123; url_for(config.archive_dir) | trim &#125;&#125;&quot;&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>底部分页左右标签bug，在<code>\themes\next\layout\_partials\pagination.swig</code>中</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% if page.prev or page.next %&#125;</span><br><span class="line">  &lt;nav class=&quot;pagination&quot;&gt;</span><br><span class="line">    &#123;&#123;</span><br><span class="line">      paginator(&#123;</span><br><span class="line">        prev_text: &#x27;&lt;i class=&quot;fa fa-angle-left&quot;&gt;&lt;/i&gt;&#x27;,</span><br><span class="line">        next_text: &#x27;&lt;i class=&quot;fa fa-angle-right&quot;&gt;&lt;/i&gt;&#x27;,</span><br><span class="line">        mid_size: 1</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;&#125;</span><br><span class="line">  &lt;/nav&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">改为</span><br><span class="line"></span><br><span class="line">&#123;% if page.prev or page.next %&#125;</span><br><span class="line">  &lt;nav class=&quot;pagination&quot;&gt;</span><br><span class="line">    &#123;&#123;</span><br><span class="line">      paginator(&#123;</span><br><span class="line">        prev_text: &#x27;&lt;i class=&quot;fa fa-hand-o-left&quot; aria-label=&quot;&#x27; + __(&#x27;accessibility.prev_page&#x27;) + &#x27;&quot;&gt;&lt;/i&gt;&#x27;,</span><br><span class="line">        next_text: &#x27;&lt;i class=&quot;fa fa-hand-o-right&quot; aria-label=&quot;&#x27; + __(&#x27;accessibility.next_page&#x27;) + &#x27;&quot;&gt;&lt;/i&gt;&#x27;,</span><br><span class="line">        mid_size: 1,</span><br><span class="line">		escape   : false</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;&#125;</span><br><span class="line">  &lt;/nav&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>点击目录不跳转bug，在next里的js文件post-details.js</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;.post-toc a&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">  e.<span class="title function_">preventDefault</span>();</span><br><span class="line">  <span class="keyword">var</span> targetSelector = <span class="title class_">NexT</span>.<span class="property">utils</span>.escapeSelector(<span class="variable language_">this</span>.<span class="title function_">getAttribute</span>(<span class="string">&#x27;href&#x27;</span>));</span><br><span class="line">&lt;!-- 添加下面这行代码, 重新解析 <span class="variable constant_">URL</span> -&gt;</span><br><span class="line">  targetSelector = <span class="built_in">decodeURI</span>(<span class="variable language_">this</span>.<span class="title function_">getAttribute</span>(<span class="string">&#x27;href&#x27;</span>));</span><br><span class="line">  <span class="keyword">var</span> offset = $(targetSelector).<span class="title function_">offset</span>().<span class="property">top</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>目录只显示一级和二级bug，文章目录样式文件custom.styl文件位于<code>themes/next/source/css/_custom</code></li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">//文章目录默认展开</span><br><span class="line"><span class="selector-class">.post-toc</span> <span class="selector-class">.nav</span> <span class="selector-class">.nav-child</span> &#123; <span class="attribute">display</span>: block; &#125;</span><br><span class="line"><span class="selector-class">.post-toc</span> <span class="selector-tag">ol</span> &#123;  </span><br><span class="line">  <span class="attribute">font-size</span> : <span class="number">13px</span>;     </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<ul>
<li>主题配置文件位于<code>themes/next/_config.yml</code></li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  </span><br><span class="line">  <span class="comment"># 过长自动换行</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span> </span><br><span class="line">  <span class="attr">expand_all:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">max_depth:</span> <span class="number">6</span></span><br></pre></td></tr></table></figure>

<h2 id="4-小工具"><a href="#4-小工具" class="headerlink" title="4. 小工具"></a>4. 小工具</h2><ul>
<li>本地搜索</li>
<li>主题配置文件</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/flashlab/hexo-generator-search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># if auto, trigger search by changing input</span></span><br><span class="line">  <span class="comment"># if manual, trigger search by pressing enter key or search button</span></span><br><span class="line">  <span class="comment"># 选auto则搜索时输入自动出现结果，选manual则搜索时输入完成需手动点击回车或搜索按钮出结果</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="comment"># 显示每篇文章的top n个结果，通过设置为-1显示所有结果</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>

<ul>
<li>在根目录下使用以下命令安装</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<ul>
<li>站点配置文件</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 本地搜索</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>网站底部字数统计</p>
</li>
<li><p>安装插件</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure>

<ul>
<li>然后在 &#x2F;themes&#x2F;next&#x2F;layout&#x2F;_partials&#x2F;footer.njk 的合适的地方写入</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;theme-info&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;powered-by&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;span class=&quot;post-count&quot;&gt;博客全站共&#123;&#123; totalcount(site) &#125;&#125;字&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>实现字数统计和阅读需要时长显示</p>
</li>
<li><p>安装插件</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure>

<ul>
<li>在主配置文件的 _config.yml 下写入</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span>                <span class="comment"># 文章字数统计</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span>                   <span class="comment"># 文章阅读时长</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">true</span>          <span class="comment"># 站点总字数统计</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">true</span>             <span class="comment"># 站点总阅读时长</span></span><br><span class="line">  <span class="attr">exclude_codeblock:</span> <span class="literal">false</span>     <span class="comment"># 排除代码字数统计</span></span><br></pre></td></tr></table></figure>

<h2 id="5-增加复制功能"><a href="#5-增加复制功能" class="headerlink" title="5. 增加复制功能"></a>5. 增加复制功能</h2><blockquote>
<p>NexT版本为<strong>v5.1.4</strong>,NexT主题的v6.3已有此功能</p>
</blockquote>
<h3 id="5-1-添加copy-code-swig"><a href="#5-1-添加copy-code-swig" class="headerlink" title="5.1 添加copy-code.swig"></a>5.1 添加copy-code.swig</h3><p>在<code>themes/next/layout/_third-party/</code>此目录下创建copy-code.swig</p>
<ul>
<li>copy-code.swig</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% if theme.codeblock.copy_button.enable %&#125;</span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    .copy-btn &#123;</span><br><span class="line">      display: inline-block;</span><br><span class="line">      padding: 6px 12px;</span><br><span class="line">      font-size: 13px;</span><br><span class="line">      font-weight: 700;</span><br><span class="line">      line-height: 20px;</span><br><span class="line">      color: #4D4D4C;</span><br><span class="line">      white-space: nowrap;</span><br><span class="line">      vertical-align: middle;</span><br><span class="line">      cursor: pointer;</span><br><span class="line">      background-color: #F7F7F7;</span><br><span class="line">      background-image: linear-gradient(#F7F7F7, #F7F7F7);</span><br><span class="line">      border: 1px solid #d5d5d5;</span><br><span class="line">      border-radius: 3px;</span><br><span class="line">      user-select: none;</span><br><span class="line">      outline: 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .highlight-wrap .copy-btn &#123;</span><br><span class="line">      transition: opacity .3s ease-in-out;</span><br><span class="line">      opacity: 0;</span><br><span class="line">      padding: 2px 6px;</span><br><span class="line">      position: absolute;</span><br><span class="line">      right: 4px;</span><br><span class="line">      top: 10px;</span><br><span class="line">      //防止和展开代码冲突</span><br><span class="line">      z-index: 9;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .highlight-wrap:hover .copy-btn,</span><br><span class="line">    .highlight-wrap .copy-btn:focus &#123;</span><br><span class="line">      opacity: 1</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .highlight-wrap &#123;</span><br><span class="line">      position: relative;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line"></span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    $(&#x27;.highlight&#x27;).each(function (i, e) &#123;</span><br><span class="line">      var $wrap = $(&#x27;&lt;div&gt;&#x27;).addClass(&#x27;highlight-wrap&#x27;)</span><br><span class="line">      $(e).after($wrap)</span><br><span class="line">      $wrap.append($(&#x27;&lt;button&gt;&#x27;).addClass(&#x27;copy-btn&#x27;).append(&#x27;&#123;&#123;__(&quot;post.copy_button&quot;)&#125;&#125;&#x27;).on(&#x27;click&#x27;, function (e) &#123;</span><br><span class="line">        var code = $(this).parent().find(&#x27;.code&#x27;).find(&#x27;.line&#x27;).map(function (i, e) &#123;</span><br><span class="line">          return $(e).text()</span><br><span class="line">        &#125;).toArray().join(&#x27;\n&#x27;)</span><br><span class="line">        var ta = document.createElement(&#x27;textarea&#x27;)</span><br><span class="line">        document.body.appendChild(ta)</span><br><span class="line">        ta.style.position = &#x27;absolute&#x27;</span><br><span class="line">        ta.style.top = &#x27;0px&#x27;</span><br><span class="line">        ta.style.left = &#x27;0px&#x27;</span><br><span class="line">        ta.value = code</span><br><span class="line">        ta.select()</span><br><span class="line">        ta.focus()</span><br><span class="line">        var result = document.execCommand(&#x27;copy&#x27;)</span><br><span class="line">        document.body.removeChild(ta)</span><br><span class="line">        &#123;% if theme.codeblock.copy_button.show_result %&#125;</span><br><span class="line">          if(result)$(this).text(&#x27;&#123;&#123;__(&quot;post.copy_success&quot;)&#125;&#125;&#x27;)</span><br><span class="line">          else $(this).text(&#x27;&#123;&#123;__(&quot;post.copy_failure&quot;)&#125;&#125;&#x27;)</span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line">        $(this).blur()</span><br><span class="line">      &#125;)).on(&#x27;mouseleave&#x27;, function (e) &#123;</span><br><span class="line">        var $b = $(this).find(&#x27;.copy-btn&#x27;)</span><br><span class="line">        setTimeout(function () &#123;</span><br><span class="line">          $b.text(&#x27;&#123;&#123;__(&quot;post.copy_button&quot;)&#125;&#125;&#x27;)</span><br><span class="line">        &#125;, 300)</span><br><span class="line">      &#125;).append(e)</span><br><span class="line">    &#125;)</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="5-2-编辑-layout-swig"><a href="#5-2-编辑-layout-swig" class="headerlink" title="5.2 编辑_layout.swig"></a>5.2 编辑_layout.swig</h3><p>在<code>themes/next/layout/</code>文件下编辑_layout.swig</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> # 要加入的代码</span><br><span class="line"> &#123;% include &#x27;_third-party/copy-code.swig&#x27; %&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<h3 id="5-3-添加按钮上显示的语言"><a href="#5-3-添加按钮上显示的语言" class="headerlink" title="5.3 添加按钮上显示的语言"></a>5.3 添加按钮上显示的语言</h3><p>在<code>themes/next/languages/</code>目录下编辑zh-Hans.yml</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post:</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line">    <span class="attr">copy_button:</span> <span class="string">复制</span></span><br><span class="line">    <span class="attr">copy_success:</span> <span class="string">复制成功</span></span><br><span class="line">    <span class="attr">copy_failure:</span> <span class="string">复制失败</span></span><br></pre></td></tr></table></figure>

<p>同理en.yml</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post:</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line">    <span class="attr">copy_button:</span> <span class="string">Copy</span></span><br><span class="line">    <span class="attr">copy_success:</span> <span class="string">Copied</span></span><br><span class="line">    <span class="attr">copy_failure:</span> <span class="string">Copy</span> <span class="string">failed</span></span><br></pre></td></tr></table></figure>

<h3 id="5-4-编辑主题配置"><a href="#5-4-编辑主题配置" class="headerlink" title="5.4 编辑主题配置"></a>5.4 编辑主题配置</h3><p>在<code>themes/next/_config.yml</code>下添加</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Add copy button on codeblock</span></span><br><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="attr">border_radius:</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Show text copy result</span></span><br><span class="line">    <span class="attr">show_result:</span> <span class="literal">true</span> </span><br></pre></td></tr></table></figure>

<h3 id="5-5-生成测试"><a href="#5-5-生成测试" class="headerlink" title="5.5 生成测试"></a>5.5 生成测试</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<h2 id="6-展开关闭代码"><a href="#6-展开关闭代码" class="headerlink" title="6.  展开关闭代码"></a>6.  展开关闭代码</h2><h3 id="6-1-添加code-unfold-swig"><a href="#6-1-添加code-unfold-swig" class="headerlink" title="6.1 添加code-unfold.swig"></a>6.1 添加code-unfold.swig</h3><p>在<code>themes/next/layout/_third-party/</code>此目录下创建copy-code.swig</p>
<ul>
<li>code-unfold.swig</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% if theme.codeblock.js_retract_code_btn.enable %&#125;</span><br><span class="line">  &lt;style&gt;</span><br><span class="line">.highlight-container &#123;</span><br><span class="line">  position: relative;</span><br><span class="line">  background-color: highlight-background;</span><br><span class="line">  margin-left: 0.5em;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.highlight-container.on .highlight-footer &#123;</span><br><span class="line">  display: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.highlight-container.on .hide-btn &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.highlight-container.on .highlight-wrap &#123;</span><br><span class="line">  max-height: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.highlight-container .highlight-wrap &#123;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  max-height: 200px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.highlight-container .highlight-footer &#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  width: 100%;</span><br><span class="line">  left: 0;</span><br><span class="line">  bottom: 0;</span><br><span class="line">  height: 60px;</span><br><span class="line">  background-image: linear-gradient(-180deg, rgba(255,255,255,0), rgba(45, 41, 41, 0.1));</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.highlight-container .show-btn &#123;</span><br><span class="line">  font-size: 12px;</span><br><span class="line">  color: #fff;</span><br><span class="line">  position: absolute;</span><br><span class="line">  left: 50%;</span><br><span class="line">  transform: translateX(-50%);</span><br><span class="line">  bottom: 0;</span><br><span class="line">  line-height: 2em;</span><br><span class="line">  text-decoration: none;</span><br><span class="line">  padding: 0 0.8em;</span><br><span class="line">  text-align: center;</span><br><span class="line">  border-radius: 4px 4px 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.highlight-container .show-btn:hover &#123;</span><br><span class="line">  text-decoration: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.highlight-container .hide-btn &#123;</span><br><span class="line">  color: #fff;</span><br><span class="line">  font-size: 12px;</span><br><span class="line">  width: 22px;</span><br><span class="line">  position: absolute;</span><br><span class="line">  left: -21px;</span><br><span class="line">  top: 0px;</span><br><span class="line">  line-height: 1em;</span><br><span class="line">  text-decoration: none;</span><br><span class="line">  text-align: center;</span><br><span class="line">  display: none;</span><br><span class="line">  flex-direction: column;</span><br><span class="line">  background-color: highlight-background;</span><br><span class="line">  border-radius: 4px 0 0 4px;</span><br><span class="line">  padding: 0.1em 0 0.6em;</span><br><span class="line">  transition: top ease 0.35s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.highlight-container .fa-angle-up,</span><br><span class="line">.highlight-container .fa-angle-down &#123;</span><br><span class="line">  font-style: normal;</span><br><span class="line">  color: #fff;</span><br><span class="line">&#125;</span><br><span class="line">.highlight-container .fa-angle-up:before &#123;</span><br><span class="line">  content:&quot;\f106&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.highlight-container .fa-angle-down:before &#123;</span><br><span class="line">  content:&quot;\f107&quot;</span><br><span class="line">  margin-left: 0.5em;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.highlight-container .js_unfold_code_btn,</span><br><span class="line">.highlight-container .js_retract_code_btn &#123;</span><br><span class="line">  background: rgba(0, 0, 0, 0.5);</span><br><span class="line">  border-bottom: none !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.highlight-container .js_unfold_code_btn:hover,</span><br><span class="line">.highlight-container .js_retract_code_btn:hover &#123;</span><br><span class="line">  border-bottom-color: none !important;</span><br><span class="line">&#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">  var CODE_MAX_HEIGHT = 1200;</span><br><span class="line">var containers = [];</span><br><span class="line"></span><br><span class="line">// 展开</span><br><span class="line">$(&#x27;body&#x27;).on(&#x27;click&#x27;, &#x27;.js_unfold_code_btn&#x27;, function () &#123;</span><br><span class="line">  $(this).closest(&#x27;.js_highlight_container&#x27;).addClass(&#x27;on&#x27;);</span><br><span class="line">&#125;);</span><br><span class="line">// 收起</span><br><span class="line">$(&#x27;body&#x27;).on(&#x27;click&#x27;, &#x27;.js_retract_code_btn&#x27;, function () &#123;</span><br><span class="line">  var $container = $(this).closest(&#x27;.js_highlight_container&#x27;).removeClass(&#x27;on&#x27;);</span><br><span class="line">  var winTop = $(window).scrollTop();</span><br><span class="line">  var offsetTop = $container.offset().top;</span><br><span class="line">  $(this).css(&#x27;top&#x27;, 0);</span><br><span class="line">  if (winTop &gt; offsetTop) &#123;</span><br><span class="line">    // 设置滚动条位置</span><br><span class="line">    $(&#x27;body, html&#x27;).animate(&#123;</span><br><span class="line">      scrollTop: $container.offset().top - CODE_MAX_HEIGHT</span><br><span class="line">    &#125;, 600);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">// 滚动事件，触发动画效果</span><br><span class="line">$(window).on(&#x27;scroll&#x27;, function () &#123;</span><br><span class="line">  var scrollTop = $(window).scrollTop();</span><br><span class="line">  var temp = [];</span><br><span class="line">  for (let i = 0; i &lt; containers.length; i++) &#123;</span><br><span class="line">    var item = containers[i];</span><br><span class="line">    var &#123; $container, height, $hide, hasHorizontalScrollbar &#125; = item;</span><br><span class="line">    if ($container.closest(&#x27;body&#x27;).length === 0) &#123;</span><br><span class="line">      // 如果 $container 元素已经不在页面上, 则删除该元素</span><br><span class="line">      // 防止pjax页面跳转之后，元素未删除</span><br><span class="line">      continue;</span><br><span class="line">    &#125;</span><br><span class="line">    temp.push(item);</span><br><span class="line">    if (!$container.hasClass(&#x27;on&#x27;)) &#123;</span><br><span class="line">      continue;</span><br><span class="line">    &#125;</span><br><span class="line">    var offsetTop = $container.offset().top;</span><br><span class="line">    var hideBtnHeight = $hide.outerHeight();</span><br><span class="line">    // 减去按钮高度，减去底部滚动条高度</span><br><span class="line">    var maxTop = parseInt(height - (hasHorizontalScrollbar ? 17 : 0) - hideBtnHeight);</span><br><span class="line">    let top = parseInt(</span><br><span class="line">      Math.min(</span><br><span class="line">        Math.max(scrollTop - offsetTop, 0), // 如果小于 0 ，则取 0</span><br><span class="line">        maxTop,// 如果大于 height ，则取 height</span><br><span class="line">      )</span><br><span class="line">    );</span><br><span class="line">    // 根据 sin 曲线设置&quot;收起代码&quot;位置</span><br><span class="line">    var halfHeight = parseInt($(window).height() / 2 * Math.sin((top / maxTop) * 90 * (2 * Math.PI/360)));</span><br><span class="line">    $hide.css(&#x27;top&#x27;, Math.min(top + halfHeight, maxTop));</span><br><span class="line">  &#125;</span><br><span class="line">  containers = temp;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 添加隐藏容器</span><br><span class="line">function addCodeWrap($node) &#123;</span><br><span class="line">  var $container = $node.wrap(&#x27;&lt;div class=&quot;js_highlight_container highlight-container&quot;&gt;&lt;div class=&quot;highlight-wrap&quot;&gt;&lt;/div&gt;&lt;/div&gt;&#x27;).closest(&#x27;.js_highlight_container&#x27;);</span><br><span class="line"></span><br><span class="line">  // 底部 &quot;展开代码&quot; 与 侧边栏 &quot;收起代码&quot;</span><br><span class="line">  var $btn = $(`</span><br><span class="line">    &lt;div class=&quot;highlight-footer&quot;&gt;</span><br><span class="line">      &lt;a class=&quot;js_unfold_code_btn show-btn&quot; href=&quot;javascript:;&quot;&gt;展开代码&lt;i class=&quot;fa fa-angle-down&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;a class=&quot;js_retract_code_btn hide-btn&quot; href=&quot;javascript:;&quot;&gt;&lt;i class=&quot;fa fa-angle-up&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;收起代码&lt;/a&gt;</span><br><span class="line">  `);</span><br><span class="line"></span><br><span class="line">  $container.append($btn);</span><br><span class="line">  return $container;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">function codeUnfold () &#123;</span><br><span class="line">  $(&#x27;.highlight&#x27;).each(function () &#123;</span><br><span class="line">    // 防止重复渲染</span><br><span class="line">    if (this.__render__ === true) &#123;</span><br><span class="line">      return true;</span><br><span class="line">    &#125;</span><br><span class="line">    this.__render__ = true;</span><br><span class="line">    var $this = $(this);</span><br><span class="line">    var height = $(this).outerHeight();</span><br><span class="line">    if (height &gt; CODE_MAX_HEIGHT) &#123;</span><br><span class="line">      // 添加展开&amp;收起容器</span><br><span class="line">      var $container = addCodeWrap($this, height);</span><br><span class="line">      containers.push(&#123;</span><br><span class="line">        $container,</span><br><span class="line">        height,</span><br><span class="line">        $hide: $container.find(&#x27;.js_retract_code_btn&#x27;),</span><br><span class="line">        hasHorizontalScrollbar: this.scrollWidth &gt; this.offsetWidth,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<h3 id="6-2-添加jquery"><a href="#6-2-添加jquery" class="headerlink" title="6.2 添加jquery"></a>6.2 添加<code>jquery</code></h3><ul>
<li>方案一：在<code>themes/next/_config.yml</code>下编辑，因为<code>fancybox</code>会依赖<code>jquery</code>，所以设置成<code>true</code></li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<ul>
<li>方案二：在<code>next</code>主题全局引用jquery</li>
</ul>
<h3 id="6-3-编辑-layout-swig"><a href="#6-3-编辑-layout-swig" class="headerlink" title="6.3 编辑_layout.swig"></a>6.3 编辑_layout.swig</h3><p>在<code>themes/next/layout/</code>文件下编辑_layout.swig</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% include &#x27;_third-party/code-unfold.swig&#x27; %&#125;</span><br></pre></td></tr></table></figure>

<h3 id="6-4-编辑主题配置"><a href="#6-4-编辑主题配置" class="headerlink" title="6.4 编辑主题配置"></a>6.4 编辑主题配置</h3><p>在<code>themes/next/_config.yml</code>下添加</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Add copy button on codeblock</span></span><br><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="attr">js_retract_code_btn:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="6-4-调用js方法"><a href="#6-4-调用js方法" class="headerlink" title="6.4 调用js方法"></a>6.4 调用js方法</h3><p>在<code>D:\blog\themes\next\source\js\src</code>目录下的bootstrap.js文件添加代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">  $(<span class="variable language_">document</span>).<span class="title function_">trigger</span>(<span class="string">&#x27;bootstrap:before&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="title class_">NexT</span>.<span class="property">utils</span>.<span class="title function_">isMobile</span>() &amp;&amp; <span class="variable language_">window</span>.<span class="property">FastClick</span>.<span class="title function_">attach</span>(<span class="variable language_">document</span>.<span class="property">body</span>);</span><br><span class="line"></span><br><span class="line">  <span class="title class_">NexT</span>.<span class="property">utils</span>.<span class="title function_">lazyLoadPostsImages</span>();</span><br><span class="line"></span><br><span class="line">  <span class="title class_">NexT</span>.<span class="property">utils</span>.<span class="title function_">registerESCKeyEvent</span>();</span><br><span class="line"></span><br><span class="line">  <span class="title class_">NexT</span>.<span class="property">utils</span>.<span class="title function_">registerBackToTop</span>();</span><br><span class="line">    <span class="comment">//添加的代码</span></span><br><span class="line">  <span class="title function_">codeUnfold</span>();</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure>

<h3 id="6-5-生成测试"><a href="#6-5-生成测试" class="headerlink" title="6.5 生成测试"></a>6.5 生成测试</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<h2 id="7-总结"><a href="#7-总结" class="headerlink" title="7. 总结"></a>7. 总结</h2><p>在本次搭建博客中，对github pages能作为微服务器有了了解，也对自己的博客有了大致框架，遵循简洁实用的原则。</p>
]]></content>
      <tags>
        <tag>工具</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>设计模式</title>
    <url>/2022/05/09/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<blockquote>
<center>朝菌不知晦朔，蟪蛄不知春秋</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<blockquote>
<p>设计是为了提高软件的性能和安全以及程序员更加容易维护和编写，设计模式不是单一的，是复杂灵活的，GOF&#x2F;&#x2F;四人组</p>
</blockquote>
<h3 id="1-设计原则"><a href="#1-设计原则" class="headerlink" title="1. 设计原则"></a>1. 设计原则</h3><table>
<thead>
<tr>
<th>设计原则名称</th>
<th>定  义</th>
<th>使用频率</th>
</tr>
</thead>
<tbody><tr>
<td>单一职责原则(Single Responsibility Principle, SRP)</td>
<td>一个对象应该只包含单一的职责，并且该职责被完整地封装在一个类中</td>
<td>★★★★☆</td>
</tr>
<tr>
<td>开闭原则(Open-Closed Principle, OCP)</td>
<td>软件实体应当对扩展开放，对修改关闭</td>
<td>★★★★★</td>
</tr>
<tr>
<td>里氏代换原则(Liskov Substitution Principle, LSP)</td>
<td>所有引用基类的地方必须能透明地使用其子类的对象</td>
<td>★★★★★</td>
</tr>
<tr>
<td>依赖倒转原则(Dependence Inversion Principle, DIP)</td>
<td>高层模块不应该依赖低层模块，它们都应该依赖抽象。抽象不应该依赖于细节，细节应该依赖于抽象</td>
<td>★★★★★</td>
</tr>
<tr>
<td>接口隔离原则(Interface Segregation Principle, ISP)</td>
<td>客户端不应该依赖那些它不需要的接口</td>
<td>★★☆☆☆</td>
</tr>
<tr>
<td>合成复用原则(Composite Reuse Principle, CRP)</td>
<td>优先使用对象组合，而不是继承来达到复用的目的</td>
<td>★★★★☆</td>
</tr>
<tr>
<td>迪米特法则(Law of Demeter, LoD)</td>
<td>每一个软件单位对其他的单位都只有最少的知识，而且局限于那些与本单位密切相关的软件单位</td>
<td>★★★☆☆</td>
</tr>
</tbody></table>
<h3 id="2-创建型模式（记忆：工建原单，对对象的创建和使用）"><a href="#2-创建型模式（记忆：工建原单，对对象的创建和使用）" class="headerlink" title="2. 创建型模式（记忆：工建原单，对对象的创建和使用）"></a>2. 创建型模式（记忆：工建原单，对对象的创建和使用）</h3><blockquote>
<ol>
<li>简单工厂模式(Simple Factory)</li>
</ol>
<ul>
<li>结构：工厂角色，抽象产品角色，具体产品角色</li>
<li>类型：</li>
<li>说明：把所有需要实例化的对象放入一个工厂里，由工厂进行实例化</li>
<li>试用范围：没有太过于复杂的软件</li>
</ul>
</blockquote>
<blockquote>
<ol start="2">
<li>工厂方法模式(Factory Method）</li>
</ol>
<ul>
<li>结构：抽象产品，具体产品，抽象工厂，具体工厂</li>
<li>类型：</li>
<li>说明：相对应于一个产品等级结构，也就是同一类型的对象和类，在简单工厂下再造具体工厂，负责一个品牌的同一类型</li>
<li>试用范围：比较广泛</li>
</ul>
</blockquote>
<blockquote>
<ol start="3">
<li>抽象工厂模式(Abstract Factory)</li>
</ol>
<ul>
<li>结构：抽象工厂，具体工厂，抽象产品，具体产品</li>
<li>类型：</li>
<li>说明：相对应于一个产品族，也就是一个品牌的所有类和对象</li>
<li>试用范围：对于一个产品族</li>
</ul>
</blockquote>
<blockquote>
<ol start="4">
<li>建造者模式(Builder)</li>
</ol>
<ul>
<li>结构：抽象建造者，具体建造者，产品角色，指挥者</li>
<li>类型：</li>
<li>说明：有复杂的内部结构，组成结构类似</li>
<li>试用范围：</li>
</ul>
</blockquote>
<blockquote>
<ol start="5">
<li>原型模式(Prototype)</li>
</ol>
<ul>
<li>结构：抽象原型，具体原型，客户类</li>
<li>类型：深克隆（Serializable）浅克隆（Cloneable）</li>
<li>说明：可以通过一个已有对象复制获取更多的对象</li>
<li>试用范围：不是单例的情况</li>
</ul>
</blockquote>
<blockquote>
<ol start="6">
<li>单例模式(Singleton)</li>
</ol>
<ul>
<li>结构：instance</li>
<li>类型：懒汉型+延迟加载+锁、饿汉型、静态内部类、枚举</li>
<li>说明：Singleton只有一个实例</li>
<li>试用范围：</li>
</ul>
</blockquote>
<h3 id="3-结构型模式（记忆-ABCDFFP，对现有系统进行补救以及对现有类进行重用，类与对象，类的结构，对象与类，对象的结构）"><a href="#3-结构型模式（记忆-ABCDFFP，对现有系统进行补救以及对现有类进行重用，类与对象，类的结构，对象与类，对象的结构）" class="headerlink" title="3. 结构型模式（记忆:ABCDFFP，对现有系统进行补救以及对现有类进行重用，类与对象，类的结构，对象与类，对象的结构）"></a>3. 结构型模式（记忆:ABCDFFP，对现有系统进行补救以及对现有类进行重用，类与对象，类的结构，对象与类，对象的结构）</h3><blockquote>
<ol>
<li>适配器模式（Adapter）</li>
</ol>
<ul>
<li><p>结构：目标抽象类，适配器类，适配者类，客户类</p>
</li>
<li><p>类型：类适配器，对象适配器，缺省适配器（默认适配器），双向适配器</p>
</li>
<li><p>说明：将一个接口转换为客户希望的另一个接口，或其他跨平台操作</p>
</li>
<li><p>试用范围：有很多第三方接口</p>
</li>
</ul>
</blockquote>
<blockquote>
<ol start="2">
<li>桥接模式（柄体模式，接口模式,Bridge）</li>
</ol>
<ul>
<li>结构：抽象类（不是接口），扩充抽象类，实现类接口，具体实现类</li>
<li>类型：</li>
<li>说明:将抽象和实现部分分离，使它们可以独立的变化</li>
<li>试用范围：两个独立变化的维度，例如彩笔，有彩笔类和颜色，把颜色定为类，彩笔也定为类</li>
</ul>
</blockquote>
<blockquote>
<ol start="3">
<li>组合模式(Composite，树形结构，部分-整体)</li>
</ol>
<ul>
<li><p>结构：抽象构件，叶子构件，容器构件，客户类</p>
</li>
<li><p>类型：透明组合模式，安全组合模式（一般用）</p>
</li>
<li><p>说明：树形结构</p>
</li>
<li><p>试用范围：客户能够忽略不同对象层次的变化</p>
</li>
</ul>
</blockquote>
<blockquote>
<ol start="4">
<li>装饰模式(Decorator，替代继承，用来更加好看)</li>
</ol>
<ul>
<li><p>结构：抽象构件，具体构件，抽象装饰类，具体装饰类</p>
</li>
<li><p>类型：透明修饰（很少有），半透明修饰（一般）</p>
</li>
<li><p>说明：比继承更加灵活</p>
</li>
<li><p>试用范围：final定义的类想要继承，密码修饰，其他IO</p>
</li>
</ul>
</blockquote>
<blockquote>
<ol start="5">
<li>外观模式(Facade)</li>
</ol>
<ul>
<li><p>结构：外观角色，子系统模式</p>
</li>
<li><p>类型：</p>
</li>
<li><p>说明：通过外观类提供子接口</p>
</li>
<li><p>试用范围：C&#x2F;S客户端菜单或者工具栏，B&#x2F;S首页和导航栏,</p>
</li>
</ul>
</blockquote>
<blockquote>
<ol start="6">
<li>享元模式(Flyweight，节约内存空间)</li>
</ol>
<ul>
<li>结构：抽象享元类，具体享元类，非共享具体享元类，享元工厂类</li>
<li>类型：</li>
<li>说明：</li>
<li>试用范围：存在大量相同或者相似的对象</li>
</ul>
</blockquote>
<blockquote>
<ol start="7">
<li>代理模式(Proxy)</li>
</ol>
<ul>
<li>结构：抽象主题角色，代理主题角色，真实主题角色</li>
<li>类型：远程代理，虚拟代理，保护代理，动态代理，缓冲带你，防火墙代理，同步化代理，智能引用代理</li>
<li>说明：</li>
<li>试用范围：不能直接访问对象或者其他类</li>
</ul>
</blockquote>
<h3 id="4-行为型模式（对象之间的交互，中间，类行为型模式，对象行为型模式）"><a href="#4-行为型模式（对象之间的交互，中间，类行为型模式，对象行为型模式）" class="headerlink" title="4. 行为型模式（对象之间的交互，中间，类行为型模式，对象行为型模式）"></a>4. 行为型模式（对象之间的交互，中间，类行为型模式，对象行为型模式）</h3><blockquote>
<ol>
<li>职责链模式（Chain of Responsibility）</li>
</ol>
<ul>
<li>结构：抽象处理者，具体处理者，客户类</li>
<li>类型：</li>
<li>说明：从上到下，可能是直线，也可能是一个环，树形结构，</li>
<li>试用范围：try catch语句</li>
</ul>
</blockquote>
<blockquote>
<ol start="2">
<li>命令模式(Command，动作模式，事务模式)</li>
</ol>
<ul>
<li>结构：抽象命令类，具体命令类，调用者，接收者，客户类</li>
<li>类型：</li>
<li>说明：本质是对命令进行封装</li>
<li>试用范围：支持命令的撤销（Undo）和恢复（Redo）操作，命令队列和宏（组合）命令</li>
</ul>
</blockquote>
<blockquote>
<ol start="3">
<li>解释器模式（Interpreter，设计一种新的语言）</li>
</ol>
<ul>
<li>结构：抽象表达式，终结符表达式，非终结符表达式，环境类，客户类</li>
<li>类型：</li>
<li>说明：文法规则：:: &#x3D; 定义为，| 或，{}组合,* 0至多次,抽象语法树（AST）</li>
<li>试用范围：简单文法规则</li>
</ul>
</blockquote>
<blockquote>
<ol start="4">
<li>迭代器模式(Iterator，游标)</li>
</ol>
<ul>
<li>结构：抽象迭代器，具体迭代器，抽象聚合类，具体聚合类</li>
<li>类型：Object next（） Boolean hasNext()  void remove()互相关联next()</li>
<li>说明：</li>
<li>试用范围:对一个聚合对象进行遍历,可以是List也可以是Set</li>
</ul>
</blockquote>
<blockquote>
<p>5.中介者模式(Mediator)</p>
<ul>
<li>结构：抽象中介者，具体中介者，抽象同事类，具体同事类</li>
<li>类型：</li>
<li>说明：结构性（中转作用）行为性（协调作用）</li>
<li>试用范围：MVC</li>
</ul>
</blockquote>
<blockquote>
<ol start="6">
<li>备忘录模式(Memento)</li>
</ol>
<ul>
<li>结构：原发器，备忘录，负责人</li>
<li>类型：</li>
<li>说明：要注意封装</li>
<li>试用范围：撤销和恢复，后悔想要修改，数据库，</li>
</ul>
</blockquote>
<blockquote>
<ol start="7">
<li>观察者模式(Observer)</li>
</ol>
<ul>
<li>结构：目标类（可以是抽象，也可以是实现类），具体目标类（可以很多类），观察者，具体观察者</li>
<li>类型：</li>
<li>说明：Java.util包提供了Observable类以及Observer接口</li>
<li>试用范围：有两个方面，一个依赖另一个方面，MVC</li>
</ul>
</blockquote>
<blockquote>
<ol start="8">
<li>状态模式（State）</li>
</ol>
<ul>
<li>结构：环境类，抽象状态类，具体状态类</li>
<li>类型：</li>
<li>说明：</li>
<li>试用范围：解决系统中复杂对象的状态转换以及不同行为状态下行为的封装问题</li>
</ul>
</blockquote>
<blockquote>
<ol start="9">
<li>策略模式(Strategy，封装算法)</li>
</ol>
<ul>
<li>结构：环境类，抽象策略类，具体策略类</li>
<li>类型：</li>
<li>说明：区别于硬编码</li>
<li>试用范围：用于算法的自由切换和扩展</li>
</ul>
</blockquote>
<blockquote>
<ol start="10">
<li>模板方法模式(Template Method)</li>
</ol>
<ul>
<li>结构：抽象类，具体子类</li>
<li>类型：</li>
<li>说明：在抽象父类中提供一个称之为模板方法的方法来定义这些方法的执行次序，基本方法（钩子方法，抽象方法，具体方法）+模板方法</li>
<li>试用范围：框架（spring，struct）</li>
</ul>
</blockquote>
<blockquote>
<ol start="11">
<li>访问者模式(Visitor)</li>
</ol>
<ul>
<li>结构：抽象访问者，具体访问者，抽象元素，具体元素，对象结构（List，Set）</li>
<li>类型：</li>
<li>说明：与其他模式联用</li>
<li>试用范围：变量</li>
</ul>
</blockquote>
<h3 id="5-一句话总结设计模式"><a href="#5-一句话总结设计模式" class="headerlink" title="5. 一句话总结设计模式"></a>5. 一句话总结设计模式</h3><table>
<tbody>
<tr>
<th>
分类</th>
<th>
设计模式</th>
<th>
简述</th>
<th>
一句话归纳</th>
<th>
目的</th>
<th>
生活案例</th>
</tr>
<tr>
<td colspan="1" rowspan="4">
创建型设计模式<br>
（简单来说就是用来创建对象的）</td>
<td>
工厂模式（Factory Pattern）</td>
<td>
不同条件下创建不同实例</td>
<td>
产品标准化，生产更高效</td>
<td>
封装创建细节</td>
<td>
实体工厂</td>
</tr>
<tr>
<td>
单例模式（Singleton Pattern）</td>
<td>
保证一个类仅有一个实例，并且提供一个全局访问点</td>
<td>
世上只有一个我</td>
<td>
保证独一无二</td>
<td>
CEO</td>
</tr>
<tr>
<td>
原型模式（Prototype Pattern）</td>
<td>
通过拷贝原型创建新的对象</td>
<td>
拔一根猴毛，吹出千万个</td>
<td>
高效创建对象</td>
<td>
克隆</td>
</tr>
<tr>
<td>
建造者模式（Builder Pattern）</td>
<td>
用来创建复杂的复合对象</td>
<td>
高配中配和低配，想选哪配就哪配</td>
<td>
开放个性配置步骤</td>
<td>
选配</td>
</tr>
<tr>
<td colspan="1" rowspan="7">
结构型设计模式<br>
（关注类和对象的组合）</td>
<td>
代理模式（Proxy Pattern）</td>
<td>
为其他对象提供一种代理以控制对这个对象的访问</td>
<td>
没有资源没时间，得找别人来帮忙</td>
<td>
增强职责</td>
<td>
媒婆</td>
</tr>
<tr>
<td>
外观模式（Facade Pattern）</td>
<td>
对外提供一个统一的接口用来访问子系统</td>
<td>
打开一扇门，通向全世界</td>
<td>
统一访问入口</td>
<td>
前台</td>
</tr>
<tr>
<td>
装饰器模式（Decorator Pattern）</td>
<td>
为对象添加新功能</td>
<td>
他大舅他二舅都是他舅</td>
<td>
灵活扩展、同宗同源</td>
<td>
煎饼</td>
</tr>
<tr>
<td>
享元模式（Flyweight Pattern）</td>
<td>
使用对象池来减少重复对象的创建</td>
<td>
优化资源配置，减少重复浪费</td>
<td>
共享资源池</td>
<td>
全国社保联网</td>
</tr>
<tr>
<td>
组合模式（Composite Pattern）</td>
<td>
将整体与局部（树形结构）进行递归组合，让客户端能够以一种的方式对其进行处理</td>
<td>
人在一起叫团伙，心在一起叫团队</td>
<td>
统一整体和个体</td>
<td>
组织架构树</td>
</tr>
<tr>
<td>
适配器模式（Adapter Pattern）</td>
<td>
将原来不兼容的两个类融合在一起</td>
<td>
万能充电器</td>
<td>
兼容转换</td>
<td>
电源适配</td>
</tr>
<tr>
<td>
桥接模式（Bridge Pattern）</td>
<td>
将两个能够独立变化的部分分离开来</td>
<td>
约定优于配置</td>
<td>
不允许用继承</td>
<td>
桥</td>
</tr>
<tr>
<td colspan="1" rowspan="11">
行为型设计模式<br>
（关注对象之间的通信）</td>
<td>
模板模式（Template Pattern）</td>
<td>
定义一套流程模板，根据需要实现模板中的操作</td>
<td>
流程全部标准化，需要微调请覆盖</td>
<td>
逻辑复用</td>
<td>
把大象装进冰箱</td>
</tr>
<tr>
<td>
策略模式（Strategy Pattern）</td>
<td>
封装不同的算法，算法之间能互相替换</td>
<td>
条条大道通罗马，具体哪条你来定</td>
<td>
把选择权交给用户</td>
<td>
选择支付方式</td>
</tr>
<tr>
<td>
责任链模式（Chain of Responsibility Pattern）</td>
<td>
拦截的类都实现统一接口，每个接收者都包含对下一个接收者的引用。将这些对象连接成一条链，并且沿着这条链传递请求，直到有对象处理它为止。</td>
<td>
各人自扫门前雪，莫管他们瓦上霜</td>
<td>
解耦处理逻辑</td>
<td>
踢皮球</td>
</tr>
<tr>
<td>
迭代器模式（Iterator Pattern）</td>
<td>
提供一种方法顺序访问一个聚合对象中的各个元素</td>
<td>
流水线上坐一天，每个包裹扫一遍</td>
<td>
统一对集合的访问方式</td>
<td>
逐个检票进站</td>
</tr>
<tr>
<td>
命令模式（Command Pattern）</td>
<td>
将请求封装成命令，并记录下来，能够撤销与重做</td>
<td>
运筹帷幄之中，决胜千里之外</td>
<td>
解耦请求和处理</td>
<td>
遥控器</td>
</tr>
<tr>
<td>
状态模式（State Pattern）</td>
<td>
根据不同的状态做出不同的行为</td>
<td>
状态驱动行为，行为决定状态</td>
<td>
绑定状态和行为</td>
<td>
订单状态跟踪</td>
</tr>
<tr>
<td>
备忘录模式（Memento Pattern）</td>
<td>
保存对象的状态，在需要时进行恢复</td>
<td>
失足不成千古恨，想重来时就重来</td>
<td>
备份、后悔机制</td>
<td>
草稿箱</td>
</tr>
<tr>
<td>
中介者模式（Mediator Pattern）</td>
<td>
将对象之间的通信关联关系封装到一个中介类中单独处理，从而使其耦合松散</td>
<td>
联系方式我给你，怎么搞定我不管</td>
<td>
统一管理网状资源</td>
<td>
朋友圈</td>
</tr>
<tr>
<td>
解释器模式（Interpreter Pattern）</td>
<td>
给定一个语言，定义它的语法表示，并定义一个解释器，这个解释器使用该标识来解释语言中的句子</td>
<td>
我想说”方言“，一切解释权都归我</td>
<td>
实现特定语法解析</td>
<td>
摩斯密码</td>
</tr>
<tr>
<td>
观察者模式（Observer Pattern）</td>
<td>
状态发生改变时通知观察者，一对多的关系</td>
<td>
到点就通知我</td>
<td>
解耦观察者与被观察者</td>
<td>
闹钟</td>
</tr>
<tr>
<td>
访问者模式（Visitor Pattern）</td>
<td>
稳定数据结构，定义新的操作行为</td>
<td>
横看成岭侧成峰，远近高低各不同</td>
<td>
解耦数据结构和数据操作</td>
<td>
KPI考核</td>
</tr>
<tr>
<td>
&nbsp;</td>
<td>
委派模式（Delegate Pattern）</td>
<td>
允许对象组合实现与继承相同的代码重用，负责任务的调用和分配</td>
<td>
这个需求很简单，怎么实现我不管</td>
<td>
只对结果负责</td>
<td>
授权委托书</td>
</tr>
</tbody>
</table>


<h3 id="6-总结"><a href="#6-总结" class="headerlink" title="6. 总结"></a>6. 总结</h3><p>设计模式对自己的编程的思想和规范有了很好的引导,以及对软件完成后性能和安全的思考加深，如果有一些错误和建议，欢迎评论区指出。</p>
]]></content>
      <tags>
        <tag>思想</tag>
      </tags>
  </entry>
  <entry>
    <title>简洁好用软件和网址</title>
    <url>/2022/05/09/%E7%AE%80%E6%B4%81%E5%A5%BD%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%92%8C%E7%BD%91%E5%9D%80/</url>
    <content><![CDATA[<blockquote>
<center>弱小和无知不是问题，傲慢才是</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<blockquote>
<p><strong>第一次更新日期：2021-03-13  星期六</strong></p>
<p><strong>第二次更新日期：2021-09-30  星期四</strong></p>
</blockquote>
<h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><h3 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h3><blockquote>
<ol>
<li>Linux操作系统&#x2F;<a href="http://www.xitongzhijia.net/linux/">点击跳转Linux</a></li>
<li>UNIX操作系统&#x2F;<a href="https://www.jb51.net/softs/list516_1.html/">点击跳转UNIX</a></li>
<li>Windows操作系统&#x2F;<a href="https://windows.dqsspx.top/">点击跳转Windows</a></li>
<li>Mac操作系统&#x2F; <a href="https://www.apple.com.cn/cn/search/Mac+OS+X+10.8+Mountain+Lion/">点击跳转Mac</a></li>
</ol>
</blockquote>
<h3 id="系统软件"><a href="#系统软件" class="headerlink" title="系统软件"></a>系统软件</h3><blockquote>
<ol>
<li>(卸载)Revo Uninstaller&#x2F;<a href="https://revouninstaller.pro/">点击跳转Revo Uninstaller</a></li>
<li>(压缩)7-zip&#x2F;<a href="https://www.7-zip.org/">点击跳转7-zip</a></li>
<li>(压缩)Bandzip&#x2F;<a href="http://www.bandisoft.com/">点击跳转bandzip</a></li>
<li>（分类）Rolan&#x2F;<a href="https://getrolan.com/">点击跳转rolan</a></li>
<li>分区助手&#x2F;<a href="https://www.disktool.cn/">点击跳转分区助手</a></li>
<li>(快捷键)CheatSheet<a href="https://cheatsheet-mac.en.softonic.com/mac">点击跳转CheatSheet</a></li>
<li>(下载器)IDM&#x2F;<a href="http://www.internetdownloadmanager.com/">点击跳转IDM</a></li>
<li>VM虚拟软件机&#x2F;<a href="https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html">点击跳转虚拟软件机</a></li>
<li>阿里云Linux镜像&#x2F;<a href="http://mirrors.aliyun.com/centos/">点击跳转阿里云Linux镜像</a></li>
</ol>
</blockquote>
<h3 id="网络软件"><a href="#网络软件" class="headerlink" title="网络软件"></a>网络软件</h3><blockquote>
<ol>
<li>Chrome&#x2F;<a href="https://www.google.cn/chrome/">点击跳转chrome</a></li>
<li>火狐&#x2F;<a href="http://www.firefox.com.cn/">点击跳转火狐</a></li>
<li>WiFi&#x2F; <a href="https://jingyan.baidu.com/article/5d368d1e28e2697f60c0578c.html">点击跳转WIFI</a></li>
<li>Xshell&#x2F;<a href="https://xshell.en.softonic.com/">点击跳转Xshell</a></li>
</ol>
</blockquote>
<h3 id="安全软件"><a href="#安全软件" class="headerlink" title="安全软件"></a>安全软件</h3><blockquote>
<ol>
<li>火绒安全&#x2F;<a href="https://www.huorong.cn/">点击跳转火绒</a></li>
</ol>
</blockquote>
<h3 id="图像编辑"><a href="#图像编辑" class="headerlink" title="图像编辑"></a>图像编辑</h3><blockquote>
<ol>
<li>PhotoShop&#x2F;<a href="http://p2.czjswl.cn/index.php?m=goods&a=details&content_id=9#">点击跳转PhotoShop</a></li>
<li>FSCapturePortable&#x2F;<a href="https://faststone-capture.en.softonic.com/">点击跳转FSCapturePortable</a></li>
<li>格式工厂&#x2F;<a href="http://www.pcgeshi.com/">点击跳转格式工厂</a></li>
<li>(水印)Inpaint&#x2F;<a href="https://inpaint.updatestar.com/">点击跳转Inpaint</a></li>
<li>(识别)天若OCR&#x2F;<a href="https://tianruoocr.cn/">点击跳转天若OCR</a></li>
<li>(前端）Axure RP<a href="https://www.axure.com/download">点击跳转Axure RP</a></li>
<li>Gif录制工具&#x2F;<a href="https://www.screentogif.com/">点击跳转Gif录制工具</a></li>
</ol>
</blockquote>
<h3 id="社交软件"><a href="#社交软件" class="headerlink" title="社交软件"></a>社交软件</h3><blockquote>
<ol>
<li>Tim &#x2F;<a href="https://office.qq.com/">点击跳转Tim</a></li>
<li>微信&#x2F;<a href="https://weixin.qq.com/">点击跳转微信</a></li>
</ol>
</blockquote>
<h3 id="音乐视频"><a href="#音乐视频" class="headerlink" title="音乐视频"></a>音乐视频</h3><blockquote>
<ol>
<li>Listen1 &#x2F;<a href="http://listen1.github.io/listen1/">点击跳转Listen1</a></li>
<li>Potplayer&#x2F;<a href="https://potplayer.en.softonic.com/">点击跳转Potplayer</a></li>
<li>QQ影音&#x2F;<a href="https://player.qq.com/">点击跳转QQ影音</a></li>
<li>EV录屏&#x2F;<a href="https://www.higeshi.cn/v2-lupingdstongyong?bd_vid=7425008542762323571">点击跳转EV录屏</a></li>
<li>网易云&#x2F;<a href="http://www.51xiazai.cn/soft/110772.htm">点击跳转网易云</a></li>
<li>央视影音&#x2F;<a href="https://app.cctv.com/appkhdxz/more/index.shtml#page5">点击跳转央视影音</a></li>
</ol>
</blockquote>
<h3 id="办公软件"><a href="#办公软件" class="headerlink" title="办公软件"></a>办公软件</h3><blockquote>
<ol>
<li>Office&#x2F;<a href="https://www.microsoft.com/zh-cn/microsoft-365/products-apps-services">点击跳转Office</a></li>
<li>幕布&#x2F;<a href="https://mubu.com/">点击跳转幕布</a></li>
<li>Note&#x2F; <a href="https://www.yinxiang.com/pc/?utm_source=b1&utm_medium=b1&utm_term=horka">点击跳转Note</a></li>
<li>Typora&#x2F;<a href="https://www.typora.io/">点击跳转Typora</a></li>
<li>Notepad++&#x2F;<a href="https://notepad-plus.en.softonic.com/">点击跳转Notepad++</a></li>
</ol>
</blockquote>
<h3 id="编程软件"><a href="#编程软件" class="headerlink" title="编程软件"></a>编程软件</h3><blockquote>
<ol>
<li>微信开发者工具&#x2F;<a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html">点击跳转微信开发者工具</a></li>
<li>Visual Studio Code&#x2F;<a href="https://code.visualstudio.com/Download">点击跳转Visual Studio Code</a></li>
<li>Visual studio2017&#x2F;<a href="http://autocad.hrbdbwlkj.top/pc/31.html">点击跳转Visual studio2017</a></li>
<li>Sublime_text&#x2F;<a href="http://www.sublimetext.com/download">点击跳转Sublime_text</a></li>
<li>Mysql&#x2F;<a href="https://dev.mysql.com/downloads/mysql/">点击跳转Mysql</a></li>
<li>Navicat for MySQL&#x2F;<a href="navicat.com/en/products">点击跳转Navicat for MySQLl</a></li>
<li>Dbeaver&#x2F;<a href="https://dbeaver.io/download/">点击跳转Dbeaver</a></li>
<li>SQL Server&#x2F;<a href="https://www.microsoft.com/zh-cn/sql-server/sql-server-downloads">点击跳转SQL Server</a></li>
<li>Jdk&#x2F; <a href="https://www.oracle.com/java/technologies/javase-downloads.html">点击跳转Jdk</a></li>
<li>IBM.Rational.Rose &#x2F;<a href="https://www.cnblogs.com/dufu-csdn/p/dufu_2.html">点击跳转IBM.Rational.Rose</a></li>
<li>Eclipse &#x2F;<a href="https://www.eclipse.org/downloads/">点击跳转Eclipse</a></li>
<li>IDEA &#x2F;<a href="https://www.jetbrains.com/products/#type=ide">点击跳转IDEA</a></li>
<li>HBuilder&#x2F;<a href="https://www.dcloud.io/hbuilderx.html">点击跳转HBuilder</a></li>
<li>文本编辑器typora&#x2F;<a href="https://www.typora.io/">点击跳转typora</a></li>
<li>Node.js环境&#x2F; <a href="https://nodejs.org/en/">点击跳转Node.js</a></li>
<li>git&#x2F;<a href="https://git-scm.com/downloads">点击跳转git</a></li>
<li>Redis-x64-3.0.504&#x2F;<a href="https://github.com/MicrosoftArchive/redis/releases">点击跳转Redis-x64-3.0.504</a></li>
<li>kai Linux&#x2F;[点击跳转kai Linux] (<a href="https://www.kali.org/docs/">https://www.kali.org/docs/</a>)</li>
<li>Tortoisesvn&#x2F;<a href="https://tortoisesvn.net/">点击跳转Tortoisesvn</a></li>
<li>Teamcity&#x2F;<a href="https://www.jetbrains.com/teamcity/">点击跳转Teamcity</a></li>
</ol>
</blockquote>
<h3 id="游戏软件"><a href="#游戏软件" class="headerlink" title="游戏软件"></a>游戏软件</h3><blockquote>
<ol>
<li>Steam&#x2F;<a href="http://lewan.baidu.com/lewanold?gameName=steam&idfrom=5018">点击跳转steam</a></li>
<li>Wegame&#x2F;<a href="https://www.wegame.com.cn/">点击跳转wegame</a></li>
</ol>
</blockquote>
<h3 id="其他软件"><a href="#其他软件" class="headerlink" title="其他软件"></a>其他软件</h3><blockquote>
<ol>
<li>(插件)侧边翻译&#x2F;<a href="https://www.jb51.net/softs/754671.html">点击跳转侧边翻译</a></li>
<li>(插件）油猴&#x2F;<a href="https://www.tampermonkey.net/">点击跳转油猴</a></li>
<li>(插件) Vs code插件&#x2F;open in browser &#x2F; Chinese &#x2F; Close HTML&#x2F;XML tag&#x2F;  tabnine&#x2F;Live Server</li>
<li>(插件网站)&#x2F;<a href="https://www.cxyhub.com/">点击跳转插件网址</a></li>
<li>greasyfork&#x2F;<a href="https://greasyfork.org/zh-CN/scripts">点击跳转greasyfork</a></li>
</ol>
</blockquote>
<h2 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h2><h3 id="编程学习"><a href="#编程学习" class="headerlink" title="编程学习"></a>编程学习</h3><blockquote>
<ol>
<li>(java)KuangStudy&#x2F;<a href="https://www.kuangstudy.com/">点击跳转KuangStudy</a></li>
<li>(all)Gitee&#x2F;<a href="https://gitee.com/">点击跳转Gitee</a></li>
<li>(all)GitHub&#x2F;<a href="https://www.zhihu.com/question/20070065">点击跳转如何使用GitHub</a>&#x2F;<a href="https://github.com/gitbucket">点击跳转gitbucket源码</a>&#x2F;<a href="https://github.com/">点击跳转Github</a>&#x2F;<a href="http://www.ruanyifeng.com/blog/2012/07/git.html">点击跳转Git分支管理策略</a>&#x2F;<a href="https://blog.csdn.net/jamesmf/article/details/17483787">点击跳转成功的 Git 分支模型</a>&#x2F;<a href="http://maven.apache.org/">点击跳转学习Git分支</a></li>
<li>(all)51cto&#x2F;<a href="https://www.51cto.com/">点击跳转51cto</a></li>
<li>(all)W3school&#x2F;<a href="https://www.w3school.com.cn/w3c/w3c_china.asp">点击跳转W3school</a></li>
<li>(all)W3cscool&#x2F;<a href="http://home.ustc.edu.cn/~xie1993/">点击跳转w3cschool</a></li>
<li>(all)菜鸟&#x2F;<a href="https://www.runoob.com/">点击跳转菜鸟</a></li>
<li>(all视频)B站&#x2F;<a href="https://www.bilibili.com/">点击跳转B站</a></li>
<li>(all)尚硅谷&#x2F;<a href="http://www.atguigu.com/">点击跳转尚硅谷</a></li>
<li>(问答题目)问答库&#x2F;<a href="https://www.asklib.com/">点击跳转问答库</a></li>
<li>(TIBOE编程语言排名)&#x2F;<a href="https://www.tiobe.com/tiobe-index/">点击跳转TIBOE编程语言排名</a></li>
<li>(开源中国)Oschina&#x2F;<a href="https://www.oschina.net/">点击跳转oschina</a></li>
<li>阿里巴巴开发手册&#x2F;<a href="https://kangroo.gitee.io/ajcg/#/?id=%e5%89%8d%e8%a8%80">点击跳转阿里巴巴开发手册</a></li>
<li>百度文档试用&#x2F;<a href="https://eduai.baidu.com/">点击跳转百度文档试用</a></li>
<li>软件测试(慕测)平台&#x2F;<a href="http://10.22.108.106/login2">点击跳转软件测试</a></li>
<li>网易公开课&#x2F;<a href="https://open.163.com/">点击跳转网易公开课</a></li>
<li>游戏设计模式&#x2F;<a href="http://gameprogrammingpatterns.com/">点击跳转游戏设计模式(英文版)</a>&#x2F; <a href="https://gpp.tkchu.me/">点击跳转游戏设计模式(中文版)</a></li>
<li>魔乐科技&#x2F;<a href="https://www.mldn.cn/article">点击跳转魔乐科技</a></li>
<li>oeasy&#x2F;<a href="http://oeasy.org/">点击跳转oeasy</a></li>
<li>代码不规范代表&#x2F;<a href="https://github.com/trekhleb/state-of-the-art-shitcode">点击跳转代码不规范代表</a></li>
<li>( Linux学习）Idev365&#x2F;<a href="https://next.idev365.com/">点击跳转Idev365</a></li>
<li>阿帕奇&#x2F;<a href="https://httpd.apache.org/">点击跳转阿帕奇</a></li>
<li>Scrapy入门教程&#x2F;<a href="https://scrapy-chs.readthedocs.io/zh_CN/1.0/intro/tutorial.html">点击跳转Scrapy入门教程</a>&#x2F;<a href="https://wiki.jikexueyuan.com/project/scrapy/scrapy-tutorial.html">点击跳转Scrapy 入门教程</a>&#x2F;<a href="https://doc.scrapy.org/en/latest/intro/overview.html">点击跳转英文版</a></li>
<li>Python文件读写&#x2F;<a href="https://www.yiibai.com/python/python_files_io.html">点击跳转Python文件读写</a></li>
<li>Python快速入门 &#x2F;<a href="https://www.yiibai.com/python/python_quick_guide.html">点击跳转Python快速入门</a></li>
<li>Python结巴分词&#x2F;<a href="https://www.cnblogs.com/LgyBean/p/6263008.html">点击跳转Python结巴分词</a></li>
<li>Python抓股票历史记录&#x2F;<a href="https://blog.csdn.net/qq_25936689/article/details/53217221">点击跳转Python抓股票历史记录</a></li>
<li>安卓在线文档&#x2F;<a href="http://developer.android.com/reference/packages.html">点击跳转安卓在线文档</a></li>
<li>网易有数&#x2F;<a href="https://youdata.163.com/index/manual/o/4Analyze_data_and_visualize_it/59showme.html">点击跳转网易有数</a></li>
<li>大数据学习路线&#x2F;<a href="https://blog.csdn.net/jianghero/article/details/79141787">点击跳转大数据学习路线</a></li>
<li>Apache kafka&#x2F;<a href="https://www.orchome.com/kafka/index">点击跳转Apache kafka</a></li>
<li>scala-lang&#x2F;<a href="https://www.scala-lang.org/api/current/">点击跳转scala-lang</a></li>
<li>王家林免费课&#x2F;<a href="https://blog.51cto.com/wilsonking/1765124">点击跳转王家林免费课</a></li>
<li>极客学院&#x2F;<a href="https://www.jikexueyuan.com/course/javascript/">点击跳转极客学院</a></li>
<li>Kafka Streams&#x2F;<a href="https://www.cnblogs.com/devos/p/5616086.html">点击跳转Kafka Streams</a></li>
<li>HA集群安装&#x2F;<a href="https://www.cnblogs.com/mengyao/p/5692467.html">点击跳转HA集群安装</a></li>
<li>Apache Storm&#x2F;<a href="http://ifeve.com/storm-fault-tolerance/">点击跳转Apache Storm</a></li>
<li>淘宝开放平台 - 文档中心&#x2F;<a href="http://open.taobao.com/docs/doc.htm?spm=a219a.7629140.0.0.W9hUpX&treeId=5&articleId=102465&docType=1">点击跳转淘宝开放平台 - 文档中心</a></li>
<li>makefile讲解&#x2F;<a href="https://www.cnblogs.com/mydomain/archive/2011/08/12/2136087.html">点击跳转makefile</a>&#x2F;<a href="https://blog.csdn.net/liang13664759/article/details/1771246">点击跳转makefile</a></li>
<li>Vim简明教程&#x2F;<a href="https://blog.csdn.net/niushuai666/article/details/7275406">点击跳转Vim简明教程</a></li>
<li>Linux学习&#x2F;<a href="http://www.study-area.org/menu2.htm">点击跳转Linux学习</a></li>
<li>Linux中find常见用法示例&#x2F;<a href="https://www.cnblogs.com/wanqieddy/archive/2011/06/09/2076785.html">点击跳转Linux中find常见用法示例</a></li>
<li>Awk命令&#x2F;<a href="https://www.cnblogs.com/chengmo/archive/2013/01/17/2865479.html">点击跳转Awk命令</a></li>
<li>Sed命令&#x2F;<a href="https://www.cnblogs.com/leaftime/p/3270257.html">点击跳转Sed命令</a></li>
<li>Linux_ServicesManagement_RHEL7&#x2F;<a href="https://blog.csdn.net/jmilk/article/details/49780157">点击跳转Linux_ServicesManagement_RHEL7</a></li>
<li>Mac OS X内核编程&#x2F;<a href="http://www.51qudong.net/155.html">点击跳转Mac OS X内核编程</a></li>
<li>关于批处理重定向&#x2F;<a href="https://www.cnblogs.com/ini_always/archive/2011/09/15/2177913.html">点击跳转关于批处理重定向</a></li>
<li>Bat命令学习&#x2F;<a href="https://www.cnblogs.com/SunShineYPH/archive/2011/12/13/2285570.html">点击跳转Bat命令</a></li>
<li>深入理解计算机系统&#x2F;<a href="https://www.cnblogs.com/lanxuezaipiao/p/4141351.html">点击跳转深入理解计算机系统</a></li>
<li>操作系统概论&#x2F;<a href="https://www.docin.com/p-634611005.html?qq-pf-to=pcqq.c2c">点击跳转操作系统概论</a></li>
<li>爱课程&#x2F;<a href="http://www.icourses.cn/home/?resId=74921&courseId=2583&firstShowFlag=1">点击跳转爱课程</a></li>
<li>Oracel技术&#x2F;<a href="https://www.oracle.com/java/technologies/">点击跳转Oracel技术</a></li>
<li>B&#x2F;S、和C&#x2F;S模式的特点&#x2F;<a href="http://blog.sina.com.cn/s/blog_6cfc341d0101704e.html">点击跳转B&#x2F;S、和C&#x2F;S模式的特点</a></li>
<li>Maven&#x2F;<a href="https://www.iteye.com/blog/stamen-2030552">点击跳转Maven冲突</a>&#x2F;<a href="https://search.maven.org/">中央仓库</a>&#x2F;<a href="https://www.cnblogs.com/adolfmc/archive/2012/07/31/2616908.html">maven常用命令介绍</a>&#x2F;<a href="https://developer.aliyun.com/mvn/guide">点击跳转阿里云Maven中央仓库</a>&#x2F;<a href="https://blog.csdn.net/sunzhenhua0608/article/details/32938533">点击跳转pom.xml文件详解</a>&#x2F;<a href="http://maven.apache.org/"> 点击跳转Apache maven</a></li>
<li>Maven进阶&#x2F;<a href="https://blog.csdn.net/wanghantong/article/details/9375013">点击跳转maven详解之生命周期与插件</a>&#x2F;<a href="https://blog.csdn.net/tounaobun/article/details/8959682">点击跳转Maven部署构件至远程仓库</a>&#x2F;<a href="https://www.cnblogs.com/tenghoo/p/maven_life_cycle.html">点击跳转Maven的生命周期</a>&#x2F;<a href="https://www.cnblogs.com/a-ray-of-sunshine/p/5011111.html">点击跳转Maven的几个重要配置文件</a>&#x2F;<a href="https://blog.csdn.net/silver_sail/article/details/41210667">Maven 打jar包配置</a></li>
<li>JAVA EXAMPLE PROGRAMS&#x2F;<a href="http://java2novice.com/java_string_examples/">点击跳转JAVA EXAMPLE PROGRAMS</a></li>
<li>Mockito 简明教程&#x2F;<a href="https://developer.aliyun.com/article/47318">点击跳转Mockito 简明教程</a></li>
<li>推酷&#x2F;<a href="https://www.tuicool.com/login">点击跳转推酷</a></li>
<li>IBM Java&#x2F;<a href="https://developer.ibm.com/languages/java/">点击跳转IBM Java</a></li>
<li>Hadoop&#x2F;<a href="http://hadoop.apache.org/docs/r2.7.6/hadoop-project-dist/hadoop-common/SingleCluster.html">点击跳转Hadoop</a></li>
<li>Jdk在线文档&#x2F;<a href="https://tool.oschina.net/apidocs/apidoc?api=jdk-zh">点击跳转Jdk在线文档</a></li>
<li>openanolis&#x2F;<a href="https://openanolis.cn/?spm=a2c6h.12873639.J_5404914170.4.4a1d7bb7OUpeLB">点击跳转openanolis</a></li>
<li>多编程语言基础学习&#x2F;<a href="http://www.java2s.com/">点击跳转多编程语言基础学习</a></li>
<li>开源博客&#x2F;<a href="https://www.oschina.net/blog">点击跳转开源博客</a></li>
<li>Spring Boot2&#x2F;<a href="https://www.yuque.com/atguigu/springboot/lcfeme">点击跳转Spring Boot2</a></li>
<li>C++ reference&#x2F;<a href="https://en.cppreference.com/w/">点击跳转C++ reference</a></li>
<li>StackOverflow&#x2F;<a href="https://stackoverflow.com/">点击跳转StackOverflow</a></li>
<li>Swagger&#x2F;<a href="https://swagger.io/">点击跳转Swagger</a></li>
<li>ITeye论坛&#x2F;<a href="https://www.iteye.com/forums">点击跳转ITeye论坛</a></li>
<li>Java POI Excel&#x2F;<a href="https://www.cnblogs.com/zqmingok/archive/2010/04/16/1713480.html">点击跳转Java POI Excel( pio:纯java操作excel的api )</a></li>
<li>DaniWeb&#x2F;<a href="https://www.daniweb.com/software-development/2">点击跳转DaniWeb</a></li>
<li>开源中国&#x2F;<a href="https://www.oschina.net/">点击跳转开源中国</a></li>
<li>InfoQ&#x2F;<a href="https://www.infoq.cn/">点击跳转InfoQ</a></li>
<li>stackoom&#x2F;<a href="https://stackoom.com/">点击跳转stackoom</a></li>
<li>ios.cpp&#x2F;<a href="https://opensource.apple.com/source/libcpp/libcpp-31/src/ios.cpp.auto.html">点击跳转ios.cpp</a></li>
<li>ewant&#x2F;<a href="https://www.ewant.org/">点击跳转ewant</a></li>
<li>优课联盟&#x2F;<a href="http://www.uooc.net.cn/league/union">点击跳转优课联盟</a></li>
<li>程序员导航站&#x2F;<a href="https://iiter.cn/">点击跳转程序员导航</a></li>
<li>Java工具包hutool&#x2F;<a href="https://www.hutool.cn/">点击跳转Java工具包hutool</a></li>
<li>开发者在线工具&#x2F;<a href="https://tool.lu/c/developer/">点击跳转开发者在线工具</a></li>
<li>Pmd5破解&#x2F;<a href="https://pmd5.com/">点击跳转Pmd5</a></li>
<li>编程导航&#x2F;<a href="https://www.code-nav.cn/">点击跳转编程导航</a></li>
<li>AI导航网&#x2F;<a href="https://www.ainav.cn/">点击跳转AI导航网</a></li>
<li>创造师&#x2F;<a href="http://chuangzaoshi.com/code">点击跳转创造师</a></li>
<li>github入门开源项目&#x2F;<a href="https://hellogithub.com/">点击跳转github开源项目</a></li>
<li>密码工具箱&#x2F;<a href="http://tools.jb51.net/password">点击跳转密码工具箱</a></li>
<li>API测试eolinker&#x2F;<a href="https://www.eolinker.com/?status=l%E2%80%A6">点击跳转API测试eolinker</a></li>
<li>GO酷壳&#x2F;<a href="https://coolshell.cn/">GO酷壳</a></li>
<li>Java语言Gecco&#x2F;<a href="http://www.geccocrawler.com/tag/sysc/">点击跳转Gecco</a></li>
<li>学习SpringBoot&#x2F;<a href="http://www.spring4all.com/">点击跳转学习Spring Boot</a>&#x2F;<a href="http://www.ityouknow.com/">点击跳转学习Spring Boot</a>&#x2F;<a href="https://blog.didispace.com/">点击跳转学习Spring Boot</a></li>
<li>学习大数据&#x2F;<a href="http://bigdata.evget.com/">点击跳转学习大数据慧都</a>&#x2F;<a href="http://lxw1234.com/">点击跳转学习大数据</a>&#x2F;<a href="https://www.iteblog.com/">点击跳转学习大数据</a>&#x2F;<a href="http://www.tianshouzhi.com/">点击跳转学习大数据</a></li>
<li>菜鸟工具&#x2F;<a href="https://c.runoob.com/">点击跳转菜鸟工具</a></li>
</ol>
</blockquote>
<h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><blockquote>
<ol>
<li>Oracle系统表&#x2F;<a href="https://www.cnblogs.com/mq0036/p/4157267.html">点击跳转Oracle系统表</a></li>
<li>海量数据进行分库分表及其实践&#x2F;<a href="https://blog.csdn.net/wusd1256/article/details/79183970">点击跳转海量数据进行分库分表及其实践</a></li>
<li>Mysql8.0.17压缩包安装——超详细简单教程&#x2F;<a href="https://blog.csdn.net/qq_38264999/article/details/98858903">点击跳转Mysql8.0.17压缩包安装——超详细简单教程</a></li>
<li>shardingsphere-JDBC&#x2F;<a href="https://shardingsphere.apache.org/document/current/en/overview/">点击跳转shardingsphere-JDBC</a></li>
<li>MySQL引擎&#x2F;<a href="https://www.cnblogs.com/sopc-mc/archive/2011/11/01/2232212.html">点击跳转MySQL引擎</a></li>
<li>Redis&#x2F;<a href="https://juejin.cn/book/6844733724618129422/section/6844733724697985038#heading-1">点击跳转Redis</a>&#x2F;<a href="http://doc.redisfans.com/index.html">Redis命令参考</a></li>
<li>Mybatis Blog&#x2F;<a href="https://blog.mybatis.org/">点击跳转Mybatis Blog</a></li>
</ol>
</blockquote>
<h3 id="模板网站"><a href="#模板网站" class="headerlink" title="模板网站"></a>模板网站</h3><blockquote>
<ol>
<li>学之思开源考试系统&#x2F;<a href="https://gitee.com/mindskip/xzs-mysql?_from=gitee_search">点击跳转学之思开源考试系统</a></li>
<li>Vhr&#x2F;<a href="https://github.com/lenve/vhr/blob/master/README_zh.md">点击跳转Vhr</a></li>
<li>翁天信&#x2F;<a href="">点击跳转翁天信</a></li>
<li>小游网&#x2F;<a href="https://xiaoyou66.com/">点击跳转小游网</a></li>
<li>Axton&#x2F;<a href="https://axton.cc/">点击跳转Axton</a></li>
<li>SHIQI博客网站&#x2F;<a href="http://ursocute.github.io/">点击跳转SHIQI</a></li>
<li>reddit&#x2F;<a href="https://www.oschina.net/p/reddit">点击跳转reddit</a></li>
<li>vue音乐&#x2F;<a href="https://gitee.com/xyzer009/music-website">点击跳转vue音乐</a></li>
<li>el-admin&#x2F;<a href="https://el-admin.xin/login?redirect=/dashboard">点击跳转el-admin</a></li>
<li>Ant&#x2F;<a href="https://preview.pro.ant.design/dashboard/analysis">点击跳转Ant</a></li>
<li>Rollin博客&#x2F;<a href="https://realglow.cn/">点击跳转Rollin博客</a>&#x2F;<a href="https://github.com/chaochaoxiaoshu?tab=repositories">点击跳转源码</a></li>
<li>（前端博客）友人C博客&#x2F;<a href="https://www.ihewro.com/">点击跳转友人C博客</a></li>
<li>APP源码&#x2F;<a href="https://mp.weixin.qq.com/s/YY8v4roiEnG4QIei6niYdA">点击跳转APP源码</a></li>
<li>狗种类识别&#x2F;<a href="https://blog.csdn.net/u012319493/article/details/78826960">点击跳转狗种类识别</a></li>
<li>开源博客&#x2F;<a href="https://gitee.com/biezhi/tale#/biezhi/tale/blob/develop/LICENSE">点击跳转开源博客</a></li>
<li>（模板）模板之家&#x2F;<a href="http://www.cssmoban.com/">点击跳转模板之家</a></li>
<li>源码之家&#x2F;<a href="https://www.mycodes.net/">点击跳转源码之家</a></li>
<li>JavaWeb后端开发&#x2F;<a href="http://www.javaweb.vip/register">点击跳转JavaWeb后端开发</a></li>
<li>RuoYi&#x2F;<a href="https://gitee.com/y_project/RuoYi-Vue/tree/master/ruoyi-ui">点击跳转RuoYi</a></li>
<li>麋鹿鲁哟的博客&#x2F;<a href="https://www.cnblogs.com/miluluyo/">点击跳转麋鹿鲁哟的博客</a></li>
<li>Maxwell的博客&#x2F;<a href="https://imzxh.cn/">点击跳转Maxwell的博客</a></li>
<li>做棵大树的博客&#x2F;<a href="https://beatree.cn/">点击跳转做棵大树的博客</a></li>
<li>字节智造的博客&#x2F;<a href="https://www.zsxcool.com/">点击跳转字节智造的博客</a></li>
<li>四个空格的博客&#x2F;<a href="https://www.4spaces.org/">点击跳转四个空格的博客</a></li>
<li>程序猿甜品店的博客&#x2F;<a href="https://www.jefsky.com/">点击跳转程序猿甜品店的博客</a></li>
<li>汝者非鱼的博客&#x2F;<a href="https://rzfyu.com/">点击跳转汝者非鱼的博客</a></li>
<li>marsden&#x2F;<a href="https://www.marsden.cn/">点击跳转marsden</a></li>
<li>源码之家&#x2F;<a href="http://down.chinaz.com/">点击跳转源码之家</a></li>
</ol>
</blockquote>
<h3 id="前端UI"><a href="#前端UI" class="headerlink" title="前端UI"></a>前端UI</h3><blockquote>
<ol>
<li>(前端)Layui&#x2F;<a href="https://www.layui.com/doc/">点击跳转Layui</a></li>
<li>(前端框架)Bootstrap&#x2F;<a href="https://www.bootcss.com/">点击跳转Bootstrap</a></li>
<li>react-router&#x2F;<a href="https://serializedowen.com/docs/react-router-dom/%E5%90%91%E5%AF%BC/%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B">点击跳转react-router</a></li>
<li>(vue框架衍生）NuxtJS&#x2F;<a href="https://zh.nuxtjs.org/docs/2.x/get-started/upgrading/">点击跳转Nuxt</a></li>
<li>font awesome图标库&#x2F;<a href="http://www.fontawesome.com.cn/faicons/">点击跳转font awesome图标库</a></li>
<li>阿里巴巴矢量图标库&#x2F;<a href="https://www.iconfont.cn/">点击跳转阿里巴巴矢量图标库</a></li>
<li>(疫情接口)swagger&#x2F;<a href="http://121.199.29.84:8001/swagger-ui.html#/">点击跳转swagger</a></li>
<li>(css3渐变演示)Grabient&#x2F;<a href="https://www.grabient.com/">点击跳转Grabient</a></li>
<li>（基于Vue前端）Element&#x2F;<a href="https://element.eleme.cn/#/zh-CN">点击跳转Element</a></li>
<li>(前端模板和组件)飞冰&#x2F;<a href="https://ice.work/">点击跳转飞冰</a></li>
<li>（前端框架）vue&#x2F;<a href="https://cn.vuejs.org/">点击跳转vue</a></li>
<li>（前端框架）react&#x2F;<a href="https://react.docschina.org/">点击跳转react</a></li>
<li>(css预处理语言less)less&#x2F;<a href="http://lesscss.cn/">点击跳转less</a></li>
<li>cavas动画&#x2F;<a href="https://www.html5tricks.com/tag/html5-canvas/">点击跳转canvas动画</a></li>
<li>jQueryAPI查询&#x2F;<a href="https://jquery.cuishifeng.cn/">点击跳转JQueryAPI查询</a></li>
<li>Ant Design of React&#x2F;<a href="https://ant.design/docs/react/introduce-cn">点击跳转Ant Design of React</a></li>
<li>（前端）Bootstrap可视化布局&#x2F;<a href="https://www.bootcss.com/p/layoutit/">点击跳转Bootstrap可视化布局</a></li>
<li>Angular API&#x2F;<a href="https://angular.cn/api">点击跳转Angular API</a></li>
<li>Highcharts画js图表&#x2F;<a href="http://api.highcharts.com/highcharts">点击跳转Highcharts画js图表</a></li>
<li>正则表达式在线测试&#x2F;<a href="http://tools.jb51.net/tools/regex.asp">点击跳转正则表达式在线测试</a></li>
<li>前端小功能&#x2F;<a href="https://www.jq22.com/daima">点击跳转前端小功能</a></li>
<li>Xournal++&#x2F;<a href="https://xournalpp.github.io/">点击跳转Xournal++</a></li>
<li>H5-Dooring&#x2F;<a href="https://www.oschina.net/p/h5-dooring">点击跳转H5-Dooring</a></li>
<li>cssgridgenerator &#x2F; <a href="https://gitee.com/loock/cssgridgenerator">点击跳转cssgridgenerator</a>            </li>
<li>CSS Layout&#x2F;<a href="https://csslayout.io/">点击跳转CSS Layout</a></li>
<li>Flexbox布局&#x2F;<a href="https://loading.io/flexbox">点击跳转Flexbox布局</a></li>
<li>Layoutit布局&#x2F;<a href="https://grid.layoutit.com/">点击跳转layoutit</a></li>
<li>Ikonate&#x2F;<a href="https://ikonate.com/">点击跳转Ikonate</a></li>
<li>iconstore&#x2F;<a href="https://iconstore.co/">点击跳转iconstore</a></li>
<li>icoon&#x2F;<a href="https://icooon-mono.com/">点击跳转icoon</a></li>
<li>iconfinder&#x2F;<a href="https://www.iconfinder.com/">点击跳转iconfinder</a></li>
<li>设计seeseed&#x2F;<a href="https://www.seeseed.com/">点击跳转设计seeseed</a></li>
</ol>
</blockquote>
<h3 id="面试工作"><a href="#面试工作" class="headerlink" title="面试工作"></a>面试工作</h3><blockquote>
<ol>
<li>面试非基础问题&#x2F;<a href="https://blog.csdn.net/weixin_41462230/article/details/79006818">点击跳转面试非基础问题</a></li>
<li>(面试)力扣&#x2F;<a href="https://leetcode-cn.com/">点击跳转力扣</a></li>
<li>(找工作)Boss直聘&#x2F;<a href="https://www.zhipin.com/?sid=sem_pz_bdpc_dasou_title">点击跳转Boss直聘</a></li>
<li>(找工作)牛客求职网&#x2F;<a href="https://www.nowcoder.com/recommend">点击跳转牛客求职网</a></li>
<li>(找工作)牛客讨论区&#x2F;<a href="https://www.nowcoder.com/discuss">点击跳转牛客讨论区</a></li>
<li>(找工作)牛客校招日程&#x2F;<a href="https://www.nowcoder.com/school/schedule">点击跳转牛客校招日程</a></li>
<li>(找工作)名企笔试真题&#x2F;<a href="https://www.nowcoder.com/contestRoom">点击跳转名企笔试真题</a></li>
<li>(找工作)校招笔试真题&#x2F;<a href="https://www.nowcoder.com/">点击跳转校招笔试真题</a></li>
<li>Current Online Acmers&#x2F;<a href="http://acm.hdu.edu.cn/onlineuser.php">点击跳转Current Online Acmers</a></li>
<li>经典必刷&#x2F;<a href="https://www.nowcoder.com/ta/classic-code?query=&asc=true&order=&page=1">经典必刷</a></li>
<li>ACM在线编程&#x2F;<a href="https://www.nowcoder.com/ta/acm-training">点击跳转ACM在线编程</a></li>
<li>求职题库&#x2F;<a href="https://www.nowcoder.com/contestRoom">点击跳转求职题库</a></li>
<li>CSDN工作求职&#x2F;<a href="https://bbs.csdn.net/forums/vue?category=3">点击跳转CSDN工作求职</a></li>
<li>算法学习&#x2F;<a href="https://www.cs.usfca.edu/~galles/visualization/Algorithms.html">点击跳转算法学习</a></li>
<li>前程无忧&#x2F;<a href="https://search.51job.com/list/190200,000000,0000,00,9,99,java,2,1.html?lang=c&postchannel=0000&workyear=99&cotype=99&degreefrom=99&jobterm=99&companysize=99&ord_field=0&dibiaoid=0&line=&welfare=">点击跳转前程无忧</a></li>
</ol>
</blockquote>
<h3 id="网页技能"><a href="#网页技能" class="headerlink" title="网页技能"></a>网页技能</h3><blockquote>
<ol>
<li>查看Github源码，将github.com修改为github1s.com</li>
<li>(查询历史价格)+vvv.com</li>
<li>前端设计建议（悬浮立体）</li>
<li>提高GitHub速度&#x2F;<a href="https://blog.csdn.net/codinglover5/article/details/107826097?utm_medium=distribute.pc_feed_404.none-task-blog-2~default~BlogCommendFromBaidu~default-1.control404&depth_1-utm_source=distribute.pc_feed_404.none-task-blog-2~default~BlogCommendFromBaidu~default-1.control40">点击跳转提高GitHub速度</a></li>
<li>Excel函数表&#x2F;<a href="https://support.microsoft.com/zh-cn/office/excel-%E5%87%BD%E6%95%B0-%E6%8C%89%E5%AD%97%E6%AF%8D%E9%A1%BA%E5%BA%8F-b3944572-255d-4efb-bb96-c6d90033e188?ui=zh-cn&rs=zh-cn&ad=cn">点击跳转Excel</a></li>
</ol>
</blockquote>
<h3 id="图文编辑"><a href="#图文编辑" class="headerlink" title="图文编辑"></a>图文编辑</h3><blockquote>
<ol>
<li>UML图&#x2F;<a href="https://www.processon.com/">点击跳转UML图</a></li>
<li>(小说）写作猫&#x2F;<a href="https://xiezuocat.com/#/?s=catbd3">点击跳转写作猫</a></li>
<li>(小说) 灯果写作&#x2F;<a href="https://www.mypitaya.com/coreTechnology?renqun_youhua=2326980&bd_vid=7295531632903482569">点击跳转灯果写作</a></li>
<li>(思维导图)XMind&#x2F;<a href="https://www.xmind.cn/">点击跳转XMind</a></li>
<li>(思维导图)墨刀&#x2F;<a href="https://modao.cc/">点击跳转墨刀</a></li>
<li>（logo）logo设计&#x2F;<a href="https://www.chuangkit.com/">点击跳转logo</a></li>
<li>图怪兽&#x2F;<a href="https://818ps.com/?user_source=r1463307">点击跳转图怪兽</a></li>
<li>论文&#x2F;<a href="https://www.cn-ki.net/">点击跳转论文</a></li>
<li>前端设计&#x2F;<a href="https://dribbble.com/">点击跳转前端设计</a></li>
<li>PPT&#x2F; <a href="http://www.1ppt.com/">点击跳转第一PPT</a>&#x2F;<a href="http://www.51pptmoban.com/">点击跳转51PPT</a>&#x2F;<a href="https://www.ypppt.com/">点击跳转优品PPT</a>&#x2F;<a href="https://pptsupermarket.com/">点击跳转PPT超级市场</a>&#x2F;<a href="https://www.dingdangsheji.com/">点击跳转叮当设计</a>&#x2F;<a href="http://sandunppt.com/#15">点击跳转三顿导航</a></li>
<li>processon&#x2F;<a href="https://www.processon.com/">点击跳转processon</a></li>
<li>迅捷画图&#x2F;<a href="https://www.liuchengtu.com/">点击跳转迅捷画图</a></li>
<li>画图工具draw.io&#x2F;<a href="https://draw.io/">画图工具draw.io</a></li>
<li>PlantUML&#x2F;<a href="https://plantuml.com/zh/">点击跳转PlantUML</a></li>
<li>Diagrams&#x2F;<a href="https://app.diagrams.net/">点击跳转Diagrams</a></li>
<li>在线抠图&#x2F;<a href="https://www.gaoding.com/koutu?hmsr=pcbaidu-sem-kt-kt-0350-sem">点击跳转在线抠图</a></li>
<li>下载图片千库网&#x2F;<a href="https://588ku.com/">点击跳转下载图片千库网</a></li>
<li>CleverPDF&#x2F;<a href="https://www.cleverpdf.com/">点击跳转CleverPDF</a></li>
<li>(无版权图片)Unsplash&#x2F;<a href="https://unsplash.com/">点击跳转Unsplash</a>&#x2F;<a href="https://pixabay.com/zh/">点击跳转pixabay</a></li>
<li>(思维导图)ZhiMap&#x2F;<a href="https://zhimap.com/">点击跳转ZhiMap</a></li>
<li>极简壁纸&#x2F;<a href="https://bz.zzzmh.cn/index">点击跳转极简壁纸</a></li>
<li>pixabay&#x2F;<a href="https://pixabay.com/">点击跳转pixabay</a></li>
<li>动图gfycat&#x2F;<a href="https://gfycat.com/">点击跳转gfycat</a></li>
<li>wallpaperscraft&#x2F;<a href="https://wallpaperscraft.com/">点击跳转wallpaperscraft</a></li>
<li>图片剪辑&#x2F;<a href="https://subei.me/">点击跳转图片剪辑</a></li>
<li>微信Markdown&#x2F;<a href="https://doocs.gitee.io/md/#/">点击跳转微信Markdown</a></li>
<li>新片场&#x2F;<a href="https://www.xinpianchang.com/square">点击跳转新片场</a></li>
<li>音效网&#x2F;<a href="https://www.aigei.com/sound/">点击跳转音效网</a></li>
<li>新极品&#x2F;<a href="http://www.fulivip.com/">点击跳转新极品</a></li>
<li>easyPDF&#x2F;<a href="https://easypdf.com/cn">点击跳转easyPDF</a></li>
<li>GitMind&#x2F;<a href="https://gitmind.cn/app/template">点击跳转GitMind</a></li>
<li>MindLine&#x2F;<a href="https://www.mindline.cn/webapp">点击跳转MindLine</a></li>
</ol>
</blockquote>
<h3 id="稀奇古怪"><a href="#稀奇古怪" class="headerlink" title="稀奇古怪"></a>稀奇古怪</h3><blockquote>
<ol>
<li>(推荐)Portableappk&#x2F;<a href="https://portableappk.com/">点击跳转portableappk</a></li>
<li>(古籍馆)古籍馆&#x2F;<a href="https://www.gujiguan.com/">点击跳转古籍馆</a></li>
<li>(视频)吾爱分享&#x2F;<a href="https://52online.vip/">点击跳转吾爱分享</a></li>
<li>一言金句&#x2F;<a href="https://hitokoto.cn/">点击跳转一言金句</a></li>
<li>正版中国&#x2F;<a href="https://getitfree.cn/">点击跳转正版中国</a></li>
<li>(电子书)&#x2F;<a href="https://manybooks.net/">点击跳转电子书</a></li>
<li>(搜索)工具搜索&#x2F;<a href="https://www.toolnb.com/">点击跳转工具搜索</a></li>
<li>scp&#x2F;<a href="http://scp-wiki.wikidot.com/">点击跳转scp</a></li>
<li>(视频)嘀哩嘀哩&#x2F;<a href="http://dlidli.wang/">点击跳转嘀哩嘀哩</a></li>
<li>(reg007注册平台)&#x2F;<a href="https://www.reg007.com/">点击跳转reg007</a></li>
<li>国际象棋&#x2F;<a href="https://lichess.org/">点击跳转国际象棋</a></li>
<li>AnywhereAnything&#x2F;<a href="http://demo.jb51.net/js/2016/html5_AnywhereAnything/">点击跳转AnywhereAnything</a></li>
<li>考证参考&#x2F;<a href="https://www.educity.cn/">点击跳转考证参考</a></li>
<li>科塔学术导航&#x2F;<a href="https://site.sciping.com/">点击跳转科塔学术导航</a></li>
<li>果壳科技&#x2F;<a href="https://www.guokr.com/scientific/channel/hot/">点击跳转果壳科技</a></li>
<li>自由钢琴&#x2F;<a href="https://www.autopiano.cn/">点击跳转自由钢琴</a></li>
<li>国家统计局&#x2F;<a href="http://www.stats.gov.cn/">点击跳转国家统计局</a></li>
<li>大数据导航&#x2F;<a href="http://hao.199it.com/">点击跳转大数据导航</a></li>
<li>镝数据&#x2F;<a href="https://www.dydata.io/">点击跳转镝数据</a></li>
<li>国家标准全文公开系统&#x2F;<a href="http://openstd.samr.gov.cn/bzgk/gb/icsMainQuery?icsKey=01.&icsName=%E7%BB%BC%E5%90%88%E3%80%81%E6%9C%AF%E8%AF%AD%E5%AD%A6%E3%80%81%E6%A0%87%E5%87%86%E5%8C%96%E3%80%81%E6%96%87%E7%8C%AE">点击跳转国家标准全文公开系统</a></li>
<li>学兔兔&#x2F;<a href="www.bzfxw.com">点击跳转学兔兔</a></li>
<li>Library Genesis&#x2F;<a href="http://www.libgen.is/">点击跳转Library Genesis</a></li>
<li>国家标准信息公共服务平台&#x2F;<a href="http://std.samr.gov.cn/">点击跳转国家标准信息公共服务平台</a></li>
<li>独普云&#x2F;<a href="https://www.dupuyun.com/">点击跳转独普云</a></li>
<li>zerotohero.ca语言地图&#x2F;<a href="https://www.zerotohero.ca/">点击跳转zerotohero.ca</a></li>
<li>学习强国&#x2F;<a href="https://www.xuexi.cn/">点击跳转学习强国</a></li>
<li>云听&#x2F;<a href="http://www.radio.cn/pc-portal/home/index.html">点击跳转云听</a></li>
<li>央视频&#x2F;<a href="https://www.yangshipin.cn/">点击跳转央视频</a></li>
<li>国家应急广播&#x2F;<a href="http://www.cneb.gov.cn/">点击跳转国家应急广播</a></li>
<li>鱼塘热榜&#x2F;<a href="https://tophub.fun/?class_id=IT&hot_id=85">点击跳转鱼塘热榜</a></li>
<li>音乐下载&#x2F;<a href="https://music.liuzhijin.cn/">音乐下载</a>&#x2F;<a href="https://music.zhuolin.wang/">VIP下载</a></li>
<li>AI剪辑&#x2F;<a href="https://fstongxue.gitee.io/">点击跳转AI剪辑</a></li>
<li>(视频教学)eHow&#x2F;<a href="https://www.ehow.com/">点击跳转eHow</a></li>
<li>ilovepdf&#x2F;<a href="https://www.ilovepdf.com/zh-cn">点击跳转ilovepdf</a></li>
<li>纪录片天地&#x2F;<a href="http://www.jlpcn.net/vodtypehtml/1.html">点击跳转纪录片天地</a></li>
<li>办公资源&#x2F;<a href="http://ppt.gxzfxz.top/ppt/?utm_source=baidu&utm_medium=cpc&utm_campaign=PPT-%E5%93%81%E7%89%8C%E8%AF%8D-A&utm_term=%E5%8A%9E%E5%85%AC%E8%B5%84%E6%BA%90%E7%BD%91%E5%AE%98%E7%BD%91">点击跳转办公资源</a></li>
<li>mixkit&#x2F;<a href="https://mixkit.co/free-stock-video/">点击跳转mixkit</a></li>
<li>运动会直播&#x2F;<a href="http://daonaerzhao.com/">点击跳转运动会直播</a></li>
<li>企查查&#x2F;<a href="https://www.qcc.com/web/search?key=%E5%B0%8F%E7%B1%B3">点击跳转企查查</a></li>
<li>北大出版社电子教材书架&#x2F;<a href="https://pup6.yunzhan365.com/bookcase/kiru/index.html">点击跳转北大出版社电子教材书架</a></li>
<li>医学微视&#x2F;<a href="https://www.mvyxws.com/">点击跳转医学微视</a></li>
<li>声同&#x2F;<a href="http://www.somdom.com/">点击跳转声同</a></li>
<li>书格&#x2F;<a href="https://www.shuge.org/ebooks/">点击跳转书格</a></li>
<li>国家教育资源公共服务平台&#x2F;<a href="https://www.eduyun.cn/">点击跳转国家教育资源公共服务平台</a></li>
<li>办事指南wikiHow&#x2F;<a href="https://zh.wikihow.com/%E9%A6%96%E9%A1%B5">点击跳转wikiHow</a></li>
<li>一个木函&#x2F;<a href="https://web.woobx.cn/">点击跳转一个木函</a></li>
<li>果汁导航&#x2F;<a href="http://guozhivip.com/">点击跳转果汁导航</a></li>
<li>哆啦网&#x2F;<a href="http://www.duola.vip/">点击跳转哆啦网</a></li>
<li>在线工具&#x2F;<a href="http://www.atoolbox.net/">点击跳转在线工具</a></li>
<li>考拉新媒体导航&#x2F;<a href="https://www.kaolamedia.com/">点击跳转考拉新媒体导航</a></li>
<li>萌导航&#x2F;<a href="https://www.moe123.net/">点击跳转萌导航</a></li>
<li>图床导航&#x2F;<a href="http://imgdh.com/">点击跳转图床导航</a></li>
<li>设保导航&#x2F;<a href="https://hao.sheboo.com/">点击跳转设保导航</a></li>
<li>大学资源网&#x2F;<a href="http://www.dxzy163.com/">点击跳转大学资源网</a></li>
<li>全历史&#x2F;<a href="https://www.allhistory.com/">点击跳转全历史</a></li>
<li>四大名著地图&#x2F;<a href="http://www.sdmzh.com.cn/map/index.html">点击跳转四大名著地图</a></li>
<li>好大学在线&#x2F;<a href="https://www.cnmooc.org/home/index.mooc">点击跳转好大学在线</a></li>
<li>时光网&#x2F;<a href="http://www.mtime.com/">点击跳转时光网</a></li>
<li>豆瓣网&#x2F;<a href="https://www.douban.com/">点击跳转豆瓣网</a></li>
<li>素材巷&#x2F;<a href="http://www.sucaixiang.com/">点击跳转素材巷</a></li>
<li>ted演讲&#x2F;<a href="https://www.ted.com/">点击跳转ted演讲</a></li>
<li>谷歌学术&#x2F;<a href="https://gfsoso.99lb.net/scholar.html">点击跳转谷歌学术</a></li>
<li>简答题&#x2F;<a href="https://www.jiandati.com/">点击跳转简答题</a></li>
<li>freeSLL&#x2F;<a href="https://freessl.cn/">点击跳转freeSSL</a></li>
<li>Startme&#x2F;<a href="https://start.me/start/cn/cn-start">点击跳转Startme</a></li>
<li>资源库&#x2F;<a href="https://onestar.newstar.net.cn/resources">点击跳转资源库</a></li>
<li>doyoudo&#x2F;<a href="http://www.doyoudo.com/">点击跳转doyoudo</a></li>
<li>好知&#x2F;<a href="http://www.howzhi.com/">点击跳转好知</a></li>
<li>鸠摩搜书&#x2F;<a href="https://www.jiumodiary.com/">点击跳转鸠摩搜书</a></li>
<li>莫尔斯电码对照&#x2F;<a href="https://www.qsl.net/bg3tt/zl/mesdm.htm">点击进入莫尔斯电码对照</a></li>
<li>书伴&#x2F;<a href="https://bookfere.com/">点击跳转书伴</a></li>
<li>相识电子书&#x2F;<a href="http://m.xiangshi123.com/">点击跳转相识电子书</a></li>
<li>超星读书&#x2F;<a href="http://book.chaoxing.com/">点击跳转超星读书</a></li>
<li>全球网络攻击实时地图&#x2F;<a href="https://cybermap.kaspersky.com/">点击跳转全球网络攻击实时地图</a></li>
<li>知妖&#x2F;<a href="https://www.cbaigui.com/%E4%B8%96%E7%95%8C">点击跳转知妖</a></li>
<li>爱航天网&#x2F;<a href="http://www.aihangtian.com/">点击跳转爱航天网</a></li>
<li>工具人&#x2F;<a href="https://www.toolfk.com/">点击跳转工具人</a></li>
<li>炫辕&#x2F;<a href="https://xydh.fun/">点击跳转炫辕</a></li>
<li>国内国外导航&#x2F;<a href="https://www.egouz.com/">点击跳转国内国外导航</a></li>
<li>兔二工具&#x2F;<a href="https://toer2.com/">点击跳转兔二工具</a></li>
<li>工具123&#x2F;<a href="http://www.gjw123.com/">点击跳转工具123</a></li>
<li>一个工具箱&#x2F;<a href="http://www.atoolbox.net/">点击跳转一个工具箱</a></li>
<li>孟坤工具箱&#x2F;<a href="http://tool.mkblog.cn/">点击跳转孟坤工具箱</a></li>
<li>实用工具大全&#x2F;<a href="https://tool.520101.com/">点击跳转使用工具大全</a></li>
<li>Startme&#x2F;<a href="https://start.me/start/cn/cn-start">点击跳转Startme</a></li>
</ol>
</blockquote>
<h3 id="其他网址"><a href="#其他网址" class="headerlink" title="其他网址"></a>其他网址</h3><h2 id="电话"><a href="#电话" class="headerlink" title="电话"></a>电话</h2><blockquote>
<ol>
<li>12345 市长热线</li>
<li>12348 全国免费法律咨询</li>
<li>12333 全国劳动监察</li>
<li>12368 全国法院查询</li>
<li>12388 妇女权益保护</li>
</ol>
</blockquote>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>欢迎大家总结</p>
]]></content>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机组成原理初识</title>
    <url>/2022/05/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%88%9D%E8%AF%86/</url>
    <content><![CDATA[<blockquote>
<center>沧海一桑田，蓦然半回首</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<h2 id="1-背景"><a href="#1-背景" class="headerlink" title="1. 背景"></a>1. 背景</h2><h3 id="1-1-发展"><a href="#1-1-发展" class="headerlink" title="1.1 发展"></a>1.1 发展</h3><ul>
<li>第一代(1946-1957) 电子管时代</li>
<li>第二代(1958-1964) 晶体管时代</li>
<li>第三代(1965-1971) 中小规模集成电路时代</li>
<li>第四代(1972-至今) 超大规模集成电路时代</li>
</ul>
<h3 id="1-2-元件"><a href="#1-2-元件" class="headerlink" title="1.2 元件"></a>1.2 元件</h3><ul>
<li>摩尔定律</li>
<li>半导体存储器的发展</li>
<li>微处理器的发展</li>
</ul>
<h3 id="1-3-分类与方向"><a href="#1-3-分类与方向" class="headerlink" title="1.3 分类与方向"></a>1.3 分类与方向</h3><h4 id="1-3-1-按照用途"><a href="#1-3-1-按照用途" class="headerlink" title="1.3.1 按照用途"></a>1.3.1 按照用途</h4><ul>
<li>电子模拟计算机</li>
<li>电子数字计算机<ul>
<li>专用计算机</li>
<li>通用计算机<ul>
<li>巨型机</li>
<li>大型机</li>
<li>中型机</li>
<li>小型机</li>
<li>微型机</li>
<li>单片机</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="1-3-2-按照指令和数据流"><a href="#1-3-2-按照指令和数据流" class="headerlink" title="1.3.2 按照指令和数据流"></a>1.3.2 按照指令和数据流</h4><ul>
<li>单指令流和单数据流(SISD):冯诺依曼结构</li>
<li>单指令流和多数据流(SIMD):包括阵列处理器和向量处理器系统</li>
<li>多指令流和单数据流(MISD):这种计算机实际上不存在</li>
<li>多指令流和多数据流(MIMD):包括多处理器和多计算机系统</li>
</ul>
<h4 id="1-3-3-方向"><a href="#1-3-3-方向" class="headerlink" title="1.3.3 方向"></a>1.3.3 方向</h4><ul>
<li>微型计算机，微型化、网络化、高性能、多用途方向发展</li>
<li>巨型计算机：巨型化、超高速、并行处理、智能化发展</li>
</ul>
<h3 id="1-4-计算机组成"><a href="#1-4-计算机组成" class="headerlink" title="1.4 计算机组成"></a>1.4 计算机组成</h3><h4 id="1-4-1-冯诺依曼机"><a href="#1-4-1-冯诺依曼机" class="headerlink" title="1.4.1 冯诺依曼机"></a>1.4.1 冯诺依曼机</h4><ul>
<li>计算机硬件由运算器、控制器、存储器、输入设备、输出设备</li>
<li>指令和数据以同等地位存储在存储器中，并可以按照地址寻访</li>
<li>指令和数据均用二进制代码表示</li>
<li>指令由操作码和地址码组成，操作码指出操作的类型，地址码指出操作数的地址</li>
<li>指令在存储器中按顺序存放，通常指令顺序执行，特定情况下根据运算结果和根据设定的条件改变执行顺序</li>
<li>早期的冯诺依曼以运算器为中心，，输入输出通过运算器与存储器传送数据，现代以存储器为中心，尽可能绕开CPU</li>
</ul>
<h4 id="1-4-2-功能部件"><a href="#1-4-2-功能部件" class="headerlink" title="1.4.2 功能部件"></a>1.4.2 功能部件</h4><ul>
<li>输入设备</li>
<li>输出设备</li>
<li>存储器</li>
</ul>
<blockquote>
<p>主存储器【主存，内存储器】，辅助存储器【辅存，外存储器】，地址寄存器【MAR】和高速缓存【Cache】现代是存在CPU中</p>
<p>数据寄存器【MDR】，时序控制逻辑</p>
</blockquote>
<ul>
<li>运算器</li>
</ul>
<blockquote>
<p>算术运算和逻辑运算，核心是算术逻辑单元【ALU】，若干寄存器：累加器【ACC】、乘商寄存器【MQ】、操作数寄存器【X】、变址寄存器【IX】、基址寄存器【BR】、程序状态寄存器【PSW】，前面3个寄存器是必须的</p>
</blockquote>
<ul>
<li>控制器</li>
</ul>
<blockquote>
<p>由程序计数器【PC】、指令寄存器【IR】和控制单元【CU】组成</p>
</blockquote>
<h4 id="1-4-3-计算机软件分类"><a href="#1-4-3-计算机软件分类" class="headerlink" title="1.4.3 计算机软件分类"></a>1.4.3 计算机软件分类</h4><ul>
<li>系统软件</li>
</ul>
<blockquote>
<p>操作系统【OS】、数据库管理系统【DBMS】、语言处理程序、分布式软件系统、网络软件系统、标准库程序、服务性程序</p>
</blockquote>
<ul>
<li>应用软件</li>
</ul>
<blockquote>
<p>科学计算类、工程设计类</p>
</blockquote>
<h4 id="1-4-4-计算机语言"><a href="#1-4-4-计算机语言" class="headerlink" title="1.4.4 计算机语言"></a>1.4.4 计算机语言</h4><ul>
<li>机器语言</li>
<li>汇编语言</li>
<li>高级语言</li>
</ul>
<h4 id="1-4-5-计算机工作过程"><a href="#1-4-5-计算机工作过程" class="headerlink" title="1.4.5 计算机工作过程"></a>1.4.5 计算机工作过程</h4><ul>
<li>把程序和数据装入主存储器</li>
<li>将源程序转换成可执行文件</li>
</ul>
<blockquote>
<p>一般是预处理阶段，编译阶段，汇编阶段，链接阶段</p>
</blockquote>
<ul>
<li>从可执行文件的首地址开始逐条执行指令</li>
</ul>
<blockquote>
<ol>
<li><p>取指令：PC-MAR-M-MDR-IR</p>
</li>
<li><p>分析指令：OP(IR)-CU</p>
</li>
<li><p>执行指令：Ad(IR)-MAR-M-MDR-ACC</p>
</li>
<li><p>pc+1-pc</p>
</li>
</ol>
</blockquote>
<h4 id="1-4-6-多级层次结构"><a href="#1-4-6-多级层次结构" class="headerlink" title="1.4.6 多级层次结构"></a>1.4.6 多级层次结构</h4><ul>
<li><p>硬件层</p>
</li>
<li><p>微程序机器层</p>
</li>
<li><p>传统机器语言层</p>
</li>
<li><p>操作系统层</p>
</li>
<li><p>汇编语言层</p>
</li>
<li><p>高级语言层</p>
</li>
</ul>
<h3 id="1-5-主要性能指标"><a href="#1-5-主要性能指标" class="headerlink" title="1.5 主要性能指标"></a>1.5 主要性能指标</h3><ul>
<li>机器字长</li>
<li>数据通路带宽</li>
<li>主存容量</li>
<li>运算速度</li>
</ul>
<blockquote>
<p>吞吐量</p>
<p>响应时间</p>
</blockquote>
<ul>
<li>主频和Cpu时钟周期</li>
<li>基准程序</li>
</ul>
<h3 id="1-6-专业术语"><a href="#1-6-专业术语" class="headerlink" title="1.6 专业术语"></a>1.6 专业术语</h3><ul>
<li>系列机</li>
<li>兼容</li>
<li>软件可移植性</li>
<li>固件</li>
</ul>
<h2 id="2-数据的表示和运算"><a href="#2-数据的表示和运算" class="headerlink" title="2. 数据的表示和运算"></a>2. 数据的表示和运算</h2><h3 id="2-1-进位计数制及其相互转换"><a href="#2-1-进位计数制及其相互转换" class="headerlink" title="2.1 进位计数制及其相互转换"></a>2.1 进位计数制及其相互转换</h3><ul>
<li>二进制(2^1)</li>
<li>三进制(3^1)</li>
<li>四进制(2^2)</li>
<li>八进制(2^3)</li>
<li>九进制(3^2)</li>
<li>十进制</li>
<li>十六进制(2^4,ABCDEF)</li>
</ul>
<blockquote>
<p>1111000010.01101 二进制 转换为八进制和十六进制，八进制取3位，十六进制取4位</p>
<p>（1702.32）8 &#x3D; （1111000010.01101）2 </p>
<p>（3C2.68）16 &#x3D; (1111000010.01101）2 </p>
</blockquote>
<blockquote>
<p>不是每个十进制小数都可以准确的用二进制表示，但所有的二进制都可以用十进制表示</p>
</blockquote>
<h3 id="2-2-真值和机器数"><a href="#2-2-真值和机器数" class="headerlink" title="2.2 真值和机器数"></a>2.2 真值和机器数</h3><blockquote>
<p>+15真值这种是机器数0101所代表的实际值</p>
</blockquote>
<h3 id="2-3-BCD码"><a href="#2-3-BCD码" class="headerlink" title="2.3 BCD码"></a>2.3 BCD码</h3><blockquote>
<p>通常采用四位二进制数来表示一位十进制的一个数</p>
</blockquote>
<ul>
<li>8421</li>
</ul>
<blockquote>
<p>有权码</p>
</blockquote>
<ul>
<li>余3码</li>
<li>2421码</li>
</ul>
<h3 id="2-4-字符与字符串"><a href="#2-4-字符与字符串" class="headerlink" title="2.4 字符与字符串"></a>2.4 字符与字符串</h3><ul>
<li>字符编码Ascall码</li>
<li>GB18030</li>
</ul>
<h3 id="2-5-校验码"><a href="#2-5-校验码" class="headerlink" title="2.5 校验码"></a>2.5 校验码</h3><ul>
<li>奇偶校验码</li>
<li>海明校验码</li>
<li>循环冗余校验码【CRC】</li>
</ul>
<h3 id="2-6-定点数的表示与运算"><a href="#2-6-定点数的表示与运算" class="headerlink" title="2.6 定点数的表示与运算"></a>2.6 定点数的表示与运算</h3><h4 id="2-6-1-定点数的表示"><a href="#2-6-1-定点数的表示" class="headerlink" title="2.6.1 定点数的表示"></a>2.6.1 定点数的表示</h4><ul>
<li>定点小数</li>
<li>定点整数</li>
</ul>
<h4 id="2-6-2-原码、补码、反码、移码"><a href="#2-6-2-原码、补码、反码、移码" class="headerlink" title="2.6.2 原码、补码、反码、移码"></a>2.6.2 原码、补码、反码、移码</h4><blockquote>
<p>小数点求二进制，乘以2 &gt;1取1不大于1取0</p>
</blockquote>
<ul>
<li><p>原码表示法</p>
<ul>
<li>纯小数的原码：[x]原 &#x3D; {x    1&gt;x&gt;&#x3D;0},{1-x &#x3D; 1+ |x|      0&gt;&#x3D;x&gt;-1}</li>
<li>纯整数的原码：[x]原 &#x3D; {0,x   2^n &gt; x &gt;&#x3D;0},{2^n-x &#x3D; 2^n + |x|  0 &gt;&#x3D; x &gt;-2^n}</li>
</ul>
<blockquote>
<p>真值0的原码有正0和负0的区别 即[+0]原 &#x3D; 00000 [-0]原 &#x3D; 10000</p>
</blockquote>
</li>
<li><p>补码表示法【可以将原码加减法统一采用加法操作实现,取反加1】</p>
<ul>
<li>纯小数的补码定义：[x]补 &#x3D; {x  1&gt;x&gt;&#x3D;0},{2+x &#x3D; 2-|x|  0&gt;x&gt;&#x3D;-1}</li>
<li>纯整数的补码定义: [x]补 &#x3D; {0,x   2^n &gt;x&gt;&#x3D;0},{2^(n+1) + x &#x3D; 2^(n+1) - |x|  0 &gt;&#x3D;x&gt;&#x3D;-2^n}</li>
</ul>
</li>
<li><p>反码表示法【通常用来作为原码求补码，或补码求原码的中间过渡】</p>
<ul>
<li><p>纯小数的反码定义：[x]反 &#x3D; {x 1&gt;x&gt;&#x3D;0},{(2-2^-n) + x  0&gt;&#x3D;x&gt;-1}</p>
</li>
<li><p>纯整数的反码定义：[x]反 &#x3D; {0,x 2^n &gt; x &gt;&#x3D;0},{(2^(n+1)) + x 0 &gt;&#x3D; x &gt;-2^n}												</p>
<blockquote>
<p>真值0的反码表示不唯一，例如[+0]反 &#x3D; 0.0000；[-0]反 &#x3D; 1.1111；</p>
</blockquote>
</li>
</ul>
</li>
<li><p>移码表示法</p>
</li>
</ul>
<blockquote>
<p>移码常用来表示浮点数的阶码，它只能表示整数</p>
</blockquote>
<h4 id="2-6-3-定点数的运算"><a href="#2-6-3-定点数的运算" class="headerlink" title="2.6.3 定点数的运算"></a>2.6.3 定点数的运算</h4><ul>
<li>定点数的移位运算</li>
<li>算术移位</li>
</ul>
<blockquote>
<p>对于正数，由于[x]原 &#x3D; [x]补 &#x3D; [x]反 &#x3D; 真值，添补0</p>
</blockquote>
<table>
<thead>
<tr>
<th>序号</th>
<th>数值</th>
<th>码制</th>
<th>添补代码</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>正数</td>
<td>原码、补码、反码</td>
<td>0</td>
</tr>
<tr>
<td>2</td>
<td>负数</td>
<td>原码</td>
<td>0</td>
</tr>
<tr>
<td>3</td>
<td>负数</td>
<td>补码左移</td>
<td>0</td>
</tr>
<tr>
<td>4</td>
<td>负数</td>
<td>补码右移</td>
<td>1</td>
</tr>
<tr>
<td>5</td>
<td>负数</td>
<td>反码</td>
<td>1</td>
</tr>
</tbody></table>
<ul>
<li>逻辑移位</li>
</ul>
<blockquote>
<p>逻辑移位不管左移还是右移添加的都是0，逻辑移位将操作数视为无符号数，移位规则：逻辑左移时，高位移丢，低位添0；逻辑右移时，低位移丢，高位添0</p>
</blockquote>
<ul>
<li>循环移位</li>
</ul>
<blockquote>
<p>分为带进位标志位CF的循环移位(大循环)和不带进位标志位的循环移位(小循环)，特别适合将数据的低字节数据和高字节数据互换</p>
</blockquote>
<ul>
<li><p>原码定点数的加减法运算</p>
<ul>
<li><p>加法规则：先判符号位，若相同，则绝对值相加，结果符号位不变，若不同，则做减法，绝对值大的数减去绝对值小的数，结果符号位与绝对值大的数相同</p>
</li>
<li><p>减法规则：两个原码表示的数相减，首先将减数符号取反，然后将被减数与符号取反后的减数按原码加法进行运算</p>
</li>
</ul>
<blockquote>
<p>运算时注意机器字长，当左边位出现溢出时，将溢出位丢掉</p>
</blockquote>
</li>
<li><p>补码定点数加减法运算</p>
<ul>
<li>加法：两数的补码直接相加</li>
<li>减法：将被减数与减数的机器负数相加</li>
</ul>
</li>
</ul>
<blockquote>
<p>补码运算的结果亦为补码</p>
</blockquote>
<ul>
<li>符号扩展</li>
</ul>
<blockquote>
<p>8位数和32位数相加，必须将8位数转换为32位数</p>
</blockquote>
<ul>
<li>溢出概念和判断方法</li>
</ul>
<blockquote>
<p>溢出是指运算结果超出了数的表示范围，仅当两个符号相同的数相加或两个符号相异的数相减才可能产生溢出</p>
</blockquote>
<ul>
<li><p>补码定点数加减法溢出判断的方法</p>
<ul>
<li>采用一位符号位</li>
<li>采用双符号位</li>
<li>采用一号符号位根据数据位的进位情况判断溢出</li>
</ul>
</li>
<li><p>定点数的乘法运算</p>
</li>
</ul>
<blockquote>
<p>乘法运算由累加和右移操作实现，根据机器数的不同，可分为原码一位乘法，和补码一位乘法</p>
</blockquote>
<ul>
<li>原码一位乘法</li>
</ul>
<blockquote>
<p>符号位和数值位分开，乘积符号由两个数的符号位“异或”形成，而乘积的数值部分则是两个数的绝对值相乘之积，因此原码一位乘法运算过程中的右移操作均为逻辑右移，考虑运算时出现绝对值大于1却没有溢出，所以部分积和被乘数取双符号位</p>
</blockquote>
<ul>
<li>补码一位乘法(Booth算法)</li>
</ul>
<blockquote>
<p>这是一种有符号数的乘法，采用相加和相减操作计算补码数据的乘积</p>
</blockquote>
<ul>
<li>表1 Booth算法的移位规则</li>
</ul>
<table>
<thead>
<tr>
<th>序号</th>
<th>yn（高位）</th>
<th>y(n+1)(低位)</th>
<th>操作</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>0</td>
<td>0</td>
<td>部分积右移一位</td>
</tr>
<tr>
<td>2</td>
<td>0</td>
<td>1</td>
<td>部分积加[x]补，右移一位</td>
</tr>
<tr>
<td>3</td>
<td>1</td>
<td>0</td>
<td>部分积加[-x]补，右移一位</td>
</tr>
<tr>
<td>4</td>
<td>1</td>
<td>1</td>
<td>部分积右移一位</td>
</tr>
</tbody></table>
<ul>
<li>表2 乘法运算总结</li>
</ul>
<table>
<thead>
<tr>
<th>序号</th>
<th>乘法类型</th>
<th>符号位参与运算</th>
<th>符号位部分积</th>
<th>符号位乘数</th>
<th>累加次数</th>
<th>移位方向</th>
<th>移位次数</th>
<th>移位每位次数</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>原码一位乘法</td>
<td>否</td>
<td>2位</td>
<td>0位</td>
<td>n</td>
<td>右</td>
<td>n</td>
<td>1</td>
</tr>
<tr>
<td>2</td>
<td>补码一位乘法</td>
<td>是</td>
<td>2位</td>
<td>1位</td>
<td>n+1</td>
<td>右</td>
<td>n</td>
<td>1</td>
</tr>
</tbody></table>
<ul>
<li>定点数的除法运算</li>
</ul>
<blockquote>
<p>除法运算可以转换为累加-逻辑左移，根据机器数的不同，可分为原码除法和补码除法</p>
</blockquote>
<ul>
<li>原码除法运算（不恢复余数法）【原码加减交替除法】</li>
</ul>
<blockquote>
<p>商符和商值是分开的，商符由两个操作数的符号位“异或”形成</p>
</blockquote>
<ul>
<li>补码除法运算【加减交替法】</li>
</ul>
<blockquote>
<p>补码一位除法的特点是符号位与数值位一起运算，商符自然形成</p>
</blockquote>
<ul>
<li>表3 除法运算总结</li>
</ul>
<table>
<thead>
<tr>
<th>序号</th>
<th>除法类型</th>
<th>符号位参与运算</th>
<th>加减次数</th>
<th>移位方向</th>
<th>移位次数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>原码加减交替法</td>
<td>否</td>
<td>N+1或N+2</td>
<td>左</td>
<td>N</td>
<td>若最终余数为负，需恢复余数</td>
</tr>
<tr>
<td>2</td>
<td>补码加减交替法</td>
<td>是</td>
<td>N+1</td>
<td>左</td>
<td>N</td>
<td>商末位横置1</td>
</tr>
</tbody></table>
<h3 id="2-7-数据的存储和排列"><a href="#2-7-数据的存储和排列" class="headerlink" title="2.7 数据的存储和排列"></a>2.7 数据的存储和排列</h3><ul>
<li>数据的大端方式和小端方式存储</li>
</ul>
<blockquote>
<p>通常以最低有效字节(LSB)和最高有效字节（MSB）来分别表示数的低位和高位，存储数据时，从低位到高位可以从左到右排列，也可以从右到左排列</p>
</blockquote>
<ul>
<li>数据按照边界对齐方式存储</li>
</ul>
<blockquote>
<p>空间换时间的思想，RISC和ARM采用边界对齐方式，而CISC和X86对齐和不对齐都支持</p>
</blockquote>
<h2 id="3-浮点数的表示和运算"><a href="#3-浮点数的表示和运算" class="headerlink" title="3. 浮点数的表示和运算"></a>3. 浮点数的表示和运算</h2><h3 id="3-1-浮点数的表示"><a href="#3-1-浮点数的表示" class="headerlink" title="3.1 浮点数的表示"></a>3.1 浮点数的表示</h3><ul>
<li>浮点数的表现格式</li>
</ul>
<blockquote>
<p>N &#x3D; r^E * M ，其中r一般等于2</p>
</blockquote>
<ul>
<li>规格化浮点数</li>
</ul>
<blockquote>
<p>所谓规格化，是指通过调整一个非规格化浮点数的尾数和阶码的大小，使非0的浮点数在尾数的最高数位保证是一个有效值</p>
</blockquote>
<ul>
<li>左规</li>
<li>右规</li>
</ul>
<h3 id="3-2-浮点数的表示范围"><a href="#3-2-浮点数的表示范围" class="headerlink" title="3.2 浮点数的表示范围"></a>3.2 浮点数的表示范围</h3><p>负上溢|负数区|负下溢|正下溢|正数区|正上溢</p>
<blockquote>
<p>上溢时，计算机必须中断运算操作，进行溢出处理，下溢时，浮点数值趋向于0，计算机仅将其当作机器0处理</p>
</blockquote>
<h3 id="3-3-IEEE-754标准"><a href="#3-3-IEEE-754标准" class="headerlink" title="3.3 IEEE 754标准"></a>3.3 IEEE 754标准</h3><ul>
<li>表4 IEEE 754 浮点数的格式</li>
</ul>
<table>
<thead>
<tr>
<th>序号</th>
<th>类型</th>
<th>数符</th>
<th>阶码</th>
<th>尾数数值</th>
<th>总位数</th>
<th>偏置值十六进制</th>
<th>编置值十进制</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>短浮点数</td>
<td>1</td>
<td>8</td>
<td>23</td>
<td>32</td>
<td>7FH</td>
<td>127</td>
</tr>
<tr>
<td>2</td>
<td>长浮点数</td>
<td>1</td>
<td>11</td>
<td>52</td>
<td>64</td>
<td>3FFH</td>
<td>1023</td>
</tr>
<tr>
<td>3</td>
<td>临时浮点数</td>
<td>1</td>
<td>15</td>
<td>64</td>
<td>80</td>
<td>3FFFH</td>
<td>16383</td>
</tr>
</tbody></table>
<blockquote>
<p>短浮点数与长浮点数都采用隐含尾数最高数位的方法，因此可多表示一位尾数，临时浮点数又称扩展精度浮点数，无隐含位</p>
</blockquote>
<h3 id="3-4-定点、浮点表示的区别"><a href="#3-4-定点、浮点表示的区别" class="headerlink" title="3.4 定点、浮点表示的区别"></a>3.4 定点、浮点表示的区别</h3><ul>
<li>数值的表示范围</li>
</ul>
<blockquote>
<p>字节相同时，浮点表示法所能表示的数值范围远远大于定值表示法</p>
</blockquote>
<ul>
<li>精度</li>
</ul>
<blockquote>
<p>指一个数所含有效数值位的位数，字节相同时，浮点数精度降低</p>
</blockquote>
<ul>
<li>数的运算</li>
</ul>
<blockquote>
<p>浮点数在运算时要做尾数和阶码的运算，运算结果要求规格化</p>
</blockquote>
<ul>
<li>溢出问题</li>
</ul>
<blockquote>
<p>定点运算，运算结果超出数的表示范围，发生溢出，浮点运算中，规格化后阶码超出所能表示的范围，发生溢出</p>
</blockquote>
<h3 id="3-5-浮点数的加减运算"><a href="#3-5-浮点数的加减运算" class="headerlink" title="3.5 浮点数的加减运算"></a>3.5 浮点数的加减运算</h3><blockquote>
<p>浮点数的加减运算一律采用补码</p>
</blockquote>
<ul>
<li>对阶</li>
</ul>
<blockquote>
<p>使两个操作数的小数点位置对齐，使得两个数的阶码相等，小阶向大阶看齐</p>
</blockquote>
<ul>
<li>尾数求和</li>
</ul>
<blockquote>
<p>将对阶后的尾数按定点数加减法运算规则运算</p>
</blockquote>
<ul>
<li>规格化</li>
</ul>
<blockquote>
<p>左规，右规，左规一次相当于*2，右规一次相当于&#x2F;2</p>
</blockquote>
<ul>
<li><p>舍入</p>
<ul>
<li>0舍1入法</li>
<li>横置1法</li>
</ul>
</li>
<li><p>溢出判断</p>
</li>
</ul>
<blockquote>
<p>浮点数的溢出是由阶码的符号决定的</p>
</blockquote>
<ul>
<li>C语言的浮点数类型和类型转换</li>
</ul>
<blockquote>
<p>char-int-long-double</p>
</blockquote>
<h2 id="4-算术逻辑单元【Arithmetic-Logic-Unit-，ALU】"><a href="#4-算术逻辑单元【Arithmetic-Logic-Unit-，ALU】" class="headerlink" title="4. 算术逻辑单元【Arithmetic Logic Unit ，ALU】"></a>4. 算术逻辑单元【Arithmetic Logic Unit ，ALU】</h2><blockquote>
<p>运算器由算术逻辑单元、累加器、状态寄存器、通用寄存器等组成，ALU的功能包括+-*&#x2F;&amp;&amp;||!|以及移位、求补</p>
</blockquote>
<h3 id="4-1-串行加法器和并行加法器"><a href="#4-1-串行加法器和并行加法器" class="headerlink" title="4.1 串行加法器和并行加法器"></a>4.1 串行加法器和并行加法器</h3><blockquote>
<p>ALU核心是加法器，加法器是由全加器配以其他必要的逻辑电路组成</p>
</blockquote>
<ul>
<li>一位全加器</li>
</ul>
<blockquote>
<p>有加数Ai、加数Bi与低位传进来的进位Ci-1共三个输入，有本位Si与向高位进位Ci共两个输出</p>
</blockquote>
<ul>
<li>串行加法器</li>
</ul>
<blockquote>
<p>只有一个全加器【FA】，数据逐位串行送入加法器中进行运算，器件少、成本低，运算速度慢；</p>
</blockquote>
<ul>
<li>并行加法器</li>
</ul>
<blockquote>
<p>多个全加器组成，其位数与机器的字长相同，各位数据同时运算，有串行进位和并行进位两种进位</p>
</blockquote>
<ul>
<li>串行进位</li>
</ul>
<blockquote>
<p>把n个全加器串接起来，就可以进行两个n位数相加</p>
</blockquote>
<ul>
<li>并行进位【先行进位、同时进位】</li>
</ul>
<blockquote>
<p>各级进位信号同时形成</p>
</blockquote>
<ul>
<li>单机先行进位方式【组内并行、组间串行进位方式】</li>
<li>多级先行进位方式【组内并行、组间并行进位方式】</li>
</ul>
<h3 id="4-2-算术逻辑单元的功能和结构"><a href="#4-2-算术逻辑单元的功能和结构" class="headerlink" title="4.2 算术逻辑单元的功能和结构"></a>4.2 算术逻辑单元的功能和结构</h3><ul>
<li>带标志加法器</li>
</ul>
<blockquote>
<p>无符号数加法器只能用于两个无符号数相加，不能进行带符号整数的加、减法运算，为了加快加法运算的速度，实际电路一定使用多级先行进位方式 </p>
</blockquote>
<ul>
<li>算术逻辑单元</li>
<li>补码加减法运算部件</li>
</ul>
<h2 id="5-存储系统"><a href="#5-存储系统" class="headerlink" title="5. 存储系统"></a>5. 存储系统</h2><h3 id="5-1-存储器的分类"><a href="#5-1-存储器的分类" class="headerlink" title="5.1 存储器的分类"></a>5.1 存储器的分类</h3><ul>
<li><p>按照计算机的作用分</p>
<ul>
<li>主存储器</li>
<li>辅助存储器</li>
<li>高速缓冲存储器</li>
</ul>
</li>
<li><p>按照存储介质分</p>
<ul>
<li>磁表面存储器(磁盘、磁带)</li>
<li>磁心存储器</li>
<li>半导体存储器(MOS型存储器、双极型存储器)</li>
<li>光存储器（光盘）</li>
</ul>
</li>
<li><p>按照存储方式分类</p>
<ul>
<li>随机存储器（RAM）</li>
<li>只读存储器（ROM）</li>
<li>串行访问存储器</li>
</ul>
</li>
<li><p>按照信息可保存性分类</p>
<ul>
<li>易失性存储器</li>
<li>非易失性存储器</li>
<li>破坏性读出</li>
<li>非破坏性读出</li>
</ul>
</li>
</ul>
<h3 id="5-2-存储器的性能指标"><a href="#5-2-存储器的性能指标" class="headerlink" title="5.2 存储器的性能指标"></a>5.2 存储器的性能指标</h3><ul>
<li>存储容量</li>
</ul>
<blockquote>
<p>存储容量 &#x3D; 存储字数 * 字长</p>
</blockquote>
<ul>
<li>单位成本</li>
</ul>
<blockquote>
<p>每位价格 &#x3D; 总成本&#x2F;总容量</p>
</blockquote>
<ul>
<li><p>存储速度</p>
<blockquote>
<p>数据传输率 &#x3D; 数据的宽度&#x2F;存储周期</p>
</blockquote>
<ul>
<li>存取时间</li>
<li>存储周期</li>
<li>主存带宽</li>
</ul>
</li>
</ul>
<h3 id="5-3-多级存储系统"><a href="#5-3-多级存储系统" class="headerlink" title="5.3 多级存储系统"></a>5.3 多级存储系统</h3><table>
<thead>
<tr>
<th>CPU寄存器</th>
</tr>
</thead>
<tbody><tr>
<td>Cache</td>
</tr>
<tr>
<td>主存</td>
</tr>
<tr>
<td>磁盘</td>
</tr>
<tr>
<td>磁带 光盘</td>
</tr>
</tbody></table>
<h3 id="5-4-半导体随机存储器"><a href="#5-4-半导体随机存储器" class="headerlink" title="5.4 半导体随机存储器"></a>5.4 半导体随机存储器</h3><h4 id="5-4-1-静态随机存储器【SRAM】"><a href="#5-4-1-静态随机存储器【SRAM】" class="headerlink" title="5.4.1 静态随机存储器【SRAM】"></a>5.4.1 静态随机存储器【SRAM】</h4><blockquote>
<p>SRAM的存储元是用双稳态触发器（六晶体管MOS）来记忆，非破坏性读出，存储速度快，集成度低，功耗大，一般用来组成高速缓冲存储器</p>
</blockquote>
<h4 id="5-4-2-动态随机存储器【DRAM】"><a href="#5-4-2-动态随机存储器【DRAM】" class="headerlink" title="5.4.2 动态随机存储器【DRAM】"></a>5.4.2 动态随机存储器【DRAM】</h4><blockquote>
<p>DRAM是利用存储元电路中栅极电容上的电荷来存储信息，只使用一个晶体管</p>
</blockquote>
<ul>
<li>刷新方式<ul>
<li>集中刷新</li>
<li>分散刷新</li>
<li>异步刷新</li>
</ul>
</li>
</ul>
<h4 id="5-4-3-存储器芯片的内部结构"><a href="#5-4-3-存储器芯片的内部结构" class="headerlink" title="5.4.3 存储器芯片的内部结构"></a>5.4.3 存储器芯片的内部结构</h4><blockquote>
<p>存储体，I&#x2F;O读写电路、地址译码和控制电路、片选控制信号、读写控制信号等部分组成</p>
</blockquote>
<ul>
<li>表5 SRAM与DRAM各自特点</li>
</ul>
<table>
<thead>
<tr>
<th>序号</th>
<th>特点</th>
<th>SRAM</th>
<th>DRAM</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>存储信息</td>
<td>触发器</td>
<td>电容</td>
</tr>
<tr>
<td>2</td>
<td>破坏性读出</td>
<td>非</td>
<td>是</td>
</tr>
<tr>
<td>3</td>
<td>需要刷新</td>
<td>否</td>
<td>是</td>
</tr>
<tr>
<td>4</td>
<td>送行列地址</td>
<td>同时送</td>
<td>分两次送</td>
</tr>
<tr>
<td>5</td>
<td>运行速度</td>
<td>快</td>
<td>慢</td>
</tr>
<tr>
<td>6</td>
<td>集成度</td>
<td>低</td>
<td>高</td>
</tr>
<tr>
<td>7</td>
<td>发热量（功耗）</td>
<td>大</td>
<td>小</td>
</tr>
<tr>
<td>8</td>
<td>存储成本</td>
<td>高</td>
<td>低</td>
</tr>
<tr>
<td>9</td>
<td>主要用途</td>
<td>高速缓存</td>
<td>主机内存</td>
</tr>
</tbody></table>
<h3 id="5-5-只读存储器"><a href="#5-5-只读存储器" class="headerlink" title="5.5 只读存储器"></a>5.5 只读存储器</h3><h4 id="5-5-1-分类"><a href="#5-5-1-分类" class="headerlink" title="5.5.1 分类"></a>5.5.1 分类</h4><ul>
<li>掩模式只读存储器</li>
</ul>
<blockquote>
<p>生产过程直接写入</p>
</blockquote>
<ul>
<li>一次可编程只读存储器</li>
</ul>
<blockquote>
<p>一旦写入，无法改变</p>
</blockquote>
<ul>
<li>可擦除可编程只读存储器</li>
<li>闪速存储器</li>
<li>固态硬盘</li>
</ul>
<h3 id="5-6-主存储器"><a href="#5-6-主存储器" class="headerlink" title="5.6 主存储器"></a>5.6 主存储器</h3><h4 id="5-6-1-基本组成"><a href="#5-6-1-基本组成" class="headerlink" title="5.6.1 基本组成"></a>5.6.1 基本组成</h4><blockquote>
<p>主存储器由一个个存储0或1的记忆单元(也称存储元件)构成的存储矩阵（也称存储体）是存储器的核心部分</p>
</blockquote>
<h4 id="5-6-2-主存储器与CPU链接"><a href="#5-6-2-主存储器与CPU链接" class="headerlink" title="5.6.2 主存储器与CPU链接"></a>5.6.2 主存储器与CPU链接</h4><ul>
<li>主存储器通过数据总线、地址总线和控制总线与CPU连接</li>
<li>数据总线的位数与工作频率的乘积正比于数据传输率</li>
<li>地址总线的位数决定了可寻址的最大内存空间</li>
<li>控制总线（读&#x2F;写）指出总线周期的类型和本次输入&#x2F;输出操作完成的时刻</li>
</ul>
<h4 id="5-6-3-主存容量的扩展"><a href="#5-6-3-主存容量的扩展" class="headerlink" title="5.6.3 主存容量的扩展"></a>5.6.3 主存容量的扩展</h4><ul>
<li>位扩展法</li>
<li>字扩展法</li>
<li>字位同时扩展法</li>
</ul>
<h4 id="5-6-4-存储芯片的地址分配和片选"><a href="#5-6-4-存储芯片的地址分配和片选" class="headerlink" title="5.6.4 存储芯片的地址分配和片选"></a>5.6.4 存储芯片的地址分配和片选</h4><ul>
<li>线选法</li>
<li>译码片选法</li>
</ul>
<h4 id="5-6-5-存储器与CPU的连接"><a href="#5-6-5-存储器与CPU的连接" class="headerlink" title="5.6.5 存储器与CPU的连接"></a>5.6.5 存储器与CPU的连接</h4><ul>
<li>合理选择存储芯片</li>
<li>地址线的连接</li>
<li>数据线的连接</li>
<li>读&#x2F;写命令线的连接</li>
<li>片选线的连接</li>
</ul>
<h3 id="5-7-双端口RAM和多模块存储器"><a href="#5-7-双端口RAM和多模块存储器" class="headerlink" title="5.7 双端口RAM和多模块存储器"></a>5.7 双端口RAM和多模块存储器</h3><h4 id="5-7-1-双端口RAM"><a href="#5-7-1-双端口RAM" class="headerlink" title="5.7.1 双端口RAM"></a>5.7.1 双端口RAM</h4><blockquote>
<p>空间并行技术</p>
</blockquote>
<h4 id="5-7-2-多模块存储器"><a href="#5-7-2-多模块存储器" class="headerlink" title="5.7.2 多模块存储器"></a>5.7.2 多模块存储器</h4><blockquote>
<p>时间并行</p>
</blockquote>
<ul>
<li>单体多字存储器</li>
<li>多体并行存储器</li>
</ul>
<h3 id="5-8-高速缓冲存储器"><a href="#5-8-高速缓冲存储器" class="headerlink" title="5.8 高速缓冲存储器"></a>5.8 高速缓冲存储器</h3><blockquote>
<p>通常将存储系统分为“Cache - 主存”层次和“主存-辅存”层次，高速缓冲技术就是利用程序访问的局部性原理</p>
</blockquote>
<ul>
<li>Cache 的基本工作原理</li>
</ul>
<blockquote>
<p>Cache位于存储器层次结构的顶层，通常由SRAM构成，当CPU发出请求时，若Cache命中，将此地址转换为Cache地址，直接对Cache进行读操作，不命中，仍需要访问主存，并把此字所在的块一次性从主存调入Cache。</p>
</blockquote>
<ul>
<li><p>Cache与主存的映射方式</p>
<ul>
<li>直接映射</li>
<li>全相联映射</li>
<li>组相联映射</li>
</ul>
</li>
<li><p>Cache中主存块的替换算法</p>
<ul>
<li>随机算法</li>
<li>先进先出算法</li>
<li>近期最少使用算法</li>
</ul>
</li>
<li><p>Cache写策略</p>
<ul>
<li>全写法【FIFO】</li>
<li>写回法<ul>
<li>写分配法</li>
<li>非写分配法</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="5-9-虚拟存储器"><a href="#5-9-虚拟存储器" class="headerlink" title="5.9 虚拟存储器"></a>5.9 虚拟存储器</h3><blockquote>
<p>虚拟存储器将主存或辅存的地址空间统一编址，形成一个庞大的地址空间，在这个空间，用户可以自由编程，而不必在乎实际的主存容量和程序在主存中实际的存放位置</p>
</blockquote>
<ul>
<li>页式虚拟存储器</li>
</ul>
<blockquote>
<p>以页为基本单位的虚拟存储器，主存的页为实页，虚存的页为虚页</p>
</blockquote>
<ul>
<li><p>页表</p>
</li>
<li><p>快表（TLB）</p>
</li>
<li><p>具有TLB和Cache的多级存储系统</p>
</li>
<li><p>表6 TLB、Page、Cache三种缺失的可能情况</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>序号</th>
<th>TLB</th>
<th>Page</th>
<th>Cache</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>命中</td>
<td>命中</td>
<td>命中</td>
<td>TLB命中则Page一定命中，信息在主存，就可能在Cache中</td>
</tr>
<tr>
<td>2</td>
<td>命中</td>
<td>命中</td>
<td>缺失</td>
<td>TLB命中则Page一定命中，信息在主存，也可能不在Cache中</td>
</tr>
<tr>
<td>3</td>
<td>缺失</td>
<td>命中</td>
<td>命中</td>
<td>TLB缺失但Page可能命中，信息在主存，就可能在Cache中</td>
</tr>
<tr>
<td>4</td>
<td>缺失</td>
<td>命中</td>
<td>缺失</td>
<td>TLB缺失但Page可能命中，信息在主存，也可能不在Cache中</td>
</tr>
<tr>
<td>5</td>
<td>缺失</td>
<td>缺失</td>
<td>缺失</td>
<td>TLB缺失则Page也可能命中，信息不在主存，就一定不在Cache中</td>
</tr>
</tbody></table>
<ul>
<li>段式虚拟存储器</li>
<li>段页式虚拟存储器</li>
</ul>
<blockquote>
<p>虚地址分为段号，段内页号，页内地址三部分</p>
</blockquote>
<ul>
<li><p>虚拟存储器与Cache的比较</p>
</li>
<li><p>相同</p>
<ul>
<li>最终目的都是为了提高系统的性能，两者都有容量、速度、价格的梯度</li>
<li>都把数据划分为小信息块，并作为基本的传递单位，虚存系统的信息块更大</li>
<li>都有地址的映射、替换算法、更新策略等问题</li>
<li>依据程序的局部性原理应用“快速缓存的思想”，将活跃的数据放在相对高速的部件中</li>
</ul>
</li>
<li><p>不同</p>
<ul>
<li>Cache主要解决系统速度，而虚拟存储器却是为了解决主存容量</li>
<li>Cache全由硬件实现，是硬件存储器，对所有程序员透明，而虚拟存储器由OS和硬件共同实现，是逻辑上的存储器，对系统程序员不透明，但对应用程序员透明。</li>
<li>对于不命中性能影响，因为CPU的速度约为Cache的10倍，主存的速度为硬盘的100倍以上，因此虚拟存储器系统不命中时对系统性能影响更大</li>
<li>CPU与Cache和主存都建立了直接访问的通路，而辅存与CPU没有直接通路，也就是说在Cache不命中时主存能和CPU直接通信，同时将数据调入Cache，而虚拟存储器系统不命中时，只能先由硬盘调入主存，而不能直接和CPU通信</li>
</ul>
</li>
</ul>
<h2 id="6-指令系统"><a href="#6-指令系统" class="headerlink" title="6. 指令系统"></a>6. 指令系统</h2><blockquote>
<p>指令就是机器语言的一组有意义的二进制代码，能够使计算机执行某种操作；</p>
</blockquote>
<h3 id="6-1-指令的属性"><a href="#6-1-指令的属性" class="headerlink" title="6.1 指令的属性"></a>6.1 指令的属性</h3><ul>
<li>指令</li>
</ul>
<table>
<thead>
<tr>
<th>操作指令格式</th>
<th>操作码字段</th>
<th>地址码字段</th>
<th>地址码地址</th>
<th>地址码地址</th>
<th>地址码地址</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>零地址指令</td>
<td>OP</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>不需要操作数的指令，仅用在堆栈计算机中</td>
</tr>
<tr>
<td>一地址指令</td>
<td>OP</td>
<td>A1</td>
<td></td>
<td></td>
<td></td>
<td>OP(A1)-&gt;A1加1、减1、求反、求补</td>
</tr>
<tr>
<td>二地址指令</td>
<td>OP</td>
<td>A1</td>
<td>A2</td>
<td></td>
<td></td>
<td>（A1）OP（A2）-&gt;A1算术和逻辑运算指令</td>
</tr>
<tr>
<td>三地址指令</td>
<td>OP</td>
<td>A1</td>
<td>A2</td>
<td>A3(结果)</td>
<td></td>
<td>(A1)OP(A2)-&gt;A3</td>
</tr>
<tr>
<td>四地址指令</td>
<td>OP</td>
<td>A1</td>
<td>A2</td>
<td>A3(结果）</td>
<td>A4(下址）</td>
<td>(A1)OP(A2)-&gt;A3,A4&#x3D;下一条将要执行指令的地址</td>
</tr>
</tbody></table>
<ul>
<li>扩展操作码指令格式</li>
</ul>
<blockquote>
<p>&lt;1&gt; 不允许短码是长码的前缀，即短操作码不能与长操作码的前面部分的代码相同</p>
<p>&lt;2&gt; 各指令的操作码一定不能重复</p>
</blockquote>
<ul>
<li>指令的操作系统<ul>
<li>数据传送</li>
<li>算术和逻辑运算</li>
<li>移位操作</li>
<li>转移操作</li>
<li>输入输出操作</li>
</ul>
</li>
</ul>
<h3 id="6-2-指令的寻址方式"><a href="#6-2-指令的寻址方式" class="headerlink" title="6.2 指令的寻址方式"></a>6.2 指令的寻址方式</h3><blockquote>
<p>有效地址（EA） &#x3D; 形式地址（A） + 寻址方式</p>
</blockquote>
<ul>
<li><p>指令寻址</p>
<blockquote>
<p>寻找下一条将要执行的指令地址称为指令寻址</p>
</blockquote>
<ul>
<li>顺序寻址方式</li>
<li>跳跃寻址方式</li>
</ul>
</li>
<li><p>数据寻址</p>
<blockquote>
<p>寻找操作数的地址称为数据寻址</p>
</blockquote>
<ul>
<li>隐含寻址</li>
<li>立即（数）寻址</li>
<li>直接寻址</li>
<li>间接寻址</li>
<li>寄存器寻址</li>
<li>寄存器间接寻址</li>
<li>相对寻址</li>
<li>基址寻址</li>
<li>变址寻址</li>
<li>堆栈寻址</li>
</ul>
</li>
<li><p>表7 寻址方式、有效地址及访存次数</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>序号</th>
<th>寻址方式</th>
<th>有效地址</th>
<th>访存次数</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>隐含寻址</td>
<td>程序指定</td>
<td>0</td>
</tr>
<tr>
<td>2</td>
<td>立即（数）寻址</td>
<td>A即是操作数</td>
<td>0</td>
</tr>
<tr>
<td>3</td>
<td>直接寻址</td>
<td>EA &#x3D; A</td>
<td>1</td>
</tr>
<tr>
<td>4</td>
<td>一次间接寻址</td>
<td>EA &#x3D; （A）</td>
<td>2</td>
</tr>
<tr>
<td>5</td>
<td>寄存器寻址</td>
<td>EA &#x3D; Ri</td>
<td>0</td>
</tr>
<tr>
<td>6</td>
<td>寄存器间接一次寻址</td>
<td>EA &#x3D; (Ri)</td>
<td>1</td>
</tr>
<tr>
<td>7</td>
<td>相对寻址</td>
<td>EA &#x3D; (PC) + A</td>
<td>1</td>
</tr>
<tr>
<td>8</td>
<td>基址寻址</td>
<td>EA &#x3D; (BR) + A</td>
<td>1</td>
</tr>
<tr>
<td>9</td>
<td>变址寻址</td>
<td>EA &#x3D; (IX) + A</td>
<td>1</td>
</tr>
<tr>
<td>10</td>
<td>堆栈寻址</td>
<td>入栈出栈EA确定方式不同</td>
<td>硬堆栈不访存、软堆栈访存1次</td>
</tr>
</tbody></table>
<h3 id="6-3-X86汇编指令"><a href="#6-3-X86汇编指令" class="headerlink" title="6.3 X86汇编指令"></a>6.3 X86汇编指令</h3><blockquote>
<p>X86处理器中有8个32位的通用寄存器</p>
</blockquote>
<ul>
<li>寻址模式</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mov eax, [ebx];</span><br><span class="line">mov [var], ebx;</span><br><span class="line">mov eax,[esi-4];</span><br><span class="line">mov [esi+eax], cl;</span><br><span class="line">mov edx, [esi+4*ebx];</span><br></pre></td></tr></table></figure>

<blockquote>
<p>最多只能利用两个32位寄存器和一个32位的有符号常数相加计算出一个内存地址</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mov eax, [ebx-ecx];错误，只能够用加法</span><br><span class="line">mov [eax+esi+edi], ebx;错误，最多只能有两个寄存器参与运算</span><br></pre></td></tr></table></figure>

<ul>
<li>数据长度规定</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mov [ebx], 2;//不能够识别</span><br></pre></td></tr></table></figure>

<p>可以写成</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mov byte ptr [ebx], 2;单字节</span><br><span class="line">mov word ptr [ebx], 2;双字节</span><br><span class="line">mov dword ptr [ebx], 2;四字节</span><br></pre></td></tr></table></figure>

<ul>
<li>常用指令</li>
</ul>
<blockquote>
<p><reg> 表示任意寄存器，其后带有数字，则指定其位数；<mem>表示内存地址；<con>表示常数</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mov ax &lt;con16&gt;;机器码为B8H</span><br><span class="line">mov a1, &lt;con8&gt;;机器码为B0H</span><br><span class="line">mov &lt;reg16&gt;/&lt;mem16&gt;, &lt;reg16&gt;;机器码为89H</span><br><span class="line">mov &lt;reg8&gt;, &lt;reg8&gt;/&lt;mem8&gt;;机器码为8AH</span><br><span class="line">mov &lt;reg16&gt;, &lt;reg16&gt;/&lt;mem16&gt;;机器码为8BH</span><br></pre></td></tr></table></figure>

<ul>
<li><p>数据传送指令</p>
</li>
<li><p>mov指令</p>
</li>
</ul>
<blockquote>
<p>将第二个操作数复制到第一个操作数（寄存器或内存），但不能从内存<mem>复制到<mem>中</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mov &lt;reg&gt;, &lt;reg&gt;</span><br><span class="line">mov &lt;reg&gt;, &lt;mem&gt;</span><br><span class="line">mov &lt;mem&gt;, &lt;reg&gt;</span><br><span class="line">mov &lt;reg&gt;, &lt;con&gt;</span><br><span class="line">mov &lt;mem&gt;, &lt;con&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>栗子</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mov eax, ebx;</span><br><span class="line">mov byte ptr [var], 5;</span><br></pre></td></tr></table></figure>

<ul>
<li>push指令</li>
</ul>
<blockquote>
<p>push指令将操作数压入内存的栈，常用于函数调用</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">push &lt;reg32&gt;</span><br><span class="line">push &lt;mem&gt;</span><br><span class="line">push &lt;con32&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>栗子</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">push eax;</span><br><span class="line">push [var];</span><br></pre></td></tr></table></figure>

<ul>
<li>pop指令</li>
</ul>
<blockquote>
<p>pop出栈</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pop edi</span><br><span class="line">pop [ebx]</span><br></pre></td></tr></table></figure>

<ul>
<li><p>算术与逻辑运算指令</p>
</li>
<li><p>add&#x2F;sub指令</p>
</li>
</ul>
<blockquote>
<p>将两个操作数相加或者相减，结果保存到第一个操作数中</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">add &lt;reg&gt;, &lt;reg&gt; / sub &lt;reg&gt;, &lt;reg&gt;</span><br><span class="line">add &lt;reg&gt;, &lt;mem&gt; / sub &lt;reg&gt;, &lt;mem&gt;</span><br><span class="line">add &lt;mem&gt;, &lt;reg&gt; / sub &lt;mem&gt;, &lt;reg&gt;</span><br><span class="line">add &lt;reg&gt;, &lt;con&gt; / sub &lt;reg&gt;, &lt;con&gt;</span><br><span class="line">add &lt;mem&gt;, &lt;con&gt; / sub &lt;mem&gt;, &lt;con&gt; </span><br></pre></td></tr></table></figure>

<ul>
<li>栗子</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sub eax, 10;eax&lt;- eax - 10</span><br><span class="line">add byte ptr [var], 10; var&lt;- var+10</span><br></pre></td></tr></table></figure>

<ul>
<li>inc&#x2F;dec指令</li>
</ul>
<blockquote>
<p>inc、dec指令分别表示将操作数自加1、自减1</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">inc &lt;reg&gt; / dec &lt;reg&gt;</span><br><span class="line">inc &lt;mem&gt; / dec &lt;mem&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>栗子</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dec eax;eax自减1</span><br><span class="line">inc dword ptr [var];自加1</span><br></pre></td></tr></table></figure>

<ul>
<li>imul指令</li>
</ul>
<blockquote>
<p>带符号整数乘法指令，第一个操作数必须为寄存器，将第一个和第二个或者第二个和第三个操作数相乘，结果保存在第一个操作数中</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">imul &lt;reg32&gt;, &lt;reg32&gt;</span><br><span class="line">imul &lt;reg32&gt;, &lt;mem&gt;</span><br><span class="line">imul &lt;reg32&gt;, &lt;reg32&gt;, &lt;con&gt;</span><br><span class="line">imul &lt;reg32&gt;, &lt;mem&gt;, &lt;con&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>栗子</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">imul eax, [var];eax&lt;-eax*[var]</span><br><span class="line">imul esi, edi, 25;esi&lt;-edi*25</span><br></pre></td></tr></table></figure>

<ul>
<li>idiv指令</li>
</ul>
<blockquote>
<p>idiv是带符号整数除法指令，它只有一个操作数，即除数，而被除数则为edx：eax中的内容，商送到eax，余数送到edx</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">idiv &lt;reg32&gt;</span><br><span class="line">idiv &lt;mem&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>栗子</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">idiv ebx;</span><br><span class="line">idiv dword ptr [var];</span><br></pre></td></tr></table></figure>

<ul>
<li>and&#x2F;or&#x2F;xor指令</li>
</ul>
<blockquote>
<p>逻辑与、或、异或，操作数的位操作</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">and &lt;reg&gt;, &lt;reg&gt; / or &lt;reg&gt;, &lt;reg&gt; / xor &lt;reg&gt;, &lt;reg&gt;</span><br><span class="line">and &lt;reg&gt;, &lt;mem&gt; / or &lt;reg&gt;, &lt;mem&gt; / xor &lt;reg&gt;, &lt;mem&gt;</span><br><span class="line">and &lt;mem&gt;, &lt;reg&gt; / or &lt;mem&gt;, &lt;reg&gt; / xor &lt;mem&gt;, &lt;reg&gt; </span><br><span class="line">and &lt;reg&gt;, &lt;con&gt; / or &lt;reg&gt;, &lt;con&gt; / xor &lt;reg&gt;, &lt;con&gt; </span><br><span class="line">and &lt;mem&gt;, &lt;con&gt; / or &lt;mem&gt;, &lt;con&gt; / xor &lt;mem&gt;, &lt;con&gt;  </span><br></pre></td></tr></table></figure>

<ul>
<li>栗子</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">and eax, 0fH ;将eax的强28位全部置为0，最后四位保持不变</span><br><span class="line">xor edx, edx ;置edx的内容为0</span><br></pre></td></tr></table></figure>

<ul>
<li>not指令</li>
</ul>
<blockquote>
<p>not指令是位翻转指令，将操作中的每一个数进行翻转,0-&gt;1,1-&gt;0</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">not &lt;reg&gt;</span><br><span class="line">not &lt;mem&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>栗子</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">not byte ptr [var];</span><br></pre></td></tr></table></figure>

<ul>
<li>neg指令</li>
</ul>
<blockquote>
<p>neg是取负指令</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">neg &lt;reg&gt;</span><br><span class="line">neg &lt;mem&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>栗子</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">neg eax;eax &lt;- -eax</span><br></pre></td></tr></table></figure>

<ul>
<li>shl&#x2F;shr指令</li>
</ul>
<blockquote>
<p>逻辑移位指令，shl逻辑左移，shr逻辑右移；第一个操作数表示被操作数，第二个表示指示移位的位数</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">shl &lt;reg&gt;, &lt;con8&gt; / shr &lt;reg&gt;, &lt;con8&gt;</span><br><span class="line">shl &lt;mem&gt;, &lt;con8&gt; / shr &lt;mem&gt;, &lt;con8&gt;</span><br><span class="line">shl &lt;reg&gt;, &lt;cl&gt; / shr &lt;reg&gt;, &lt;cl&gt;</span><br><span class="line">shl &lt;mem&gt;, &lt;cl&gt; / shr &lt;mem&gt;, &lt;cl&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>栗子</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">shl eax, 1;eax的值左移一位 *2</span><br><span class="line">shr ebx，cl；</span><br></pre></td></tr></table></figure>

<ul>
<li>控制流指令</li>
</ul>
<blockquote>
<p>X86处理器维持着一个指示当前执行指令的指令指针（IP），此指针自动指向下一条指令</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mov esi, [ebp + 8]</span><br><span class="line">begin : xor ecx, ecx</span><br><span class="line">		mov eax, [esi]</span><br></pre></td></tr></table></figure>

<ul>
<li>jmp指令</li>
</ul>
<blockquote>
<p>jmp指令控制IP转移到lable所指示的地址</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jmp &lt;lable&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>栗子</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jmp begin</span><br></pre></td></tr></table></figure>

<ul>
<li>jcondition指令</li>
</ul>
<blockquote>
<p>条件转移指令，它依据处理机状态字中的一系列状态转移</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">je &lt;lable&gt; (jump when equal)</span><br><span class="line">jne &lt;lable&gt; (jump when not equal)</span><br><span class="line">jz &lt;lable&gt; (jump when last result was zero)</span><br><span class="line">jg &lt;lable&gt; (jump when greater than)</span><br><span class="line">jge &lt;lable&gt; (jump when greater than or equal to)</span><br><span class="line">jl &lt;lable&gt; (jump when less than)</span><br><span class="line">jle &lt;lable&gt; (jump when less than or equal to)</span><br></pre></td></tr></table></figure>

<ul>
<li>栗子</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cmp eax, ebx</span><br><span class="line">jle <span class="keyword">done</span>;如果eax的值小于等于ebx的值，跳转到<span class="keyword">done</span>指示的指令执行，否则执行下一条指令</span><br></pre></td></tr></table></figure>

<ul>
<li>cmp指令</li>
</ul>
<blockquote>
<p>cmp用来比较两个操作数的值，并根据比较结果设置处理机状态字中的条件码</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cmp &lt;reg&gt;, &lt;reg&gt;</span><br><span class="line">cmp &lt;reg&gt;, &lt;mem&gt;</span><br><span class="line">cmp &lt;reg&gt;, &lt;con&gt;</span><br><span class="line">cmp &lt;mem&gt;, &lt;reg&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>栗子</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cmp dword ptr [var], 10</span><br><span class="line">jne loop;</span><br></pre></td></tr></table></figure>

<ul>
<li>call&#x2F;ret指令</li>
</ul>
<blockquote>
<p>分别实现子程序（过程、函数）的调用和返回</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">call &lt;lable&gt;</span><br><span class="line">ret</span><br></pre></td></tr></table></figure>

<h3 id="6-4-复杂指令系统计算机（-CISC）和精简指令系统计算机（RISC）"><a href="#6-4-复杂指令系统计算机（-CISC）和精简指令系统计算机（RISC）" class="headerlink" title="6.4 复杂指令系统计算机（ CISC）和精简指令系统计算机（RISC）"></a>6.4 复杂指令系统计算机（ CISC）和精简指令系统计算机（RISC）</h3><ul>
<li>表8 CISC和RISC的对比</li>
</ul>
<table>
<thead>
<tr>
<th>序号</th>
<th>对比项目</th>
<th>CISC</th>
<th>RISC</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>指令系统</td>
<td>复杂，庞大</td>
<td>简单、精简</td>
</tr>
<tr>
<td>2</td>
<td>指令数目</td>
<td>一般大于200条</td>
<td>一般小于100条</td>
</tr>
<tr>
<td>3</td>
<td>指令字长</td>
<td>不固定</td>
<td>定长</td>
</tr>
<tr>
<td>4</td>
<td>可访存指令</td>
<td>不加限制</td>
<td>只有Load&#x2F;Store指令</td>
</tr>
<tr>
<td>5</td>
<td>各种指令执行时间</td>
<td>相差较大</td>
<td>绝大多数在一个周期内完成</td>
</tr>
<tr>
<td>6</td>
<td>各种指令使用频度</td>
<td>相差很大</td>
<td>都比较常用</td>
</tr>
<tr>
<td>7</td>
<td>通用寄存器数量</td>
<td>较少</td>
<td>多</td>
</tr>
<tr>
<td>8</td>
<td>目标代码</td>
<td>难以用优化编译生成高效的目标代码程序</td>
<td>采用优化的编译程序，生成代码较为高效</td>
</tr>
<tr>
<td>9</td>
<td>控制方式</td>
<td>绝大多数为微程序控制</td>
<td>绝大多数为组合逻辑控制</td>
</tr>
<tr>
<td>10</td>
<td>指令流水线</td>
<td>可以通过一定方式实现</td>
<td>必须实现</td>
</tr>
</tbody></table>
<h2 id="7-中央处理器"><a href="#7-中央处理器" class="headerlink" title="7. 中央处理器"></a>7. 中央处理器</h2><h3 id="7-1-功能和基础结构"><a href="#7-1-功能和基础结构" class="headerlink" title="7.1 功能和基础结构"></a>7.1 功能和基础结构</h3><ul>
<li><p>CPU的功能</p>
<ul>
<li>指令控制</li>
<li>操作控制</li>
<li>时间控制</li>
<li>数据加工</li>
<li>中断处理</li>
</ul>
</li>
<li><p>CPU的基本机构</p>
<ul>
<li><p>运算器</p>
<ul>
<li>算术逻辑单元（ALU）</li>
<li>暂存寄存器</li>
<li>累加寄存器</li>
<li>通用寄存器组</li>
<li>程序状态字寄存器</li>
<li>移位器</li>
<li>计数器</li>
</ul>
</li>
<li><p>控制器</p>
<blockquote>
<p>控制器有硬布线控制器和微程序控制器</p>
</blockquote>
<ul>
<li>程序计数器</li>
<li>指令寄存器</li>
<li>指令译码器</li>
<li>存储器地址寄存器</li>
<li>存储器数据寄存器</li>
<li>时序系统</li>
<li>微操作信号发生器</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="7-2-指令执行过程"><a href="#7-2-指令执行过程" class="headerlink" title="7.2 指令执行过程"></a>7.2 指令执行过程</h3><blockquote>
<p>CPU从主存中取出并执行一条指令的时间称为指令周期</p>
</blockquote>
<ul>
<li><p>指令周期的数据流</p>
<ul>
<li>取指周期</li>
</ul>
<blockquote>
<p>&lt;1&gt; PC MAR 地址总线 主存</p>
<p>&lt;2&gt; CU发出控制信号 控制总线 主存</p>
<p>&lt;3&gt; 主存 数据总线 MDR IR（存放指令）</p>
<p>&lt;4&gt;CU发出读命令PC内容+1</p>
</blockquote>
<ul>
<li>间址周期</li>
</ul>
<blockquote>
<p>&lt;1&gt; Ad（IR或MDR）、MAR、地址总线、主存</p>
<p>&lt;2&gt; CU发出读命令、控制总线、主存</p>
<p>&lt;3&gt; 主存、数据总线、MDR（存放有效地址）</p>
</blockquote>
<ul>
<li>执行周期</li>
</ul>
<blockquote>
<p>执行周期的任务是根据IR中的指令字的操作码和操作数通过ALU操作产生执行结果，没有统一的数据流向</p>
</blockquote>
<ul>
<li>中断周期</li>
</ul>
<blockquote>
<p>中断周期的任务是处理中断请求</p>
<p>&lt;1&gt; CU控制将SP-1，SP、MAR、地址总线、主存</p>
<p>&lt;2&gt; CU发出写命令、控制总线、主存</p>
<p>&lt;3&gt; PC、MDR、数据总线、主存（程序断点存入主存）</p>
<p>&lt;4&gt; CU（中断服务程序的入口地址）、PC</p>
</blockquote>
</li>
</ul>
<h3 id="7-3-指令执行方案"><a href="#7-3-指令执行方案" class="headerlink" title="7.3 指令执行方案"></a>7.3 指令执行方案</h3><ul>
<li>单指令周期</li>
<li>多指令周期</li>
<li>流水线方案</li>
</ul>
<h3 id="7-4-数据通路的功能和基本结构"><a href="#7-4-数据通路的功能和基本结构" class="headerlink" title="7.4 数据通路的功能和基本结构"></a>7.4 数据通路的功能和基本结构</h3><blockquote>
<p>数据通路是数据在功能部件之间传送的路径</p>
</blockquote>
<ul>
<li><p>基本结构</p>
<ul>
<li>CPU内部单总线方式</li>
<li>CPU内部三总线方式</li>
<li>专用数据通路方式</li>
</ul>
</li>
<li><p>数据流向</p>
<ul>
<li>寄存器之间的数据传送</li>
</ul>
<blockquote>
<p>PC -&gt;BUS</p>
<p>BUS-&gt;MAR</p>
</blockquote>
<ul>
<li>主存与CPU之间的数据传送</li>
</ul>
<blockquote>
<p>PC-&gt;BUS-&gt;MAR</p>
<p>1-&gt;R</p>
<p>MEM(MAR)-&gt;MDR</p>
<p>MDR-&gt;Bus-&gt;IR</p>
</blockquote>
<ul>
<li>执行算术或逻辑运算</li>
</ul>
<blockquote>
<p>Ad(IR)-&gt;BUS-&gt;MAR</p>
<p>1-&gt;R</p>
<p>MEM-&gt;数据线-&gt;MDR</p>
<p>MDR-&gt;BUS-&gt;Y</p>
<p>(ACC)+（Y）-&gt;Z</p>
<p>Z-&gt;ACC</p>
</blockquote>
</li>
</ul>
<h3 id="7-5-控制器的功能和工作原理"><a href="#7-5-控制器的功能和工作原理" class="headerlink" title="7.5 控制器的功能和工作原理"></a>7.5 控制器的功能和工作原理</h3><h4 id="7-5-1-硬布线控制器"><a href="#7-5-1-硬布线控制器" class="headerlink" title="7.5.1 硬布线控制器"></a>7.5.1 硬布线控制器</h4><ul>
<li>CU输入信号来源</li>
</ul>
<blockquote>
<p>&lt;1&gt; 经指令译码器译码产生的指令信息</p>
<p>&lt;2&gt;时序系统产生的机器周期信号和节拍信号</p>
<p>&lt;3&gt; 来自执行单元的反馈信息即标志</p>
</blockquote>
<ul>
<li><p>时序系统及微操作</p>
<ul>
<li>时钟周期</li>
<li>机器周期</li>
<li>指令周期</li>
<li>微操作命令分析<ul>
<li>取指周期的微操作命令</li>
<li>间址周期的微操作命令</li>
<li>执行周期的微操作命令</li>
</ul>
</li>
</ul>
</li>
<li><p>CPU的控制方式</p>
<ul>
<li>同步控制方式</li>
<li>异步控制方式</li>
<li>联合控制方式</li>
</ul>
</li>
<li><p>硬布线控制单元设计步骤</p>
<ul>
<li>列出微操作命令的操作时间表</li>
<li>进行微操作信号综合</li>
<li>画出微操作命令的逻辑图</li>
</ul>
</li>
</ul>
<h4 id="7-5-2-微程序控制器"><a href="#7-5-2-微程序控制器" class="headerlink" title="7.5.2 微程序控制器"></a>7.5.2 微程序控制器</h4><ul>
<li><p>基本概念</p>
<ul>
<li>微命令与微操作</li>
<li>微指令与微周期</li>
<li>主存储器与控制存储器</li>
<li>程序与微程序</li>
</ul>
</li>
<li><p>寄存器的区别</p>
<ul>
<li>地址寄存器【MAR】</li>
</ul>
<blockquote>
<p>用于存放主存的读、写地址</p>
</blockquote>
<ul>
<li>微地址寄存器【CMAR】</li>
</ul>
<blockquote>
<p>用于存放控制存储器的读写微指令的地址</p>
</blockquote>
<ul>
<li>指令寄存器【IR】</li>
</ul>
<blockquote>
<p>用于存放从主存中读出的指令</p>
</blockquote>
<ul>
<li>微指令寄存器【CMDR】</li>
</ul>
<blockquote>
<p>用于存放从控制存储器中读出的微指令</p>
</blockquote>
</li>
<li><p>微程序控制器的组成和工作过程</p>
<ul>
<li>控制存储器</li>
<li>微指令寄存器</li>
<li>微地址形成部件</li>
<li>微地址寄存器</li>
</ul>
</li>
<li><p>微程序控制器的工作过程</p>
<ul>
<li>执行取微指令公共操作</li>
<li>由机器指令的操作码字段通过微地址形成部件产生该机器指令所对应的微程序的入口地址，并送入CMAR</li>
<li>从CM中逐条取出对应的微指令并执行</li>
<li>执行完对应于第一条机器指令的一个微程序后，又回到取指微程序的入口地址，重复第一步，以完成取下一条机器指令的操作</li>
</ul>
</li>
<li><p>微指令的编码方式</p>
<ul>
<li>直接编码（直接控制）方式</li>
<li>字段直接编码方式</li>
</ul>
</li>
<li><p>微指令的地址形成方式</p>
<ul>
<li>直接由微指令的下地址字段指出</li>
<li>根据机器指令的操作码形成</li>
</ul>
</li>
<li><p>微指令的格式</p>
<ul>
<li>水平型微指令</li>
<li>垂直型微指令</li>
<li>混合型微指令</li>
</ul>
</li>
<li><p>微程序控制单元的设计步骤</p>
<ul>
<li>写出对应机器指令的微操作命令及节拍安排</li>
<li>确定微指令格式</li>
<li>编写微指令码点</li>
</ul>
</li>
<li><p>表 9 微程序控制器和硬布线控制器的对比</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>序号</th>
<th>对比项目</th>
<th>微程序控制器</th>
<th>硬布线控制器</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>工作原理</td>
<td>微操作控制信号以微程序的形式存放在控制存储器中，执行指令时读出即可</td>
<td>微操作控制信号由组合逻辑电路根据当前的指令码、状态和时序，即时产生</td>
</tr>
<tr>
<td>2</td>
<td>执行速度</td>
<td>慢</td>
<td>快</td>
</tr>
<tr>
<td>3</td>
<td>规整性</td>
<td>较规整</td>
<td>繁琐、不规整</td>
</tr>
<tr>
<td>4</td>
<td>应用场合</td>
<td>CISC CPU</td>
<td>RISC CPU</td>
</tr>
<tr>
<td>5</td>
<td>易扩充性</td>
<td>易扩充修改</td>
<td>困难</td>
</tr>
</tbody></table>
<h3 id="7-6-指令流水线"><a href="#7-6-指令流水线" class="headerlink" title="7.6 指令流水线"></a>7.6 指令流水线</h3><blockquote>
<p>采用流水线技术只需增加少量硬件就能够把计算机的运算速度提高几倍，并行处理技术</p>
</blockquote>
<ul>
<li><p>阶段</p>
<ul>
<li>取指</li>
<li>分析</li>
<li>执行</li>
</ul>
</li>
<li><p>当多条指令在处理器执行</p>
<ul>
<li>顺序执行方式</li>
<li>流水线执行方式</li>
</ul>
</li>
<li><p>流水线的分类</p>
<ul>
<li>部件功能级、处理机级和处理机间级流水线</li>
<li>单功能流水线和多功能流水线</li>
<li>动态流水线和静态流水线</li>
<li>线性流水线和非线性流水线</li>
</ul>
</li>
<li><p>影响流水线的因素</p>
<ul>
<li><p>资源冲突【结构相关】【资源重复配置+数据存储器+指令存储器】</p>
</li>
<li><p>数据冲突【数据相关】【同步】</p>
<ul>
<li>写后读（Read After Write，RAW）</li>
<li>读后写（Write After Read ，WAR）</li>
<li>写后写（Write AfterWrite，WAW）</li>
</ul>
</li>
<li><p>控制冲突【控制相关】</p>
</li>
</ul>
</li>
<li><p>流水线的性能指标</p>
<ul>
<li>流水线的吞吐率</li>
</ul>
<blockquote>
<p>TP &#x3D; n&#x2F;Tk</p>
</blockquote>
<ul>
<li>流水线的加速比</li>
</ul>
<blockquote>
<p>S &#x3D; T0&#x2F;Tk</p>
</blockquote>
<ul>
<li>流水线的效率</li>
</ul>
<blockquote>
<p>E &#x3D; T0&#x2F;(kTk)</p>
</blockquote>
</li>
<li><p>超标量流水线</p>
<ul>
<li>超标量流水线技术</li>
<li>超流水线技术</li>
</ul>
</li>
</ul>
<h2 id="8-总线"><a href="#8-总线" class="headerlink" title="8. 总线"></a>8. 总线</h2><blockquote>
<p>总线是一组能为多个部件分时共享的公共信息传送线路，分时和共享</p>
</blockquote>
<h3 id="8-1-总线属性"><a href="#8-1-总线属性" class="headerlink" title="8.1 总线属性"></a>8.1 总线属性</h3><ul>
<li><p>总线设备</p>
<ul>
<li>主设备</li>
<li>从设备</li>
</ul>
</li>
<li><p>总线特性</p>
<ul>
<li>机械特性（尺寸、形状）</li>
<li>电气特性（传输方向、有效的电平范围）</li>
<li>功能特性（每根传输线的功能）</li>
<li>时间特性（信号和时序的关系）</li>
</ul>
</li>
<li><p>总线的猝发传输方式</p>
</li>
</ul>
<blockquote>
<p>在一个总线周期内传输存储地址连续的多个数据字的总线传输方式</p>
</blockquote>
<ul>
<li><p>总线的分类</p>
<ul>
<li>片内总线</li>
<li>系统总线<ul>
<li>地址总线</li>
<li>数据总线</li>
<li>控制总线</li>
</ul>
</li>
<li>通信总线<ul>
<li>并行总线</li>
<li>串行总线</li>
</ul>
</li>
</ul>
</li>
<li><p>系统总线的结构</p>
<ul>
<li>单总线结构</li>
<li>双总线结构</li>
<li>三总线结构</li>
</ul>
</li>
<li><p>总线的性能指标</p>
<ul>
<li>总线的传输周期</li>
<li>总线时钟周期</li>
<li>总线的工作频率</li>
<li>总线的时间频率</li>
<li>总线带宽（不是总线宽度）</li>
</ul>
<blockquote>
<p>总线带宽 &#x3D; (总线宽度&#x2F;8)* 总线频率 </p>
<p>（总线工作频率）22*（16&#x2F;8）</p>
</blockquote>
<ul>
<li>总线复用</li>
<li>信号线数</li>
</ul>
</li>
</ul>
<h3 id="8-2-总线仲裁"><a href="#8-2-总线仲裁" class="headerlink" title="8.2 总线仲裁"></a>8.2 总线仲裁</h3><ul>
<li>集中仲裁方式<ul>
<li>链式查询方式</li>
<li>计数器定时查询方式</li>
<li>独立请求方式</li>
</ul>
</li>
<li>分布仲裁方式</li>
</ul>
<blockquote>
<p>分布仲裁方式不需要中央仲裁器，每个潜在的</p>
</blockquote>
<ul>
<li>表10 三种集中仲裁方式的区别和联系</li>
</ul>
<table>
<thead>
<tr>
<th>序号</th>
<th>对比项目</th>
<th>链式查询</th>
<th>计数器定时查询</th>
<th>独立请求</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>控制线数</td>
<td>3（总线请求：1；总线忙：1；总线允许：1；）</td>
<td>[log2n] + 2(总线请求：1；总线忙：1；总线允许：[log2n]；)</td>
<td>2n+1(总线请求：n；总线忙：n；总线允许：1；)</td>
</tr>
<tr>
<td>2</td>
<td>优点</td>
<td>优先级固定；结构简单；扩充容易</td>
<td>优先级灵活</td>
<td>响应速度快，优先级灵活</td>
</tr>
<tr>
<td>3</td>
<td>缺点</td>
<td>对电路故障敏感，优先级不灵活</td>
<td>控制线路多；控制复杂</td>
<td>控制线多；控制复杂</td>
</tr>
</tbody></table>
<h3 id="8-3-总线操作和定时"><a href="#8-3-总线操作和定时" class="headerlink" title="8.3 总线操作和定时"></a>8.3 总线操作和定时</h3><ul>
<li><p>总线传输的4个阶段</p>
<ul>
<li>申请分配阶段</li>
<li>寻址阶段</li>
<li>传输阶段</li>
<li>结束阶段</li>
</ul>
</li>
<li><p>同步定时方式【同步通信】</p>
</li>
</ul>
<blockquote>
<p>系统采用一个统一的时钟信号来协调发送和接收双方的传送定时关系</p>
</blockquote>
<ul>
<li>异步定时方式<ul>
<li>不互锁方式</li>
<li>半互锁方式</li>
<li>全互锁方式</li>
</ul>
</li>
</ul>
<h3 id="8-4-总线标准"><a href="#8-4-总线标准" class="headerlink" title="8.4 总线标准"></a>8.4 总线标准</h3><ul>
<li>ISA【并行】</li>
<li>EISA【并行】</li>
<li>VESA</li>
<li>PCI</li>
<li>PCI-Express【PCI-E】</li>
<li>AGP</li>
<li>RS-232C</li>
<li>USB</li>
<li>PCMCIA</li>
<li>IDE</li>
<li>SCSI</li>
<li>SATA</li>
</ul>
<h2 id="9-输入-x2F-输出系统"><a href="#9-输入-x2F-输出系统" class="headerlink" title="9. 输入&#x2F;输出系统"></a>9. 输入&#x2F;输出系统</h2><blockquote>
<p>输入输出是以主机为中心</p>
</blockquote>
<h3 id="9-1-基本属性"><a href="#9-1-基本属性" class="headerlink" title="9.1 基本属性"></a>9.1 基本属性</h3><ul>
<li>外部设备</li>
<li>接口</li>
<li>输入设备</li>
<li>输出设备</li>
<li>外存设备</li>
<li>I&#x2F;O软件</li>
<li>I&#x2F;O硬件</li>
</ul>
<h3 id="9-2-I-x2F-O控制方式"><a href="#9-2-I-x2F-O控制方式" class="headerlink" title="9.2 I&#x2F;O控制方式"></a>9.2 I&#x2F;O控制方式</h3><ul>
<li>程序查询方式</li>
<li>程序中断方式</li>
<li>DMA方式【直接内存访问】</li>
<li>通道方式</li>
</ul>
<h3 id="9-3-外部设备"><a href="#9-3-外部设备" class="headerlink" title="9.3 外部设备"></a>9.3 外部设备</h3><ul>
<li><p>输入设备</p>
<ul>
<li>键盘</li>
<li>鼠标</li>
</ul>
</li>
<li><p>输出设备</p>
<ul>
<li><p>显示器</p>
<ul>
<li>屏幕大小</li>
<li>分辨率</li>
<li>灰度级</li>
<li>刷新</li>
<li>刷新频率</li>
<li>显示存储器【VRAM】<ul>
<li>阴极射线管（CRT）显示器<ul>
<li>字符显示器</li>
<li>图形显示器</li>
</ul>
</li>
<li>液晶显示器【LCD】</li>
<li>LED（发光二极管）显示器</li>
</ul>
</li>
</ul>
</li>
<li><p>打印机</p>
<ul>
<li>针式打印机</li>
<li>喷黑式打印机</li>
<li>激光打印机</li>
</ul>
</li>
<li><p>外存储器</p>
<ul>
<li>磁盘存储器</li>
<li>磁盘阵列<ul>
<li>RAID0</li>
<li>RAID1</li>
<li>RAID2</li>
<li>RAID3</li>
<li>RAID4</li>
<li>RAID5</li>
</ul>
</li>
<li>光盘存储器<ul>
<li>CD-ROM</li>
<li>CD-R</li>
<li>CD-RW</li>
<li>DVD-ROM</li>
</ul>
</li>
<li>固态硬盘<ul>
<li>Flash Memory</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="9-4-I-x2F-O接口"><a href="#9-4-I-x2F-O接口" class="headerlink" title="9.4 I&#x2F;O接口"></a>9.4 I&#x2F;O接口</h3><ul>
<li><p>I&#x2F;O接口的功能</p>
<ul>
<li>实现主机和外设的通信联络控制</li>
<li>进行地址译码和设备选择</li>
<li>实现数据缓冲</li>
<li>信号格式的转换</li>
<li>传送控制信号和状态信息</li>
</ul>
</li>
<li><p>I&#x2F;O接口的基本结构</p>
<blockquote>
<p>接口和端口不是同一个概念，端口是指接口电路中可以进行读&#x2F;写的寄存器，若干端口加上相应的控制逻辑才可以组成接口</p>
</blockquote>
</li>
<li><p>I&#x2F;O接口的类型</p>
<ul>
<li>按照数据传送方式<ul>
<li>并行接口【一个字节或一个字的所有位】</li>
<li>串行接口【一位一位】</li>
</ul>
</li>
<li>按照主机访问I&#x2F;O设备的控制方式<ul>
<li>程序查询接口</li>
<li>中断接口</li>
<li>DMA接口</li>
</ul>
</li>
<li>按功能选择的灵活性<ul>
<li>可编程接口</li>
<li>不可编程接口</li>
</ul>
</li>
</ul>
</li>
<li><p>I&#x2F;O端口及其编址</p>
<ul>
<li>统一编址【存储器映射方式】</li>
<li>独立编址【I&#x2F;O映射方式】</li>
</ul>
</li>
</ul>
<h3 id="9-5-I-x2F-O方式"><a href="#9-5-I-x2F-O方式" class="headerlink" title="9.5 I&#x2F;O方式"></a>9.5 I&#x2F;O方式</h3><ul>
<li><p>程序查询方式</p>
<ul>
<li>CPU执行初始化程序，并预置传送参数</li>
<li>向I&#x2F;O接口发出命令字，启动I&#x2F;o设备</li>
<li>向外设接口读取其状态信息</li>
<li>CPU不断查询I&#x2F;O设备状态，直到外设准备就绪</li>
<li>传送一次数据</li>
<li>修改地址和计数器参数</li>
<li>判断传送是否结束，若未结束转第三步，直至计数器位为0</li>
</ul>
</li>
<li><p>程序中断方式</p>
<ul>
<li>异常和中断<ul>
<li>异常<ul>
<li>故障</li>
<li>自陷</li>
<li>终止</li>
</ul>
</li>
<li>外部中断</li>
</ul>
</li>
</ul>
</li>
<li><p>中断的作用</p>
<ul>
<li>实现CPU与I&#x2F;O设备的并行工作</li>
<li>处理硬件故障和软件错误</li>
<li>实现人机交互，用户干预机器需要用到中断系统</li>
<li>实现多道程序，分时操作，多道程序的切换需借助于中断系统</li>
<li>实时处理需要借助中断系统来实现快速响应</li>
<li>实现应用程序和操作系统（管态程序）的切换，也称为“软中断”</li>
<li>多处理器系统中各处理器之间的信息交流和任务切换</li>
</ul>
</li>
<li><p>中断的工作流程</p>
<ul>
<li>中断请求</li>
</ul>
<blockquote>
<p>内中断皆为不可屏蔽中断</p>
</blockquote>
<ul>
<li>中断判优</li>
<li>CPU响应中断的条件<ul>
<li>中断源有中断请求</li>
<li>CPU允许中断及断开中断</li>
<li>一条指令执行完毕,且没有更紧迫的任务</li>
</ul>
</li>
<li>中断响应<ul>
<li>关中断</li>
<li>保存断点</li>
<li>引出中断服务程序</li>
</ul>
</li>
<li>中断向量</li>
<li>中断处理过程<ul>
<li>关中断</li>
<li>保存断点</li>
<li>引出中断服务程序</li>
<li>保存现场和屏蔽字</li>
<li>开中断</li>
<li>执行中断服务程序</li>
<li>关中断</li>
<li>恢复现场和屏蔽字</li>
<li>开中断\中断返回</li>
</ul>
</li>
</ul>
</li>
<li><p>多重中断和中断屏蔽技术</p>
<ul>
<li>在中断服务程序中提前设置开中断指令</li>
<li>优先级别高的中断源有权中断优先级别低的中断源</li>
</ul>
</li>
</ul>
<h3 id="9-6-DMA方式"><a href="#9-6-DMA方式" class="headerlink" title="9.6 DMA方式"></a>9.6 DMA方式</h3><ul>
<li>DMA方式特点<ul>
<li>它使主存和CPU的固定联系脱钩,主存既可被CPU访问,又可以被外设访问</li>
<li>在数据块传送时,主存地址的确定,传送数据的计数等都由硬件电路直接实现</li>
<li>主存中要开辟专用缓冲区,及时供给和接收外设的数据</li>
<li>DMA传送速度快,CPU和外设并行工作,提高了系统效率</li>
<li>DMA在传送开始前要通过程序进行预处理,结束后要通过中断方式进行后处理</li>
</ul>
</li>
<li>DMA控制器的组成<ul>
<li>主存地址计数器</li>
<li>传送长度计数器</li>
<li>数据缓冲寄存器</li>
<li>DMA请求触发器</li>
<li>控制&#x2F;状态逻辑</li>
<li>中断机构</li>
</ul>
</li>
<li>DMA的传送方式<ul>
<li>停止CPU访问</li>
<li>周期挪用 [周期窃取]</li>
<li>DMA与CPU交替访存</li>
</ul>
</li>
<li>DMA传送过程<ul>
<li>预处理</li>
<li>数据传送</li>
<li>后处理</li>
</ul>
</li>
</ul>
<h2 id="10-总结"><a href="#10-总结" class="headerlink" title="10. 总结"></a>10. 总结</h2><p>本次对于计算机组成原理有了较深刻的理解,对于以前一些不懂的知识有了融汇贯通的感觉,同时也明白自己的渺小.</p>
]]></content>
      <tags>
        <tag>思想</tag>
      </tags>
  </entry>
  <entry>
    <title>IO流编程</title>
    <url>/2022/05/09/IO%E6%B5%81%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<blockquote>
<center>静听花开花落，坐看云卷云舒</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<blockquote>
<p>一切属于IO流都要进行关闭操作</p>
</blockquote>
<h2 id="1-File文件操作"><a href="#1-File文件操作" class="headerlink" title="1. File文件操作"></a>1. File文件操作</h2><blockquote>
<p>文件的分隔符：File.separator;</p>
</blockquote>
<center>File文件操作的方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public  File(String pathName)</td>
<td>构造</td>
<td>操作文件的完整路径</td>
</tr>
<tr>
<td>public  File(File parent,String child)</td>
<td>构造</td>
<td>操作文件的父路径和文件的名称</td>
</tr>
<tr>
<td>public boolean createNewFile() throws Exception</td>
<td>普通</td>
<td>创建文件</td>
</tr>
<tr>
<td>public boolean delete()</td>
<td>普通</td>
<td>删除文件</td>
</tr>
<tr>
<td>public boolean exists()</td>
<td>普通</td>
<td>文件是否存在</td>
</tr>
<tr>
<td>public File getParentFile()</td>
<td>普通</td>
<td>找到文件的父路径</td>
</tr>
<tr>
<td>public boolean mkdirs()</td>
<td>普通</td>
<td>创建指定路径</td>
</tr>
<tr>
<td>public boolean canRead()</td>
<td>普通</td>
<td>文件是否可读</td>
</tr>
<tr>
<td>public boolean canWrite()</td>
<td>普通</td>
<td>文件是否可写</td>
</tr>
<tr>
<td>public boolean canExecute()</td>
<td>普通</td>
<td>文件是否可执行</td>
</tr>
<tr>
<td>public long length()</td>
<td>普通</td>
<td>获取文件大小（字节）</td>
</tr>
<tr>
<td>public boolean isDirectory()</td>
<td>普通</td>
<td>是否是目录</td>
</tr>
<tr>
<td>public boolean isFile()</td>
<td>普通</td>
<td>是否是文件</td>
</tr>
<tr>
<td>public boolean isHidden()</td>
<td>普通</td>
<td>是否隐藏</td>
</tr>
<tr>
<td>public File[] listFiles()</td>
<td>普通</td>
<td>列出目录中的全部文件信息</td>
</tr>
</tbody></table>
<ul>
<li>栗子1：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">File1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">round</span><span class="params">(<span class="type">double</span> num,<span class="type">int</span> scale)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Math.round(Math.pow(<span class="number">10</span>,scale) * num) / Math.pow(<span class="number">10</span>,scale);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;D:&quot;</span> + File.separator + <span class="string">&quot;test&quot;</span> + File.separator + <span class="string">&quot;t.txt&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!file.getParentFile().exists()) &#123;</span><br><span class="line">            file.getParentFile().mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (file.exists()) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;文件是否可读：&quot;</span> + file.canRead());</span><br><span class="line">            System.out.println(<span class="string">&quot;文件是否可写：&quot;</span> + file.canWrite());</span><br><span class="line">            System.out.println(<span class="string">&quot;文件是否可执行：&quot;</span> + file.canExecute());</span><br><span class="line">            System.out.println(<span class="string">&quot;文件大小：&quot;</span> + File1.round(file.length() / (<span class="type">double</span>)<span class="number">1024</span> / <span class="number">1024</span>,<span class="number">2</span>) + <span class="string">&quot;M&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;最后的修改时间：&quot;</span> + <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>).format(<span class="keyword">new</span> <span class="title class_">Date</span>(file.lastModified())));</span><br><span class="line">            System.out.println(<span class="string">&quot;是目录：&quot;</span> + file.isDirectory());</span><br><span class="line">            System.out.println(<span class="string">&quot;是文件：&quot;</span> + file.isFile());</span><br><span class="line">            System.out.println(<span class="string">&quot;是否隐藏&quot;</span> + file.isHidden());</span><br><span class="line">            file.delete();</span><br><span class="line">            System.out.println(<span class="string">&quot;文件删除成功！&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            file.createNewFile();</span><br><span class="line">            System.out.println(<span class="string">&quot;文件创建成功&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;文件是否可读：&quot;</span> + file.canRead());</span><br><span class="line">            System.out.println(<span class="string">&quot;文件是否可写：&quot;</span> + file.canWrite());</span><br><span class="line">            System.out.println(<span class="string">&quot;文件是否可执行：&quot;</span> + file.canExecute());</span><br><span class="line">            System.out.println(<span class="string">&quot;文件大小：&quot;</span> + File1.round(file.length() / (<span class="type">double</span>)<span class="number">1024</span> / <span class="number">1024</span>,<span class="number">2</span>) + <span class="string">&quot;M&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;最后的修改时间：&quot;</span> + <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>).format(<span class="keyword">new</span> <span class="title class_">Date</span>(file.lastModified())));</span><br><span class="line">            System.out.println(<span class="string">&quot;是目录：&quot;</span> + file.isDirectory());</span><br><span class="line">            System.out.println(<span class="string">&quot;是文件：&quot;</span> + file.isFile());</span><br><span class="line">            System.out.println(<span class="string">&quot;是否隐藏&quot;</span> + file.isHidden());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>栗子2：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">File2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;D:&quot;</span> + File.separator + <span class="string">&quot;test&quot;</span>);</span><br><span class="line">        listDir(file);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">listDir</span><span class="params">(File file)</span> &#123;</span><br><span class="line">        <span class="comment">//目录进行遍历，文件进行重命名</span></span><br><span class="line">        <span class="keyword">if</span> (file.isDirectory()) &#123;</span><br><span class="line">            File result[] = file.listFiles();</span><br><span class="line">            <span class="keyword">if</span> (result != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; result.length; i++) &#123;</span><br><span class="line">                    System.out.println(result[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (file.isFile()) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (file.getName().endsWith(<span class="string">&quot;.txt&quot;</span>)) &#123;</span><br><span class="line">                    fileName = file.getName().substring(<span class="number">0</span>,file.getName().lastIndexOf(<span class="string">&quot;.&quot;</span>)) + <span class="string">&quot;.java&quot;</span>;</span><br><span class="line">                    <span class="type">File</span> <span class="variable">newFile</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(file.getParentFile(),fileName);</span><br><span class="line">                    file.renameTo(newFile);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="2-字节输出流（OutputStream）"><a href="#2-字节输出流（OutputStream）" class="headerlink" title="2. 字节输出流（OutputStream）"></a>2. 字节输出流（OutputStream）</h2><blockquote>
<p>程序需要读取数据（读）时，利用输入流完成，程序需要将数据保存到数据(写)时，需要输出流</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">OutputStream</span> <span class="keyword">extends</span> <span class="title class_">Object</span> <span class="keyword">implements</span> <span class="title class_">Closeable</span>, Flushable &#123;&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>Closeable接口</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Closeable</span> <span class="keyword">extends</span> <span class="title class_">AutoCloseable</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">close</span><span class="params">()</span> <span class="keyword">throws</span> IOException;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>Flushable接口</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Flushable</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">flush</span><span class="params">()</span> <span class="keyword">throws</span> IOException;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<center>OutputStream类的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public abstract void write(int b) throws IOException</td>
<td>普通</td>
<td>输出单个字节数据</td>
</tr>
<tr>
<td>public  void write(byte[] b) throws IOException</td>
<td>普通</td>
<td>输出一组字节数据</td>
</tr>
<tr>
<td>public  void write(byte[] b，int off,int len) throws IOException</td>
<td>普通</td>
<td>输出部分字节数据</td>
</tr>
<tr>
<td>public  void close() throws IOException</td>
<td>普通</td>
<td>关闭输出流</td>
</tr>
<tr>
<td>public  void flush() throws IOException</td>
<td>普通</td>
<td>刷新缓冲区</td>
</tr>
</tbody></table>
<center>FileOutputStream类的常用方法</center>

<blockquote>
<p>主要目的为OutputStream父类实例化</p>
</blockquote>
<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public FileOutputStream(File file) throws FileNotFoundException</td>
<td>构造</td>
<td>采用覆盖的形式创建文件输出流</td>
</tr>
<tr>
<td>public FileOutputStream(File file，boolean append) throws FileNotFoundException</td>
<td>构造</td>
<td>采用覆盖或者追加的形式创建文件输出流</td>
</tr>
</tbody></table>
<ul>
<li>栗子：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OutputStream1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;D:&quot;</span> + File.separator + <span class="string">&quot;test&quot;</span> + File.separator + <span class="string">&quot;t.txt&quot;</span>);</span><br><span class="line">       <span class="keyword">if</span> (!file.getParentFile().exists()) &#123;</span><br><span class="line">           file.getParentFile().mkdirs();</span><br><span class="line">       &#125;</span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">output</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(file,<span class="literal">true</span>);</span><br><span class="line">       <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;hdhf\r\n&quot;</span>;</span><br><span class="line">       output.write(str.getBytes());</span><br><span class="line">       output.flush();</span><br><span class="line">       output.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="3-字节输入流（InputStream）"><a href="#3-字节输入流（InputStream）" class="headerlink" title="3. 字节输入流（InputStream）"></a>3. 字节输入流（InputStream）</h2><blockquote>
<p>程序读取的时候需要输入</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">InputStream</span> <span class="keyword">extends</span> <span class="title class_">Object</span> <span class="keyword">implements</span> <span class="title class_">Closeable</span> &#123;&#125;</span><br></pre></td></tr></table></figure>

<center>InputStream类的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public abstract int read throws IOException</td>
<td>普通</td>
<td>读取单个字节数据，如果现在已经读取到底了，返回-1</td>
</tr>
<tr>
<td>public int read(byte[] var1) throws IOException</td>
<td>普通</td>
<td>读取一组字节数据，返回的是读取的个数；如果没有数据，且已经读取到底则返回-1</td>
</tr>
<tr>
<td>public int read(byte[] var1, int var2, int var3) throws IOException</td>
<td>普通</td>
<td>读取一组字节数据，只占数组的部分</td>
</tr>
<tr>
<td>public void close() throws IOException</td>
<td>普通</td>
<td>关闭输入流</td>
</tr>
<tr>
<td>public byte[] readAllBytes() throws IOException</td>
<td>普通</td>
<td>读取输入流的全部字节数据，jdk1.9后新增</td>
</tr>
<tr>
<td>public long transferTo(OutputStream out) throws IOException</td>
<td>普通</td>
<td>输入流转存到输出流，jdk1.9后新增</td>
</tr>
</tbody></table>
<p>栗子：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InputStream1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;D:&quot;</span> + File.separator + <span class="string">&quot;test&quot;</span> + File.separator + <span class="string">&quot;t.txt&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (file.exists()) &#123;</span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file);</span><br><span class="line">            <span class="type">byte</span>[] data = <span class="keyword">new</span> <span class="title class_">byte</span> [<span class="number">1024</span>];</span><br><span class="line">            <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> input.read(data);</span><br><span class="line">           <span class="comment">/* byte data [] = input.readAllBytes();*/</span><span class="comment">//jdk1.9后新增</span></span><br><span class="line">            System.out.println(<span class="keyword">new</span> <span class="title class_">String</span>(data,<span class="number">0</span>,data.length));</span><br><span class="line">            input.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="4-字符输出流（Writer）"><a href="#4-字符输出流（Writer）" class="headerlink" title="4. 字符输出流（Writer）"></a>4. 字符输出流（Writer）</h2><blockquote>
<p>方便中文的输出和写入</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Writer</span> <span class="keyword">implements</span> <span class="title class_">Appendable</span>, Closeable, Flushable&#123;&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>Appendable接口</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class="line"><span class="comment">// (powered by Fernflower decompiler)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> java.lang;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Appendable</span> &#123;</span><br><span class="line">    Appendable <span class="title function_">append</span><span class="params">(CharSequence var1)</span> <span class="keyword">throws</span> IOException;</span><br><span class="line"></span><br><span class="line">    Appendable <span class="title function_">append</span><span class="params">(CharSequence var1, <span class="type">int</span> var2, <span class="type">int</span> var3)</span> <span class="keyword">throws</span> IOException;</span><br><span class="line"></span><br><span class="line">    Appendable <span class="title function_">append</span><span class="params">(<span class="type">char</span> var1)</span> <span class="keyword">throws</span> IOException;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<center>Writer类的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public void write(int var1) throws IOException</td>
<td>普通</td>
<td>输出单个字符</td>
</tr>
<tr>
<td>public void write(char[] var1) throws IOException</td>
<td>普通</td>
<td>输出字符数组</td>
</tr>
<tr>
<td>public void write(String var1) throws IOException</td>
<td>普通</td>
<td>输出字符串</td>
</tr>
<tr>
<td>public Writer append(CharSequence var1) throws IOException</td>
<td>普通</td>
<td>追加输出内容</td>
</tr>
<tr>
<td>public abstract void flush() throws IOException</td>
<td>普通</td>
<td>刷新缓冲区</td>
</tr>
<tr>
<td>public abstract void close() throws IOException</td>
<td>普通</td>
<td>关闭输出流</td>
</tr>
</tbody></table>
<center>FileWriter类的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public FileWriter(File var1) throws IOException</td>
<td>普通</td>
<td>采用覆盖的形式创建文件输出流</td>
</tr>
<tr>
<td>public FileWriter(File var1, boolean var2) throws IOException</td>
<td>普通</td>
<td>采用覆盖或追加的形式创建文件输出流</td>
</tr>
</tbody></table>
<ul>
<li>栗子：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.Writer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Writer1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;D:&quot;</span> + File.separator + <span class="string">&quot;test&quot;</span> + File.separator + <span class="string">&quot;t.txt&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!file.getParentFile().exists()) &#123;</span><br><span class="line">            file.getParentFile().mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Writer</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileWriter</span>(file);</span><br><span class="line">        out.write(<span class="string">&quot;dhhd&quot;</span>);</span><br><span class="line">        out.append(<span class="string">&quot;djhfhh&quot;</span>);</span><br><span class="line">        out.flush();<span class="comment">//特别注意，没有也能输出是因为close()强制刷新</span></span><br><span class="line">        out.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="5-字符输入流-Reader"><a href="#5-字符输入流-Reader" class="headerlink" title="5. 字符输入流(Reader)"></a>5. 字符输入流(Reader)</h2><blockquote>
<p>方便中文的输入和读</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Reader</span> <span class="keyword">implements</span> <span class="title class_">Readable</span>, Closeable &#123;&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>Readable接口</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class="line"><span class="comment">// (powered by Fernflower decompiler)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> java.lang;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.CharBuffer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Readable</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">read</span><span class="params">(CharBuffer var1)</span> <span class="keyword">throws</span> IOException;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<center>Reader类的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public int read() throws IOException</td>
<td>普通</td>
<td>读取单个字符，无数据读取时返回-1</td>
</tr>
<tr>
<td>public int read(char[] var1) throws IOException</td>
<td>普通</td>
<td>读取多个字符，并且返回读取个数</td>
</tr>
<tr>
<td>public long skip(long var1) throws IOException</td>
<td>普通</td>
<td>跳过指定的字符个数后读取</td>
</tr>
<tr>
<td>public boolean ready() throws IOException</td>
<td>普通</td>
<td>是否可以开始读取数据</td>
</tr>
<tr>
<td>public abstract void close() throws IOException</td>
<td>普通</td>
<td>关闭输入流</td>
</tr>
</tbody></table>
<ul>
<li>栗子</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.Reader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Reader1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;D:&quot;</span> + File.separator + <span class="string">&quot;test&quot;</span> + File.separator + <span class="string">&quot;t.txt&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (file.exists()) &#123;</span><br><span class="line">            <span class="type">Reader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileReader</span>(file);</span><br><span class="line">            <span class="type">char</span>[] data = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">1024</span>];</span><br><span class="line">            reader.skip(<span class="number">2</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> reader.read(data);</span><br><span class="line">            System.out.println(<span class="keyword">new</span> <span class="title class_">String</span>(data,<span class="number">0</span>,len));</span><br><span class="line">            reader.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="6-字节流与字符流区别-转换流"><a href="#6-字节流与字符流区别-转换流" class="headerlink" title="6. 字节流与字符流区别,转换流"></a>6. 字节流与字符流区别,转换流</h2><blockquote>
<p>字节流直接进行数据处理操作，字符流使用了缓冲区</p>
</blockquote>
<ul>
<li>转换流栗子：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OutputStream1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;D:&quot;</span> + File.separator + <span class="string">&quot;test&quot;</span> + File.separator + <span class="string">&quot;t.txt&quot;</span>);</span><br><span class="line">       <span class="keyword">if</span> (!file.getParentFile().exists()) &#123;</span><br><span class="line">           file.getParentFile().mkdirs();</span><br><span class="line">       &#125;</span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">output</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(file,<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Writer</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OutputStreamWriter</span>(output);</span><br><span class="line">      <span class="comment">/* String str = &quot;hdhf\r\n&quot;;</span></span><br><span class="line"><span class="comment">       output.write(str.getBytes());*/</span></span><br><span class="line">      out.append(<span class="string">&quot;djhhbdfhl&quot;</span>);</span><br><span class="line">       output.flush();</span><br><span class="line">       out.flush();</span><br><span class="line">        output.close();</span><br><span class="line">        out.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="7-内存操作流"><a href="#7-内存操作流" class="headerlink" title="7. 内存操作流"></a>7. 内存操作流</h2><blockquote>
<p>一般用于BIO</p>
</blockquote>
<blockquote>
<p>字节内存操作流：ByteArrayInputStream，ByteArrayOutputStream</p>
</blockquote>
<ul>
<li>ByteArrayInputStream类</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ByteArrayInputStream</span> <span class="keyword">extends</span> <span class="title class_">InputStream</span> &#123;&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>ByteArrayOutputStream</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ByteArrayOutputStream</span> <span class="keyword">extends</span> <span class="title class_">OutputStream</span> &#123;&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>字符内存操作流:CharArrayReader,CharArrayWriter</p>
</blockquote>
<ul>
<li>CharArrayReader</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CharArrayReader</span> <span class="keyword">extends</span> <span class="title class_">Reader</span> &#123;&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>CharArrayWriter</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CharArrayWriter</span> <span class="keyword">extends</span> <span class="title class_">Writer</span> &#123;&#125;</span><br></pre></td></tr></table></figure>

<h2 id="8-管道流"><a href="#8-管道流" class="headerlink" title="8. 管道流"></a>8. 管道流</h2><blockquote>
<p>一般用于NIO</p>
</blockquote>
<blockquote>
<p>管道输出流:PipedOutputStream，PipedWriter</p>
</blockquote>
<ul>
<li>PipedOutputStream</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PipedOutputStream</span> <span class="keyword">extends</span> <span class="title class_">OutputStream</span> &#123;&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>PipedWriter</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PipedWriter</span> <span class="keyword">extends</span> <span class="title class_">Writer</span> &#123;&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>管道输入流:PipedInputStream,PipedReader</p>
</blockquote>
<ul>
<li>PipedInputStream</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PipedInputStream</span> <span class="keyword">extends</span> <span class="title class_">InputStream</span> &#123;&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>PipedReader</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PipedReader</span> <span class="keyword">extends</span> <span class="title class_">Reader</span> &#123;&#125;</span><br></pre></td></tr></table></figure>

<h2 id="9-打印流"><a href="#9-打印流" class="headerlink" title="9. 打印流"></a>9. 打印流</h2><blockquote>
<p>解决字节和字符输出流的局限性</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PrintWriter</span> <span class="keyword">extends</span> <span class="title class_">Writer</span> &#123;&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>栗子：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PrintWriter1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> FileNotFoundException &#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;D:&quot;</span> + File.separator + <span class="string">&quot;test&quot;</span> + File.separator + <span class="string">&quot;t.txt&quot;</span>);</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">pu</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PrintWriter</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(file));</span><br><span class="line">        pu.println(<span class="string">&quot;姓名：djhj&quot;</span>);</span><br><span class="line">        pu.print(<span class="string">&quot;年龄：&quot;</span>);</span><br><span class="line">        pu.print(<span class="number">15</span>);</span><br><span class="line">        pu.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="10-缓冲输入流（BufferedReader）"><a href="#10-缓冲输入流（BufferedReader）" class="headerlink" title="10. 缓冲输入流（BufferedReader）"></a>10. 缓冲输入流（BufferedReader）</h2><blockquote>
<p>字符流的缓冲区数据读取</p>
</blockquote>
<center>BufferedReader类的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public BufferedReader(Reader var1)</td>
<td>构造</td>
<td>接受一个Reader类的实例</td>
</tr>
<tr>
<td>public String readLine() throws IOException</td>
<td>普通</td>
<td>一次性从缓冲区中将内容全部读取进来</td>
</tr>
</tbody></table>
<ul>
<li>栗子</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BufferedReader1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入您的年龄：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> input.readLine();</span><br><span class="line">        <span class="keyword">if</span> (msg.matches(<span class="string">&quot;\\d&#123;1,3&#125;&quot;</span>)) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> Integer.parseInt(msg);</span><br><span class="line">            System.out.println(<span class="string">&quot;年龄为：&quot;</span> + age);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入的不是数字&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        input.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="11-对象序列化"><a href="#11-对象序列化" class="headerlink" title="11. 对象序列化"></a>11. 对象序列化</h2><blockquote>
<p>把一个对象变为二进制的数据流的方法，必须实现Serializable接口，不能序列化关键字 transient</p>
</blockquote>
<center>ObjectOutputStream类的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public ObjectOutputStream(OutputStream var1) throws IOException</td>
<td>构造</td>
<td>传入输入的对象</td>
</tr>
<tr>
<td>public final void writeObject(Object var1) throws IOException</td>
<td>普通</td>
<td>输出对象</td>
</tr>
</tbody></table>
<center>ObjectInputStream类的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public ObjectInputStream(InputStream var1) throws IOException</td>
<td>构造</td>
<td>构造输入对象</td>
</tr>
<tr>
<td>public final Object readObject() throws IOException, ClassNotFoundException {</td>
<td>普通</td>
<td>从指定位置读取对象</td>
</tr>
</tbody></table>
<ul>
<li>栗子</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SuppressWarnings(&quot;serial&quot;)</span> <span class="comment">//序列化编号自动生成</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Member</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">transient</span> String memberId;<span class="comment">//不能被序列化</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Member</span><span class="params">(String memberId, String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.memberId = memberId;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMemberId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> memberId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMemberId</span><span class="params">(String memberId)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.memberId = memberId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Member&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;memberId=&#x27;&quot;</span> + memberId + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>对象序列化与反序列化</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JavaIODemo</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">File</span> <span class="variable">SAVE_FILE</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;D:&quot;</span> + File.separator + <span class="string">&quot;test&quot;</span> + File.separator + <span class="string">&quot;t.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        savaObject(<span class="keyword">new</span> <span class="title class_">Member</span>(<span class="string">&quot;11&quot;</span>,<span class="string">&quot;lisi&quot;</span>,<span class="number">99</span>));</span><br><span class="line">        System.out.println(loadObject());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//序列化</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">savaObject</span><span class="params">(Member lisi)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(SAVE_FILE));</span><br><span class="line">        oos.writeObject(lisi);</span><br><span class="line">        oos.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//反序列化</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Object <span class="title function_">loadObject</span><span class="params">()</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(SAVE_FILE));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        ois.close();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="12-总结"><a href="#12-总结" class="headerlink" title="12. 总结"></a>12. 总结</h2><p>总结了一些IO编程，还有一些没有在里面，欢迎在评论总结!</p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux系统初识</title>
    <url>/2022/05/09/Linux%E7%B3%BB%E7%BB%9F%E5%88%9D%E8%AF%86/</url>
    <content><![CDATA[<blockquote>
<center>大道至简</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<blockquote>
<p>linux系统中一切皆文件：{文件-、链接l、目录d}读写执行（rmx【创建、删除、编辑、移动、查看】）、 权限（用户主、用户组、其他用户）、系统（磁盘、进程）、可视化 ）</p>
</blockquote>
<h2 id="1-命令基础"><a href="#1-命令基础" class="headerlink" title="1. 命令基础"></a>1. 命令基础</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令格式 [-options]可以控制命令，也可以省略，[parameter]表示命令参数，可以为多个</span></span><br><span class="line"><span class="built_in">command</span> [-options] [parameter]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注释 用#号表示在Shell行注释，//表示在C语言中注释，/**/多行注释</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据同步到硬盘</span></span><br><span class="line"><span class="built_in">sync</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关机指令,[时间]可以是now，也可以是分钟，或者具体时间</span></span><br><span class="line">shutdown -h [时间]</span><br><span class="line">halt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取消定时关机指令</span></span><br><span class="line">shutdown -c</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启指令，[时间]可以是now，也可以是分钟</span></span><br><span class="line">shutdown -r [时间]</span><br><span class="line">reboot</span><br><span class="line"></span><br><span class="line"><span class="comment"># 帮助，man 是 manual 的缩写，</span></span><br><span class="line"><span class="built_in">help</span></span><br><span class="line">man </span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启客户端</span></span><br><span class="line">reset</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清屏客户端 快捷键 Ctrl+l按键</span></span><br><span class="line">clear</span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出客户端 快捷键：Ctrl+d按键</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看历史</span></span><br><span class="line"><span class="built_in">history</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示当前用户</span></span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换用户</span></span><br><span class="line">su [用户名]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 其他快捷键 Tab按键—命令补齐功能、Ctrl+c按键—停掉正在运行的程序</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文本搜索 [-e]【正则表达式】、[-i]【不区分大小写】、[-c]【匹配的行数】、[-v]【查找不匹配指定字符串】</span></span><br><span class="line">grep [-eicv] [<span class="string">&quot;字符串&quot;</span>] [文件名]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 快速的搜寻某个路径 精简版CentOS系统需要安装locate命令 yum -y install mlocate </span></span><br><span class="line">locate [目录名]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定位可执行文件、源代码文件、帮助文件</span></span><br><span class="line">whereis [文件名]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在PATH变量搜索某个系统命令，返回第一个结果</span></span><br><span class="line"><span class="built_in">which</span> [PATH变量]</span><br></pre></td></tr></table></figure>

<h2 id="2-目录操作"><a href="#2-目录操作" class="headerlink" title="2. 目录操作"></a>2. 目录操作</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文件夹【目录】操作</span></span><br><span class="line"><span class="comment"># 创建文件夹,新建一个目录,[-m]【权限】、[-p]【递归创建】</span></span><br><span class="line"><span class="built_in">mkdir</span> [-mp] [目录名]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除一个文件夹，删除目录 [-r]【递归】 、[-f]【强制】、[-i]【互动】</span></span><br><span class="line"><span class="built_in">rm</span> [-rif] [目录名]</span><br><span class="line"><span class="comment"># 删除一个空的目录 [-p] 【向上递归】</span></span><br><span class="line"><span class="built_in">rmdir</span> [-p] [目录名]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重命名一个目录  [-f]【强制】、[-i]【互动】、[-u]【较新升级】</span></span><br><span class="line"><span class="built_in">mv</span> [-fiu] [目录1] [目录2] </span><br><span class="line"><span class="comment"># 移动文件夹【剪切】</span></span><br><span class="line"><span class="built_in">mv</span> [目录1&lt;相对路径&gt;] [目录2&lt;绝对路径&gt;]</span><br><span class="line"><span class="comment"># 改变目录</span></span><br><span class="line"><span class="built_in">cd</span> [目录]</span><br><span class="line"><span class="comment"># 退回上一目录,直接cd是进入默认目录</span></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"><span class="comment"># 复制目录 [-a]【-pdr】、[-d]【若是link，则复制link】、[-f]【强制】、[-i]【互动】、[-l]【复制为硬连接】</span></span><br><span class="line"><span class="comment"># [-p]【连文件一起复制，备份】、[-r]【递归】、[-s]【复制为软连接，快捷方式】、[-u]【较新升级】</span></span><br><span class="line"><span class="built_in">cp</span> [-adfilprsu] [来源档(<span class="built_in">source</span>)] [目标档(destination)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索目录，例如 find . -name &quot;*.txt&quot;</span></span><br><span class="line">find [路径] [表达式] [名字]</span><br><span class="line"><span class="comment"># 显示当前目录所在位置,[-p]【真实路径，不是link】</span></span><br><span class="line"><span class="built_in">pwd</span> [-p] </span><br><span class="line"><span class="comment"># 查看当前目录的文件和目录，ll更详细 [-a]【查看所有包括隐藏】、[-l]【列表查询】</span></span><br><span class="line"><span class="built_in">ls</span> [-aAdfFhilnrRSt]</span><br><span class="line">ll</span><br></pre></td></tr></table></figure>

<h2 id="3-文件操作"><a href="#3-文件操作" class="headerlink" title="3. 文件操作"></a>3. 文件操作</h2><blockquote>
<p>vim键盘图</p>
<p><img src="https://xxy8.github.io/images/linux1.png" alt="在这里插入图片描述"></p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文件操作</span></span><br><span class="line"><span class="comment"># 新建一个文件[-a]【改变读取时间记录】、[-c]【目的档案不存在就不建立】、[-f]【不使用，为了兼容】、[-m]【改变修改时间记录】</span></span><br><span class="line"><span class="built_in">touch</span> [-acfm][-d&lt;日期时间&gt;][-r&lt;参考文件或目录&gt;] [-t&lt;日期时间&gt;][--<span class="built_in">help</span>][--version][文件]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除一个文件，[-r]【递归】 、[-f]【强制】、[-i]【互动】</span></span><br><span class="line"><span class="built_in">rm</span> [-fir] [文件名]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重命名【去掉目录】，或者移动一个文件</span></span><br><span class="line"><span class="built_in">mv</span> [文件名1] [目录&lt;绝对路径&gt;] [文件名2]</span><br><span class="line"><span class="comment"># 编辑文件，命令模式-iao键-输入模式-Esc键-底线命令模式-:wq-保存退出-cat 文件名-查看</span></span><br><span class="line">vim [文件名]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看文件内容 [-A]【相当於-vET，列出特殊字符】、[-b]【列出行号】、[-E]【显示断行$】、[-n]【列出行号，包括空白行】、[-T]【[tab] 按键以 ^I 显示】、[-v]【列出看不出的特殊字符】</span></span><br><span class="line"><span class="built_in">cat</span> [-AbEnTv] [文件名]</span><br><span class="line"><span class="comment"># 倒序查看文件内容</span></span><br><span class="line"><span class="built_in">tac</span> [文件名]</span><br><span class="line"><span class="comment"># 显示行号查看文件 [-b]【a：空行也列出行号，t：空行不列出行号】、[-n]【ln：行号在最左方，rn:右方显示，且不加 0,rz:右方显示，且加 0】</span></span><br><span class="line"><span class="comment"># [-w]【行号栏位的占用的位数】</span></span><br><span class="line"><span class="built_in">nl</span> [-bnm] [文件名]</span><br><span class="line"><span class="comment"># 一页一页翻动</span></span><br><span class="line">more [文件名]</span><br><span class="line">less [文件名]</span><br><span class="line"><span class="comment"># 取出文件前面几行</span></span><br><span class="line"><span class="built_in">head</span> [-n number] [文件名]</span><br><span class="line"><span class="comment"># 取出后面几行</span></span><br><span class="line"><span class="built_in">tail</span> [-n number] [文件名]</span><br></pre></td></tr></table></figure>

<h2 id="4-权限操作"><a href="#4-权限操作" class="headerlink" title="4. 权限操作"></a>4. 权限操作</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 更改权限 [-c]【权限已更改，显示其更改动作】、[-f]【无法更改，不显示错误】、[-v]【显示变更的详细资料】、[-R]【相同权限递归】</span></span><br><span class="line"><span class="comment"># [--help]【显示辅助说明】、[--version]【显示版本】</span></span><br><span class="line"><span class="comment"># [-u]【属主】、[-g]【属组】、[-g]【属其他】、[-a]【属所有】</span></span><br><span class="line"><span class="comment"># [+]【增加权限】、[-]取消权限、[=]【唯一设定权限】</span></span><br><span class="line"><span class="comment"># [r]【可读取 4】、[w]【可写入 2】、[x]【可执行 1】、[X]【该文件被设定过可执行】</span></span><br><span class="line"><span class="comment"># 举个栗子 chmod 755 .bashrc</span></span><br><span class="line"><span class="built_in">chmod</span> [-cfvR] [--<span class="built_in">help</span>] [--version] [ugoa...][[+-=][rwxX]...][,...] file...</span><br></pre></td></tr></table></figure>

<h2 id="5-压缩和解压文件"><a href="#5-压缩和解压文件" class="headerlink" title="5. 压缩和解压文件"></a>5. 压缩和解压文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 打包和解压以.tar 结尾 [-c]【新产生的包】、[-r]【增加文件】、[-t]【列出文件】、[-u]【更新文件】、[-f]【指定包的文件名】、[-x]【解开】，选其中一个命令和f</span></span><br><span class="line">tar [-crutxf] all.tar [文件名]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打包和解压以.gz.bz.Z结尾 [-z]【调用gzip】、[-j]【调用gzip】、[-Z]【调用compress】，cx任选一个，zjZ任选一个，f必选</span></span><br><span class="line">tar [-cxzjZf] all.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩和解压举个栗子</span></span><br><span class="line"><span class="comment">#压缩</span></span><br><span class="line">tar –cvf jpg.tar *.png    // 将目录里所有png文件打包成 tar.png</span><br><span class="line">tar –czf jpg.tar.gz *.png    // 将目录里所有png文件打包成 png.tar 后，并且将其用 gzip 压缩，生成一个 gzip 压缩过的包，命名为 png.tar.gz </span><br><span class="line">tar –cjf jpg.tar.bz2 *.jpg   // 将目录里所有jpg文件打包成 jpg.tar 后，并且将其用 bzip2 压缩，生成一个 bzip2 压缩过的包，命名为jpg.tar.bz2 </span><br><span class="line">tar –cZf jpg.tar.Z *.txt     // 将目录里所有 txt 文件打包成 txt.tar 后，并且将其用 compress 压缩，生成一个 umcompress 压缩过的包，命名为txt.tar.Z </span><br><span class="line">rar a jpg.rar *.png         // rar格式的压缩，需要先下载 rar <span class="keyword">for</span> linux </span><br><span class="line">zip jpg.zip *.txt           // zip格式的压缩，需要先下载 zip <span class="keyword">for</span> linux</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar –xvf file.tar         // 解压 tar 包 </span><br><span class="line">tar -xzvf file.tar.gz     // 解压 tar.gz </span><br><span class="line">tar -xjvf file.tar.bz2    // 解压 tar.bz2 </span><br><span class="line">tar –xZvf file.tar.Z      // 解压 tar.Z </span><br><span class="line">unrar e file.rar          // 解压 rar </span><br><span class="line">unzip file.zip            // 解压 zip </span><br></pre></td></tr></table></figure>

<h2 id="6-磁盘"><a href="#6-磁盘" class="headerlink" title="6. 磁盘"></a>6. 磁盘</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用了多少，磁盘使用量</span></span><br><span class="line"><span class="built_in">df</span> -h</span><br><span class="line"></span><br><span class="line"><span class="comment"># 占用所用空间</span></span><br><span class="line"><span class="built_in">du</span> -a</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 查看系统所占用空间</span></span><br><span class="line"><span class="built_in">du</span> -sm /*</span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂载</span></span><br><span class="line">mount [挂载位置]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强制卸载</span></span><br><span class="line">umount -f  挂载位置</span><br></pre></td></tr></table></figure>

<h2 id="7-进程"><a href="#7-进程" class="headerlink" title="7. 进程"></a>7. 进程</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># [-a]【显示当前终端运行的所有进程信息】、[-x]【显示后台运行进程的参数】、[-u]【以用户的信息显示进程】</span></span><br><span class="line">ps -ef|grep xx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进程树 [-p]【显示父id】、[-u]【显示用户组】</span></span><br><span class="line">pstree -pu </span><br><span class="line"></span><br><span class="line"><span class="comment"># 结束进程</span></span><br><span class="line"><span class="built_in">kill</span> -9 [进程的<span class="built_in">id</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># java进程打包的命令</span></span><br><span class="line"><span class="built_in">nohup</span></span><br></pre></td></tr></table></figure>

<h2 id="8-防火墙"><a href="#8-防火墙" class="headerlink" title="8. 防火墙"></a>8. 防火墙</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 开启、重启、关闭、firewalld.service服务</span></span><br><span class="line"><span class="comment"># 开启</span></span><br><span class="line">service firewalld start</span><br><span class="line"><span class="comment"># 开启防火墙端口 </span></span><br><span class="line"><span class="comment"># 命令含义--zone 作用域 --add-port=80/tcp 添加端口，--permanent 永久生效，没有重启会失效</span></span><br><span class="line">firewall-cmd --zone=public --add-port=9000/tcp --permanent</span><br><span class="line"><span class="comment"># 重启</span></span><br><span class="line">service firewalld restart</span><br><span class="line"><span class="comment"># 重启防火墙</span></span><br><span class="line">systemctl restart firewalld.service</span><br><span class="line"><span class="comment"># 关闭</span></span><br><span class="line">service firewalld stop</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看防火墙的端口是否开启，如果时阿里云，需要配置安全组规则</span></span><br><span class="line">firewall -cmd --list-ports</span><br><span class="line"><span class="comment"># 查看防火墙全部规则</span></span><br><span class="line">firewall -cmd --list-all</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看firewall服务状态</span></span><br><span class="line">system status firewalle</span><br></pre></td></tr></table></figure>

<h2 id="9-环境安装"><a href="#9-环境安装" class="headerlink" title="9.环境安装"></a>9.环境安装</h2><blockquote>
<p>安装的三种方式：</p>
</blockquote>
<blockquote>
<ol>
<li>rpm(jdk :在线发布一个SPringBoot项目)</li>
</ol>
</blockquote>
<ul>
<li>栗子：linux 中 jdk安装</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检测当前是否存在Java环境 java -version</span></span><br><span class="line"><span class="comment"># 有则卸载，无则继续</span></span><br><span class="line"><span class="comment"># rpm -qa|grep jdk 检测jdk版本信息</span></span><br><span class="line"><span class="comment"># rpm -e --nodeps jdk 强制卸载</span></span><br><span class="line"><span class="comment"># 卸载完后安装jdk</span></span><br><span class="line"><span class="comment"># rpm -ivh jdk.rpm</span></span><br><span class="line"><span class="comment"># rpm安装jdk不用配置，配置环境变量 vim /etc/profile</span></span><br><span class="line">JAVA_HOME=/user/java/jdk1.8</span><br><span class="line">CLASSPATH=%JAVA_HOME%/bin;%JAVA_HOME%/jre/lib</span><br><span class="line">PATH=<span class="variable">$JAVA_HOME</span>/bin;<span class="variable">$JAVA_HOME</span>/jre/bin</span><br><span class="line"><span class="built_in">export</span> PATH CLASSPATH JAVA_HOME</span><br><span class="line"><span class="built_in">export</span> PATH=/bin:/usr/bin/:. </span><br><span class="line"><span class="comment"># 让配置文件生效 source /etc/profile</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<ol start="2">
<li>解压缩（tomcat 启动通过外网访问，发布网站）</li>
</ol>
</blockquote>
<ul>
<li>栗子：Tomacat安装（SSM war）</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 解压压缩包</span></span><br><span class="line">tar -zxvf apache-tomcat-9.0.22.tar.gz</span><br><span class="line"><span class="comment"># 执行</span></span><br><span class="line">./startup.sh</span><br><span class="line"><span class="comment"># 停止</span></span><br><span class="line">./shotdown.sh</span><br></pre></td></tr></table></figure>

<blockquote>
<p>yum在线安装（docker ： 直接安装运行跑起来docker就可以）</p>
</blockquote>
<h2 id="10-Linux三剑客-awk，sed，grep"><a href="#10-Linux三剑客-awk，sed，grep" class="headerlink" title="10. Linux三剑客(awk，sed，grep)"></a>10. Linux三剑客(awk，sed，grep)</h2><p>10.1 awk适合格式化文本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># awk语法</span></span><br><span class="line">awk [选项参数] <span class="string">&#x27;script&#x27;</span> var=value file(s)</span><br><span class="line">awk [选项参数] -f scriptfile var=value file(s)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>参数：</p>
<p>-F fs or –field-separator fs<br>指定输入文件折分隔符，fs是一个字符串或者是一个正则表达式，如-F:。</p>
<p>-v var&#x3D;value or –asign var&#x3D;value<br>赋值一个用户定义变量。</p>
<p>-f scripfile or –file scriptfile<br>从脚本文件中读取awk命令。</p>
<p>-mf nnn and -mr nnn<br>对nnn值设置内在限制，-mf选项限制分配给nnn的最大块数目；-mr选项限制记录的最大数目。这两个功能是Bell实验室版awk的扩展功能，在标准awk中不适用。</p>
<p>-W compact or –compat, -W traditional or –traditional<br>在兼容模式下运行awk。所以gawk的行为和标准的awk完全一样，所有的awk扩展都被忽略。</p>
<p>-W copyleft or –copyleft, -W copyright or –copyright<br>打印简短的版权信息。</p>
<p>-W help or –help, -W usage or –usage<br>打印全部awk选项和每个选项的简短说明。</p>
<p>-W lint or –lint<br>打印不能向传统unix平台移植的结构的警告。</p>
<p>-W lint-old or –lint-old<br>打印关于不能向传统unix平台移植的结构的警告。</p>
<p>-W posix<br>打开兼容模式。但有以下限制，不识别：&#x2F;x、函数关键字、func、换码序列以及当fs是一个空格时，将新行作为一个域分隔符；操作符** 和 **&#x3D;不能代替^ 和 ^&#x3D;；fflush无效。</p>
<p>-W re-interval or –re-inerval<br>允许间隔正则表达式的使用，参考(grep中的Posix字符类)，如括号表达式[[:alpha:]]。</p>
<p>-W source program-text or –source program-text<br>使用program-text作为源代码，可与-f命令混用。</p>
<p>-W version or –version<br>打印bug报告信息的版本。</p>
</blockquote>
<p>10.2 sed 命令是利用脚本来处理文本文件，适合编辑匹配到的文本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># sed语法</span></span><br><span class="line">sed [-hnV][-e&lt;script&gt;][-f&lt;script文件&gt;][文本文件]</span><br></pre></td></tr></table></figure>

<blockquote>
<p>参数：</p>
<p>-e&lt;script文件&gt;或–expression&#x3D; &lt;script文件&gt;以选项中指定的script来处理输入的文本文件。</p>
<p>-f&lt;script文件&gt;或–file&#x3D;&lt;script文件&gt; 以选项中指定的script文件来处理输入的文本文件。</p>
<p>-h或–help 显示帮助。</p>
<p>-n或–quiet或–silent 仅显示script处理后的结果。</p>
<p>-V或–version 显示版本信息。</p>
</blockquote>
<p>10.3  grep适合单纯的查找文本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># grep语法</span></span><br><span class="line">grep [-abcEFGhHilLnqrsvVwxy][-A&lt;显示列数&gt;][-B&lt;显示列数&gt;][-C&lt;显示列数&gt;][-d&lt;进行动作&gt;][-e&lt;范本样式&gt;][-f&lt;范本文件&gt;][--<span class="built_in">help</span>][范本样式][文件或目录...]</span><br></pre></td></tr></table></figure>

<blockquote>
<p>参数：</p>
<p>-a 或 –text : 不要忽略二进制的数据。</p>
<p>-A&lt;显示行数&gt; 或 –after-context&#x3D;&lt;显示行数&gt; : 除了显示符合范本样式的那一列之外，并显示该行之后的内容。</p>
<p>-b 或 –byte-offset : 在显示符合样式的那一行之前，标示出该行第一个字符的编号。</p>
<p>-B&lt;显示行数&gt; 或 –before-context&#x3D;&lt;显示行数&gt; : 除了显示符合样式的那一行之外，并显示该行之前的内容。</p>
<p>-c 或 –count : 计算符合样式的列数。</p>
<p>-C&lt;显示行数&gt; 或 –context&#x3D;&lt;显示行数&gt;或-&lt;显示行数&gt; : 除了显示符合样式的那一行之外，并显示该行之前后的内容。</p>
<p>-d &lt;动作&gt; 或 –directories&#x3D;&lt;动作&gt; : 当指定要查找的是目录而非文件时，必须使用这项参数，否则grep指令将回报信息并停止动作。</p>
<p>-e&lt;范本样式&gt; 或 –regexp&#x3D;&lt;范本样式&gt; : 指定字符串做为查找文件内容的样式。</p>
<p>-E 或 –extended-regexp : 将样式为延伸的正则表达式来使用。<br>-f&lt;规则文件&gt; 或 –file&#x3D;&lt;规则文件&gt; : 指定规则文件，其内容含有一个或多个规则样式，让grep查找符合规则条件的文件内容，格式为每行一个规则样式。</p>
<p>-F 或 –fixed-regexp : 将样式视为固定字符串的列表。</p>
<p>-G 或 –basic-regexp : 将样式视为普通的表示法来使用。</p>
<p>-h 或 –no-filename : 在显示符合样式的那一行之前，不标示该行所属的文件名称。</p>
<p>-H 或 –with-filename : 在显示符合样式的那一行之前，表示该行所属的文件名称。</p>
<p>-i 或 –ignore-case : 忽略字符大小写的差别。</p>
<p>-l 或 –file-with-matches : 列出文件内容符合指定的样式的文件名称。</p>
<p>-L 或 –files-without-match : 列出文件内容不符合指定的样式的文件名称。</p>
<p>-n 或 –line-number : 在显示符合样式的那一行之前，标示出该行的列数编号。</p>
<p>-o 或 –only-matching : 只显示匹配PATTERN 部分。</p>
<p>-q 或 –quiet或–silent : 不显示任何信息。</p>
<p>-r 或 –recursive : 此参数的效果和指定”-d recurse”参数相同。</p>
<p>-s 或 –no-messages : 不显示错误信息。</p>
<p>-v 或 –revert-match : 显示不包含匹配文本的所有行。</p>
<p>-V 或 –version : 显示版本信息。</p>
<p>-w 或 –word-regexp : 只显示全字符合的列。</p>
<p>-x –line-regexp : 只显示全列符合的列。</p>
<p>-y : 此参数的效果和指定”-i”参数相同。</p>
</blockquote>
<h2 id="11-总结"><a href="#11-总结" class="headerlink" title="11. 总结"></a>11. 总结</h2><p>本文由自己在网上找的一些资料，和自己学的Liunx进行的总结和记录，如果有好的建议或者错误，欢迎大家评论区指出。</p>
]]></content>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title>bug记录本</title>
    <url>/2022/05/09/bug%E8%AE%B0%E5%BD%95%E6%9C%AC/</url>
    <content><![CDATA[<blockquote>
<center>不积跬步，无以至千里；不积小流，无以成江海</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<blockquote>
<p>不定期和不定时更新，一步一步记录自己踩坑的瞬间</p>
</blockquote>
<h2 id="1-IDEA，SSM框架的静态资源访问不了"><a href="#1-IDEA，SSM框架的静态资源访问不了" class="headerlink" title="1. IDEA，SSM框架的静态资源访问不了"></a>1. IDEA，SSM框架的静态资源访问不了</h2><blockquote>
<p>原因：静态资源没有被访问到，除了路径可能不对，还有可能就是自己没有配置到项目之中或者配置出错。</p>
</blockquote>
<blockquote>
<p>解决方案：注意Spring原本静态配置需要对，在.pom配置文件中bulid添加下面的代码</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 如果不添加此节点mybatis的mapper.xml文件都会被漏掉。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="2-SSM-Mybatis访问不了带下划线名称的数据"><a href="#2-SSM-Mybatis访问不了带下划线名称的数据" class="headerlink" title="2. SSM Mybatis访问不了带下划线名称的数据"></a>2. SSM Mybatis访问不了带下划线名称的数据</h2><blockquote>
<p>原因：因为返回类型没有使用映射的id，而是使用实体类</p>
</blockquote>
<blockquote>
<p>解决方案：使用映射类型</p>
</blockquote>
]]></content>
      <tags>
        <tag>bug</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue2.x</title>
    <url>/2022/05/09/Vue2-x/</url>
    <content><![CDATA[<blockquote>
<center>内观其心，心无其心；外观其形，形无其形；远观其物，物无其物</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<blockquote>
<p>核心库只关心视图层,都是基于NodeJS,实际开发采用vue-cli脚手架开发，vue-router 路由，vuex状态管理，Vue UI</p>
</blockquote>
<h2 id="1-学习内容"><a href="#1-学习内容" class="headerlink" title="1. 学习内容"></a>1. 学习内容</h2><ul>
<li><p>核心</p>
<blockquote>
<p>数据驱动，组件化</p>
</blockquote>
</li>
<li><p>逻辑</p>
<blockquote>
<p>判断，循环</p>
</blockquote>
</li>
<li><p>事件</p>
<blockquote>
<p>浏览器事件【BOM】：window document 文档对象模型【DOM】- 事件：增删改查排序,JQuery</p>
</blockquote>
</li>
<li><p>视图</p>
<blockquote>
<p>html,css，css预处理器【新的语言】：SASS,LESS，js：原生js【ES】TypeScript，JS框架：JQuery，Angular，React【虚拟Dom】，Vue【计算属性虚拟DOM】，Axios,js构建工具：Babel，Webpack</p>
</blockquote>
</li>
<li><p>通信</p>
<blockquote>
<p>xhr【原生】 ajax，axios【ajax框架】</p>
</blockquote>
</li>
<li><p>页面跳转</p>
<blockquote>
<p>vue-router</p>
</blockquote>
</li>
<li><p>状态管理</p>
<blockquote>
<p>Vue-UI:飞冰【ICE】，ElementUI,Ant-Design,Bootstrap,AmazeUI，iView【移动端】</p>
</blockquote>
</li>
<li><p>后端管理</p>
<blockquote>
<p>NodeJS:Express，Koa，HPM，YARN</p>
</blockquote>
</li>
</ul>
<h2 id="2-步骤"><a href="#2-步骤" class="headerlink" title="2. 步骤"></a>2. 步骤</h2><h3 id="2-1-选择编译器"><a href="#2-1-选择编译器" class="headerlink" title="2.1 选择编译器"></a>2.1 选择编译器</h3><blockquote>
<p>vscode， IDEA， Hubilder， sublime， WebStrom</p>
</blockquote>
<h3 id="2-2-下载vue-js"><a href="#2-2-下载vue-js" class="headerlink" title="2.2 下载vue.js"></a>2.2 下载vue.js</h3><h3 id="2-3-CDN导入vue-js"><a href="#2-3-CDN导入vue-js" class="headerlink" title="2.3 CDN导入vue.js"></a>2.3 CDN导入vue.js</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-4-创建html文件"><a href="#2-4-创建html文件" class="headerlink" title="2.4 创建html文件"></a>2.4 创建html文件</h3><ul>
<li>栗子</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span> xmlns:v-bind=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> xmlns:v-on=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;demo1&lt;/title&gt;</span><br><span class="line">    &lt;!--导入vue.js--&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;!--vue3<span class="number">.0</span>--&gt;</span><br><span class="line">    &lt;!--&lt;script src=<span class="string">&quot;https://unpkg.com/vue@next&quot;</span>&gt;&lt;/script&gt;--&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!--view层：模板--&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">        &lt;!--绑定--&gt;</span><br><span class="line">        &lt;span v-bind:title=<span class="string">&quot;message&quot;</span>&gt;</span><br><span class="line">            点击悬浮</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">        &lt;!--判断--&gt;</span><br><span class="line">        &lt;h1 v-<span class="keyword">if</span>=<span class="string">&quot;type === &#x27;A&#x27;&quot;</span>&gt;&#123;&#123; message &#125;&#125;&lt;/h1&gt;</span><br><span class="line">        &lt;h1 v-<span class="keyword">else</span>-<span class="keyword">if</span>=<span class="string">&quot;type === &#x27;B&#x27;&quot;</span>&gt;B&lt;/h1&gt;</span><br><span class="line">        &lt;h1 v-<span class="keyword">else</span>-<span class="keyword">if</span>=<span class="string">&quot;type === &#x27;C&#x27;&quot;</span>&gt;C&lt;/h1&gt;</span><br><span class="line">        &lt;h1 v-<span class="keyword">else</span>&gt;D&lt;/h1&gt;</span><br><span class="line">        &lt;!--循环--&gt;</span><br><span class="line">        &lt;ol&gt;</span><br><span class="line">            &lt;li v-<span class="keyword">for</span>=<span class="string">&quot;(item,index) in items&quot;</span>&gt;</span><br><span class="line">                &#123;&#123; item.a &#125;&#125;--&gt;&#123;&#123; index &#125;&#125;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">        &lt;/ol&gt;</span><br><span class="line"></span><br><span class="line">        &lt;button v-on:click=<span class="string">&quot;sayHi&quot;</span>&gt;点击&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="type">var</span> <span class="variable">app1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">            el: <span class="string">&quot;#app&quot;</span>,</span><br><span class="line">            <span class="comment">//Model层：数据，</span></span><br><span class="line">            data:&#123;</span><br><span class="line">                message: <span class="string">&quot;hello,vue&quot;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>().toLocaleString(),</span><br><span class="line">                ok: <span class="literal">true</span>,</span><br><span class="line">                type: <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">                items: [</span><br><span class="line">                    &#123;a: <span class="string">&#x27;几个&#x27;</span>&#125;,</span><br><span class="line">                    &#123;a: <span class="string">&#x27;haiyou&#x27;</span>&#125;,</span><br><span class="line">                    &#123;a: <span class="string">&#x27;hou&#x27;</span>&#125;,</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">//方法，必须定义在Methods对象中，v-on：来绑定事件</span></span><br><span class="line">            methods: &#123;</span><br><span class="line">                sayHi: function () &#123;</span><br><span class="line">                    alert(<span class="built_in">this</span>.message)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*vue3.0方式*/</span></span><br><span class="line">        <span class="comment">/*const HelloVueApp = &#123;</span></span><br><span class="line"><span class="comment">            data() &#123;</span></span><br><span class="line"><span class="comment">                return &#123;</span></span><br><span class="line"><span class="comment">                    message: &#x27;Hello Vue!!&#x27;</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        Vue.createApp(HelloVueApp).mount(&#x27;#app&#x27;)*/</span></span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<h2 id="3-vue基本语法"><a href="#3-vue基本语法" class="headerlink" title="3. vue基本语法"></a>3. vue基本语法</h2><h3 id="3-1-vue七大属性"><a href="#3-1-vue七大属性" class="headerlink" title="3.1 vue七大属性"></a>3.1 vue七大属性</h3><ul>
<li><p>el属性</p>
</li>
<li><ul>
<li>用来指示vue编译器从什么地方开始解析 vue的语法，可以说是一个占位符。</li>
</ul>
</li>
<li><p>data属性</p>
</li>
<li><ul>
<li>用来组织从view中抽象出来的属性，可以说将视图的数据抽象出来存放在data中。</li>
</ul>
</li>
<li><p>template属性</p>
</li>
<li><ul>
<li>用来设置模板，会替换页面元素，包括占位符。</li>
</ul>
</li>
<li><p>methods属性</p>
</li>
<li><ul>
<li>放置页面中的业务逻辑，js方法一般都放置在methods中，每次进入页面都要执行一次</li>
</ul>
</li>
<li><p>render属性</p>
</li>
<li><ul>
<li>创建真正的Virtual Dom</li>
</ul>
</li>
<li><p>computed属性</p>
</li>
<li><ul>
<li>用来计算，只有message发生变化时才会触发reverseMessage</li>
</ul>
</li>
<li><p>watch属性</p>
</li>
<li><ul>
<li>watch:function(new,old){}</li>
<li>监听data中数据的变化</li>
<li>两个参数，一个返回新值，一个返回旧值，</li>
</ul>
</li>
</ul>
<h3 id="3-2-V-model绑定表单与组件"><a href="#3-2-V-model绑定表单与组件" class="headerlink" title="3.2 V-model绑定表单与组件"></a>3.2 V-model绑定表单与组件</h3><ul>
<li>栗子</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:v-bind</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xmlns:v-on</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>demo2<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--导入vue.js--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--view层：模板--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">app-nav</span> <span class="attr">v-for</span>=<span class="string">&quot;item in items&quot;</span> <span class="attr">v-bind:course</span>=<span class="string">&quot;item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">app-nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">from</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--双向数据绑定--&gt;</span></span><br><span class="line">        输入的文本：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        性别：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span> <span class="attr">id</span>=<span class="string">&quot;male&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;gender&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">lable</span> <span class="attr">for</span>=<span class="string">&quot;male&quot;</span> <span class="attr">checked</span>&gt;</span>男<span class="tag">&lt;/<span class="name">lable</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span> <span class="attr">id</span>=<span class="string">&quot;female&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;gender&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">lable</span> <span class="attr">for</span>=<span class="string">&quot;female&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">lable</span>&gt;</span></span><br><span class="line">        选中了谁：&#123;&#123; gender &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">&quot;selected&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> <span class="attr">disabled</span>&gt;</span>请选择<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>A<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>B<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>C<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        选中了谁：&#123;&#123; selected &#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//定义一个组件</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;app-nav&quot;</span>,&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">props</span>: [<span class="string">&#x27;course&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">       <span class="attr">template</span>:  <span class="string">&#x27;&lt;ol&gt;\n&#x27;</span> +</span></span><br><span class="line"><span class="language-javascript">           <span class="string">&#x27;&lt;li&gt;&#123;&#123; course &#125;&#125;&lt;/li&gt;\n&#x27;</span> +</span></span><br><span class="line"><span class="language-javascript">           <span class="string">&#x27;&lt;/ol&gt;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> app1 = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//Model层：数据，</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">message</span>: <span class="string">&quot;123&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">gender</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">selected</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">items</span>: [<span class="string">&quot;java&quot;</span>,<span class="string">&quot;Linux&quot;</span>,<span class="string">&quot;Vue&quot;</span>]</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//方法，必须定义在Methods对象中，v-on：来绑定事件</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-3-Vue生命周期"><a href="#3-3-Vue生命周期" class="headerlink" title="3.3 Vue生命周期"></a>3.3 Vue生命周期</h3><p><img src="https://xxy8.github.io/images/vue1.png" alt="Vue 实例生命周期"></p>
<ul>
<li>栗子</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:v-bind</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>demo3<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*隐藏&#123;&#123; info.name &#125;&#125;*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-attr">[v-clock]</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;vue&quot;</span> <span class="attr">v-clock</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123; info.name &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123; info.address.street &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;info.url&quot;</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--引入vue--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--引入Axios--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">&#x27;#vue&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//请求的返回参数，必须和JSON字符串一样</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">info</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>: <span class="literal">null</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">address</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">street</span>: <span class="literal">null</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">city</span>: <span class="literal">null</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">country</span>: <span class="literal">null</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">url</span>: <span class="literal">null</span>,</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">mounted</span>(<span class="params"></span>) &#123;<span class="comment">//钩子函数，链式编程，ES6新特性</span></span></span><br><span class="line"><span class="language-javascript">            axios.<span class="title function_">get</span>(<span class="string">&#x27;../data.json&#x27;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> (<span class="variable language_">this</span>.<span class="property">info</span> = response.<span class="property">data</span>));</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-4-计算属性"><a href="#3-4-计算属性" class="headerlink" title="3.4 计算属性"></a>3.4 计算属性</h3><p>（1） 栗子</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:v-bind</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">xmlns:v-on</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>demo1<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--导入vue.js--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--vue3.0--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;script src=&quot;https://unpkg.com/vue@next&quot;&gt;&lt;/script&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--view层：模板--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--绑定--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;message&quot;</span>&gt;</span></span><br><span class="line">            点击悬浮</span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--判断--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-if</span>=<span class="string">&quot;type === &#x27;A&#x27;&quot;</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type === &#x27;B&#x27;&quot;</span>&gt;</span>B<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type === &#x27;C&#x27;&quot;</span>&gt;</span>C<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-else</span>&gt;</span>D<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--循环--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in items&quot;</span>&gt;</span></span><br><span class="line">                &#123;&#123; item.a &#125;&#125;--&gt;&#123;&#123; index &#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;sayHi&quot;</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; currentTime1() &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; currentTime2 &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> app1 = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//Model层：数据，</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">message</span>: <span class="string">&quot;hello,vue&quot;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">toLocaleString</span>(),</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">ok</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;A&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">items</span>: [</span></span><br><span class="line"><span class="language-javascript">                    &#123;<span class="attr">a</span>: <span class="string">&#x27;几个&#x27;</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">                    &#123;<span class="attr">a</span>: <span class="string">&#x27;haiyou&#x27;</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">                    &#123;<span class="attr">a</span>: <span class="string">&#x27;hou&#x27;</span>&#125;,</span></span><br><span class="line"><span class="language-javascript">                ]</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//方法，必须定义在Methods对象中，v-on：来绑定事件</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">sayHi</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">alert</span>(<span class="variable language_">this</span>.<span class="property">message</span>)</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">currentTime1</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> <span class="title class_">Date</span>.<span class="title function_">now</span>();</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">computed</span>: &#123;<span class="comment">//计算属性：method，cpmputed方法名不能重名，重名之后，只会调用method的方法,可以相当于缓存</span></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">currentTime2</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> <span class="title class_">Date</span>.<span class="title function_">now</span>();</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/*vue3.0方式*/</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/*const HelloVueApp = &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            data() &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                return &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                    message: &#x27;Hello Vue!!&#x27;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        Vue.createApp(HelloVueApp).mount(&#x27;#app&#x27;)*/</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-5-插槽"><a href="#3-5-插槽" class="headerlink" title="3.5 插槽"></a>3.5 插槽</h3><ul>
<li>栗子</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--导入vue.js--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">todo</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">todo-title</span> <span class="attr">slot</span>=<span class="string">&quot;todo-title&quot;</span> <span class="attr">:title</span>=<span class="string">&quot;title&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">todo-title</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">todo-items</span> <span class="attr">slot</span>=<span class="string">&quot;todo-items&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;item in todoItems&quot;</span> <span class="attr">:item</span>=<span class="string">&quot;item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">todo-items</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">todo</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    /*slot:插槽*/</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    Vue.component(&quot;todo&quot;,&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        template:</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        &#x27;<span class="tag">&lt;<span class="name">div</span>&gt;</span>\</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">           <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;todo-title&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span>\</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">           <span class="tag">&lt;<span class="name">ul</span>&gt;</span>\</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">            <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;todo-items&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span>\</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span>\</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span>&#x27;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    &#125;);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    Vue.component(&quot;todo-title&quot;,&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        props: [&#x27;title&#x27;],</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        template: &#x27;<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">title</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span>&#x27;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    &#125;);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    Vue.component(&quot;todo-items&quot;,&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        props: [&#x27;item&#x27;],</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">       template: &#x27;<span class="tag">&lt;<span class="name">li</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">item</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span>&#x27;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    &#125;);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    var vm = new Vue(&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">       el: &quot;#app&quot;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        data: &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">           title: &quot;hello列表&quot;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">           todoItems: [&#x27;hello1&#x27;,&#x27;hello2&#x27;,&#x27;hello3&#x27;]</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        &#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    &#125;);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-6-自定义事件"><a href="#3-6-自定义事件" class="headerlink" title="3.6 自定义事件"></a>3.6 自定义事件</h3><ul>
<li>栗子</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--导入vue.js--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">todo</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">todo-title</span> <span class="attr">slot</span>=<span class="string">&quot;todo-title&quot;</span> <span class="attr">:title</span>=<span class="string">&quot;title&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">todo-title</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">todo-items</span> <span class="attr">slot</span>=<span class="string">&quot;todo-items&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;(item ,index) in todoItems&quot;</span> <span class="attr">:item</span>=<span class="string">&quot;item&quot;</span> <span class="attr">v-bind:index</span>=<span class="string">&quot;index&quot;</span> <span class="attr">v-on:remove</span>=<span class="string">&quot;removeItems(index)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">todo-items</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">todo</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/*slot:插槽*/</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;todo&quot;</span>,&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">template</span>:</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&#x27;&lt;div&gt;\</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">           &lt;slot name=&quot;todo-title&quot;&gt;&lt;/slot&gt;\</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">           &lt;ul&gt;\</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            &lt;slot name=&quot;todo-items&quot;&gt;&lt;/slot&gt;\</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            &lt;/ul&gt;\</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">         &lt;/div&gt;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;todo-title&quot;</span>,&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">props</span>: [<span class="string">&#x27;title&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">template</span>: <span class="string">&#x27;&lt;div&gt;&#123;&#123; title &#125;&#125;&lt;/div&gt;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;todo-items&quot;</span>,&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">props</span>: [<span class="string">&#x27;item&#x27;</span>,<span class="string">&#x27;index&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">       <span class="attr">template</span>: <span class="string">&#x27;&lt;li&gt;&#123;&#123; index &#125;&#125;--&gt;&#123;&#123; item &#125;&#125; &lt;button @click=&quot;remove&quot;&gt;删除&lt;/button&gt;&lt;/li&gt;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">remove</span>:<span class="keyword">function</span> (<span class="params">index</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.$emit(<span class="string">&#x27;remove&#x27;</span>,index);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">       <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">           <span class="attr">title</span>: <span class="string">&quot;hello列表&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">           <span class="attr">todoItems</span>: [<span class="string">&#x27;hello1&#x27;</span>,<span class="string">&#x27;hello2&#x27;</span>,<span class="string">&#x27;hello3&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">           <span class="attr">removeItems</span>:<span class="keyword">function</span> (<span class="params">index</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">               <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;删除了&quot;</span> + <span class="variable language_">this</span>.<span class="property">todoItems</span>[index] + <span class="string">&quot;成功&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">               <span class="variable language_">this</span>.<span class="property">todoItems</span>.<span class="title function_">splice</span>(index,<span class="number">1</span>);<span class="comment">//一次删除一个元素</span></span></span><br><span class="line"><span class="language-javascript">           &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="4-Axios异步通信"><a href="#4-Axios异步通信" class="headerlink" title="4. Axios异步通信"></a>4. Axios异步通信</h2><blockquote>
<p>实现AJAX异步通信，可以用在浏览器和node.js中,Axios 是一个基于 promise 的 HTTP 库，js至少为ES6，有箭头函数，少用JQuery，因为会频繁操作Dom</p>
</blockquote>
<p><a href="http://www.axios-js.com/">axios文档</a></p>
<h3 id="4-1功能"><a href="#4-1功能" class="headerlink" title="4.1功能"></a>4.1功能</h3><ul>
<li>从浏览器中创建 <a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest">XMLHttpRequests</a></li>
<li>从 node.js 创建 <a href="http://nodejs.org/api/http.html">http</a> 请求</li>
<li>支持 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise">Promise</a> API</li>
<li>拦截请求和响应</li>
<li>转换请求数据和响应数据</li>
<li>取消请求</li>
<li>自动转换 JSON 数据</li>
<li>客户端支持防御 <a href="http://en.wikipedia.org/wiki/Cross-site_request_forgery">XSRF</a></li>
</ul>
<h2 id="5-vue-cli脚手架"><a href="#5-vue-cli脚手架" class="headerlink" title="5.  vue-cli脚手架"></a>5.  vue-cli脚手架</h2><blockquote>
<p>统一目录结构</p>
</blockquote>
<h3 id="5-1-安装环境"><a href="#5-1-安装环境" class="headerlink" title="5.1 安装环境"></a>5.1 安装环境</h3><p>(1) 安装node.js<a href="https://blog.csdn.net/weixin_43937315/article/details/106901979?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162562597716780271569015%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=162562597716780271569015&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-2-106901979.first_rank_v2_pc_rank_v29_1&utm_term=nodejs%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE&spm=1018.2226.3001.4187">安装node.js，其他博主</a></p>
<p>(2) 安装npm淘宝镜像加速器cnpm【尽量少用cnpm】<a href="https://blog.csdn.net/qq_40323256/article/details/100825982?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162599673216780269811058%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=162599673216780269811058&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-3-100825982.first_rank_v2_pc_rank_v29_1&utm_term=npm&spm=1018.2226.3001.4187">npm安装，其他博主</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install cnpm -g</span><br></pre></td></tr></table></figure>

<p>(3) 通过cnpm安装vue-cli【比npm快】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm install vue-cli -g</span><br></pre></td></tr></table></figure>

<p>(4) 栗子</p>
<ul>
<li>新建一个目录</li>
<li>创建基于webpack模板的vue应用程序,初始化并运行</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1.初始化</span></span><br><span class="line">vue init webpack myvue</span><br><span class="line"></span><br><span class="line">? Project name myvue</span><br><span class="line">? Project description A Vue.js project</span><br><span class="line">? Author xxy</span><br><span class="line">? Vue build standalone</span><br><span class="line">? Install vue-router? No</span><br><span class="line">? Use ESLint to lint your code? No</span><br><span class="line">? Set up unit tests No</span><br><span class="line">? Setup e2e tests with Nightwatch? No</span><br><span class="line">? Should we run `npm install` <span class="keyword">for</span> you after the project has been created? (recommended) no</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 移动到myvue</span></span><br><span class="line"><span class="built_in">cd</span> myvue</span><br><span class="line"><span class="comment"># 3. 安装依赖,cnpm少用</span></span><br><span class="line">npm install</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">cnpm install </span><br><span class="line"><span class="comment"># 4. 运行，cnpm少用</span></span><br><span class="line">npm run dev</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">cnpm run dev</span><br></pre></td></tr></table></figure>

<p>(5) Git</p>
<h2 id="6-Webpack【前端资源构建打包工具】"><a href="#6-Webpack【前端资源构建打包工具】" class="headerlink" title="6. Webpack【前端资源构建打包工具】"></a>6. Webpack【前端资源构建打包工具】</h2><h3 id="6-1-模块化的演进-背景"><a href="#6-1-模块化的演进-背景" class="headerlink" title="6.1 模块化的演进(背景)"></a>6.1 模块化的演进(背景)</h3><ul>
<li>Script标签</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script src = <span class="string">&quot;a.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">&quot;b.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>缺点：全局容易造成冲突</p>
</blockquote>
<ul>
<li>CommonsJS</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="string">&quot;module&quot;</span>);</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;../module.js&quot;</span>);</span><br><span class="line"><span class="keyword">export</span>.<span class="property">doStuff</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;;</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = someValue;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>缺点：同步加载</p>
</blockquote>
<ul>
<li>AMD</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">define</span>(<span class="string">&quot;module&quot;</span>,[<span class="string">&quot;dep1&quot;</span>,<span class="string">&quot;dep2&quot;</span>],<span class="keyword">function</span>(<span class="params">d1,d2</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> someExportedValue;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">require</span>([<span class="string">&quot;module&quot;</span>,<span class="string">&quot;../file.js&quot;</span>], <span class="keyword">function</span>(<span class="params"><span class="variable language_">module</span>,file</span>) &#123;&#125;);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>缺点：开发成本高，是一种妥协的实现</p>
</blockquote>
<blockquote>
<p>实现：requireJs,curl</p>
</blockquote>
<ul>
<li>CMD</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">define</span>(<span class="keyword">function</span>(<span class="params"><span class="built_in">require</span>,<span class="built_in">exports</span>,<span class="variable language_">module</span></span>)</span><br><span class="line">       <span class="keyword">var</span> $ = <span class="built_in">require</span>(<span class="string">&quot;jquery&quot;</span>);</span><br><span class="line">       <span class="keyword">var</span> <span class="title class_">Spinning</span> = <span class="built_in">require</span>(<span class="string">&quot;./spinning&quot;</span>);</span><br><span class="line">		<span class="keyword">export</span>.<span class="property">doSomething</span> = ...;</span><br><span class="line">        <span class="variable language_">module</span>.<span class="property">exports</span> = ...;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>缺点：依赖SPM打包，模块加载逻辑偏重</p>
</blockquote>
<blockquote>
<p>实现：Sea.js,coolie</p>
</blockquote>
<ul>
<li>ES6模块</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&quot;jquery&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">doStuff</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line"><span class="variable language_">module</span> <span class="string">&quot;localModule&quot;</span> &#123;&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>缺点：全新的命令，新版NodeJS才支持，原生浏览器还没有实现该标准</p>
</blockquote>
<blockquote>
<p>实现：Babel</p>
</blockquote>
<h3 id="6-2-安装Webpack"><a href="#6-2-安装Webpack" class="headerlink" title="6.2 安装Webpack"></a>6.2 安装Webpack</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install webpack -g</span><br><span class="line">npm install webpack-cli -g</span><br><span class="line"><span class="comment"># 测试安装是否成功</span></span><br><span class="line">webpack -v</span><br><span class="line">webpack-cli -v </span><br></pre></td></tr></table></figure>


<h3 id="6-3-配置"><a href="#6-3-配置" class="headerlink" title="6.3 配置"></a>6.3 配置</h3><ul>
<li>创建<code>webpack.config.js</code> 配置文件<ul>
<li>entry: 入口文件，指定webpack用哪个文件作为项目的入口</li>
<li>output:输出，指定webpack把处理完成的文件放置到指定路径</li>
<li>module：模块，用于处理各种类型的文件</li>
<li>plugins：插件，如：热更新、代码重用等</li>
<li>resolve：设置路径指向</li>
<li>watch：监听，用于设置文件改动后直接打包</li>
</ul>
</li>
</ul>
<h3 id="6-4-使用"><a href="#6-4-使用" class="headerlink" title="6.4 使用"></a>6.4 使用</h3><ul>
<li><p>创建项目</p>
</li>
<li><p>创建一个名为modules的目录，用于放置Js模块等资源文件</p>
</li>
<li><p>在modules下创建模块文件，如hello.js，用于编写JS模块相关代码</p>
</li>
<li><p>hello.js</p>
</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//暴露一个方法</span></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">sayHi</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;&lt;h1&gt;xxy&lt;/h1&gt;&quot;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<ul>
<li>main.js</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> hello = <span class="built_in">require</span>(<span class="string">&quot;./hello&quot;</span>);</span><br><span class="line">hello.<span class="title function_">sayHi</span>();</span><br></pre></td></tr></table></figure>

<ul>
<li>webpack.config.js</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">entry</span>: <span class="string">&#x27;./modules/main.js&#x27;</span>,</span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&quot;./js/bundle.js&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<ul>
<li>启动终端</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">webpack</span><br></pre></td></tr></table></figure>

<h2 id="7-vue-router"><a href="#7-vue-router" class="headerlink" title="7. vue-router"></a>7. vue-router</h2><h3 id="7-1-安装"><a href="#7-1-安装" class="headerlink" title="7.1 安装"></a>7.1 安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install vue-router --save-dev</span><br></pre></td></tr></table></figure>

<h3 id="7-2-使用vue-router"><a href="#7-2-使用vue-router" class="headerlink" title="7.2 使用vue-router"></a>7.2 使用vue-router</h3><ul>
<li>创建<code>Content.vue</code>文件</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h1&gt;内容&lt;/h1&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        name: &quot;Content&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>创建<code>Main.vue</code>文件</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h1&gt;首页&lt;/h1&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        name: &quot;Main&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>创建router文件夹</li>
<li>router文件夹下创建<code>index.js</code>文件</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VueRouter</span> <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Content</span> <span class="keyword">from</span> <span class="string">&#x27;../components/Content&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Main</span> <span class="keyword">from</span> <span class="string">&#x27;../components/Main&#x27;</span></span><br><span class="line"><span class="comment">//安装路由</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">VueRouter</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置导出路由</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">    <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//路由路径</span></span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;/content&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;content&#x27;</span>,</span><br><span class="line">        <span class="comment">//跳转的组件</span></span><br><span class="line">        <span class="attr">component</span>: <span class="title class_">Content</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//路由路径</span></span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;/main&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;main&#x27;</span>,</span><br><span class="line">        <span class="comment">//跳转的组件</span></span><br><span class="line">        <span class="attr">component</span>: <span class="title class_">Main</span></span><br><span class="line">    &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<ul>
<li><code>App.vue</code>文件</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">   &lt;h1&gt;xxy&lt;/h1&gt;</span><br><span class="line">   &lt;router-link to = &quot;/main&quot;&gt;首页&lt;/router-link&gt;</span><br><span class="line">    &lt;router-link to = &quot;/content&quot;&gt;内容&lt;/router-link&gt;</span><br><span class="line">    &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  // import Content from &#x27;./components/Content&#x27;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;App&#x27;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: &#x27;Avenir&#x27;, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li><code>main.js</code>文件</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// The Vue build version to load with the `import` command</span></span><br><span class="line"><span class="comment">// (runtime-only or standalone) has been set in webpack.base.conf with an alias.</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  <span class="comment">//配置路由</span></span><br><span class="line">  router,</span><br><span class="line">  <span class="attr">components</span>: &#123; <span class="title class_">App</span> &#125;,</span><br><span class="line">  <span class="attr">template</span>: <span class="string">&#x27;&lt;App/&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="8-建立新的项目"><a href="#8-建立新的项目" class="headerlink" title="8. 建立新的项目"></a>8. 建立新的项目</h2><h3 id="8-1-环境准备步骤"><a href="#8-1-环境准备步骤" class="headerlink" title="8.1 环境准备步骤"></a>8.1 环境准备步骤</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进入目录</span></span><br><span class="line"><span class="built_in">cd</span> <span class="built_in">test</span></span><br><span class="line"><span class="comment"># vue初始化</span></span><br><span class="line">vue init webpack myvue1</span><br><span class="line"><span class="comment"># npm安装vue-router</span></span><br><span class="line"><span class="built_in">cd</span> myvue1</span><br><span class="line">npm install vue-router --save-dev</span><br><span class="line"><span class="comment"># 安装UI库</span></span><br><span class="line">npm i element-ui -S</span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">npm install</span><br><span class="line"><span class="comment"># 安装SASS加载器，css</span></span><br><span class="line">cnpm install sass-loader node-sass --save-dev</span><br><span class="line"><span class="comment"># 启动项目</span></span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure>

<h3 id="8-2-npm命令解释"><a href="#8-2-npm命令解释" class="headerlink" title="8.2 npm命令解释"></a>8.2 npm命令解释</h3><ul>
<li>npm install moduleName：安装模块到项目目录下</li>
<li>npm install -g moduleName: -g表示安装全局，具体哪个盘，看npm config prefix 的位置</li>
<li>npm install –save moduleName: –save表示将模块安装到项目目录下，并在package文件的dependencies节点写入依赖，-S为该命令的缩写</li>
<li>npm install –save-dev moduleName: –save-dev表示将模块安装到项目目录下，并在package文件的devDependencies节点写入依赖，-D为该命令的缩写</li>
</ul>
<h3 id="8-3-编写vue文件"><a href="#8-3-编写vue文件" class="headerlink" title="8.3 编写vue文件"></a>8.3 编写vue文件</h3><ul>
<li>Login.vue</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-form ref=&quot;loginForm&quot; :model=&quot;form&quot; :rules=&quot;rules&quot; label-width=&quot;80px&quot; class=&quot;login-box&quot;&gt;</span><br><span class="line">      &lt;h3 class=&quot;login-title&quot;&gt;欢迎登录&lt;/h3&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;账号&quot; prop=&quot;username&quot;&gt;</span><br><span class="line">        &lt;el-input type=&quot;text&quot; placeholder=&quot;请输入账号&quot; v-model=&quot;form.username&quot;/&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;密码&quot; prop=&quot;password&quot;&gt;</span><br><span class="line">        &lt;el-input type=&quot;password&quot; placeholder=&quot;请输入密码&quot; v-model=&quot;form.password&quot;/&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; v-on:click=&quot;onSubmit(&#x27;loginForm&#x27;)&quot;&gt;登录&lt;/el-button&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-dialog</span><br><span class="line">      title=&quot;温馨提示&quot;</span><br><span class="line">      :visible.sync=&quot;dialogVisible&quot;</span><br><span class="line">      width=&quot;30%&quot;</span><br><span class="line">      :before-close=&quot;handleClose&quot;&gt;</span><br><span class="line">      &lt;span&gt;请输入账号和密码&lt;/span&gt;</span><br><span class="line">      &lt;span slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; @click=&quot;dialogVisible = false&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    name: &quot;Login&quot;,</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        form: &#123;</span><br><span class="line">          username: &#x27;&#x27;,</span><br><span class="line">          password: &#x27;&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        // 表单验证，需要在 el-form-item 元素中增加 prop 属性</span><br><span class="line">        rules: &#123;</span><br><span class="line">          username: [</span><br><span class="line">            &#123;required: true, message: &#x27;账号不可为空&#x27;, trigger: &#x27;blur&#x27;&#125;</span><br><span class="line">          ],</span><br><span class="line">          password: [</span><br><span class="line">            &#123;required: true, message: &#x27;密码不可为空&#x27;, trigger: &#x27;blur&#x27;&#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        // 对话框显示和隐藏</span><br><span class="line">        dialogVisible: false</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      onSubmit(formName) &#123;</span><br><span class="line">        // 为表单绑定验证功能</span><br><span class="line">        this.$refs[formName].validate((valid) =&gt; &#123;</span><br><span class="line">          if (valid) &#123;</span><br><span class="line">            // 使用 vue-router 路由到指定页面，该方式称之为编程式导航</span><br><span class="line">            this.$router.push(&quot;/main&quot;);</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            this.dialogVisible = true;</span><br><span class="line">            return false;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">  .login-box &#123;</span><br><span class="line">    border: 1px solid #DCDFE6;</span><br><span class="line">    width: 350px;</span><br><span class="line">    margin: 180px auto;</span><br><span class="line">    padding: 35px 35px 15px 35px;</span><br><span class="line">    border-radius: 5px;</span><br><span class="line">    -webkit-border-radius: 5px;</span><br><span class="line">    -moz-border-radius: 5px;</span><br><span class="line">    box-shadow: 0 0 25px #909399;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .login-title &#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">    margin: 0 auto 40px auto;</span><br><span class="line">    color: #303133;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>Main.vue</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h1&gt;主页&lt;/h1&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;main&#x27;,</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>App.vue</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;h1&gt;zhu&lt;/h1&gt;</span><br><span class="line">    &lt;router-link to=&quot;/login&quot;&gt;登录&lt;/router-link&gt;</span><br><span class="line">    &lt;router-link to=&quot;/main&quot;&gt;主页&lt;/router-link&gt;</span><br><span class="line">    &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;App&#x27;,</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>index.js</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Router</span> <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Login</span> <span class="keyword">from</span> <span class="string">&#x27;../views/Login&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Main</span> <span class="keyword">from</span> <span class="string">&#x27;../views/Main&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Router</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">Router</span>(&#123;</span><br><span class="line">    <span class="attr">routes</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;login&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: <span class="title class_">Login</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/main&#x27;</span>,</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;main&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: <span class="title class_">Main</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<ul>
<li>main.js</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ElementUI</span> <span class="keyword">from</span> <span class="string">&#x27;element-ui&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;element-ui/lib/theme-chalk/index.css&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(router);</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">ElementUI</span>);</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  router,</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>)<span class="comment">//ElementUI</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>可能遇到的问题：Module build failed: Error: Node Sass version 6.0.1 is incompatible with ^4.0.0.</p>
</blockquote>
<blockquote>
<p>原因：此错误来自sass-loader。semver不匹配，因为node-sass @latest为v5.0.0，而sass-loader期望值为^ 4.0.0。</p>
</blockquote>
<blockquote>
<p>解决方案：</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm uninstall node-sass</span><br><span class="line">npm install node-sass@4.14.1</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure>

<h2 id="9-安装axios"><a href="#9-安装axios" class="headerlink" title="9. 安装axios"></a>9. 安装axios</h2><h3 id="9-1-命令"><a href="#9-1-命令" class="headerlink" title="9.1 命令"></a>9.1 命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install axios -S</span><br><span class="line">cnpm install axios -S</span><br></pre></td></tr></table></figure>

<h3 id="9-2-路由模式"><a href="#9-2-路由模式" class="headerlink" title="9.2 路由模式"></a>9.2 路由模式</h3><ul>
<li><p>hash：路径带 # 符号，如 <a href="http://localhost/#/login">http://localhost/#/login</a></p>
</li>
<li><p>history：路径不带 # 符号，如 <a href="http://localhost/login">http://localhost/login</a></p>
</li>
</ul>
<h3 id="9-3-路由钩子与异步请求"><a href="#9-3-路由钩子与异步请求" class="headerlink" title="9.3  路由钩子与异步请求"></a>9.3  路由钩子与异步请求</h3><ul>
<li><p><code>beforeRouteEnter</code>：在进入路由前执行</p>
</li>
<li><p><code>beforeRouteLeave</code>：在离开路由前执行</p>
</li>
<li><p><strong>参数说明</strong></p>
<ul>
<li>to：路由将要跳转的路径信息</li>
<li>from：路径跳转前的路径信息</li>
<li>next：路由的控制参数</li>
<li>next() 跳入下一个页面</li>
<li>next(’&#x2F;path’) 改变路由的跳转方向，使其跳到另一个路由</li>
<li>next(false) 返回原来的页面</li>
<li>next((vm)&#x3D;&gt;{}) 仅在 beforeRouteEnter 中可用，vm 是组件实例</li>
</ul>
</li>
</ul>
<h3 id="9-4-实例"><a href="#9-4-实例" class="headerlink" title="9.4 实例"></a>9.4 实例</h3><ul>
<li>data.json</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;weg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sex&quot;</span><span class="punctuation">:</span> <span class="string">&quot;男&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://www.baidu.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;street&quot;</span><span class="punctuation">:</span> <span class="string">&quot;文苑路&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;南京&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;country&quot;</span><span class="punctuation">:</span> <span class="string">&quot;中国&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;links&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bilibili&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://www.bilibili.com&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;baidu&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://www.baidu.com&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cqh video&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://www.4399.com&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>UserList.vue</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h1&gt;用户列表&lt;/h1&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;UserList&#x27;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>UserProfile.vue</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;!--所有的元素，必须在根节点下--&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;h1&gt;个人信息&lt;/h1&gt;</span><br><span class="line">&#123;&#123;id&#125;&#125;</span><br><span class="line"></span><br><span class="line">&lt;!--&#123;&#123; $route.params.id &#125;&#125;--&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props: [&#x27;id&#x27;],</span><br><span class="line">  name: &#x27;UserProfile&#x27;,</span><br><span class="line">  beforeRouteEnter:(to,from,next)=&gt; &#123;</span><br><span class="line">      console.log(&quot;进入路由之前：&quot;); //加载数据</span><br><span class="line">      next(vm =&gt; &#123;</span><br><span class="line">        vm.getData();//进入路由之前执行getData</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  beforeRouteLeave:(to,from,next)=&gt;&#123;</span><br><span class="line">       console.log(&quot;进入路由之后：&quot;);</span><br><span class="line">      next();</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    getData: function() &#123;</span><br><span class="line">     this.axios(&#123;</span><br><span class="line">       method: &#x27;get&#x27;,</span><br><span class="line">       url: &#x27;http://localhost:8080/static/mock/data.json&#x27;</span><br><span class="line">     &#125;).then(function(response) &#123;</span><br><span class="line">       console.log(response)</span><br><span class="line">     &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>Login.vue</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-form ref=&quot;loginForm&quot; :model=&quot;form&quot; :rules=&quot;rules&quot; label-width=&quot;80px&quot; class=&quot;login-box&quot;&gt;</span><br><span class="line">      &lt;h3 class=&quot;login-title&quot;&gt;欢迎登录&lt;/h3&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;账号&quot; prop=&quot;username&quot;&gt;</span><br><span class="line">        &lt;el-input type=&quot;text&quot; placeholder=&quot;请输入账号&quot; v-model=&quot;form.username&quot;/&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;密码&quot; prop=&quot;password&quot;&gt;</span><br><span class="line">        &lt;el-input type=&quot;password&quot; placeholder=&quot;请输入密码&quot; v-model=&quot;form.password&quot;/&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; v-on:click=&quot;onSubmit(&#x27;loginForm&#x27;)&quot;&gt;登录&lt;/el-button&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-dialog</span><br><span class="line">      title=&quot;温馨提示&quot;</span><br><span class="line">      :visible.sync=&quot;dialogVisible&quot;</span><br><span class="line">      width=&quot;30%&quot;</span><br><span class="line">      :before-close=&quot;handleClose&quot;&gt;</span><br><span class="line">      &lt;span&gt;请输入账号和密码&lt;/span&gt;</span><br><span class="line">      &lt;span slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; @click=&quot;dialogVisible = false&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    name: &quot;Login&quot;,</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        form: &#123;</span><br><span class="line">          username: &#x27;&#x27;,</span><br><span class="line">          password: &#x27;&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        // 表单验证，需要在 el-form-item 元素中增加 prop 属性</span><br><span class="line">        rules: &#123;</span><br><span class="line">          username: [</span><br><span class="line">            &#123;required: true, message: &#x27;账号不可为空&#x27;, trigger: &#x27;blur&#x27;&#125;</span><br><span class="line">          ],</span><br><span class="line">          password: [</span><br><span class="line">            &#123;required: true, message: &#x27;密码不可为空&#x27;, trigger: &#x27;blur&#x27;&#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        // 对话框显示和隐藏</span><br><span class="line">        dialogVisible: false</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      onSubmit(formName) &#123;</span><br><span class="line">        // 为表单绑定验证功能</span><br><span class="line">        this.$refs[formName].validate((valid) =&gt; &#123;</span><br><span class="line">          if (valid) &#123;</span><br><span class="line">            // 使用 vue-router 路由到指定页面，该方式称之为编程式导航</span><br><span class="line">            this.$router.push(&quot;/main/&quot;+this.form.username);</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            this.dialogVisible = true;</span><br><span class="line">            return false;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">  .login-box &#123;</span><br><span class="line">    border: 1px solid #DCDFE6;</span><br><span class="line">    width: 350px;</span><br><span class="line">    margin: 180px auto;</span><br><span class="line">    padding: 35px 35px 15px 35px;</span><br><span class="line">    border-radius: 5px;</span><br><span class="line">    -webkit-border-radius: 5px;</span><br><span class="line">    -moz-border-radius: 5px;</span><br><span class="line">    box-shadow: 0 0 25px #909399;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .login-title &#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">    margin: 0 auto 40px auto;</span><br><span class="line">    color: #303133;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>Main.vue</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-container&gt;</span><br><span class="line">      &lt;el-aside width=&quot;200px&quot;&gt;</span><br><span class="line">        &lt;el-menu :default-openeds=&quot;[&#x27;1&#x27;]&quot;&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-submenu index=&quot;1&quot;&gt;</span><br><span class="line">            &lt;template slot=&quot;title&quot;&gt;&lt;i class=&quot;el-icon-caret-right&quot;&gt;&lt;/i&gt;用户管理&lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item-group&gt;</span><br><span class="line">              &lt;el-menu-item index=&quot;1-1&quot;&gt;</span><br><span class="line">                &lt;!--插入的地方--&gt;</span><br><span class="line">                &lt;!--name传递地址，params传递参数 v-bind绑定--&gt;</span><br><span class="line">                &lt;router-link :to=&quot;&#123;name: &#x27;userProfile&#x27;,params: &#123;id: 1&#125;&#125;&quot;&gt;个人信息&lt;/router-link&gt;</span><br><span class="line">              &lt;/el-menu-item&gt;</span><br><span class="line">              &lt;el-menu-item index=&quot;1-2&quot;&gt;</span><br><span class="line">                &lt;!--插入的地方--&gt;</span><br><span class="line">                &lt;router-link to=&quot;/user/userList&quot;&gt;用户列表&lt;/router-link&gt;</span><br><span class="line">              &lt;/el-menu-item&gt;</span><br><span class="line"></span><br><span class="line">              &lt;el-menu-item index=&quot;1-3&quot;&gt;</span><br><span class="line">                &lt;!--插入的地方--&gt;</span><br><span class="line">                &lt;router-link to=&quot;/goHome&quot;&gt;回到首页&lt;/router-link&gt;</span><br><span class="line">              &lt;/el-menu-item&gt;</span><br><span class="line">            &lt;/el-menu-item-group&gt;</span><br><span class="line">          &lt;/el-submenu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-submenu index=&quot;2&quot;&gt;</span><br><span class="line">            &lt;template slot=&quot;title&quot;&gt;&lt;i class=&quot;el-icon-caret-right&quot;&gt;&lt;/i&gt;内容管理&lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item-group&gt;</span><br><span class="line">              &lt;el-menu-item index=&quot;2-1&quot;&gt;分类管理&lt;/el-menu-item&gt;</span><br><span class="line">              &lt;el-menu-item index=&quot;2-2&quot;&gt;内容列表&lt;/el-menu-item&gt;</span><br><span class="line">            &lt;/el-menu-item-group&gt;</span><br><span class="line">          &lt;/el-submenu&gt;</span><br><span class="line"></span><br><span class="line">          &lt;el-submenu index=&quot;3&quot;&gt;</span><br><span class="line">            &lt;template slot=&quot;title&quot;&gt;&lt;i class=&quot;el-icon-caret-right&quot;&gt;&lt;/i&gt;系统管理&lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item-group&gt;</span><br><span class="line">              &lt;el-menu-item index=&quot;3-1&quot;&gt;</span><br><span class="line">               回到首页</span><br><span class="line">              &lt;/el-menu-item&gt;</span><br><span class="line">              </span><br><span class="line">            &lt;/el-menu-item-group&gt;</span><br><span class="line">          &lt;/el-submenu&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/el-menu&gt;</span><br><span class="line">      &lt;/el-aside&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-container&gt;</span><br><span class="line">        &lt;el-header style=&quot;text-align: right; font-size: 12px&quot;&gt;</span><br><span class="line">          &lt;el-dropdown&gt;</span><br><span class="line">            &lt;i class=&quot;el-icon-setting&quot; style=&quot;margin-right: 15px&quot;&gt;&lt;/i&gt;</span><br><span class="line">            &lt;el-dropdown-menu slot=&quot;dropdown&quot;&gt;</span><br><span class="line">              &lt;el-dropdown-item&gt;个人信息&lt;/el-dropdown-item&gt;</span><br><span class="line">              &lt;el-dropdown-item&gt;退出登录&lt;/el-dropdown-item&gt;</span><br><span class="line">            &lt;/el-dropdown-menu&gt;</span><br><span class="line">          &lt;/el-dropdown&gt;</span><br><span class="line">         &lt;span&gt; &#123;&#123; username &#125;&#125; &lt;/span&gt;</span><br><span class="line">        &lt;/el-header&gt;</span><br><span class="line">        &lt;el-main&gt;</span><br><span class="line">          &lt;!--在这里展示视图--&gt;</span><br><span class="line">          &lt;router-view /&gt;</span><br><span class="line">        &lt;/el-main&gt;</span><br><span class="line">      &lt;/el-container&gt;</span><br><span class="line">    &lt;/el-container&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    props: [&#x27;username&#x27;],</span><br><span class="line">    name: &quot;Main&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">  .el-header &#123;</span><br><span class="line">    background-color: #B3C0D1;</span><br><span class="line">    color: #333;</span><br><span class="line">    line-height: 60px;</span><br><span class="line">  &#125;</span><br><span class="line">  .el-aside &#123;</span><br><span class="line">    color: #333;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>NotFound.vue</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h1&gt;404,你的页面走丢了&lt;/h1&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;NotFound&#x27;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>App.vue</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;h1&gt;zhu&lt;/h1&gt;</span><br><span class="line">    &lt;router-link to=&quot;/login&quot;&gt;登录&lt;/router-link&gt;</span><br><span class="line">    &lt;router-link to=&quot;/main&quot;&gt;主页&lt;/router-link&gt;</span><br><span class="line">    &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;App&#x27;,</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>index.js</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Router</span> <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Login</span> <span class="keyword">from</span> <span class="string">&#x27;../views/Login&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Main</span> <span class="keyword">from</span> <span class="string">&#x27;../views/Main&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">UserProfile</span> <span class="keyword">from</span> <span class="string">&#x27;../views/user/UserProfile&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">UserList</span> <span class="keyword">from</span> <span class="string">&#x27;../views/user/UserList&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NotFound</span> <span class="keyword">from</span> <span class="string">&#x27;../views/NotFound&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Router</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">Router</span>(&#123;</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&#x27;history&#x27;</span>,</span><br><span class="line">    <span class="attr">routes</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;login&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: <span class="title class_">Login</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/main/:username&#x27;</span>,</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;main&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: <span class="title class_">Main</span>,</span><br><span class="line">            <span class="attr">props</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="comment">//嵌套路由</span></span><br><span class="line">            <span class="attr">children</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">path</span>: <span class="string">&#x27;/user/userProfile/:id&#x27;</span>,</span><br><span class="line">                    <span class="attr">name</span>: <span class="string">&#x27;userProfile&#x27;</span>,</span><br><span class="line">                    <span class="attr">component</span>: <span class="title class_">UserProfile</span>,</span><br><span class="line">                    <span class="attr">props</span>: <span class="literal">true</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">path</span>: <span class="string">&#x27;/user/userList&#x27;</span>,</span><br><span class="line">                    <span class="attr">component</span>: <span class="title class_">UserList</span></span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/goHome&#x27;</span>,</span><br><span class="line">            <span class="attr">redirect</span>: <span class="string">&#x27;/main/kevin&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;*&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: <span class="title class_">NotFound</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<ul>
<li>main.js</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ElementUI</span> <span class="keyword">from</span> <span class="string">&#x27;element-ui&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;element-ui/lib/theme-chalk/index.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VueAxios</span> <span class="keyword">from</span> <span class="string">&#x27;vue-axios&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">VueAxios</span>,axios);</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(router);</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">ElementUI</span>);</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  router,</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>)<span class="comment">//ElementUI</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="10-总结"><a href="#10-总结" class="headerlink" title="10. 总结"></a>10. 总结</h2><p>对于前端框架有了最基础的学习，还有很多问题需要改正</p>
]]></content>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL数据库</title>
    <url>/2022/05/09/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<blockquote>
<center>无所待而游无穷也</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<h4 id="1-分类："><a href="#1-分类：" class="headerlink" title="1. 分类："></a>1. 分类：</h4><ul>
<li><p>关系型数据库（通过表与表之间的关系，行与列之间关系进行存储【SQL】）：MySQL,Oracle,Sql Server，SqlLite</p>
</li>
<li><p>非关系型数据库（【NOSQL（not only sql）】通过对象存储，自身属性来决定）：Redis，MongDB</p>
</li>
<li><p>数据库引擎</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>数据库引擎</th>
<th>MYSIAM</th>
<th>INNODB</th>
</tr>
</thead>
<tbody><tr>
<td>事务支持</td>
<td>不支持</td>
<td>支持</td>
</tr>
<tr>
<td>数据行锁定</td>
<td>不支持</td>
<td>支持</td>
</tr>
<tr>
<td>外键约束</td>
<td>不支持</td>
<td>支持</td>
</tr>
<tr>
<td>全文索引</td>
<td>支持</td>
<td>不支持</td>
</tr>
<tr>
<td>表空间的大小</td>
<td>较小</td>
<td>较大，约两倍</td>
</tr>
<tr>
<td>使用时期</td>
<td>默认使用</td>
<td>早些年使用</td>
</tr>
<tr>
<td>使用操作</td>
<td>节约空间，速度较快</td>
<td>安全性高，支持事务处理</td>
</tr>
<tr>
<td>在物理文件的位置</td>
<td>有 <em>.frm(表结构的定义文件)和</em>**.MYD（数据文件【data】）和*.MYI文件（索引文件【index】）</td>
<td>在data数据目录下中只有一个*.frm文件，以及上级目录下的ibdata1文件</td>
</tr>
</tbody></table>
<h4 id="2-MySQL"><a href="#2-MySQL" class="headerlink" title="2. MySQL"></a>2. MySQL</h4><h5 id="2-1-注意"><a href="#2-1-注意" class="headerlink" title="2.1 注意"></a>2.1 注意</h5><ul>
<li><p>尽量不要 .exe,会有注册表；用压缩包安装，下载地址<a href="https://dev.mysql.com/downloads/mysql/">mysql压缩包安装下载</a></p>
</li>
<li><p>教程:解压，配置环境变量，新建 my.ini配置文件，<a href="https://blog.csdn.net/keniy3/article/details/105895240?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162236658616780262520010%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=162236658616780262520010&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-1-105895240.pc_search_result_cache&utm_term=mysql%E5%8E%8B%E7%BC%A9%E5%8C%85%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B&spm=1018.2226.3001.4187">mysql压缩包安装教程见其他博主</a></p>
</li>
<li><p>所有语句使用分号；结尾</p>
</li>
</ul>
<h5 id="2-2-数据库语言（CRUD【增删改查】）"><a href="#2-2-数据库语言（CRUD【增删改查】）" class="headerlink" title="2.2 数据库语言（CRUD【增删改查】）"></a>2.2 数据库语言（CRUD【增删改查】）</h5><ul>
<li>DDL【数据库定义语言】</li>
<li>DML【数据库操作语言】</li>
<li>DQL【数据库查询语言】</li>
<li>DCL【数据库控制语言】</li>
</ul>
<h5 id="2-3-操作用户语句"><a href="#2-3-操作用户语句" class="headerlink" title="2.3 操作用户语句"></a>2.3 操作用户语句</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 创建用户</span><br><span class="line">create user xx IDENTIFIED BY &#x27;root&#x27;;</span><br><span class="line"></span><br><span class="line">-- 删除用户</span><br><span class="line">drop user xxy;</span><br><span class="line"></span><br><span class="line">-- 修改当前账户密码</span><br><span class="line">set PASSWORD = PASSWORD(&#x27;123&#x27;);</span><br><span class="line">set PASSWORD = PASSWORD(&#x27;root&#x27;);</span><br><span class="line">-- 修改指定用户密码</span><br><span class="line">set PASSWORD for xx = PASSWORD(&#x27;123&#x27;);</span><br><span class="line">-- 修改用户名</span><br><span class="line">RENAME user xx to xxy;</span><br><span class="line"></span><br><span class="line">-- 查找所有用户</span><br><span class="line">SELECT *from mysql.`user`;</span><br></pre></td></tr></table></figure>

<h5 id="2-4-权限语句（主要DCL）"><a href="#2-4-权限语句（主要DCL）" class="headerlink" title="2.4 权限语句（主要DCL）"></a>2.4 权限语句（主要DCL）</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 用户授权</span><br><span class="line">-- All PRIVILEGES 全部权限，除了给别人授权</span><br><span class="line">GRANT all PRIVILEGES on *.* to xxy;</span><br><span class="line"></span><br><span class="line">-- 撤销权限【删除权限】</span><br><span class="line">REVOKE ALL PRIVILEGES on *.* from xxy;</span><br><span class="line"></span><br><span class="line">-- 修改权限&#x27;通过撤销和重新授权进行更改&#x27;</span><br><span class="line"></span><br><span class="line">-- 查询权限</span><br><span class="line">show GRANTS;</span><br><span class="line">SHOW GRANTS for xxy;</span><br><span class="line">show GRANTS for root@localhost;</span><br><span class="line"></span><br><span class="line">-- 刷新权限,每个语句执行后都要刷新权限，防止没有更新</span><br><span class="line">flush PRIVILEGES;</span><br></pre></td></tr></table></figure>

<h5 id="2-5-操作数据库语句（主要DDL）"><a href="#2-5-操作数据库语句（主要DDL）" class="headerlink" title="2.5 操作数据库语句（主要DDL）"></a>2.5 操作数据库语句（主要DDL）</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- mysql不区分大小写</span><br><span class="line">-- 操作数据库</span><br><span class="line"></span><br><span class="line">-- #注释的本质是-- 单行注释</span><br><span class="line">/*</span><br><span class="line">多行注释</span><br><span class="line">*/</span><br><span class="line">-- 展示一个表的所有信息</span><br><span class="line">describe tempdb;</span><br><span class="line">-- 退出连接</span><br><span class="line">exit;</span><br><span class="line"></span><br><span class="line">-- 创建数据库</span><br><span class="line">create database  if not exists temp1;</span><br><span class="line">-- 如果你的数据库名字和字段名是一个特殊字符，就需要带``(Tab键的上面)</span><br><span class="line">-- 使用数据库</span><br><span class="line">use `temp1`;</span><br><span class="line"></span><br><span class="line">-- 删除数据库</span><br><span class="line">drop database if exists temp1;</span><br><span class="line"></span><br><span class="line">-- 修改数据库名字 最安全的做法是进入到mysql安装目录，修改库名;还可以导出改名再导入</span><br><span class="line"></span><br><span class="line">-- 展示所有数据库</span><br><span class="line">show databases;</span><br><span class="line"></span><br><span class="line">-- 查看创建数据库的语句</span><br><span class="line">show create database temp1;</span><br><span class="line"></span><br><span class="line">-- 查询系统版本</span><br><span class="line">SELECT  VERSION();</span><br><span class="line"></span><br><span class="line">-- 数据库属性类型</span><br><span class="line">--无符号的整数，声明了该列不能为负数</span><br><span class="line">Unsign</span><br><span class="line"></span><br><span class="line">-- 不足的位置用0填充</span><br><span class="line">zerofill</span><br><span class="line"></span><br><span class="line">-- 自增，必须为整数</span><br><span class="line">AUTO_INCREMENT</span><br><span class="line"></span><br><span class="line">-- 空、非空</span><br><span class="line">null、not null</span><br><span class="line"></span><br><span class="line">-- 默认，不指定该列的值就有默认的值</span><br><span class="line">default</span><br><span class="line"></span><br><span class="line">-- 拓展</span><br><span class="line">/*</span><br><span class="line">每一个表都必须存在的五个字段，表示一个记录存在；</span><br><span class="line"> id 主键</span><br><span class="line">version 乐观锁</span><br><span class="line">is_delete 伪删除</span><br><span class="line">gmt_create 创建时间</span><br><span class="line">gmt_update 修改时间</span><br><span class="line">*/</span><br></pre></td></tr></table></figure>

<h5 id="2-6-操作表语句"><a href="#2-6-操作表语句" class="headerlink" title="2.6 操作表语句"></a>2.6 操作表语句</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 创建简单的表</span><br><span class="line">create table if not exists `tb_student`(</span><br><span class="line">-- int(4)代表四位数字</span><br><span class="line">`student_id` int(4) not null AUTO_INCREMENT COMMENT &#x27;学号&#x27;,</span><br><span class="line">`student_name` varchar(10) not null default &#x27;匿名&#x27; COMMENT &#x27;姓名&#x27;,</span><br><span class="line">`student_password` varchar(20) not null DEFAULT &#x27;12345&#x27; COMMENT &#x27;密码&#x27;,</span><br><span class="line">`student_gender` varchar(2) not null DEFAULT &#x27;男&#x27; comment &#x27;性别&#x27;,</span><br><span class="line">`student_brithday` datetime default null comment &#x27;出生日期&#x27;,</span><br><span class="line">`student_address` varchar(50) default null comment &#x27;地址&#x27;,</span><br><span class="line">primary key(`student_id`)</span><br><span class="line"></span><br><span class="line">)AUTO_INCREMENT=0001 default charset=utf8;</span><br><span class="line"></span><br><span class="line">-- 删除表</span><br><span class="line">drop table if exists tb_user;</span><br><span class="line"></span><br><span class="line">--  修改表名</span><br><span class="line">alter table tb_user rename as tb_user2;</span><br><span class="line"></span><br><span class="line">-- 展示所有的表</span><br><span class="line">show tables;</span><br><span class="line"></span><br><span class="line">-- 查看创建表的语句</span><br><span class="line">show create table tb_student;</span><br></pre></td></tr></table></figure>

<h5 id="2-7-操作表的字段语句"><a href="#2-7-操作表的字段语句" class="headerlink" title="2.7 操作表的字段语句"></a>2.7 操作表的字段语句</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 字段数据类型</span><br><span class="line">create table if not exists tb_user(</span><br><span class="line">-- tinyint 非常小的数据 1个字节（Byte）=8位（bit)在MySQL中布尔类型实际上是TinyInt(1)</span><br><span class="line">	user_id1 tinyint null ,</span><br><span class="line">-- smallint 比较小的数据 1个字节</span><br><span class="line">	user_id2 smallint null,</span><br><span class="line">-- mediumint 中等大小的的数据 3个字节</span><br><span class="line">	user_id3 mediumint null,</span><br><span class="line">-- int 标准的整数，4个字节，常用</span><br><span class="line">	user_id4 int  null AUTO_INCREMENT comment ‘用户id’,</span><br><span class="line">-- bigint 较大的整数 8个字节</span><br><span class="line">	user_id5 bigint,</span><br><span class="line">-- integer 比较大的整数，12个字节</span><br><span class="line">	user_id6 integer null,</span><br><span class="line">-- bit 最小的位 0和1，除0以外都是1</span><br><span class="line">	user_id7 bit(1) null,</span><br><span class="line">-- real 是不精确的双精度浮点型 8字节</span><br><span class="line">	user_weight1 real null,</span><br><span class="line">-- double 双精度浮点型 8字节（精度问题）</span><br><span class="line">	user_weight2 double null,</span><br><span class="line">-- float 单精度浮点型 4字节 精度不高</span><br><span class="line">	user_weight3 float null,</span><br><span class="line">/*字符串形式的浮点数 金融计算 16个字节 </span><br><span class="line">3代表有效位数,2代表小数点后的有效位数</span><br><span class="line">*/</span><br><span class="line">	user_money decimal(3,2) null,</span><br><span class="line">-- numeric 总的位数为2位数字，小数点后的位数为0位。</span><br><span class="line">	user_numeric numeric(2,0) null,</span><br><span class="line">-- char 字符串固定大小 0-255</span><br><span class="line">	user_gender char null,</span><br><span class="line">-- varchar 可变字符串，0-65535 常用对接java实体的String</span><br><span class="line">	user_name varchar(10) null,</span><br><span class="line">-- tinytext 微型文本 2^8 - 1</span><br><span class="line">	user_descrpt1 tinytext null,</span><br><span class="line">-- text 文本串 2^16-1</span><br><span class="line">	user_descrpt2 text null,</span><br><span class="line">-- mediumtext 文本串 2^24-1</span><br><span class="line">	user_descrpt3 mediumtext null,</span><br><span class="line">-- longtext 文本串 2^32-1</span><br><span class="line">	user_descrpt3 longtext null,</span><br><span class="line">-- date YYYY-MM-DD日期</span><br><span class="line">	user_brithday1 data,</span><br><span class="line">-- tiem HH:mm:ss 时间格式</span><br><span class="line">	user_brithday2 time ,</span><br><span class="line">-- datatime 最常用的格式 YYYY-MM-DD HH:mm:ss </span><br><span class="line">	user_brithday3 datatime null,</span><br><span class="line">-- timestamp 时间戳 1970.1.1到现在的毫秒数，也较为常用</span><br><span class="line">	user_brithday4 timestamp null,</span><br><span class="line">-- year 年份</span><br><span class="line">	user_brithday5 year null,</span><br><span class="line">-- null 没有值，未知，不要使用NULL进行运算，结果为NULL</span><br><span class="line">	user_brithday null,</span><br><span class="line">-- tinyblob 用于存储二进制文件 255字节</span><br><span class="line">	user_1  tinyblob NULL ,</span><br><span class="line">-- blob 用于存储二进制文件 最大65k</span><br><span class="line">  user_2  blob NULL ,</span><br><span class="line">-- mediumblob 用于存储二进制文件 最大16M</span><br><span class="line">  user_3  mediumblob NULL ,</span><br><span class="line">-- longblob 用于存储二进制文件 最大4G</span><br><span class="line">  user_4  longblob NULL ,</span><br><span class="line">-- enum(&#x27;&#x27;) 枚举类型是字符串类型 </span><br><span class="line">/*</span><br><span class="line">主要好处为MySQL在存储此类数据时，</span><br><span class="line">直接转化成数字存储而不是字符串，</span><br><span class="line">可以节省空间，</span><br><span class="line">并且在表的.frm文件中存储“数字-字符串”之间的对应关系</span><br><span class="line">*/</span><br><span class="line">  user_5  enum(&#x27;&#x27;) NULL ,</span><br><span class="line">-- set(&#x27;&#x27;) SET是一个字符串对象，可以有零或多个值 64个成员</span><br><span class="line">	user_6  set(&#x27;&#x27;) NULL DEFAULT &#x27;&#x27; ,</span><br><span class="line">-- binary  二进制类型  字节数为2</span><br><span class="line">	user_7  binary(2) NULL ,</span><br><span class="line">--varbinary(2) 二进制类型 0-2字节</span><br><span class="line">	user_8  varbinary(2) NULL ,</span><br><span class="line">-- point 空间数据格式 用于表示GIS中的地理坐标，在GIS中广泛使用 在表后设置ENGINE=MyISAM</span><br><span class="line">	user_9  point NULL ,</span><br><span class="line">-- LineString 空间数据格式 由Point个值组成</span><br><span class="line">	user_10  linestring NULL ,</span><br><span class="line">-- polygon 空间数据格式几何类型 </span><br><span class="line">	user_11  polygon NULL ,</span><br><span class="line">-- geometry 空间位置信息</span><br><span class="line">	user_12  geometry NULL ,</span><br><span class="line">-- multipoint 几何集合</span><br><span class="line">	user_13  multipoint NULL ,</span><br><span class="line">-- multilinestring 两个LineString值 返回一个双精度数字</span><br><span class="line">	user_14  multilinestring NULL ,</span><br><span class="line">-- multipolygon 有两个Polygon值</span><br><span class="line">	user_15  multipolygon NULL ,</span><br><span class="line">-- geometrycollection 包含两个Point值和一个LineString值</span><br><span class="line">	user_16  geometrycollection NULL ,</span><br><span class="line">)ENGINE=MyISAM AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">-- 增加表中的字段</span><br><span class="line">alter table tb_user2 add user_name varchar(10) not null;</span><br><span class="line"></span><br><span class="line">-- 删除表中的字段</span><br><span class="line">alter table tb_user2 drop user_age;</span><br><span class="line"></span><br><span class="line">-- 修改表中的字段名和约束，**change**不管要不要改表名，表名都要写两次</span><br><span class="line">alter table tb_user2 change user_name user_name1 varchar(2);</span><br><span class="line">-- 修改表中的约束</span><br><span class="line">alter table tb_user2 modify user_name int(2);</span><br><span class="line"></span><br><span class="line">-- 展示表中的字段和约束</span><br><span class="line">desc tb_user2;</span><br><span class="line">describe tb_user2;</span><br><span class="line">show full columns from tb_user2;</span><br></pre></td></tr></table></figure>

<h5 id="2-8-操作表中的数据-主要DML，DQL"><a href="#2-8-操作表中的数据-主要DML，DQL" class="headerlink" title="2.8 操作表中的数据(主要DML，DQL)"></a>2.8 操作表中的数据(主要DML，DQL)</h5><blockquote>
<p><img src="https://xxy8.github.io/images/mysql1.png" alt="image-20210529172519078"></p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 增加插入数据</span><br><span class="line">insert into tb_user2(user_id,user_name1) values(&#x27;11&#x27;,&#x27;li&#x27;);</span><br><span class="line"></span><br><span class="line">-- 删除表中的指定的数据</span><br><span class="line">delete from `tb_user2` where `user_name1`=&#x27;ke&#x27;;</span><br><span class="line">-- 清空表的内容；避免使用delete from `tb_user2`，因为不清空自增；</span><br><span class="line">truncate tb_user2;</span><br><span class="line"></span><br><span class="line">-- 修改表中的所有数据</span><br><span class="line">update `tb_user2` set `user_name1` = &#x27;kk&#x27;,`user_name` = &#x27;hh&#x27;;</span><br><span class="line">-- 修改表中指定的数据，where后面可以包括布尔值 &gt;、 &lt;、 =、 !=、between...and...、and、or、not</span><br><span class="line">update `tb_user2` set `user_name1` = &#x27;ke&#x27; where `user_id` = &#x27;11&#x27;;</span><br><span class="line"></span><br><span class="line">-- 查询表中的所有数据，尽量不要用*</span><br><span class="line">SELECT `user_id` as 用户Id,`user_name1` as 用户姓名1,`user_name` as 用户姓名 from tb_user2 as a;</span><br><span class="line">-- 查询表中的指定数据的数量 通过函数count（） where后面同样可以包括表达式，子查询，like%_，in()，is not null,</span><br><span class="line">SELECT count(*) as 总数 from tb_user2 where user_id = &#x27;12&#x27;;</span><br><span class="line">-- 去重查询某项</span><br><span class="line">SELECT DISTINCT user_name from tb_user2;</span><br><span class="line"></span><br><span class="line">--联表查询【SQL JOINS 】</span><br><span class="line">-- innner join</span><br><span class="line">select u1.student_id,student_name,user_age from tb_user1 as u1</span><br><span class="line">inner join tb_student s</span><br><span class="line">on u1.student_id = s.student_id</span><br><span class="line">where u1.student_id=1000;</span><br><span class="line">-- left join 即使右边没有匹配的值</span><br><span class="line">select u1.student_id,student_name,user_age from tb_user1 as u1</span><br><span class="line">left join tb_student s</span><br><span class="line">on u1.student_id = s.student_id</span><br><span class="line">where u1.student_id=1000;</span><br><span class="line">-- RIGHT JOIN 即使左边没有匹配的值，用Null代替</span><br><span class="line">select u1.student_id,student_name,user_age from tb_user1 as u1</span><br><span class="line">right join tb_student s</span><br><span class="line">on u1.student_id = s.student_id</span><br><span class="line">where u1.student_id=1000;</span><br><span class="line">-- 自连接</span><br><span class="line">select u1.user_id as &#x27;父ID&#x27;,u2.user_id as &#x27;子ID&#x27; </span><br><span class="line">from `tb_user1` as u1,`tb_user1` as u2</span><br><span class="line">where u1.user_id = u2.user_id;</span><br><span class="line"></span><br><span class="line">-- 分页limit和排序order by（一起必须在前面）</span><br><span class="line">select DISTINCT u1.user_id as &#x27;父ID&#x27;,u2.user_id as &#x27;子ID&#x27; </span><br><span class="line">from `tb_user1` as u1,`tb_user1` as u2</span><br><span class="line">where u1.user_id = u2.user_id</span><br><span class="line">order by u1.user_id desc/asc</span><br><span class="line">limit 1,2;</span><br></pre></td></tr></table></figure>

<h5 id="2-9-常用函数"><a href="#2-9-常用函数" class="headerlink" title="2.9 常用函数"></a>2.9 常用函数</h5><blockquote>
<p>mysql常用函数官网：<a href="https://dev.mysql.com/doc/refman/5.7/en/built-in-function-reference.html">mysql常用函数官网</a></p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 数学运算</span><br><span class="line">-- 绝对值</span><br><span class="line">select ABS(-12);</span><br><span class="line">-- 向上（大）取整</span><br><span class="line">select CEILING(9.4);</span><br><span class="line">-- 向下（小）取整</span><br><span class="line">SELECT FLOOR(9.7);</span><br><span class="line">-- 返回0-1之间随机数</span><br><span class="line">SELECT RAND();</span><br><span class="line">-- 判断一个数的符号，负数返回-1</span><br><span class="line">SELECT SIGN(-10);</span><br><span class="line"></span><br><span class="line">-- 字符串函数</span><br><span class="line">-- 字符串长度</span><br><span class="line">SELECT CHARACTER_LENGTH(&quot;jdhgh&quot;);</span><br><span class="line">-- 拼接字符串</span><br><span class="line">SELECT CONCAT(&#x27;h&#x27;,&#x27;d&#x27;,&#x27;h&#x27;);</span><br><span class="line">-- 查询位置并插入</span><br><span class="line">SELECT INSERT(&#x27;我爱shhsshh&#x27;,1,2,&#x27;ch&#x27;);</span><br><span class="line">-- 转换为小写</span><br><span class="line">select LOWER(&quot;UUd&quot;);</span><br><span class="line">-- 转换为大写</span><br><span class="line">SELECT UPPER(&quot;jj&quot;);</span><br><span class="line">-- 返回第一个字母出现的子串的索引</span><br><span class="line">SELECT INSTR(&#x27;dshsjhhhdbch&#x27;,&#x27;d&#x27;);</span><br><span class="line">-- 替换出现的字符</span><br><span class="line">SELECT REPLACE(&#x27;hhhhfghsdvgfs&#x27;,&#x27;vg&#x27;,&#x27;kl&#x27;);</span><br><span class="line">-- 返回指定的字符串</span><br><span class="line">SELECT SUBSTR(&#x27;dhggdjsd&#x27;,2,6);</span><br><span class="line">-- 反转</span><br><span class="line">SELECT REVERSE(&#x27;ghhkdhkl&#x27;);</span><br><span class="line"></span><br><span class="line">-- 时间日期函数</span><br><span class="line">-- 获取当前日期</span><br><span class="line">SELECT CURRENT_DATE();</span><br><span class="line">SELECT CURDATE();</span><br><span class="line">SELECT NOW();</span><br><span class="line">-- 获取本地时间</span><br><span class="line">SELECT LOCALTIME();</span><br><span class="line">-- 获取系统时间</span><br><span class="line">SELECT SYSDATE();</span><br><span class="line">-- 只得到日期的一个值</span><br><span class="line">SELECT YEAR(NOW());</span><br><span class="line">SELECT MONTH(NOW());</span><br><span class="line">SELECT DAY(NOW());</span><br><span class="line">SELECT HOUR(NOW());</span><br><span class="line">SELECT MINUTE(NOW());</span><br><span class="line">SELECT SECOND(NOW());</span><br><span class="line"></span><br><span class="line">-- 系统函数</span><br><span class="line">SELECT SYSTEM_USER();</span><br><span class="line">SELECT USER();</span><br><span class="line">SELECT SYSDATE();</span><br><span class="line">SELECT VERSION();</span><br><span class="line"></span><br><span class="line">-- 聚合函数：最大值，最小值，平均值，求和，总数 GROUP BY ...HAVING</span><br></pre></td></tr></table></figure>

<h5 id="2-10-操作表中的约束"><a href="#2-10-操作表中的约束" class="headerlink" title="2.10 操作表中的约束"></a>2.10 操作表中的约束</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 主键和物理外键，创建表的时候就完成了</span><br><span class="line">-- 学生表</span><br><span class="line">create table if not exists `tb_student`(</span><br><span class="line">-- int(4)代表四位数字</span><br><span class="line">`student_id` int(4) not null AUTO_INCREMENT COMMENT &#x27;学号&#x27;,</span><br><span class="line">`student_name` varchar(10) not null default &#x27;匿名&#x27; COMMENT &#x27;姓名&#x27;,</span><br><span class="line">`student_password` varchar(20) not null DEFAULT &#x27;12345&#x27; COMMENT &#x27;密码&#x27;,</span><br><span class="line">`student_gender` varchar(2) not null DEFAULT &#x27;男&#x27; comment &#x27;性别&#x27;,</span><br><span class="line">`student_brithday` datetime default null comment &#x27;出生日期&#x27;,</span><br><span class="line">`student_address` varchar(50) default null comment &#x27;地址&#x27;,</span><br><span class="line">primary key(`student_id`)</span><br><span class="line"></span><br><span class="line">)ENGINE = INNODB AUTO_INCREMENT=0001 default charset=utf8;</span><br><span class="line">-- 用户表</span><br><span class="line">create table `tb_user`(</span><br><span class="line">	`user_id` varchar(3) not null,</span><br><span class="line">	`student_id` int(4) not null,</span><br><span class="line">	`user_age` int not null,</span><br><span class="line">	primary key(`user_id`),</span><br><span class="line">	key `FK_student_id` (`student_id`),</span><br><span class="line">constraint `FK_student_id` FOREIGN KEY(`student_id`) REFERENCES `tb_student`(`student_id`)</span><br><span class="line">)ENGINE = INNODB DEFAULT CHARSET=utf8；</span><br><span class="line"></span><br><span class="line">-- 主键、物理外键创建表的时候没有</span><br><span class="line">-- 用户表1</span><br><span class="line">create table `tb_user1`(</span><br><span class="line">	`user_id` varchar(3) not null COMMENT &#x27;用户1ID&#x27;,</span><br><span class="line">	`student_id` int(4) not null comment &#x27;学生Id&#x27;,</span><br><span class="line">	`user_age` int not null comment &#x27;用户年龄&#x27;</span><br><span class="line">)ENGINE = INNODB DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">-- 表外创建主键</span><br><span class="line">alter table `tb_user1`</span><br><span class="line">add constraint `tb_user1_PK_user_id`</span><br><span class="line">primary key(`user_id`);</span><br><span class="line"></span><br><span class="line">-- 表外修改主键</span><br><span class="line">alter table myself modify id int primary key;</span><br><span class="line"></span><br><span class="line">-- 表外删除主键（针对主键对），必须有且只有一个主键</span><br><span class="line">alter table myself drop primary key;</span><br><span class="line"></span><br><span class="line">-- 表外创建外键</span><br><span class="line">alter table `tb_user1`</span><br><span class="line">add constraint `tb_user1_FK_tb_student_student_id`</span><br><span class="line">foreign key(`student_id`) references `tb_student`(`student_id`)</span><br><span class="line"></span><br><span class="line">-- 表外删除外键</span><br><span class="line">alter table myself drop foreign key myself_ibfk_1;</span><br><span class="line"></span><br><span class="line">-- 表外检查约束，在MYSQL中，CHECK子句会被分析，但是会被忽略，域(Domain)与断言(Assertion)也是无法使用的，原因类似于CHECK</span><br><span class="line">alter table tb_account</span><br><span class="line">add constraint tb_account_CK_money</span><br><span class="line">CHECK(money &gt;= -100.00 and money &lt;= 10000.00);</span><br><span class="line"></span><br><span class="line">-- 定义默认约束 字段名 数据类型 DEFAULT 默认值</span><br><span class="line">alter table myself add id int not null default &#x27;abc&#x27;;</span><br></pre></td></tr></table></figure>

<h5 id="2-11-MD5密码加密-不支持索引，cpu消耗大，自己能够加密最好"><a href="#2-11-MD5密码加密-不支持索引，cpu消耗大，自己能够加密最好" class="headerlink" title="2.11 MD5密码加密[不支持索引，cpu消耗大，自己能够加密最好]"></a>2.11 MD5密码加密[不支持索引，cpu消耗大，自己能够加密最好]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 插入的时候MD5</span><br><span class="line">INSERT into tb_student(student_id,student_name,student_password,student_gender,student_brithday,student_address) values(44,&#x27;gh&#x27;,MD5(&#x27;khdjgf&#x27;),&#x27;男&#x27;,&#x27;1999-11-15&#x27;,&#x27;dbhfhjdh&#x27;);</span><br><span class="line"></span><br><span class="line">-- 修改密码为MD5</span><br><span class="line">update tb_student set student_password=MD5(student_password) where student_id = 2;</span><br><span class="line"></span><br><span class="line">-- 查询</span><br><span class="line">SELECT *from tb_student where student_name = &#x27;gh&#x27; and student_password=MD5(&#x27;khdjgf&#x27;);</span><br></pre></td></tr></table></figure>

<h5 id="2-12-事务"><a href="#2-12-事务" class="headerlink" title="2.12 事务"></a>2.12 事务</h5><blockquote>
<p>特点：ACID（原一隔持）</p>
</blockquote>
<blockquote>
<p>隔离性可能出现的问题</p>
<p>脏读：一个事务读取了另一个没有提交的数据</p>
<p>不可重复读：在一个事务内读取表中某一行数据，多次读取结果不同，【不一定是错误，只是场合有可能不对】</p>
<p>虚读（幻读）：指一个 事务内读取到了别的事务插入的事务，导致前后读取不一致；</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 事务关键词：</span><br><span class="line">-- mysql是默认事务自动提交的</span><br><span class="line">-- 关闭自动提交事务</span><br><span class="line">set autocommit = 0;</span><br><span class="line">-- 事务开启</span><br><span class="line">START TRANSACTION;</span><br><span class="line">-- 提交</span><br><span class="line">COMMIT;</span><br><span class="line">-- 回滚</span><br><span class="line">ROLLBACK;</span><br><span class="line">-- 事务结束，恢复</span><br><span class="line">set autocommit = 1;</span><br><span class="line">-- 设置事务的保存点</span><br><span class="line">SAVEPOINT 保存点名;</span><br><span class="line">-- 回滚到保存点</span><br><span class="line">ROLLBACK to SAVEPOINT 保存点名；</span><br><span class="line">-- 撤销保存点</span><br><span class="line">RELEASE SAVEPOINT 保存点名</span><br><span class="line">-- 从这里开始</span><br><span class="line">use temp1;</span><br><span class="line">create table if not exists `tb_account`(</span><br><span class="line">	`account_id` int(3) not null auto_increment,</span><br><span class="line">	`username` varchar(30) not null,</span><br><span class="line">	`money` DECIMAL(9,2) not NULL,</span><br><span class="line">	primary key(`account_id`)</span><br><span class="line">)ENGINE = INNODB DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">select *from `tb_account`;</span><br><span class="line"></span><br><span class="line">alter table account rename as tb_account;</span><br><span class="line"></span><br><span class="line">INSERT into tb_account(`username`,`money`) VALUES (&#x27;A&#x27;,400.88),(&#x27;B&#x27;,5000.87);</span><br><span class="line">-- 1.关闭事务自动提交</span><br><span class="line">set autoCOMMIT = 0;</span><br><span class="line">-- 2. 手动开启一个事务</span><br><span class="line">START TRANSACTION;</span><br><span class="line">UPDATE tb_account set money=money-500 where `username`=&#x27;A&#x27;;</span><br><span class="line">UPDATE tb_account set money=money+500 where `username`=&#x27;B&#x27;;</span><br><span class="line">-- 提交事务</span><br><span class="line">COMMIT;</span><br><span class="line">-- 回滚</span><br><span class="line">ROLLBACK;</span><br><span class="line"></span><br><span class="line">-- 恢复默认值</span><br><span class="line">set autoCOMMIT = 1;</span><br></pre></td></tr></table></figure>

<h5 id="2-13-索引（本质是数据结构，帮助数据库建立高效获取数据的数据结构）"><a href="#2-13-索引（本质是数据结构，帮助数据库建立高效获取数据的数据结构）" class="headerlink" title="2.13 索引（本质是数据结构，帮助数据库建立高效获取数据的数据结构）"></a>2.13 索引（本质是数据结构，帮助数据库建立高效获取数据的数据结构）</h5><blockquote>
<p>分类：</p>
<p>主键索引（primary key）：一个表只能一个主键索引</p>
<p>唯一索引（Unique key）：可以多个</p>
<p>常规索引（key、index）</p>
<p>全文索引（fullText）：快速定位，一般用于数据引擎MyISAM</p>
<p><a href="http://blog.codinglabs.org/articles/theory-of-mysql-index.html">mysql索引内部实现</a></p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 索引的使用：创建时加，创建后加</span><br><span class="line"></span><br><span class="line">-- 创建索引</span><br><span class="line">create index id_t_student_stu_name on t_student(`stu_name`);</span><br><span class="line">EXPLAIN SELECT *from t_student where stu_name=&#x27;胡伟亮&#x27;;</span><br><span class="line">-- 创建后增加全文索引</span><br><span class="line">alter table temp1.tb_student add FULLTEXT INDEX `student_name`(`student_name`);</span><br><span class="line"></span><br><span class="line">-- 删除索引</span><br><span class="line">alter table t_student drop index id_t_student_stu_name1;</span><br><span class="line"></span><br><span class="line">-- 修改索引名字</span><br><span class="line">alter table t_student rename index id_t_student_stu_name to id_t_student_stu_name1;</span><br><span class="line"></span><br><span class="line">-- 展示索引</span><br><span class="line">show index from t_student;</span><br><span class="line">-- EXPLAIN 分析sql执行的情况 </span><br><span class="line">EXPLAIN SELECT *from tb_student;</span><br><span class="line">-- 分析非全文索引情况</span><br><span class="line">EXPLAIN SELECT *from tb_student where match(student_name) AGAINST (&#x27;匿名&#x27;);</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">索引并不越多越好</span><br><span class="line">*/</span><br></pre></td></tr></table></figure>

<h5 id="2-14-备份"><a href="#2-14-备份" class="headerlink" title="2.14 备份"></a>2.14 备份</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1.利用mysql可视化工具</span></span><br><span class="line"><span class="comment"># 2.直接拷贝data数据物理文件</span></span><br><span class="line"><span class="comment"># 3.cmd指令</span></span><br><span class="line"><span class="comment"># 导出</span></span><br><span class="line">mysqldump -hlocalhost -uroot -proot temp1 tb_account tb_user1 &gt; D:/a.sql</span><br><span class="line"><span class="comment"># 导入,最好先登录,然后创建使用数据库，</span></span><br><span class="line"><span class="built_in">source</span> D:/a.sql；</span><br><span class="line"><span class="comment"># 不登录导入，不建议</span></span><br><span class="line">mysql -uroot -proot 库名 &lt; 文件位置</span><br></pre></td></tr></table></figure>

<h5 id="2-15-JDBC连接池"><a href="#2-15-JDBC连接池" class="headerlink" title="2.15 JDBC连接池"></a>2.15 JDBC连接池</h5><blockquote>
<p>数据库连接（connection）-数据库sql操作（preparedStatement【可以防止SQL注入】）-结果操作(整数或resultSet)–释放</p>
</blockquote>
<ul>
<li>c3p0（需要导入包,工具类）</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.itcaststore.utils;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 数据源工具</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DataSourceUtils</span> &#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="type">DataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ComboPooledDataSource</span>();</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> ThreadLocal&lt;Connection&gt; tl = <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>&lt;Connection&gt;();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> DataSource <span class="title function_">getDataSource</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> dataSource;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 当DBUtils需要手动控制事务时，调用该方法获得一个连接</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@throws</span> SQLException</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title function_">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">		<span class="type">Connection</span> <span class="variable">con</span> <span class="operator">=</span> tl.get();</span><br><span class="line">		<span class="keyword">if</span> (con == <span class="literal">null</span>) &#123;</span><br><span class="line">			con = dataSource.getConnection();</span><br><span class="line">			tl.set(con);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> con;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 开启事务</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@throws</span> SQLException</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">startTransaction</span><span class="params">()</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">		<span class="type">Connection</span> <span class="variable">con</span> <span class="operator">=</span> getConnection();</span><br><span class="line">		<span class="keyword">if</span> (con != <span class="literal">null</span>)</span><br><span class="line">			con.setAutoCommit(<span class="literal">false</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 从ThreadLocal中释放并且关闭Connection,并结束事务</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@throws</span> SQLException</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">releaseAndCloseConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">		<span class="type">Connection</span> <span class="variable">con</span> <span class="operator">=</span> getConnection();</span><br><span class="line">		<span class="keyword">if</span> (con != <span class="literal">null</span>) &#123;</span><br><span class="line">			con.commit();</span><br><span class="line">			tl.remove();</span><br><span class="line">			con.close();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 事务回滚</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@throws</span> SQLException </span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">rollback</span><span class="params">()</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">		<span class="type">Connection</span> <span class="variable">con</span> <span class="operator">=</span> getConnection();</span><br><span class="line">		<span class="keyword">if</span> (con != <span class="literal">null</span>) &#123;</span><br><span class="line">			con.rollback();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>dbcp（需要导入包）</li>
<li>druid：阿里巴巴</li>
</ul>
<h5 id="2-16-复杂增删改查"><a href="#2-16-复杂增删改查" class="headerlink" title="2.16 复杂增删改查"></a>2.16 复杂增删改查</h5><ul>
<li>增</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INSERT INTO T_D_AC_TRADE_EN NOLOGGING</span><br><span class="line">  (C_IDEN,</span><br><span class="line">   C_TD_TYPE,</span><br><span class="line">   C_PORT_CODE,</span><br><span class="line">   C_SEC_CODE,</span><br><span class="line">   C_DT_CODE,</span><br><span class="line">   C_SEC_VAR_CODE,</span><br><span class="line">   C_DC_CODE,</span><br><span class="line">   C_MKT_CODE,</span><br><span class="line">   C_DTA_CODE,</span><br><span class="line">   C_DV_ISSUE_MODE,</span><br><span class="line">   C_DV_INVEST_CLS,</span><br><span class="line">   C_SH_ACC_CODE,</span><br><span class="line">   D_TRADE,</span><br><span class="line">   N_TD_MONEY,</span><br><span class="line">   N_SETT_MONEY_DUE,</span><br><span class="line">   D_SETT_DUE,</span><br><span class="line">   C_DC_CODE_SETT,</span><br><span class="line">   C_CA_CODE_SETT_DUE,</span><br><span class="line">   D_SETT_FACT,</span><br><span class="line">   C_TD_NO,</span><br><span class="line">   C_DATA_IDF,</span><br><span class="line">   C_CFG_CODE,</span><br><span class="line">   N_CHECK_STATE,</span><br><span class="line">   C_UPDATE_BY,</span><br><span class="line">   C_UPDATE_TIME,</span><br><span class="line">   C_CHECK_BY,</span><br><span class="line">   C_CHECK_TIME,</span><br><span class="line">   N_TD_AMOUNT,</span><br><span class="line">   D_REG,</span><br><span class="line">   N_INCOME)</span><br><span class="line">  SELECT SEQU_D_AC_TRADE_EN.NEXTVAL AS C_IDEN,</span><br><span class="line">         &#x27;DJPX&#x27; AS C_TD_TYPE,</span><br><span class="line">         C_PORT_CODE AS C_PORT_CODE,</span><br><span class="line">         C_SEC_CODE AS C_SEC_CODE,</span><br><span class="line">         C_DT_CODE AS C_DT_CODE,</span><br><span class="line">         C_SEC_VAR_CODE AS C_SEC_VAR_CODE,</span><br><span class="line">         C_DC_CODE AS C_DC_CODE,</span><br><span class="line">         C_MKT_CODE AS C_MKT_CODE,</span><br><span class="line">         C_DTA_CODE AS C_DTA_CODE,</span><br><span class="line">         C_DV_ISSUE_MODE AS C_DV_ISSUE_MODE,</span><br><span class="line">         C_DV_INVEST_CLS AS C_DV_INVEST_CLS,</span><br><span class="line">         C_SH_ACC_CODE AS C_SH_ACC_CODE,</span><br><span class="line">         D_TRADE AS D_TRADE,</span><br><span class="line">         N_TD_MONEY AS N_TD_MONEY,</span><br><span class="line">         N_SETT_MONEY_DUE AS N_SETT_MONEY_DUE,</span><br><span class="line">         D_SETT_DUE AS D_SETT_DUE,</span><br><span class="line">         C_DC_CODE_SETT AS C_DC_CODE_SETT,</span><br><span class="line">         C_CA_CODE_SETT_DUE AS C_CA_CODE_SETT_DUE,</span><br><span class="line">         D_SETT_FACT AS D_SETT_FACT,</span><br><span class="line">         C_TD_NO AS C_TD_NO,</span><br><span class="line">         &#x27;Z&#x27; AS C_DATA_IDF,</span><br><span class="line">         C_CFG_CODE AS C_CFG_CODE,</span><br><span class="line">         1 AS N_CHECK_STATE,</span><br><span class="line">         ? AS C_UPDATE_BY,</span><br><span class="line">         ? AS C_UPDATE_TIME,</span><br><span class="line">         ? AS C_CHECK_BY,</span><br><span class="line">         ? AS C_CHECK_TIME,</span><br><span class="line">         N_TD_AMOUNT AS N_TD_AMOUNT,</span><br><span class="line">         D_REG AS D_REG,</span><br><span class="line">         N_INCOME AS N_INCOME</span><br><span class="line">    FROM (select distinct A.C_IDEN,</span><br><span class="line">                          NVL(PORT1.C_PORT_CODE,</span><br><span class="line">                              NVL(B.C_T_CODE, PORT2.C_PORT_CODE)) as C_PORT_CODE,</span><br><span class="line">                          A.C_PORT_PERIODNO,</span><br><span class="line">                          A.C_SEC_CODE || &#x27; &#x27; || C.C_MKT_NO AS C_SEC_CODE,</span><br><span class="line">                          DECODE(A.C_MKT_CODE,</span><br><span class="line">                                 &#x27; &#x27;,</span><br><span class="line">                                 &#x27;COTC&#x27;,</span><br><span class="line">                                 NVL(A.C_MKT_CODE, &#x27;COTC&#x27;)) AS C_MKT_CODE,</span><br><span class="line">                          A.C_DT_CODE,</span><br><span class="line">                          S.c_Sec_Var_Code AS C_SEC_VAR_CODE,</span><br><span class="line">                          S.c_Dc_Code AS C_DC_CODE,</span><br><span class="line">                          A.C_TD_NO,</span><br><span class="line">                          NVL(A.C_DC_CODE_EQU, &#x27;&#x27;) AS C_DC_CODE_EQU,</span><br><span class="line">                          DECODE(A.C_DTA_CODE,</span><br><span class="line">                                 &#x27; &#x27;,</span><br><span class="line">                                 &#x27;PT&#x27;,</span><br><span class="line">                                 NVL(A.C_DTA_CODE, &#x27;PT&#x27;)) AS C_DTA_CODE,</span><br><span class="line">                          DECODE(A.C_DV_ISSUE_MODE,</span><br><span class="line">                                 &#x27; &#x27;,</span><br><span class="line">                                 &#x27;SS&#x27;,</span><br><span class="line">                                 NVL(A.C_DV_ISSUE_MODE, &#x27;SS&#x27;)) AS C_DV_ISSUE_MODE,</span><br><span class="line">                          A.C_TD_CHAN_CODE,</span><br><span class="line">                          A.C_DV_INVEST_CLS,</span><br><span class="line">                          A.C_SH_ACC_CODE,</span><br><span class="line">                          A.D_TRADE,</span><br><span class="line">                          A.N_TD_MONEY,</span><br><span class="line">                          A.N_TD_AMOUNT,</span><br><span class="line">                          NVL(A.N_INCOME, 0) AS N_INCOME,</span><br><span class="line">                          NVL(A.C_DC_CODE_EQU, S.c_Dc_Code) AS C_DC_CODE_EQU,</span><br><span class="line">                          A.D_REG,</span><br><span class="line">                          A.N_SETT_MONEY_DUE,</span><br><span class="line">                          A.D_SETT_DUE,</span><br><span class="line">                          (nvl(acc1.C_DC_CODE,</span><br><span class="line">                               nvl(acc2.C_DC_CODE,</span><br><span class="line">                                   nvl(acc3.C_DC_CODE, &#x27; &#x27;)))) AS C_DC_CODE_SETT,</span><br><span class="line">                          (nvl(acc1.c_ca_code,</span><br><span class="line">                               nvl(acc2.C_CA_CODE,</span><br><span class="line">                                   nvl(acc3.C_CA_CODE, &#x27; &#x27;)))) AS C_CA_CODE_SETT_DUE,</span><br><span class="line">                          NVL(A.D_SETT_FACT, A.D_SETT_DUE) AS D_SETT_FACT,</span><br><span class="line">                          &#x27;INFI_JY_HSDJPX&#x27; AS C_CFG_CODE</span><br><span class="line">            from V_D_AC_TRADE_EN1 A</span><br><span class="line">            LEFT JOIN T_P_AB_PORT PORT1</span><br><span class="line">              ON A.C_PORT_CODE = PORT1.C_PORT_CODE</span><br><span class="line">            LEFT JOIN (SELECT DET.C_S_CODE, DET.C_T_CODE</span><br><span class="line">                        FROM T_V_D_GROUP G</span><br><span class="line">                        JOIN T_V_D_GROUP_DETAIL DET</span><br><span class="line">                          ON G.C_GROUP_CODE = DET.C_GROUP_CODE</span><br><span class="line">                         AND G.C_GROUP_CODE = &#x27;WEBJH_CPDM&#x27;) B</span><br><span class="line">              ON A.C_PORT_CODE = B.C_S_CODE</span><br><span class="line">            LEFT JOIN T_P_AB_PORT PORT2</span><br><span class="line">              ON PORT2.C_PORT_NAME LIKE</span><br><span class="line">                 &#x27;%&#x27; || A.C_PORT_CODE || &#x27;_&#x27; || A.C_PORT_PERIODNO || &#x27;%&#x27;</span><br><span class="line">            LEFT JOIN T_P_BI_MKT C</span><br><span class="line">              ON A.C_MKT_CODE = C.C_MKT_CODE</span><br><span class="line">            LEFT JOIN T_P_SV_SEC_BASE S</span><br><span class="line">              on A.C_SEC_CODE || &#x27; &#x27; || C.C_MKT_NO = S.C_SEC_CODE</span><br><span class="line">             and S.n_Check_State = 1</span><br><span class="line">            left join T_P_BI_CASH_ACC acc1</span><br><span class="line">              on a.C_CA_CODE_SETT_DUE = acc1.C_CA_CODE</span><br><span class="line">            left join((SELECT B.C_CA_CODE as C_CA_CODE,</span><br><span class="line">                             A.C_PORT_CODE,</span><br><span class="line">                             B.C_OPEN_ACC_NO,</span><br><span class="line">                             B.C_DC_CODE</span><br><span class="line">                        FROM T_P_AB_PORT_ACC_RELA A</span><br><span class="line">                        LEFT JOIN T_P_BI_FUND_ACC B</span><br><span class="line">                          ON A.C_RELA_CODE = B.C_IDEN) acc2)</span><br><span class="line">              on a.C_PORT_CODE = acc2.C_PORT_CODE</span><br><span class="line">             and acc2.C_OPEN_ACC_NO = a.C_CA_CODE_SETT_DUE</span><br><span class="line">             and acc2.C_DC_CODE = S.c_Dc_Code</span><br><span class="line">            left join((SELECT B.C_CA_CODE AS C_CA_CODE,</span><br><span class="line">                             a.C_PORT_CODE,</span><br><span class="line">                             b.C_DC_CODE,</span><br><span class="line">                             B.C_DV_ACC_TYPE</span><br><span class="line">                        FROM T_P_AB_PORT_RELA A</span><br><span class="line">                        join T_P_BI_CASH_ACC B</span><br><span class="line">                          ON A.C_RELA_CODE = B.C_CA_CODE</span><br><span class="line">                       WHERE 1 = 1</span><br><span class="line">                         AND A.N_CHECK_STATE = 1</span><br><span class="line">                         AND B.N_CHECK_STATE = 1) acc3)</span><br><span class="line">              on acc3.C_PORT_CODE = A.C_PORT_CODE</span><br><span class="line">             and acc3.C_DC_CODE = S.c_Dc_Code</span><br><span class="line">             and ACC3.C_DV_ACC_TYPE = &#x27;ACC_SAV&#x27;</span><br><span class="line">           where a.c_dt_code = &#x27;DJPX_XJDJ&#x27;</span><br><span class="line">             and TRIM(S.C_SEC_CODE) IS not NULL</span><br><span class="line">             and a.d_TRADE = ?</span><br><span class="line">             and a.C_PORT_CODE in (select * from table(?)))</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>删</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DELETE FROM T_D_AC_TRADE_EN WHERE C_IDEN IN(</span><br><span class="line">			select Z.C_IDEN from T_D_AC_TRADE_EN Z join</span><br><span class="line">(</span><br><span class="line">				select distinct</span><br><span class="line">					      A.C_SEC_CODE ||&#x27; &#x27;|| C.C_MKT_NO AS C_SEC_CODE					     </span><br><span class="line">			       from V_D_AC_TRADE_EN1 A </span><br><span class="line">			    JOIN T_P_AB_PORT PORT1</span><br><span class="line">					ON A.C_PORT_CODE = PORT1.C_PORT_CODE</span><br><span class="line">					LEFT JOIN (SELECT DET.C_S_CODE,DET.C_T_CODE </span><br><span class="line">					FROM T_V_D_GROUP G </span><br><span class="line">					JOIN T_V_D_GROUP_DETAIL DET ON G.C_GROUP_CODE = DET.C_GROUP_CODE AND G.C_GROUP_CODE = &#x27;WEBJH_CPDM&#x27;) B</span><br><span class="line">						ON A.C_PORT_CODE = B.C_S_CODE</span><br><span class="line">					LEFT JOIN T_P_AB_PORT PORT2</span><br><span class="line">						ON PORT2.C_PORT_NAME LIKE &#x27;%&#x27;||A.C_PORT_CODE||&#x27;_&#x27;||A.C_PORT_PERIODNO||&#x27;%&#x27;</span><br><span class="line">			    LEFT JOIN T_P_BI_MKT C</span><br><span class="line">             ON A.C_MKT_CODE = C.C_MKT_CODE</span><br><span class="line">          LEFT JOIN T_P_SV_SEC_BASE S</span><br><span class="line">            on A.C_SEC_CODE ||&#x27; &#x27;|| C.C_MKT_NO = S.C_SEC_CODE</span><br><span class="line">            and S.n_Check_State = 1      </span><br><span class="line">          left join T_D_AC_TRADE_EN D</span><br><span class="line">             on D.c_Port_Code = NVL(PORT1.C_PORT_CODE,NVL(B.C_T_CODE,PORT2.C_PORT_CODE))</span><br><span class="line">             and D.c_Sec_Code =  A.C_SEC_CODE ||&#x27; &#x27;|| C.C_MKT_NO</span><br><span class="line">             and D.d_Trade = A.d_Trade</span><br><span class="line">             and A.c_Dt_Code = &#x27;DJPX_HLTZ&#x27;</span><br><span class="line">           left join V_P_CO_TD_SETT_CA V</span><br><span class="line">           on V.C_PORT_CODE = A.c_Port_Code</span><br><span class="line">           and  V.C_MKT_CODE = A.c_Sec_Code</span><br><span class="line">			       WHERE A.C_DT_CODE = &#x27;DJPX_HLTZ&#x27; </span><br><span class="line">			       and TRIM(S.C_SEC_CODE) IS not NULL</span><br><span class="line"></span><br><span class="line">			) 	Y</span><br><span class="line">      on Z.c_Sec_Code = Y.c_sec_code)</span><br><span class="line">			AND  D_TRADE = P;D_DATE </span><br><span class="line">			       AND  C_PORT_CODE IN (SELECT * FROM TABLE( P;C_PORT ) )</span><br><span class="line">			       and C_CFG_CODE = &#x27;INFI_JY_HSDJPX&#x27;</span><br></pre></td></tr></table></figure>

<ul>
<li>改</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> update T_P_SV_SEC_BASE sec</span><br><span class="line">      set (C_SEC_NAME,</span><br><span class="line">           C_SEC_MKT_CODE,</span><br><span class="line">           C_SEC_ISIN_CODE,</span><br><span class="line">           C_MKT_CODE,</span><br><span class="line">           C_SEC_VAR_CODE,</span><br><span class="line">           C_DC_CODE,</span><br><span class="line">           N_PRICE_FCR,</span><br><span class="line">           C_SEC_CODE_TRG,</span><br><span class="line">           N_AMOUNT_HD,</span><br><span class="line">           N_FV_ISSUE,</span><br><span class="line">           D_TO_LIST,</span><br><span class="line">           D_OFF_LIST,</span><br><span class="line">           C_DV_VAR_DUR,</span><br><span class="line">           C_DV_QUT_MOD,</span><br><span class="line">           N_RATE,</span><br><span class="line">           N_FV_IR,</span><br><span class="line">           N_PRICE_ISSUE,</span><br><span class="line">           C_DV_AI_MOD,</span><br><span class="line">           C_DV_PI_MOD,</span><br><span class="line">           D_AI_BEGIN,</span><br><span class="line">           D_AI_END,</span><br><span class="line">           C_DV_AI_EXPR,</span><br><span class="line">           N_RATIO,</span><br><span class="line">           N_CHECK_STATE,</span><br><span class="line">           C_UPDATE_BY,</span><br><span class="line">           C_UPDATE_TIME,</span><br><span class="line">           C_CHECK_BY,</span><br><span class="line">           C_CHECK_TIME,</span><br><span class="line">           C_RZRQ_MARK,</span><br><span class="line">           C_DV_RIGHT,</span><br><span class="line">           C_CONTAINRIGHT_FLAG,</span><br><span class="line">           C_ETF_TYPE,</span><br><span class="line">           C_SEC_NAME_CN,</span><br><span class="line">           C_GUAR_TYPE,</span><br><span class="line">           C_FINA_COMM,</span><br><span class="line">           C_MAIN_PROP,</span><br><span class="line">           C_DATA_IDF) =</span><br><span class="line">          (SELECT C_SEC_NAME AS C_SEC_NAME,</span><br><span class="line">                  C_SEC_MKT_CODE AS C_SEC_MKT_CODE,</span><br><span class="line">                  &#x27; &#x27; AS C_SEC_ISIN_CODE,</span><br><span class="line">                  C_MKT_CODE AS C_MKT_CODE,</span><br><span class="line">                  C_SEC_VAR_CODE AS C_SEC_VAR_CODE,</span><br><span class="line">                  C_DC_CODE AS C_DC_CODE,</span><br><span class="line">                  N_PRICE_FCR AS N_PRICE_FCR,</span><br><span class="line">                  &#x27; &#x27; AS C_SEC_CODE_TRG,</span><br><span class="line">                  N_AMOUNT_HD AS N_AMOUNT_HD,</span><br><span class="line">                  N_FV_ISSUE AS N_FV_ISSUE,</span><br><span class="line">                  to_date(D_TO_LIST) AS D_TO_LIST,</span><br><span class="line">                  to_date(D_OFF_LIST) AS D_OFF_LIST,</span><br><span class="line">                  C_DV_VAR_DUR AS C_DV_VAR_DUR,</span><br><span class="line">                  &#x27; &#x27; AS C_DV_QUT_MOD,</span><br><span class="line">                  N_RATE / 100 AS N_RATE,</span><br><span class="line">                  N_FV_IR AS N_FV_IR,</span><br><span class="line">                  &#x27;&#x27; AS N_PRICE_ISSUE,</span><br><span class="line">                  C_DV_AI_MOD AS C_DV_AI_MOD,</span><br><span class="line">                  C_DV_PI_MOD AS C_DV_PI_MOD,</span><br><span class="line">                  to_date(D_AI_BEGIN) AS D_AI_BEGIN,</span><br><span class="line">                  to_date(D_AI_END) AS D_AI_END,</span><br><span class="line">                  C_DV_AI_EXPR AS C_DV_AI_EXPR,</span><br><span class="line">                  0 AS N_RATIO,</span><br><span class="line">                  N_CHECK_STATE AS N_CHECK_STATE,</span><br><span class="line">                  &#x27;xxy&#x27; AS C_UPDATE_BY,</span><br><span class="line">                  date&#x27;2021-11-30&#x27; AS C_UPDATE_TIME,</span><br><span class="line">                  &#x27;xxy&#x27; AS C_CHECK_BY,</span><br><span class="line">                  date&#x27;2021-11-30&#x27; AS C_CHECK_TIME,</span><br><span class="line">                  &#x27; &#x27; AS C_RZRQ_MARK,</span><br><span class="line">                  &#x27;NULLRIGHT&#x27; AS C_DV_RIGHT,</span><br><span class="line">                  &#x27; &#x27; AS C_CONTAINRIGHT_FLAG,</span><br><span class="line">                  &#x27; &#x27; AS C_ETF_TYPE,</span><br><span class="line">                  &#x27; &#x27; AS C_SEC_NAME_CN,</span><br><span class="line">                  C_GUAR_TYPE AS C_GUAR_TYPE,</span><br><span class="line">                  C_FINA_COMM AS C_FINA_COMM,</span><br><span class="line">                  &#x27; &#x27; AS C_MAIN_PROP,</span><br><span class="line">                  &#x27;Z&#x27; AS C_DATA_IDF</span><br><span class="line">             FROM (with cur as (select C_IDEN,</span><br><span class="line">                                       C_SEC_NAME,</span><br><span class="line">                                       C_SEC_MKT_CODE,</span><br><span class="line">                                       C_MKT_CODE,</span><br><span class="line">                                       C_SEC_VAR_CODE,</span><br><span class="line">                                       C_DC_CODE,</span><br><span class="line">                                       D_TO_LIST,</span><br><span class="line">                                       D_OFF_LIST,</span><br><span class="line">                                       C_DV_VAR_DUR,</span><br><span class="line">                                       N_RATE,</span><br><span class="line">                                       N_FV_IR,</span><br><span class="line">                                       C_DV_AI_MOD,</span><br><span class="line">                                       C_DV_AI_EXPR,</span><br><span class="line">                                       C_DV_PI_MOD,</span><br><span class="line">                                       D_AI_BEGIN,</span><br><span class="line">                                       D_AI_END,</span><br><span class="line">                                       C_GUAR_TYPE,</span><br><span class="line">                                       C_FINA_COMM</span><br><span class="line">                                  from V_D_OD_SEC_BASE</span><br><span class="line">                                minus</span><br><span class="line">                                select C_IDEN,</span><br><span class="line">                                       C_SEC_NAME,</span><br><span class="line">                                       C_SEC_MKT_CODE,</span><br><span class="line">                                       C_MKT_CODE,</span><br><span class="line">                                       C_SEC_VAR_CODE,</span><br><span class="line">                                       C_DC_CODE,</span><br><span class="line">                                       D_TO_LIST,</span><br><span class="line">                                       D_OFF_LIST,</span><br><span class="line">                                       C_DV_VAR_DUR,</span><br><span class="line">                                       N_RATE,</span><br><span class="line">                                       N_FV_IR,</span><br><span class="line">                                       C_DV_AI_MOD,</span><br><span class="line">                                       C_DV_AI_EXPR,</span><br><span class="line">                                       C_DV_PI_MOD,</span><br><span class="line">                                       D_AI_BEGIN,</span><br><span class="line">                                       D_AI_END,</span><br><span class="line">                                       C_GUAR_TYPE,</span><br><span class="line">                                       C_FINA_COMM</span><br><span class="line">                                  from T_D_OD_SEC_BASE_HS)</span><br><span class="line">                    select z.C_IDEN,</span><br><span class="line">                           nvl(ST.C_SEC_CODE, z.C_SEC_CODE) as C_SEC_CODE,</span><br><span class="line">                           z.C_SEC_NAME,</span><br><span class="line">                           z.C_SEC_MKT_CODE,</span><br><span class="line">                           nvl(ST.C_MKT_CODE, z.C_MKT_CODE) AS C_MKT_CODE,</span><br><span class="line">                           nvl(st.C_SEC_VAR_CODE, z.C_SEC_VAR_CODE) AS C_SEC_VAR_CODE,</span><br><span class="line">                           nvl(st.C_DC_CODE, z.C_DC_CODE) AS C_DC_CODE,</span><br><span class="line">                           1 AS N_PRICE_FCR,</span><br><span class="line">                           1 AS N_AMOUNT_HD,</span><br><span class="line">                           1 AS N_FV_ISSUE,</span><br><span class="line">                           z.D_TO_LIST,</span><br><span class="line">                           z.D_OFF_LIST,</span><br><span class="line">                           z.C_DV_VAR_DUR,</span><br><span class="line">                           z.N_RATE,</span><br><span class="line">                           z.N_FV_IR,</span><br><span class="line">                           z.C_DV_AI_MOD,</span><br><span class="line">                           z.C_DV_AI_EXPR,</span><br><span class="line">                           z.C_DV_PI_MOD,</span><br><span class="line">                           z.D_AI_BEGIN,</span><br><span class="line">                           z.D_AI_END,</span><br><span class="line">                           z.C_GUAR_TYPE,</span><br><span class="line">                           z.C_FINA_COMM,</span><br><span class="line">                           decode(trim(z.C_SEC_VAR_CODE), &#x27;&#x27;, 0, 1) AS N_CHECK_STATE</span><br><span class="line">                      from (select cur.*,</span><br><span class="line">                                   cur.C_SEC_MKT_CODE || m.c_mkt_no as C_SEC_CODE</span><br><span class="line">                              from cur</span><br><span class="line">                              join T_D_OD_SEC_BASE_HS b</span><br><span class="line">                                on cur.c_iden = b.c_iden</span><br><span class="line">                              LEFT JOIN T_P_BI_MKT M</span><br><span class="line">                                ON cur.C_MKT_CODE = M.C_MKT_CODE) Z</span><br><span class="line">                      join t_p_sv_sec_base sec</span><br><span class="line">                        on z.c_sec_code = sec.c_sec_code</span><br><span class="line">                      LEFT JOIN T_D_AI_STOCK ST</span><br><span class="line">                        on z.c_sec_code = st.c_sec_code) z</span><br><span class="line">                     where z.C_SEC_MKT_CODE = sec.C_SEC_MKT_CODE</span><br><span class="line">           ) where exists (</span><br><span class="line">           select 1 from (SELECT C_SEC_NAME AS C_SEC_NAME,</span><br><span class="line">                  C_SEC_MKT_CODE AS C_SEC_MKT_CODE,</span><br><span class="line">                  &#x27; &#x27; AS C_SEC_ISIN_CODE,</span><br><span class="line">                  C_MKT_CODE AS C_MKT_CODE,</span><br><span class="line">                  C_SEC_VAR_CODE AS C_SEC_VAR_CODE,</span><br><span class="line">                  C_DC_CODE AS C_DC_CODE,</span><br><span class="line">                  N_PRICE_FCR AS N_PRICE_FCR,</span><br><span class="line">                  &#x27; &#x27; AS C_SEC_CODE_TRG,</span><br><span class="line">                  N_AMOUNT_HD AS N_AMOUNT_HD,</span><br><span class="line">                  N_FV_ISSUE AS N_FV_ISSUE,</span><br><span class="line">                  to_date(D_TO_LIST) AS D_TO_LIST,</span><br><span class="line">                  to_date(D_OFF_LIST) AS D_OFF_LIST,</span><br><span class="line">                  C_DV_VAR_DUR AS C_DV_VAR_DUR,</span><br><span class="line">                  &#x27; &#x27; AS C_DV_QUT_MOD,</span><br><span class="line">                  N_RATE / 100 AS N_RATE,</span><br><span class="line">                  N_FV_IR AS N_FV_IR,</span><br><span class="line">                  &#x27;&#x27; AS N_PRICE_ISSUE,</span><br><span class="line">                  C_DV_AI_MOD AS C_DV_AI_MOD,</span><br><span class="line">                  C_DV_PI_MOD AS C_DV_PI_MOD,</span><br><span class="line">                  to_date(D_AI_BEGIN) AS D_AI_BEGIN,</span><br><span class="line">                  to_date(D_AI_END) AS D_AI_END,</span><br><span class="line">                  C_DV_AI_EXPR AS C_DV_AI_EXPR,</span><br><span class="line">                  0 AS N_RATIO,</span><br><span class="line">                  N_CHECK_STATE AS N_CHECK_STATE,</span><br><span class="line">                  &#x27;xxy&#x27; AS C_UPDATE_BY,</span><br><span class="line">                  date&#x27;2021-11-30&#x27; AS C_UPDATE_TIME,</span><br><span class="line">                  &#x27;xxy&#x27; AS C_CHECK_BY,</span><br><span class="line">                  date&#x27;2021-11-30&#x27; AS C_CHECK_TIME,</span><br><span class="line">                  &#x27; &#x27; AS C_RZRQ_MARK,</span><br><span class="line">                  &#x27;NULLRIGHT&#x27; AS C_DV_RIGHT,</span><br><span class="line">                  &#x27; &#x27; AS C_CONTAINRIGHT_FLAG,</span><br><span class="line">                  &#x27; &#x27; AS C_ETF_TYPE,</span><br><span class="line">                  &#x27; &#x27; AS C_SEC_NAME_CN,</span><br><span class="line">                  C_GUAR_TYPE AS C_GUAR_TYPE,</span><br><span class="line">                  C_FINA_COMM AS C_FINA_COMM,</span><br><span class="line">                  &#x27; &#x27; AS C_MAIN_PROP,</span><br><span class="line">                  &#x27;Z&#x27; AS C_DATA_IDF</span><br><span class="line">             FROM (with cur as (select C_IDEN,</span><br><span class="line">                                       C_SEC_NAME,</span><br><span class="line">                                       C_SEC_MKT_CODE,</span><br><span class="line">                                       C_MKT_CODE,</span><br><span class="line">                                       C_SEC_VAR_CODE,</span><br><span class="line">                                       C_DC_CODE,</span><br><span class="line">                                       D_TO_LIST,</span><br><span class="line">                                       D_OFF_LIST,</span><br><span class="line">                                       C_DV_VAR_DUR,</span><br><span class="line">                                       N_RATE,</span><br><span class="line">                                       N_FV_IR,</span><br><span class="line">                                       C_DV_AI_MOD,</span><br><span class="line">                                       C_DV_AI_EXPR,</span><br><span class="line">                                       C_DV_PI_MOD,</span><br><span class="line">                                       D_AI_BEGIN,</span><br><span class="line">                                       D_AI_END,</span><br><span class="line">                                       C_GUAR_TYPE,</span><br><span class="line">                                       C_FINA_COMM</span><br><span class="line">                                  from V_D_OD_SEC_BASE</span><br><span class="line">                                minus</span><br><span class="line">                                select C_IDEN,</span><br><span class="line">                                       C_SEC_NAME,</span><br><span class="line">                                       C_SEC_MKT_CODE,</span><br><span class="line">                                       C_MKT_CODE,</span><br><span class="line">                                       C_SEC_VAR_CODE,</span><br><span class="line">                                       C_DC_CODE,</span><br><span class="line">                                       D_TO_LIST,</span><br><span class="line">                                       D_OFF_LIST,</span><br><span class="line">                                       C_DV_VAR_DUR,</span><br><span class="line">                                       N_RATE,</span><br><span class="line">                                       N_FV_IR,</span><br><span class="line">                                       C_DV_AI_MOD,</span><br><span class="line">                                       C_DV_AI_EXPR,</span><br><span class="line">                                       C_DV_PI_MOD,</span><br><span class="line">                                       D_AI_BEGIN,</span><br><span class="line">                                       D_AI_END,</span><br><span class="line">                                       C_GUAR_TYPE,</span><br><span class="line">                                       C_FINA_COMM</span><br><span class="line">                                  from T_D_OD_SEC_BASE_HS)</span><br><span class="line">                    select z.C_IDEN,</span><br><span class="line">                           nvl(ST.C_SEC_CODE, z.C_SEC_CODE) as C_SEC_CODE,</span><br><span class="line">                           z.C_SEC_NAME,</span><br><span class="line">                           z.C_SEC_MKT_CODE,</span><br><span class="line">                           nvl(ST.C_MKT_CODE, z.C_MKT_CODE) AS C_MKT_CODE,</span><br><span class="line">                           nvl(st.C_SEC_VAR_CODE, z.C_SEC_VAR_CODE) AS C_SEC_VAR_CODE,</span><br><span class="line">                           nvl(st.C_DC_CODE, z.C_DC_CODE) AS C_DC_CODE,</span><br><span class="line">                           1 AS N_PRICE_FCR,</span><br><span class="line">                           1 AS N_AMOUNT_HD,</span><br><span class="line">                           1 AS N_FV_ISSUE,</span><br><span class="line">                           z.D_TO_LIST,</span><br><span class="line">                           z.D_OFF_LIST,</span><br><span class="line">                           z.C_DV_VAR_DUR,</span><br><span class="line">                           z.N_RATE,</span><br><span class="line">                           z.N_FV_IR,</span><br><span class="line">                           z.C_DV_AI_MOD,</span><br><span class="line">                           z.C_DV_AI_EXPR,</span><br><span class="line">                           z.C_DV_PI_MOD,</span><br><span class="line">                           z.D_AI_BEGIN,</span><br><span class="line">                           z.D_AI_END,</span><br><span class="line">                           z.C_GUAR_TYPE,</span><br><span class="line">                           z.C_FINA_COMM,</span><br><span class="line">                           decode(trim(z.C_SEC_VAR_CODE), &#x27;&#x27;, 0, 1) AS N_CHECK_STATE</span><br><span class="line">                      from (select cur.*,</span><br><span class="line">                                   cur.C_SEC_MKT_CODE || m.c_mkt_no as C_SEC_CODE</span><br><span class="line">                              from cur</span><br><span class="line">                              join T_D_OD_SEC_BASE_HS b</span><br><span class="line">                                on cur.c_iden = b.c_iden</span><br><span class="line">                              LEFT JOIN T_P_BI_MKT M</span><br><span class="line">                                ON cur.C_MKT_CODE = M.C_MKT_CODE) Z</span><br><span class="line">                      join t_p_sv_sec_base sec</span><br><span class="line">                        on z.c_sec_code = sec.c_sec_code</span><br><span class="line">                      LEFT JOIN T_D_AI_STOCK ST</span><br><span class="line">                        on z.c_sec_code = st.c_sec_code) ) k</span><br><span class="line">                     where k.C_SEC_MKT_CODE = sec.C_SEC_MKT_CODE</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<ul>
<li>查</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 判断两张表的数据是否有不同</span><br><span class="line">with cur as</span><br><span class="line">				 (select C_IDEN,C_SEC_NAME,C_SEC_MKT_CODE,C_MKT_CODE,C_SEC_VAR_CODE,C_DC_CODE,D_TO_LIST,D_OFF_LIST,C_DV_VAR_DUR,N_RATE,N_FV_IR,C_DV_AI_MOD,C_DV_AI_EXPR,C_DV_PI_MOD,D_AI_BEGIN,D_AI_END,C_GUAR_TYPE,C_FINA_COMM from V_D_OD_SEC_BASE</span><br><span class="line">				  minus</span><br><span class="line">				  select C_IDEN,C_SEC_NAME,C_SEC_MKT_CODE,C_MKT_CODE,C_SEC_VAR_CODE,C_DC_CODE,D_TO_LIST,D_OFF_LIST,C_DV_VAR_DUR,N_RATE,N_FV_IR,C_DV_AI_MOD,C_DV_AI_EXPR,C_DV_PI_MOD,D_AI_BEGIN,D_AI_END,C_GUAR_TYPE,C_FINA_COMM from T_D_OD_SEC_BASE_HS</span><br><span class="line">				 )</span><br><span class="line">				select z.C_IDEN,</span><br><span class="line">				       nvl(ST.C_SEC_CODE, z.C_SEC_CODE) as C_SEC_CODE,</span><br><span class="line">				       z.C_SEC_NAME,</span><br><span class="line">				       z.C_SEC_MKT_CODE,</span><br><span class="line">				       nvl(ST.C_MKT_CODE, z.C_MKT_CODE) AS C_MKT_CODE,</span><br><span class="line">				       nvl(st.C_SEC_VAR_CODE, z.C_SEC_VAR_CODE) AS C_SEC_VAR_CODE,</span><br><span class="line">				       nvl(st.C_DC_CODE, z.C_DC_CODE) AS C_DC_CODE,</span><br><span class="line">				       1 AS N_PRICE_FCR,</span><br><span class="line">				       1 AS N_AMOUNT_HD,</span><br><span class="line">				       1 AS N_FV_ISSUE,</span><br><span class="line">				       z.D_TO_LIST,</span><br><span class="line">				       z.D_OFF_LIST,</span><br><span class="line">				       z.C_DV_VAR_DUR,</span><br><span class="line">				       z.N_RATE,</span><br><span class="line">				       z.N_FV_IR,</span><br><span class="line">				       z.C_DV_AI_MOD,</span><br><span class="line">				       z.C_DV_AI_EXPR,</span><br><span class="line">				       z.C_DV_PI_MOD,</span><br><span class="line">				       z.D_AI_BEGIN,</span><br><span class="line">				       z.D_AI_END,</span><br><span class="line">				       z.C_GUAR_TYPE,</span><br><span class="line">				       z.C_FINA_COMM,</span><br><span class="line">				       decode(trim(z.C_SEC_VAR_CODE), &#x27;&#x27;, 0, 1) AS N_CHECK_STATE</span><br><span class="line">				  from (select cur.*, cur.C_SEC_MKT_CODE || m.c_mkt_no as C_SEC_CODE</span><br><span class="line">				          from cur</span><br><span class="line">				          join T_D_OD_SEC_BASE_HS b</span><br><span class="line">				            on cur.c_iden = b.c_iden</span><br><span class="line">				          LEFT JOIN T_P_BI_MKT M</span><br><span class="line">				            ON cur.C_MKT_CODE = M.C_MKT_CODE) Z</span><br><span class="line">				  join t_p_sv_sec_base sec</span><br><span class="line">				    on z.c_sec_code = sec.c_sec_code</span><br><span class="line">				  LEFT JOIN T_D_AI_STOCK ST</span><br><span class="line">				    on z.c_sec_code = st.c_sec_code</span><br></pre></td></tr></table></figure>

<ul>
<li>创建临时表</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create global temporary table R_D_AC_TRADE_EN</span><br><span class="line">(</span><br><span class="line">   C_IDEN               VARCHAR2(20) not null,</span><br><span class="line">   C_PORT_CODE          VARCHAR2(20),</span><br><span class="line">   C_PORT_PERIODNO      VARCHAR2(20),</span><br><span class="line">   C_SEC_CODE           VARCHAR2(20),</span><br><span class="line">   C_MKT_CODE           VARCHAR2(50) default &#x27; &#x27;,</span><br><span class="line">   C_DT_CODE            VARCHAR2(20) default &#x27; &#x27;,</span><br><span class="line">   C_DC_CODE_EQU        VARCHAR2(20) default &#x27; &#x27;,</span><br><span class="line">   C_DTA_CODE           VARCHAR2(20) default &#x27; &#x27;,</span><br><span class="line">   C_DV_ISSUE_MODE      VARCHAR2(20) default &#x27; &#x27;,</span><br><span class="line">   C_TD_CHAN_CODE       VARCHAR2(20) default &#x27; &#x27;,   </span><br><span class="line">   C_DV_INVEST_CLS      VARCHAR2(20) default &#x27; &#x27;,   </span><br><span class="line">   C_SH_ACC_CODE    VARCHAR2(20) default &#x27; &#x27;,</span><br><span class="line">   C_TD_NO    VARCHAR2(20) default &#x27; &#x27;,</span><br><span class="line">   D_TRADE         DATE,</span><br><span class="line">   N_TD_MONEY      NUMBER(18,4),</span><br><span class="line">   N_TD_AMOUNT     NUMBER(18,4),</span><br><span class="line">   N_INCOME        NUMBER(18,4),</span><br><span class="line">   D_REG        DATE,</span><br><span class="line">   N_SETT_MONEY_DUE         NUMBER(18,4),</span><br><span class="line">   D_SETT_DUE  DATE,</span><br><span class="line">   C_CA_CODE_SETT_DUE    VARCHAR2(50),</span><br><span class="line">   D_SETT_FACT        DATE</span><br><span class="line">)</span><br><span class="line">on commit delete rows;</span><br></pre></td></tr></table></figure>

<h4 id="3-总结"><a href="#3-总结" class="headerlink" title="3. 总结"></a>3. 总结</h4><p>总结了mysql的基础，中间还有许多没有讲到的基础，并不是全部内容，这是自己学习时的感悟与总结，如果有错误或者建议，欢迎大家评论区指出，谢谢大家。</p>
]]></content>
      <tags>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>java GUI</title>
    <url>/2022/05/09/java-GUI/</url>
    <content><![CDATA[<blockquote>
<center>人生天地之间，若白驹过隙，忽然而已</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<blockquote>
<p>这个已经过时，了解即可</p>
</blockquote>
<h2 id="1-窗口"><a href="#1-窗口" class="headerlink" title="1. 窗口"></a>1. 窗口</h2><p>框架与容器（画板）、弹窗，需要设置大小，位置，背景，可见性，（其实和CSS有一定相似性）</p>
<h2 id="2-组件"><a href="#2-组件" class="headerlink" title="2. 组件"></a>2. 组件</h2><p>按钮，标签，文本框（和HTML类似）</p>
<h2 id="3-事件监听"><a href="#3-事件监听" class="headerlink" title="3. 事件监听"></a>3. 事件监听</h2><p>鼠标监听，键盘监听，窗口监听，组件监听（监听为了不继承实现监听类里面所有的方法，运用了设计模式的适配器模式）</p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>java基础</title>
    <url>/2022/05/09/java%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<blockquote>
<center>学习，偷的半日闲</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<blockquote>
<p>不是所有的基础内容，只是个人的记录和随想。</p>
</blockquote>
<h2 id="1-计算机"><a href="#1-计算机" class="headerlink" title="1. 计算机"></a>1. 计算机</h2><p><img src="https://xxy8.github.io/images/javajichu1.png" alt="在这里插入图片描述"></p>
<h2 id="2-Java发展"><a href="#2-Java发展" class="headerlink" title="2. Java发展"></a>2. Java发展</h2><ul>
<li><input checked="" disabled="" type="checkbox"> javaEE（企业）</li>
<li><input disabled="" type="checkbox"> ME（手机，淘汰）</li>
<li><input checked="" disabled="" type="checkbox"> SE（基础）</li>
<li>JDK (Java开发者工具)</li>
<li>JRE（Java运行环境）</li>
<li>JVM（Java虚拟机）</li>
<li>JDK8（开发时仅仅需要）</li>
</ul>
<h2 id="3-jdk卸载和安装（一般jdk里面包括jre）"><a href="#3-jdk卸载和安装（一般jdk里面包括jre）" class="headerlink" title="3. jdk卸载和安装（一般jdk里面包括jre）"></a>3. jdk卸载和安装（一般jdk里面包括jre）</h2><ul>
<li><input checked="" disabled="" type="checkbox"> 安装</li>
</ul>
<ol>
<li>下载安装包</li>
<li>安装jdk和jre</li>
<li>设置环境变量和系统变量（JavaHOME  path %java_HOMe%bin、 %java_HOMe%&#x2F;bin&#x2F;jre）</li>
<li>检测（java -version 、javac）</li>
</ol>
<ul>
<li><input checked="" disabled="" type="checkbox"> 卸载</li>
</ul>
<ol start="5">
<li>卸载jdk目录</li>
<li>删除jdk文件</li>
<li>清理系统和环境变量</li>
<li>检测（java -version 、javac）</li>
</ol>
<blockquote>
<p>具体可以看其他博主，我这里推荐两位：</p>
</blockquote>
<ul>
<li>安装：<a href="https://blog.csdn.net/u012934325/article/details/73441617?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161762641016780264061984%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=161762641016780264061984&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-73441617.first_rank_v2_pc_rank_v29&utm_term=jdk%E5%AE%89%E8%A3%85">墨笙弘一</a></li>
<li>卸载和安装：<a href="https://blog.csdn.net/h1192341606/article/details/106438072?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161763107416780266283253%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=161763107416780266283253&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-106438072.first_rank_v2_pc_rank_v29&utm_term=jdk%E5%8D%B8%E8%BD%BD">喧哗</a></li>
</ul>
<h2 id="4-运行机制"><a href="#4-运行机制" class="headerlink" title="4.运行机制"></a>4.运行机制</h2><p>高级语言：<br>编译型 操作（C、C++）<br>解释型 网页（速度）</p>
<p>Java拥有两者的特点<br>源程序（*.java）–&gt; Java编译器 –&gt;字节码文件（*.class）–&gt;类装载器–&gt;字节码校验器–&gt;解释器–&gt;操作系统平台（JVM）</p>
<h2 id="5-注释和标识符、关键字"><a href="#5-注释和标识符、关键字" class="headerlink" title="5. 注释和标识符、关键字"></a>5. 注释和标识符、关键字</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//单行注释</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*多行注释*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**  </span></span><br><span class="line"><span class="comment"> *文档注释</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> *标识符和关键字</span></span><br><span class="line"><span class="comment"> *命名范围：字母+数字+$ +_ </span></span><br><span class="line"><span class="comment"> *首字母不能是数字，一般不会以$开头</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h2 id="6-方法"><a href="#6-方法" class="headerlink" title="6. 方法"></a>6. 方法</h2><ul>
<li>重载：方法重载(同名不同形参)</li>
<li>重写(Override)：重写是子类对父类的允许访问的方法的实现过程进行重新编写, 返回值和形参都不能改变。</li>
<li>结构：修饰符 返回值 方法名（形参1，形参2）{<br>}</li>
<li>若没有集成开发环境，要在src文件夹运行，命令行运行时要加上包名。</li>
<li>JDK1.5才有可变参数（不定项参数），同类型、一个方法只能一个可变参数，Sum(double… number)，必须是最后一个参数。</li>
<li>递归思想（不是最优）递归头 、递归体 </li>
<li>方法调用：静态方法与类一起加载</li>
</ul>
<h2 id="7-内存"><a href="#7-内存" class="headerlink" title="7. 内存"></a>7. 内存</h2><ul>
<li><strong>堆</strong></li>
</ul>
<blockquote>
<p>存放new的对象和数组<br>可以被所有的线程共享，不会存放别的对象引用</p>
</blockquote>
<ul>
<li><strong>栈</strong></li>
</ul>
<blockquote>
<p>存放基本变量类型（会包含这种基本类型的具体数值）<br>引用对象的变量（会存放这个引用在堆里面具体地址）</p>
</blockquote>
<ul>
<li><strong>方法区</strong></li>
</ul>
<blockquote>
<p>可以被所有的线程共享<br>包含了所有的class和static类</p>
</blockquote>
<h2 id="8-数组"><a href="#8-数组" class="headerlink" title="8. 数组"></a>8. 数组</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//数组的声明 </span></span><br><span class="line"><span class="comment">//1.默认初始化1,然后赋值</span></span><br><span class="line"><span class="type">int</span>[] array1 ;</span><br><span class="line">array1 = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>] ;</span><br><span class="line"><span class="comment">//2.静态初始化</span></span><br><span class="line"><span class="type">int</span>[] array2 = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>&#125; ;</span><br><span class="line"><span class="comment">//3.动态初始化</span></span><br><span class="line"><span class="type">int</span>[] array3 = <span class="keyword">new</span>  <span class="title class_">int</span>[<span class="number">5</span>] ;</span><br><span class="line"><span class="comment">//4.数组的长度为属性length，</span></span><br><span class="line"><span class="comment">//List长度为方法size(),字符串长度也为方法length()</span></span><br><span class="line"><span class="comment">//快捷键是array2.for（JDK1.5可用）</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;array2.length;i++)&#123;</span><br><span class="line">	System.out.println(<span class="string">&quot;数组的第&quot;</span> + (i+<span class="number">1</span>) + <span class="string">&quot;个元素为：&quot;</span>array[i]) ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//数组的使用</span></span><br><span class="line"><span class="comment">//foreach</span></span><br><span class="line"><span class="comment">//将数组作为形参</span></span><br><span class="line"><span class="comment">//将数组作为返回值</span></span><br><span class="line"><span class="comment">//5.数组工具类java.util.arrays</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">都是static方法，通过类，不用通过对象</span></span><br><span class="line"><span class="comment">赋值 fill</span></span><br><span class="line"><span class="comment">排序 sort</span></span><br><span class="line"><span class="comment">对比 equals</span></span><br><span class="line"><span class="comment">查找数组元素 binarySearch(二分法)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//6.稀疏数组（压缩算法后的数组）数组不为0的值存在另一个数组里</span></span><br></pre></td></tr></table></figure>

<h2 id="9-冒泡排序"><a href="#9-冒泡排序" class="headerlink" title="9. 冒泡排序"></a>9. 冒泡排序</h2><ul>
<li>相互比较相邻，每次比较减少一次</li>
<li>时间复杂度O（n2）</li>
</ul>
<h2 id="10-数据类型"><a href="#10-数据类型" class="headerlink" title="10. 数据类型"></a>10. 数据类型</h2><ul>
<li><p>基本数据类型</p>
<ul>
<li>整数型 byte\short\int\long</li>
</ul>
<blockquote>
<p>1byte&#x3D;8bit<br>二进制：0b<br>八进制：0<br>十六进制：0X</p>
</blockquote>
<ul>
<li>浮点型 float（单）\double(双)</li>
</ul>
<blockquote>
<p>float无限接近但不等于</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//数字类型可以用下划线分割</span></span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1_000</span> ;</span><br></pre></td></tr></table></figure>

<ul>
<li>字符型 char</li>
</ul>
<blockquote>
<p>默认值：u00000</p>
</blockquote>
<ul>
<li>布尔型 boolean</li>
</ul>
<blockquote>
<p>默认值：false<br>不能对布尔类型强制类型转换，可能会有溢出或者精度</p>
</blockquote>
</li>
<li><p>引用数据类型（除了基本数据类型，其他默认值都为null）</p>
<ul>
<li>数组</li>
<li>字符串</li>
<li>对象数组</li>
</ul>
</li>
</ul>
<h2 id="11-变量作用域"><a href="#11-变量作用域" class="headerlink" title="11. 变量作用域"></a>11. 变量作用域</h2><ol>
<li>局部变量</li>
</ol>
<blockquote>
<p>写在方法内，必须初始化</p>
</blockquote>
<ol start="2">
<li>全局变量</li>
<li>实例变量</li>
</ol>
<blockquote>
<p>类里面，方法外面 </p>
</blockquote>
<h2 id="12-运算符"><a href="#12-运算符" class="headerlink" title="12. 运算符"></a>12. 运算符</h2><ol>
<li>算数运算符（+-*&#x2F;%）</li>
<li>关系运算符(++ –  &#x3D; &gt; &lt; )</li>
<li>逻辑运算符(&amp;&amp; &amp; || | !)：短路运算</li>
<li>赋值运算符(&#x3D;)</li>
<li>位运算符（&amp;为两1为1 |为两0为0 ~取反，同1异0，&gt;&gt; 二进制&#x2F; ,&lt;&lt; 二进制*）</li>
<li>扩展符：+字符串连接符，三目运算符？：</li>
</ol>
<h2 id="13-输入输出"><a href="#13-输入输出" class="headerlink" title="13. 输入输出"></a>13. 输入输出</h2><ol>
<li><p>凡是属于IO流都要关掉</p>
</li>
<li><p>输入：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Scanner.close();</span><br><span class="line">Scanner.next();<span class="comment">//不能得到空格</span></span><br><span class="line">Scanner.nextLine();<span class="comment">//以回车符为结束符</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>switch（i）jdk7可以为字符串</p>
</li>
<li><p>反编译</p>
<blockquote>
<p>.class–&gt;.java&#x2F;&#x2F;用来看源码</p>
</blockquote>
</li>
</ol>
<h2 id="14-面向对象"><a href="#14-面向对象" class="headerlink" title="14. 面向对象"></a>14. 面向对象</h2><ul>
<li><p>方法<br>异常抛出throws</p>
</li>
<li><p>方法的调用（递归）<br>static 和类一起加载</p>
</li>
<li><p>值传递和引用传递<br>值传递：只是把值传给形参，<br>引用传递：对象，本质还是值传递</p>
</li>
<li><p>面向对象本质：以类的方式组织代码，以对象来组织封装数据</p>
</li>
<li><p>javaME Android</p>
<p>2006 Hadoop</p>
</li>
<li><p>值传递、引用传递</p>
<blockquote>
<p>构造函数：类名相同，没有返回值，<strong>注意：一旦定义有参构造，必须显示定义无参构造，</strong></p>
</blockquote>
<ol>
<li><p>new 关键字本质在调用构造器</p>
</li>
<li><p>初始化对象的值</p>
</li>
</ol>
</li>
</ul>
<h2 id="15-抽象（abstract-）"><a href="#15-抽象（abstract-）" class="headerlink" title="15. 抽象（abstract ）"></a>15. 抽象（abstract ）</h2><ul>
<li><p>非非，抽象方法只能在抽象类中，非抽象类只能有非抽象方法，不能有抽象方法</p>
</li>
<li><p>抽象类（里面的方法必须全部实现，不想全部实现，一般加一个适配模式）</p>
</li>
<li><p>不能被 new </p>
</li>
<li><p>抽象方法（只能靠子类帮我们实现）</p>
</li>
<li><p>接口（制定的规则）架构师</p>
<ul>
<li><p>方法默认有public abstract</p>
</li>
<li><p>属性是常量public static final</p>
</li>
<li><p>接口不能被实例化，没有构造方法</p>
</li>
</ul>
</li>
</ul>
<h2 id="16-封装"><a href="#16-封装" class="headerlink" title="16.  封装"></a>16.  封装</h2><ul>
<li><p>高内聚，低耦合</p>
</li>
<li><p>属性私有化get、set</p>
</li>
</ul>
<h2 id="17-继承与多态"><a href="#17-继承与多态" class="headerlink" title="17. 继承与多态"></a>17. 继承与多态</h2><ul>
<li><p>java单继承，多实现</p>
</li>
<li><p>public protected default private (不可继承)</p>
</li>
<li><p>所有类都是直接或间接继承Object类</p>
</li>
<li><p>super（）调用父类的构造方法，必须在子类构造方法的第一个，不能和this同时调用构造方法。</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>比较</th>
<th>对象</th>
<th>前提</th>
<th>构造方法</th>
</tr>
</thead>
<tbody><tr>
<td>this：</td>
<td>本身</td>
<td>没继承可以使用</td>
<td>本类构造</td>
</tr>
<tr>
<td>super（）：</td>
<td>父类</td>
<td>只能继承条件下</td>
<td>父类构造</td>
</tr>
</tbody></table>
<ul>
<li><p>方法重写：（和属性无关，需要有继承关系，修饰符范围可以扩大，抛出的异常可以被缩小）</p>
</li>
<li><p>静态和非静态方法区别很大，</p>
</li>
<li><p>方法多态（和属性无关，父类和子类有联系，重写和继承，父类的引用可以指向子类）</p>
</li>
<li><p>对象执行 的方法看左边的类，</p>
</li>
</ul>
<ol>
<li><p>static 方法属于类，不属于实例，</p>
</li>
<li><p>final：常量</p>
</li>
<li><p>private 方法不能继承，没有多态</p>
</li>
<li><p>A instanceof B 判断引用类型</p>
</li>
<li><p>父类引用指向子类的对象</p>
</li>
<li><p>子类转换为父类：向上转型</p>
</li>
<li><p>父类转换为子类：向下转型：强制转换</p>
</li>
<li><p>static：</p>
<ul>
<li><p>静态导入包</p>
</li>
<li><p>静态变量：多线程</p>
</li>
<li><p>静态方法（静静）</p>
</li>
<li><p>final 不能继承</p>
</li>
</ul>
</li>
</ol>
<h2 id="18-内部类"><a href="#18-内部类" class="headerlink" title="18. 内部类"></a>18. 内部类</h2><ul>
<li>成员内部类：类中定义一个类</li>
<li>静态内部类：类中定义一个静态类</li>
<li>局部内部类：方法定义一个类</li>
<li>匿名内部类：实现接口的类前面写一个类</li>
</ul>
<h2 id="19-异常"><a href="#19-异常" class="headerlink" title="19. 异常"></a>19. 异常</h2><ul>
<li>异常，检查，运行，错误，通过JVM线程结束</li>
<li>捕获</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//里面可能会有异常，如果有异常则捕获</span></span><br><span class="line">&#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">    <span class="comment">//抛出异常</span></span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="comment">//不管有没有异常，都会执行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>throw主动抛出异常，通常在方法中，throws一般在方法上</li>
<li>自定义异常:继承Exception</li>
</ul>
<h2 id="20-总结"><a href="#20-总结" class="headerlink" title="20. 总结"></a>20. 总结</h2><p>不是全部的Java基础，欢迎大家进行总结。</p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>SSM框架</title>
    <url>/2022/05/09/SSM%E6%A1%86%E6%9E%B6/</url>
    <content><![CDATA[<blockquote>
<center>致虚极，守静笃</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<h2 id="1-Spring概述"><a href="#1-Spring概述" class="headerlink" title="1. Spring概述"></a>1. Spring概述</h2><ol>
<li><p>Spring是一种轻量级开源框架，通常服务器端采用三层体系架构，分别为表现层（web）、业务逻辑层（service）、持久层（dao）</p>
</li>
<li><p>一般开发的三层架构为：数据访问层（DAL Data Access Layer）、业务逻辑层（BLL Business Logic Layer）、表现层（UI User Interface）、实体类库&lt;不属于上面任何一层&gt;（Model）</p>
</li>
<li><p>模块</p>
<p><img src="https://xxy8.github.io/images/ssm1.jpg" alt="图片"></p>
</li>
<li><p>Core Container(核心容器)</p>
<ul>
<li>Beans模块：提供了BeanFactory工厂</li>
<li>Core核心模块：包括Ioc和DI</li>
<li>Context上下文模块：建立在Beans和Core模块基础之上，访问定义和配置的任何对象的媒介，ApplicationContext接口是上下文的焦点</li>
<li>Context-support模块：提供了第三方嵌入Spring的集成支持，比如缓存，邮件服务，任务调度、模板引擎</li>
<li>SpEl模块：Spring3.0新增的模块，提供了Spring Expression Language支持</li>
</ul>
</li>
<li><p>Data Access&#x2F;Integration</p>
<ul>
<li>JDBC模块：提供JDBC抽象层，减少数据库操作</li>
<li>ORM模块：对流行的对象映射API，包括JPA、JDO和Hibernate提供了集成层支持</li>
<li>OXM模块：提供了一个支持对象&#x2F;XML映射的抽象层实现，如JAXB、Castor、XMLBans、JiBX、XStream</li>
<li>JMS模块：Java消息传递服务</li>
<li>Transaction模块：对特殊接口实现和所有实体类声明式的事务管理</li>
</ul>
</li>
<li><p>Web</p>
<ul>
<li><p>WebSocket模块：spring4.0新增，提供WebSockte以及ScokJS和对STOMP的支持</p>
</li>
<li><p>Servlet模块：也称spring-mvc模块</p>
</li>
<li><p>Web模块：基本的web开发集成特性</p>
</li>
<li><p>Portlet模块：提供了在Portlet环境中使用MVC实现</p>
</li>
</ul>
</li>
<li><p>其他模块</p>
<ul>
<li>AOP模块：提供了面向切面编程</li>
<li>Aspects模块：AspectJ的集成功能</li>
<li>Instrumentation模块：提供了类工具的支持和类加载器的实现，可以在特定的应用服务器中使用</li>
<li>Messaging模块：Spring4.0新增，对消息传递体系结构和协议的支持</li>
<li>Test 模块：对单元测试和集成测试，使用 JUnit 或 TestNG 框架的测试</li>
</ul>
</li>
<li><p>Spring框架包</p>
<ul>
<li>Spring框架压缩包&#x2F;<a href="http://repo.spring.io/simple/libs-release-local/org/springframework/spring/3.2.2.RELEASE/">springframework-3.2.13.RELEASE-dist.zip</a> </li>
<li>第三方依赖包&#x2F;<a href="http://commons.apache.org/proper/commons-logging/download_logging.cgi"> commons-logging.1.2</a></li>
</ul>
</li>
<li><p>使用的设计模式</p>
<ul>
<li><p>工厂设计模式（IOC容器）</p>
</li>
<li><p>单例模式</p>
<blockquote>
<p>xml(默认为单例):</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;top.snailclimb.UserService&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;singleton&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>注解：</p>
<p>@Scope(value &#x3D; “singleton”)</p>
</blockquote>
</li>
<li><p>原型模式</p>
<blockquote>
<p>xml:</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;top.snailclimb.UserService&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;prototype&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>注解：</p>
<p>@Scope(value &#x3D; “prototype”)</p>
</blockquote>
</li>
<li><p>代理设计模式（AOP\AspectJ）</p>
</li>
<li><p>模板方法</p>
<blockquote>
<p>Spring 中 <code>jdbcTemplate</code>、<code>hibernateTemplate</code> 等以 Template 结尾的对数据库操作的类</p>
</blockquote>
</li>
<li><p>观察者模式</p>
<blockquote>
<p>Spring 事件驱动模型</p>
</blockquote>
</li>
<li><p>适配者模式</p>
<blockquote>
<p>Spring AOP 的增强或通知(Advice)使用到了适配器模式、spring MVC 中也是用到了适配器模式适配<code>Controller</code></p>
</blockquote>
</li>
<li><p>装饰者模式</p>
<blockquote>
<p>根据客户的需求能够动态切换不同的数据源</p>
</blockquote>
</li>
</ul>
</li>
<li><p>Spring Boot</p>
</li>
</ol>
<h2 id="2-Spring-IOC容器（思想：控制反转，Inversion-of-Control）"><a href="#2-Spring-IOC容器（思想：控制反转，Inversion-of-Control）" class="headerlink" title="2. Spring IOC容器（思想：控制反转，Inversion of Control）"></a>2. Spring IOC容器（思想：控制反转，Inversion of Control）</h2><ol>
<li><p>BeanFactory</p>
<blockquote>
<p>这种加载方式开发并不多用，BeanFactory 接口有多个实现类，最常见的是 org.springframework.beans.factory.xml.XmlBeanFactory，它是根据 XML 配置文件中的定义装配 Bean 的。</p>
</blockquote>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">BeanFactory</span> <span class="variable">beanFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">XmlBeanFactory</span>(<span class="keyword">new</span> <span class="title class_">FileSystemResource</span>(<span class="string">&quot;D://applicationContext.xml&quot;</span>));</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>ApplicationContext</p>
<blockquote>
<p>ApplicationContext 是 BeanFactory 的子接口，也被称为应用上下文。该接口的全路径为 org.springframework.context.ApplicationContext，它不仅提供了 BeanFactory 的所有功能，还添加了对 i18n（国际化）、资源访问、事件传播等方面的良好支持</p>
</blockquote>
</li>
</ol>
<ul>
<li><p>ClassPathXmlApplicationContext</p>
<blockquote>
<p>该类从类路径 ClassPath 中寻找指定的 XML 配置文件</p>
</blockquote>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(String configLocation);</span><br></pre></td></tr></table></figure>

<ul>
<li><p>FileSystemXmlApplicationContext</p>
<blockquote>
<p>灵活性不强，不推荐使用，从硬盘的绝对路径下加载配置文件,</p>
</blockquote>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileSystemXmlApplicationContext</span>(String configLocation);</span><br></pre></td></tr></table></figure>

<ul>
<li><p>XmlWebApplicationContext</p>
<blockquote>
<p>从Web系统中的XML文件载入上下文定义信息</p>
</blockquote>
</li>
</ul>
<ol>
<li><p>配置文件</p>
<blockquote>
<p>Web 服务器实例化 ApplicationContext 容器通常使用基于 ContextLoaderListener 实现的方式，它只需要在 web.xml 中添加如下代码</p>
</blockquote>
</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--指定Spring配置文件的位置，有多个配置文件时，以逗号分隔--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--spring将加载spring目录下的applicationContext.xml文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span></span><br><span class="line">        classpath:spring/applicationContext.xml</span><br><span class="line">    <span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--指定以ContextLoaderListener方式启动Spring容器,防止创建多个applicationContext取值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span></span><br><span class="line">        org.springframework.web.context.ContextLoaderListener</span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li><p>区别</p>
<ul>
<li><p>BeanFactory 和 ApplicationContext 都是通过 XML 配置文件加载 Bean 的</p>
</li>
<li><p>如果 Bean 的某一个属性没有注入，则使用 BeanFacotry 加载后，在第一次调用 getBean() 方法时会抛出异常，而 ApplicationContext 则在初始化时自检，这样有利于检查所依赖的属性是否注入。</p>
</li>
</ul>
</li>
<li><p>备注</p>
<blockquote>
<p>实现IOC思想需要DI做支持</p>
</blockquote>
</li>
</ol>
<h2 id="3-Spring-DI（方法：Dependency-Injection，依赖注入）"><a href="#3-Spring-DI（方法：Dependency-Injection，依赖注入）" class="headerlink" title="3. Spring DI（方法：Dependency Injection，依赖注入）"></a>3. Spring DI（方法：Dependency Injection，依赖注入）</h2><ol>
<li>依赖注入方式<ol>
<li>基于XML装配</li>
</ol>
</li>
</ol>
<ul>
<li>Setter注入（<strong>值类型用<code>value</code>注入   引用类型用<code>ref</code>注入</strong>）</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans </span></span></span><br><span class="line"><span class="string"><span class="tag">      http://www.springframework.org/schema/beans/spring-beans-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">      http://www.springframework.org/schema/context </span></span></span><br><span class="line"><span class="string"><span class="tag">  http://www.springframework.org/schema/context/spring-context-4.3.xsd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--2.使用设值注入方式装配User实例 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.itheima.assemble.User&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;张三&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;654321&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;user1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--复杂类型注入--&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 注入list集合 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">value</span>&gt;</span>&quot;setlistvalue1&quot;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">value</span>&gt;</span>&quot;setlistvalue2&quot;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;user1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!--1.array数组注入--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;array&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">value</span>&gt;</span>value1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">value</span>&gt;</span>value2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;user1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--3.map集合的注入--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;map1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;map1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;map2&quot;</span> <span class="attr">value</span>=<span class="string">&quot;map2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">entry</span> <span class="attr">key-ref</span>=<span class="string">&quot;user1&quot;</span> <span class="attr">value-ref</span>=<span class="string">&quot;user1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--	4.properties的注入--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;props&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;driverClass&quot;</span>&gt;</span>com.jdbc.mysql.Driver<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;username&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;password&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>构造方法注入（<strong>值类型用<code>value</code>注入   引用类型用<code>ref</code>注入</strong>）</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--1.使用构造注入方式装配User实例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.itheima.assemble.User&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">value</span>=<span class="string">&quot;tom&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">value</span>&gt;</span>&quot;constructorvalue1&quot;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">value</span>&gt;</span>&quot;constructorvalue2&quot;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;3&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;student&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>



<ul>
<li>函数注入（<strong>实际上set注入，spring特有，为了简化<property>写法</strong>）</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">xmlns:p=&quot;http://www.springframework.org/schema/p&quot;</span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;run2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.itcats.thread.Run&quot;</span> <span class="attr">p:name</span>=<span class="string">&quot;haha&quot;</span> <span class="attr">p:age</span>=<span class="string">&quot;20&quot;</span> <span class="attr">p:hello-ref</span>=<span class="string">&quot;hello&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>



<ul>
<li>spel注入</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--SpEL特性：(1)、使用Bean的ID来引用Bean；(2)、调用方法和访问对象的属性；(3)、对值进行算术、关系和逻辑运算；(4)、正则表达式匹配；(5)、集合操作--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;runSpel&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.itcats.thread.Run&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 取bean标签中name为&quot;user&quot;中property为&quot;name&quot;中的value值 --!&gt;</span></span><br><span class="line"><span class="comment">    &lt;property name=&quot;name&quot; value=&quot;#&#123;user.name&#125;&quot;&gt;&lt;/property&gt;</span></span><br><span class="line"><span class="comment">&lt;/bean&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>Spring配置别名</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--设置别名：在获取Bean的时候可以使用别名获取--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">alias</span> <span class="attr">name</span>=<span class="string">&quot;userT&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;userNew&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>



<ol start="2">
<li><p>基于注解装配</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--使用 context 命名空间 ,通知Spring扫描指定包下所有Bean类，进行注解解析--&gt;</span>   </span><br><span class="line">   <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.itheima.annotation&quot;</span> /&gt;</span> </span><br><span class="line">   </span><br></pre></td></tr></table></figure>



<table>
<thead>
<tr>
<th>注解名称</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>@Component</td>
<td>此注解尽量少用，可以使用此注解描述 Spring 中的 Bean，但它是一个泛化的概念，仅仅表示一个组件（Bean），并且可以作用在任何层次。使用时只需将该注解标注在相应类上即可</td>
</tr>
<tr>
<td>@Repository</td>
<td>用于将数据访问层（DAO层）的类标识为 Spring 中的 Bean，其功能与 @Component 相同</td>
</tr>
<tr>
<td>@Service</td>
<td>通常作用在业务层（Service 层），用于将业务层的类标识为 Spring 中的 Bean，其功能与 @Component 相同</td>
</tr>
<tr>
<td>@Controller</td>
<td>通常作用在控制层（如 <a href="http://c.biancheng.net/struts2/">Struts2</a> 的 Action），用于将控制层的类标识为 Spring 中的 Bean，其功能与 @Component 相同</td>
</tr>
<tr>
<td>@Autowired</td>
<td>用于对 Bean 的属性变量、属性的 Set 方法及构造函数进行标注，配合对应的注解处理器完成 Bean 的自动配置工作。默认按照 Bean 的类型进行装配</td>
</tr>
<tr>
<td>@Resource</td>
<td>其作用与 Autowired 一样。其区别在于 @Autowired 默认按照 Bean 类型装配，而 @Resource 默认按照 Bean 实例名称进行装配name ：按实例名称进行装配，type ：按 Bean 类型进行装配</td>
</tr>
<tr>
<td>@Qualifier</td>
<td>与 @Autowired 注解配合使用，会将默认的按 Bean 类型装配修改为按 Bean 的实例名称装配，Bean 的实例名称由 @Qualifier 注解的参数指定</td>
</tr>
<tr>
<td>@RunWith(SpringJUnit4ClassRunner.class)</td>
<td>创建Junit容器</td>
</tr>
<tr>
<td>@ContextConfiguration(“classpath:.xml”)</td>
<td>指定容器的配置文件</td>
</tr>
</tbody></table>
<ul>
<li><p><strong>注意</strong></p>
<ul>
<li><p>@Value（“123”）值注入如果没有Set方法则通过反射field赋值，有则通过set赋值</p>
</li>
<li><p>@AutoWired和@Resource的区别?</p>
<p>@AutoWired默认以类型进行查找，@Resource默认以名称进行查找</p>
<p>@AutoWired(required&#x3D;false)    +   @Qualifier(“user”)    &#x3D;&#x3D;   @Resource(name&#x3D;”user”)</p>
<p>其中@Resource注解是jdk1.6后才有的</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>自动装配</p>
<table>
<thead>
<tr>
<th>autowire名称</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>byName</td>
<td>根据 Property 的 name 自动装配，如果一个 Bean 的 name 和另一个 Bean 中的 Property 的 name 相同，则自动装配这个 Bean 到 Property 中。</td>
</tr>
<tr>
<td>byType</td>
<td>根据 Property 的数据类型（Type）自动装配，如果一个 Bean 的数据类型兼容另一个 Bean 中 Property 的数据类型，则自动装配。</td>
</tr>
<tr>
<td>constructor</td>
<td>根据构造方法的参数的数据类型，进行 byType 模式的自动装配。</td>
</tr>
<tr>
<td>autodetect</td>
<td>如果发现默认的构造方法，则用 constructor 模式，否则用 byType 模式。</td>
</tr>
<tr>
<td>no</td>
<td>默认情况下，不使用自动装配，Bean 依赖必须通过 ref 元素定义。</td>
</tr>
</tbody></table>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">   <span class="comment">&lt;!-- 使用bean元素的autowire属性完成自动装配 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDao&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">class</span>=<span class="string">&quot;com.itheima.annotation.UserDaoImpl&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userService&quot;</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">&quot;com.itheima.annotation.UserServiceImpl&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userController&quot;</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">&quot;com.itheima.annotation.UserController&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="4-Bean"><a href="#4-Bean" class="headerlink" title="4. Bean"></a>4. Bean</h2><ol>
<li>实例化Bean：</li>
</ol>
<ul>
<li>构造方法</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;bean1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.itheima.instance.constructor.Bean1&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>静态工厂实例化</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;bean2&quot;</span> </span></span><br><span class="line"><span class="tag">           <span class="attr">class</span>=<span class="string">&quot;com.itheima.instance.static_factory.MyBean2Factory&quot;</span> </span></span><br><span class="line"><span class="tag">	   <span class="attr">factory-method</span>=<span class="string">&quot;createBean&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>实例工厂实例化</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">  <span class="comment">&lt;!-- 配置工厂 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;myBean3Factory&quot;</span> </span></span><br><span class="line"><span class="tag">           <span class="attr">class</span>=<span class="string">&quot;com.itheima.instance.factory.MyBean3Factory&quot;</span> /&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 使用factory-bean属性指向配置的实例工厂，</span></span><br><span class="line"><span class="comment">         使用factory-method属性确定使用工厂中的哪个方法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;bean3&quot;</span> <span class="attr">factory-bean</span>=<span class="string">&quot;myBean3Factory&quot;</span> </span></span><br><span class="line"><span class="tag">	   <span class="attr">factory-method</span>=<span class="string">&quot;createBean&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li><code>bean</code>元素的常用属性</li>
</ol>
<table>
<thead>
<tr>
<th>属性名称</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>是一个 Bean 的唯一标识符，Spring 容器对 Bean 的配置和管理都通过该属性完成，<strong>没有id看name，name也没有看class</strong></td>
</tr>
<tr>
<td>name</td>
<td>Spring 容器同样可以通过此属性对容器中的 Bean 进行配置和管理，name 属性中可以为 Bean 指定多个名称，每个名称之间用逗号或分号隔开</td>
</tr>
<tr>
<td>class</td>
<td>该属性指定了 Bean 的具体实现类，它必须是一个完整的类名，使用类的全限定名</td>
</tr>
<tr>
<td>scope</td>
<td>用于设定 Bean 实例的作用域，其属性值有 singleton（单例）、prototype（原型）、request、session 和 global Session。其默认值是 singleton</td>
</tr>
<tr>
<td>constructor-arg</td>
<td><bean>元素的子元素，可以使用此元素传入构造参数进行实例化。该元素的 index 属性指定构造参数的序号（从 0 开始），type 属性指定构造参数的类型</td>
</tr>
<tr>
<td>property</td>
<td><bean>元素的子元素，用于调用 Bean 实例中的 Set 方法完成属性赋值，从而完成依赖注入。该元素的 name 属性指定 Bean 实例中的相应属性名</td>
</tr>
<tr>
<td>ref</td>
<td><property> 和 <constructor-arg> 等元素的子元索，该元素中的 bean 属性用于指定对 Bean 工厂中某个 Bean 实例的引用</td>
</tr>
<tr>
<td>value</td>
<td><property> 和 <constractor-arg> 等元素的子元素，用于直接指定一个常量值</td>
</tr>
<tr>
<td>list</td>
<td>用于封装 List 或数组类型的依赖注入</td>
</tr>
<tr>
<td>set</td>
<td>用于封装 Set 类型属性的依赖注入</td>
</tr>
<tr>
<td>map</td>
<td>用于封装 Map 类型属性的依赖注入</td>
</tr>
<tr>
<td>entry</td>
<td><map> 元素的子元素，用于设置一个键值对。其 key 属性指定字符串类型的键值，ref 或 value 子元素指定其值</td>
</tr>
</tbody></table>
<ol start="3">
<li><code>bean</code>中的scope（作用域）</li>
</ol>
<table>
<thead>
<tr>
<th><strong>作用域名称</strong></th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>singleton</td>
<td>单例模式，bean的默认值，使用 singleton 定义的 Bean 在 Spring 容器中只有一个实例，singleton作用域是Spring中的缺省作用域</td>
</tr>
<tr>
<td>prototype</td>
<td>原型模式，每次通过 Spring 容器获取 prototype 定义的 Bean 时，容器都将创建一个新的 Bean 实例</td>
</tr>
<tr>
<td>request</td>
<td>在一次 HTTP 请求中，容器会返回该 Bean 的同一个实例。而对不同的 HTTP 请求，会返回不同的实例，该作用域仅在当前 HTTP Request 内有效，Web环境下,对象与request生命周期一致</td>
</tr>
<tr>
<td>session</td>
<td>Web环境下,对象与session生命周期一致,在一次 HTTP Session 中，容器会返回该 Bean 的同一个实例,该作用域仅在当前 HTTP Session 内有效</td>
</tr>
<tr>
<td>global Session</td>
<td>在一个全局的 HTTP Session 中，容器会返回该 Bean 的同一个实例。该作用域仅在使用 portlet context 时有效</td>
</tr>
<tr>
<td>application</td>
<td>为每个ServletContext对象创建一个实例，仅在使用portlet上下文时有效</td>
</tr>
<tr>
<td>websocket</td>
<td>为每个webSocket对象创建一个实例，仅在Web相关的ApplicationContext中生效</td>
</tr>
</tbody></table>
<p>**注意 **</p>
<blockquote>
<p>与struts整合时候，务必要用prototype多例，因为struts2在每次请求都会创建一个新的Action，若为单例，在多请求情况下，每个请求找找spring拿的都是同一个action。</p>
</blockquote>
<ol start="4">
<li>singleton 作用域下bean的生命周期</li>
</ol>
<p><img src="https://xxy8.github.io/images/ssm2.png"></p>
<p>(1)配置一个方法作为生命周期初始化方法,spring会在对象<strong>创建之后</strong>立刻调用 init-method</p>
<p> (2)配置一个方法作为生命周期的销毁方法,spring容器在关闭并销毁所有容器中的对象<strong>之前</strong>调用destory-method</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">init-method</span>=<span class="string">&quot;init&quot;</span>  <span class="attr">destory-method</span>=<span class="string">&quot;destory&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span>        <span class="comment">&lt;!-- 对应注解为@PostConstruct --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">“hello”</span> <span class="attr">class</span>=<span class="string">“完整类名”</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span>                               <span class="comment">&lt;!--   对应注解为@PreDestory --&gt;</span></span><br><span class="line">分模块配置</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span> = <span class="string">“spring配置文件的全路径名”</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="5-AOP（Aspect-Oriented-Programming）"><a href="#5-AOP（Aspect-Oriented-Programming）" class="headerlink" title="5. AOP（Aspect Oriented Programming）"></a>5. AOP（Aspect Oriented Programming）</h2><ol>
<li>目前最流行的 AOP 框架有两个，分别为 Spring AOP 和 AspectJ。</li>
<li>AOP专业术语</li>
</ol>
<table>
<thead>
<tr>
<th>名称</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>Joinpoint（连接点）</td>
<td>指那些被拦截到的点，在 Spring 中，可以被动态代理拦截目标类的方法。</td>
</tr>
<tr>
<td>Pointcut（切入点）</td>
<td>指要对哪些 Joinpoint 进行拦截，即被拦截的连接点。</td>
</tr>
<tr>
<td>Advice（通知）</td>
<td>指拦截到 Joinpoint 之后要做的事情，即对切入点增强的内容。</td>
</tr>
<tr>
<td>Target（目标）</td>
<td>指代理的目标对象。</td>
</tr>
<tr>
<td>Weaving（织入）</td>
<td>指把增强代码应用到目标上，生成代理对象的过程，将通知应用到连接点形成切入点的过程。</td>
</tr>
<tr>
<td>Proxy（代理）</td>
<td>指生成的代理对象，将通知织入到目标对象之后形成的代理对象。</td>
</tr>
<tr>
<td>Aspect（切面）</td>
<td>切入点和通知的结合。</td>
</tr>
</tbody></table>
<ol start="3">
<li>Spring AOP</li>
</ol>
<ul>
<li>JDK动态代理</li>
<li>栗子</li>
</ul>
<p>（1）接口UserDao</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.jdk;</span><br><span class="line"> <span class="keyword">interface</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addUser</span><span class="params">()</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteUser</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>(2) 接口实现类UserDaoImpl</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.jdk;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 目标类</span></span><br><span class="line"><span class="meta">@Repository(&quot;userDao&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addUser</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//		int i = 10/0;</span></span><br><span class="line">		System.out.println(<span class="string">&quot;添加用户&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteUser</span><span class="params">()</span> &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;删除用户&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(3) 切面类MyAspect</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.jdk;</span><br><span class="line"><span class="comment">//切面类：可以存在多个通知Advice（即增强的方法）</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyAspect</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">check_Permissions</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;模拟检查权限...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">log</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;模拟记录日志...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(4) 代理类JdkProxy</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.jdk;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * JDK代理类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JdkProxy</span> <span class="keyword">implements</span> <span class="title class_">InvocationHandler</span>&#123;</span><br><span class="line">	<span class="comment">//声明目标类接口</span></span><br><span class="line">	<span class="keyword">private</span> UserDao userDao;</span><br><span class="line">	<span class="comment">//创建代理方法</span></span><br><span class="line">	<span class="keyword">public</span> Object <span class="title function_">createProxy</span><span class="params">(UserDao userDao)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.userDao = userDao;</span><br><span class="line">		<span class="comment">//1.类加载器</span></span><br><span class="line">		<span class="type">ClassLoader</span> <span class="variable">classLoader</span> <span class="operator">=</span> JdkProxy.class.getClassLoader();</span><br><span class="line">		<span class="comment">//2.被代理对象实现的接口</span></span><br><span class="line">		Class[] clazz = userDao.getClass().getInterfaces();</span><br><span class="line">		<span class="comment">//使用代理类，进行增强，返回代理后的对象</span></span><br><span class="line">		<span class="keyword">return</span> Proxy.newProxyInstance(classLoader,clazz,<span class="built_in">this</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	 * 所有动态代理类的方法调用，都会交由invoke()方法去处理</span></span><br><span class="line"><span class="comment">	 * proxy 被代理后的对象</span></span><br><span class="line"><span class="comment">	 * method 将要被执行的方法信息（反射）</span></span><br><span class="line"><span class="comment">	 * args 执行方法时需要的参数</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> Object <span class="title function_">invoke</span><span class="params">(Object o, Method method, Object[] objects)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">		<span class="comment">//声明切面</span></span><br><span class="line">		<span class="type">MyAspect</span> <span class="variable">myAspect</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyAspect</span>();</span><br><span class="line">		<span class="comment">//前增强</span></span><br><span class="line">		myAspect.check_Permissions();</span><br><span class="line">		<span class="comment">//在目标类上调用方法，并传入参数</span></span><br><span class="line">		<span class="type">Object</span> <span class="variable">object</span> <span class="operator">=</span> method.invoke(userDao,objects);</span><br><span class="line">		<span class="comment">//后增强</span></span><br><span class="line">		myAspect.log();</span><br><span class="line">		<span class="keyword">return</span> object;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(5) 测试</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.jdk;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JdkTest</span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		<span class="comment">// 创建代理对象</span></span><br><span class="line">		<span class="type">JdkProxy</span> <span class="variable">jdkProxy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JdkProxy</span>();</span><br><span class="line">         <span class="comment">// 创建目标对象</span></span><br><span class="line">		UserDao userDao= <span class="keyword">new</span> <span class="title class_">UserDaoImpl</span>();</span><br><span class="line">		<span class="comment">// 从代理对象中获取增强后的目标对象</span></span><br><span class="line">		<span class="type">UserDao</span> <span class="variable">userDao1</span> <span class="operator">=</span> (UserDao) jdkProxy.createProxy(userDao);</span><br><span class="line">		<span class="comment">// 执行方法</span></span><br><span class="line">		userDao1.addUser();</span><br><span class="line">		userDao1.deleteUser();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>CGLIB动态代理（没有实现接口的类）</li>
</ul>
<p>(1) 目标类UserDao</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.cglib;</span><br><span class="line"><span class="comment">//目标类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addUser</span><span class="params">()</span> &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;添加用户&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteUser</span><span class="params">()</span> &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;删除用户&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(2) 切面类MyAspect</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.jdk;</span><br><span class="line"><span class="comment">//切面类：可以存在多个通知Advice（即增强的方法）</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyAspect</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">check_Permissions</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;模拟检查权限...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">log</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;模拟记录日志...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(3) 代理类CglibProxy</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.cglib;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.jdk.MyAspect;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cglib.proxy.Enhancer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cglib.proxy.MethodInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cglib.proxy.MethodProxy;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 代理类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CglibProxy</span> <span class="keyword">implements</span> <span class="title class_">MethodInterceptor</span>&#123;</span><br><span class="line">    <span class="comment">// 代理方法</span></span><br><span class="line">	<span class="keyword">public</span>  Object <span class="title function_">createProxy</span><span class="params">(Object target)</span> &#123;</span><br><span class="line">		<span class="comment">// 创建一个动态类对象</span></span><br><span class="line">		<span class="type">Enhancer</span> <span class="variable">enhancer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Enhancer</span>();</span><br><span class="line">		<span class="comment">// 确定需要增强的类，设置其父类</span></span><br><span class="line">		enhancer.setSuperclass(target.getClass());</span><br><span class="line">		<span class="comment">// 添加回调函数</span></span><br><span class="line">		enhancer.setCallback(<span class="built_in">this</span>);</span><br><span class="line">		<span class="comment">// 返回创建的代理类</span></span><br><span class="line">		<span class="keyword">return</span> enhancer.create();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * proxy CGlib根据指定父类生成的代理对象</span></span><br><span class="line"><span class="comment">	 * method 拦截的方法</span></span><br><span class="line"><span class="comment">	 * args 拦截方法的参数数组</span></span><br><span class="line"><span class="comment">	 * methodProxy 方法的代理对象，用于执行父类的方法 </span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> Object <span class="title function_">intercept</span><span class="params">(Object proxy, Method method, Object[] args, </span></span><br><span class="line"><span class="params">            					 MethodProxy methodProxy)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">         <span class="comment">// 创建切面类对象</span></span><br><span class="line">		<span class="type">MyAspect</span> <span class="variable">myAspect</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyAspect</span>();</span><br><span class="line">		<span class="comment">// 前增强</span></span><br><span class="line">		myAspect.check_Permissions();</span><br><span class="line">		<span class="comment">// 目标方法执行</span></span><br><span class="line">		<span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> methodProxy.invokeSuper(proxy, args);</span><br><span class="line">		<span class="comment">// 后增强</span></span><br><span class="line">		myAspect.log();	</span><br><span class="line">		<span class="keyword">return</span> obj;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(4) 测试</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.cglib;</span><br><span class="line"><span class="comment">// 测试类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CglibTest</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		<span class="comment">// 创建代理对象</span></span><br><span class="line">		<span class="type">CglibProxy</span> <span class="variable">cglibProxy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CglibProxy</span>();</span><br><span class="line">         	<span class="comment">// 创建目标对象</span></span><br><span class="line">		<span class="type">UserDao</span> <span class="variable">userDao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserDao</span>();</span><br><span class="line">         <span class="comment">// 获取增强后的目标对象</span></span><br><span class="line">		<span class="type">UserDao</span> <span class="variable">userDao1</span> <span class="operator">=</span> (UserDao)cglibProxy.createProxy(userDao);</span><br><span class="line">		<span class="comment">// 执行方法</span></span><br><span class="line">		userDao1.addUser();</span><br><span class="line">		userDao1.deleteUser();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>基于代理类的AOP实现</li>
</ul>
<table>
<thead>
<tr>
<th>通知名字</th>
<th>英文</th>
<th>说明</th>
<th>使用场景</th>
</tr>
</thead>
<tbody><tr>
<td>前置通知</td>
<td>Before Advice</td>
<td>在某连接点（join point）之前执行的通知，但这个通知不能阻止连接点前的执行（除非它抛出一个异常）</td>
<td></td>
</tr>
<tr>
<td>环绕通知</td>
<td>Around Advice</td>
<td>包围一个连接点（join point）的通知，如方法调用。这是最强大的一种通知类型。 环绕通知可以在方法调用前后完成自定义的行为。它也会选择是否继续执行连接点或直接返回它们自己的返回值或抛出异常来结束执行。 环绕通知是最常用的一种通知类型。大部分基于拦截的AOP框架，例如Nanning和JBoss4，都只提供环绕通知。</td>
<td>控制事务 权限控制</td>
</tr>
<tr>
<td>抛出异常后通知</td>
<td>After Throwing Advice</td>
<td>在方法抛出异常退出时执行的通知。</td>
<td>异常处理 控制事务</td>
</tr>
<tr>
<td>返回后通知【后置通知】</td>
<td>After Returning Advice</td>
<td>在某连接点（join point）正常完成后执行的通知：例如，一个方法没有抛出任何异常，正常返回。</td>
<td>记录日志(方法已经成功调用)</td>
</tr>
<tr>
<td>最终通知</td>
<td>After Advice</td>
<td>当某连接点退出的时候执行的通知（不论是正常返回还是异常退出）。</td>
<td>记录日志(方法已经调用，但不一定成功)</td>
</tr>
</tbody></table>
<ul>
<li>栗子</li>
</ul>
<p>(1) 导入新包</p>
<ul>
<li><p>aopalliance-1.0.jar</p>
</li>
<li><p>spring-aop-4.3.6.RELEASE.jar</p>
</li>
</ul>
<p>(2) 接口UserDao</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.factorybean;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addUser</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteUser</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(3) 实现类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.factorybean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.jdk.UserDao;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 目标类</span></span><br><span class="line"><span class="meta">@Repository(&quot;userDao&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addUser</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//		int i = 10/0;</span></span><br><span class="line">		System.out.println(<span class="string">&quot;添加用户&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteUser</span><span class="params">()</span> &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;删除用户&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(4) 切面类MyAspect</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.factorybean;</span><br><span class="line"><span class="keyword">import</span> org.aopalliance.intercept.MethodInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.aopalliance.intercept.MethodInvocation;</span><br><span class="line"><span class="comment">// 切面类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyAspect</span> <span class="keyword">implements</span> <span class="title class_">MethodInterceptor</span> &#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> Object <span class="title function_">invoke</span><span class="params">(MethodInvocation mi)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">		check_Permissions();</span><br><span class="line">		<span class="comment">// 执行目标方法</span></span><br><span class="line">		<span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> mi.proceed();</span><br><span class="line">		log();</span><br><span class="line">		<span class="keyword">return</span> obj;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">check_Permissions</span><span class="params">()</span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;模拟检查权限...&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">log</span><span class="params">()</span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;模拟记录日志...&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(5) 配置文件applicationContext.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans </span></span></span><br><span class="line"><span class="string"><span class="tag">	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd&quot;</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 1 目标类 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.itheima.factorybean.UserDaoImpl&quot;</span> /&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 2 切面类 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;myAspect&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.itheima.factorybean.MyAspect&quot;</span> /&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 3 使用Spring代理工厂定义一个名称为userDaoProxy的代理对象 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDaoProxy&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">&quot;org.springframework.aop.framework.ProxyFactoryBean&quot;</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 3.1 指定代理实现的接口--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;proxyInterfaces&quot;</span> </span></span><br><span class="line"><span class="tag">                      <span class="attr">value</span>=<span class="string">&quot;com.itheima.factorybean.UserDao&quot;</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 3.2 指定目标对象 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;target&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;userDao&quot;</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 3.3 指定切面,织入环绕通知 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;interceptorNames&quot;</span> <span class="attr">value</span>=<span class="string">&quot;myAspect&quot;</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 3.4 指定代理方式，true：使用cglib，false(默认)：使用jdk动态代理 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;proxyTargetClass&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(6) 测试</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.factorybean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> </span><br><span class="line">    org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"><span class="keyword">import</span> com.itheima.jdk.UserDao;</span><br><span class="line"><span class="comment">// 测试类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProxyFactoryBeanTest</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">	   <span class="type">String</span> <span class="variable">xmlPath</span> <span class="operator">=</span> <span class="string">&quot;com/itheima/factorybean/applicationContext.xml&quot;</span>;</span><br><span class="line">	   <span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> </span><br><span class="line">                                 <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(xmlPath);</span><br><span class="line">	   <span class="comment">// 从Spring容器获得内容</span></span><br><span class="line">	   <span class="type">UserDao</span> <span class="variable">userDao</span> <span class="operator">=</span> </span><br><span class="line">                       (UserDao) applicationContext.getBean(<span class="string">&quot;userDaoProxy&quot;</span>);</span><br><span class="line">	   <span class="comment">// 执行方法</span></span><br><span class="line">	   userDao.addUser();</span><br><span class="line">	   userDao.deleteUser();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>AspectJ</li>
</ol>
<blockquote>
<p>基于Java语言的AOP框架</p>
</blockquote>
<ul>
<li>基于XML的声明式</li>
</ul>
<blockquote>
<p>execution(* com.itheima.jdk.*.*(..)) 第一个星：返回值类型，第二个：类名，第三个：方法名，括号里面的点：任意参数</p>
</blockquote>
<ul>
<li>栗子</li>
</ul>
<p>(1) 导入新包</p>
<ul>
<li>spring-aspects-4.3.6.RELEASE.jar</li>
<li>aspectjweaver-1.8.10.jar</li>
</ul>
<p>(2) 切面类MyAspect</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.aspectj.xml;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.JoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *切面类，在此类中编写通知</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyAspect</span> &#123;</span><br><span class="line">	<span class="comment">// 前置通知</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">myBefore</span><span class="params">(JoinPoint joinPoint)</span> &#123;</span><br><span class="line">		System.out.print(<span class="string">&quot;前置通知 ：模拟执行权限检查...,&quot;</span>);</span><br><span class="line">		System.out.print(<span class="string">&quot;目标类是：&quot;</span>+joinPoint.getTarget() );</span><br><span class="line">		System.out.println(<span class="string">&quot;,被织入增强处理的目标方法为：&quot;</span></span><br><span class="line">                            +joinPoint.getSignature().getName());</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 后置通知</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">myAfterReturning</span><span class="params">(JoinPoint joinPoint)</span> &#123;</span><br><span class="line">		System.out.print(<span class="string">&quot;后置通知：模拟记录日志...,&quot;</span> );</span><br><span class="line">		System.out.println(<span class="string">&quot;被织入增强处理的目标方法为：&quot;</span></span><br><span class="line">                          + joinPoint.getSignature().getName());</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 环绕通知</span></span><br><span class="line"><span class="comment">	 * ProceedingJoinPoint 是JoinPoint子接口，表示可以执行目标方法</span></span><br><span class="line"><span class="comment">	 * 1.必须是Object类型的返回值</span></span><br><span class="line"><span class="comment">	 * 2.必须接收一个参数，类型为ProceedingJoinPoint</span></span><br><span class="line"><span class="comment">	 * 3.必须throws Throwable</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> Object <span class="title function_">myAround</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span> </span><br><span class="line">             <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">		<span class="comment">// 开始</span></span><br><span class="line">		System.out.println(<span class="string">&quot;环绕开始：执行目标方法之前，模拟开启事务...&quot;</span>);</span><br><span class="line">		<span class="comment">// 执行当前目标方法</span></span><br><span class="line">		<span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> proceedingJoinPoint.proceed();</span><br><span class="line">		<span class="comment">// 结束</span></span><br><span class="line">		System.out.println(<span class="string">&quot;环绕结束：执行目标方法之后，模拟关闭事务...&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> obj;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 异常通知</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">myAfterThrowing</span><span class="params">(JoinPoint joinPoint, Throwable e)</span> &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;异常通知：&quot;</span> + <span class="string">&quot;出错了&quot;</span> + e.getMessage());</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 最终通知</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">myAfter</span><span class="params">()</span> &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;最终通知：模拟方法结束后的释放资源...&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(3) 配置文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans </span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/aop </span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd&quot;</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 1 目标类 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.itheima.jdk.UserDaoImpl&quot;</span> /&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 2 切面 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;myAspect&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.itheima.aspectj.xml.MyAspect&quot;</span> /&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 3 aop编程 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置切面 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">&quot;myAspect&quot;</span>&gt;</span></span><br><span class="line">		  <span class="comment">&lt;!-- 3.1 配置切入点，通知最后增强哪些方法 --&gt;</span></span><br><span class="line">		  <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.itheima.jdk.*.*(..))&quot;</span></span></span><br><span class="line"><span class="tag">				                                      <span class="attr">id</span>=<span class="string">&quot;myPointCut&quot;</span> /&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 3.2 关联通知Advice和切入点pointCut --&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 3.2.1 前置通知 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">&quot;myBefore&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointCut&quot;</span> /&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 3.2.2 后置通知,在方法返回之后执行，就可以获得返回值</span></span><br><span class="line"><span class="comment">			 returning属性：用于设置后置通知的第二个参数的名称,类型是Object --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">aop:after-returning</span> <span class="attr">method</span>=<span class="string">&quot;myAfterReturning&quot;</span></span></span><br><span class="line"><span class="tag">				<span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointCut&quot;</span> <span class="attr">returning</span>=<span class="string">&quot;returnVal&quot;</span> /&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 3.2.3 环绕通知 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">aop:around</span> <span class="attr">method</span>=<span class="string">&quot;myAround&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointCut&quot;</span> /&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 3.2.4 抛出通知：用于处理程序发生异常--&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- * 注意：如果程序没有异常，将不会执行增强 --&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- * throwing属性：用于设置通知第二个参数的名称，类型Throwable --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">aop:after-throwing</span> <span class="attr">method</span>=<span class="string">&quot;myAfterThrowing&quot;</span></span></span><br><span class="line"><span class="tag">				<span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointCut&quot;</span> <span class="attr">throwing</span>=<span class="string">&quot;e&quot;</span> /&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 3.2.5 最终通知：无论程序发生任何事情，都将执行 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">method</span>=<span class="string">&quot;myAfter&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointCut&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(4) 测试</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.aspectj.xml;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> </span><br><span class="line">    org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"><span class="keyword">import</span> com.itheima.jdk.UserDao;</span><br><span class="line"><span class="comment">// 测试类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestXmlAspectj</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">		<span class="type">String</span> <span class="variable">xmlPath</span> <span class="operator">=</span> </span><br><span class="line">                         <span class="string">&quot;com/itheima/aspectj/xml/applicationContext.xml&quot;</span>;</span><br><span class="line">		<span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> </span><br><span class="line">                          <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(xmlPath);</span><br><span class="line">		<span class="comment">// 1 从spring容器获得内容</span></span><br><span class="line">		<span class="type">UserDao</span> <span class="variable">userDao</span> <span class="operator">=</span> (UserDao) applicationContext.getBean(<span class="string">&quot;userDao&quot;</span>);</span><br><span class="line">		<span class="comment">// 2 执行方法</span></span><br><span class="line">		userDao.addUser();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>基于注解的声明式</li>
</ul>
<p>(1) 在基于xml的声明上,重新写一个切面类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.aspectj.annotation;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.JoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.After;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.AfterReturning;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.AfterThrowing;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Around;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Before;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Pointcut;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 切面类，在此类中编写通知</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyAspect</span> &#123;</span><br><span class="line">	<span class="comment">// 定义切入点表达式</span></span><br><span class="line">	<span class="meta">@Pointcut(&quot;execution(* com.itheima.jdk.*.*(..))&quot;)</span></span><br><span class="line">	<span class="comment">// 使用一个返回值为void、方法体为空的方法来命名切入点</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">myPointCut</span><span class="params">()</span>&#123;&#125;</span><br><span class="line">	<span class="comment">// 前置通知</span></span><br><span class="line">	<span class="meta">@Before(&quot;myPointCut()&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">myBefore</span><span class="params">(JoinPoint joinPoint)</span> &#123;</span><br><span class="line">		System.out.print(<span class="string">&quot;前置通知 ：模拟执行权限检查...,&quot;</span>);</span><br><span class="line">		System.out.print(<span class="string">&quot;目标类是：&quot;</span>+joinPoint.getTarget() );</span><br><span class="line">		System.out.println(<span class="string">&quot;,被织入增强处理的目标方法为：&quot;</span></span><br><span class="line">		               +joinPoint.getSignature().getName());</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 后置通知</span></span><br><span class="line">	<span class="meta">@AfterReturning(value=&quot;myPointCut()&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">myAfterReturning</span><span class="params">(JoinPoint joinPoint)</span> &#123;</span><br><span class="line">		System.out.print(<span class="string">&quot;后置通知：模拟记录日志...,&quot;</span> );</span><br><span class="line">		System.out.println(<span class="string">&quot;被织入增强处理的目标方法为：&quot;</span></span><br><span class="line">		              + joinPoint.getSignature().getName());</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 环绕通知	</span></span><br><span class="line">	<span class="meta">@Around(&quot;myPointCut()&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> Object <span class="title function_">myAround</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span> </span><br><span class="line">            <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">		<span class="comment">// 开始</span></span><br><span class="line">		System.out.println(<span class="string">&quot;环绕开始：执行目标方法之前，模拟开启事务...&quot;</span>);</span><br><span class="line">		<span class="comment">// 执行当前目标方法</span></span><br><span class="line">		<span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> proceedingJoinPoint.proceed();</span><br><span class="line">		<span class="comment">// 结束</span></span><br><span class="line">		System.out.println(<span class="string">&quot;环绕结束：执行目标方法之后，模拟关闭事务...&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> obj;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 异常通知</span></span><br><span class="line">	<span class="meta">@AfterThrowing(value=&quot;myPointCut()&quot;,throwing=&quot;e&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">myAfterThrowing</span><span class="params">(JoinPoint joinPoint, Throwable e)</span> &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;异常通知：&quot;</span> + <span class="string">&quot;出错了&quot;</span> + e.getMessage());</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 最终通知</span></span><br><span class="line">	<span class="meta">@After(&quot;myPointCut()&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">myAfter</span><span class="params">()</span> &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;最终通知：模拟方法结束后的释放资源...&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(2) 配置文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans </span></span></span><br><span class="line"><span class="string"><span class="tag">  http://www.springframework.org/schema/beans/spring-beans-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">  http://www.springframework.org/schema/aop </span></span></span><br><span class="line"><span class="string"><span class="tag">  http://www.springframework.org/schema/aop/spring-aop-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">  http://www.springframework.org/schema/context </span></span></span><br><span class="line"><span class="string"><span class="tag">  http://www.springframework.org/schema/context/spring-context-4.3.xsd&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 指定需要扫描的包，使注解生效 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.itheima.factorybean com.itheima.aspectj.annotation&quot;</span> /&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 启动基于注解的声明式AspectJ支持 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(3) 测试</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.aspectj.annotation;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> </span><br><span class="line">    org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"><span class="keyword">import</span> com.itheima.jdk.UserDao;</span><br><span class="line"><span class="comment">// 测试类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestAnnotationAspectj</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line">		<span class="type">String</span> <span class="variable">xmlPath</span> <span class="operator">=</span> </span><br><span class="line">                  <span class="string">&quot;com/itheima/aspectj/annotation/applicationContext.xml&quot;</span>;</span><br><span class="line">		<span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> </span><br><span class="line">                 <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(xmlPath);</span><br><span class="line">		<span class="comment">// 1 从spring容器获得内容</span></span><br><span class="line">		<span class="type">UserDao</span> <span class="variable">userDao</span> <span class="operator">=</span> (UserDao) applicationContext.getBean(<span class="string">&quot;userDao&quot;</span>);</span><br><span class="line">		<span class="comment">// 2 执行方法</span></span><br><span class="line">		userDao.addUser();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="6-Spring-数据库开发"><a href="#6-Spring-数据库开发" class="headerlink" title="6. Spring 数据库开发"></a>6. Spring 数据库开发</h2><blockquote>
<p>Spring JdbcTemplate解析，推荐使用MyBatis</p>
</blockquote>
<ul>
<li>栗子</li>
</ul>
<p>(1) 导入新包</p>
<ul>
<li>mysql-connector-java-5.1.8.jar</li>
<li>spring-jdbc-4.3.6.RELEASE.jar</li>
<li>spring-tx-4.3.6.RELEASE.jar</li>
</ul>
<p>(2) 配置文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans </span></span></span><br><span class="line"><span class="string"><span class="tag"> 	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd&quot;</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 1配置数据源 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=</span></span><br><span class="line"><span class="tag">     <span class="string">&quot;org.springframework.jdbc.datasource.DriverManagerDataSource&quot;</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--数据库驱动 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--连接数据库的url --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/spring&quot;</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--连接数据库的用户名 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--连接数据库的密码 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 2配置JDBC模板 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;jdbcTemplate&quot;</span> </span></span><br><span class="line"><span class="tag">		   <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.core.JdbcTemplate&quot;</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 默认必须使用数据源 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">&lt;!--定义id为accountDao的Bean--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;accountDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.itheima.jdbc.AccountDaoImpl&quot;</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 将jdbcTemplate注入到accountDao实例中 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcTemplate&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;jdbcTemplate&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">	</span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(3) 实体类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.jdbc;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Account</span> &#123;</span><br><span class="line">   <span class="keyword">private</span> Integer id;       <span class="comment">// 账户id</span></span><br><span class="line">   <span class="keyword">private</span> String username; <span class="comment">// 用户名</span></span><br><span class="line">   <span class="keyword">private</span> Double balance;  <span class="comment">// 账户余额</span></span><br><span class="line">   <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> id;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.id = id;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> username;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.username = username;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">public</span> Double <span class="title function_">getBalance</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> balance;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBalance</span><span class="params">(Double balance)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.balance = balance;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;Account [id=&quot;</span> + id + <span class="string">&quot;, &quot;</span></span><br><span class="line">            + <span class="string">&quot;username=&quot;</span> + username + </span><br><span class="line">            <span class="string">&quot;, balance=&quot;</span> + balance + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>(4) 数据访问类接口Dao</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.jdbc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">AccountDao</span> &#123;</span><br><span class="line">   <span class="comment">// 添加</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">addAccount</span><span class="params">(Account account)</span>;</span><br><span class="line">   <span class="comment">// 更新</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updateAccount</span><span class="params">(Account account)</span>;</span><br><span class="line">   <span class="comment">// 删除</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">deleteAccount</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">// 通过id查询</span></span><br><span class="line">   <span class="keyword">public</span> Account <span class="title function_">findAccountById</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line">   <span class="comment">// 查询所有账户</span></span><br><span class="line">   <span class="keyword">public</span> List&lt;Account&gt; <span class="title function_">findAllAccount</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>(5) 数据访问类实现类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.jdbc;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.BeanPropertyRowMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.RowMapper;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AccountDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">AccountDao</span> &#123;</span><br><span class="line">   <span class="comment">// 声明JdbcTemplate属性及其setter方法</span></span><br><span class="line">   <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setJdbcTemplate</span><span class="params">(JdbcTemplate jdbcTemplate)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.jdbcTemplate = jdbcTemplate;</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="comment">// 添加账户</span></span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">addAccount</span><span class="params">(Account account)</span> &#123;</span><br><span class="line">      <span class="comment">// 定义SQL</span></span><br><span class="line">      <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into tb_account(account_id,username,money) values(?,?,?);&quot;</span>;</span><br><span class="line">      <span class="comment">// 定义数组来存放SQL语句中的参数</span></span><br><span class="line">      Object[] obj = <span class="keyword">new</span> <span class="title class_">Object</span>[] &#123;</span><br><span class="line">                     account.getId(),</span><br><span class="line">                           account.getUsername(), </span><br><span class="line">                           account.getBalance() </span><br><span class="line">         &#125;;</span><br><span class="line">      <span class="comment">// 执行添加操作，返回的是受SQL语句影响的记录条数</span></span><br><span class="line">      <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="built_in">this</span>.jdbcTemplate.update(sql, obj);</span><br><span class="line">      <span class="keyword">return</span> num;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">// 更新账户</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updateAccount</span><span class="params">(Account account)</span> &#123;</span><br><span class="line">      <span class="comment">// 定义SQL</span></span><br><span class="line">      <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update account set username=?,balance=? where id = ?&quot;</span>;</span><br><span class="line">      <span class="comment">// 定义数组来存放SQL语句中的参数</span></span><br><span class="line">      Object[] params = <span class="keyword">new</span> <span class="title class_">Object</span>[] &#123; </span><br><span class="line">                               account.getUsername(), </span><br><span class="line">                               account.getBalance(), </span><br><span class="line">                               account.getId() </span><br><span class="line">          &#125;;</span><br><span class="line">      <span class="comment">// 执行添加操作，返回的是受SQL语句影响的记录条数</span></span><br><span class="line">      <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="built_in">this</span>.jdbcTemplate.update(sql, params);</span><br><span class="line">      <span class="keyword">return</span> num;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">// 删除账户</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">deleteAccount</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">      <span class="comment">// 定义SQL</span></span><br><span class="line">      <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;delete  from account where id = ? &quot;</span>;</span><br><span class="line">      <span class="comment">// 执行添加操作，返回的是受SQL语句影响的记录条数</span></span><br><span class="line">      <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="built_in">this</span>.jdbcTemplate.update(sql, id);</span><br><span class="line">      <span class="keyword">return</span> num;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">// 通过id查询账户数据信息</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> Account <span class="title function_">findAccountById</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">       <span class="comment">//定义SQL语句</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from account where id = ?&quot;</span>;</span><br><span class="line">       <span class="comment">// 创建一个新的BeanPropertyRowMapper对象</span></span><br><span class="line">       RowMapper&lt;Account&gt; rowMapper = </span><br><span class="line">   <span class="keyword">new</span> <span class="title class_">BeanPropertyRowMapper</span>&lt;Account&gt;(Account.class);</span><br><span class="line">       <span class="comment">// 将id绑定到SQL语句中，并通过RowMapper返回一个Object类型的单行记录</span></span><br><span class="line">       <span class="keyword">return</span> <span class="built_in">this</span>.jdbcTemplate.queryForObject(sql, rowMapper, id);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">// 查询所有账户信息</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> List&lt;Account&gt; <span class="title function_">findAllAccount</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">// 定义SQL语句</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from account&quot;</span>;</span><br><span class="line">       <span class="comment">// 创建一个新的BeanPropertyRowMapper对象</span></span><br><span class="line">       RowMapper&lt;Account&gt; rowMapper = </span><br><span class="line">   <span class="keyword">new</span> <span class="title class_">BeanPropertyRowMapper</span>&lt;Account&gt;(Account.class);</span><br><span class="line">       <span class="comment">// 执行静态的SQL查询，并通过RowMapper返回结果</span></span><br><span class="line">       <span class="keyword">return</span> <span class="built_in">this</span>.jdbcTemplate.query(sql, rowMapper);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>(6) 测试</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.jdbc;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> </span><br><span class="line">     org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JdbcTemplateTest</span> &#123;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 使用execute()方法建表</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="comment">// public static void main(String[] args) &#123;</span></span><br><span class="line"><span class="comment">//    // 加载配置文件</span></span><br><span class="line"><span class="comment">//    ApplicationContext applicationContext = </span></span><br><span class="line"><span class="comment">//       new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);</span></span><br><span class="line"><span class="comment">//    // 获取JdbcTemplate实例</span></span><br><span class="line"><span class="comment">//    JdbcTemplate jdTemplate = </span></span><br><span class="line"><span class="comment">//          (JdbcTemplate) applicationContext.getBean(&quot;jdbcTemplate&quot;);</span></span><br><span class="line"><span class="comment">//    // 使用execute()方法执行SQL语句，创建用户账户管理表account</span></span><br><span class="line"><span class="comment">//    jdTemplate.execute(&quot;create table account(&quot; + </span></span><br><span class="line"><span class="comment">//                      &quot;id int primary key auto_increment,&quot; +</span></span><br><span class="line"><span class="comment">//                      &quot;username varchar(50),&quot; + </span></span><br><span class="line"><span class="comment">//                      &quot;balance double)&quot;);</span></span><br><span class="line"><span class="comment">//    System.out.println(&quot;账户表account创建成功！&quot;);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line">   </span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">mainTest</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">// 加载配置文件</span></span><br><span class="line">       <span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> </span><br><span class="line">               <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line">       <span class="comment">// 获取JdbcTemplate实例</span></span><br><span class="line">       <span class="type">JdbcTemplate</span> <span class="variable">jdTemplate</span> <span class="operator">=</span> </span><br><span class="line">               (JdbcTemplate) applicationContext.getBean(<span class="string">&quot;jdbcTemplate&quot;</span>);</span><br><span class="line">       <span class="comment">// 使用execute()方法执行SQL语句，创建用户账户管理表account</span></span><br><span class="line">       jdTemplate.execute(<span class="string">&quot;create table account(&quot;</span> + </span><br><span class="line">                              <span class="string">&quot;id int primary key auto_increment,&quot;</span> +</span><br><span class="line">                              <span class="string">&quot;username varchar(50),&quot;</span> + </span><br><span class="line">                              <span class="string">&quot;balance double)&quot;</span>);</span><br><span class="line">       System.out.println(<span class="string">&quot;账户表account创建成功！&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addAccountTest</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">// 加载配置文件</span></span><br><span class="line">       <span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> </span><br><span class="line">               <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line">       <span class="comment">// 获取AccountDao实例</span></span><br><span class="line">       <span class="type">AccountDao</span> <span class="variable">accountDao</span> <span class="operator">=</span> </span><br><span class="line">               (AccountDao) applicationContext.getBean(<span class="string">&quot;accountDao&quot;</span>);</span><br><span class="line">       <span class="comment">// 创建Account对象，并向Account对象中添加数据</span></span><br><span class="line">       <span class="type">Account</span> <span class="variable">account</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Account</span>();</span><br><span class="line">       account.setId(<span class="number">30</span>);</span><br><span class="line">       account.setUsername(<span class="string">&quot;tom&quot;</span>);</span><br><span class="line">       account.setBalance(<span class="number">1000.00</span>);</span><br><span class="line">       <span class="comment">// 执行addAccount()方法，并获取返回结果</span></span><br><span class="line">       <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> accountDao.addAccount(account);</span><br><span class="line">       <span class="keyword">if</span> (num &gt; <span class="number">0</span>) &#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;成功插入了&quot;</span> + num + <span class="string">&quot;条数据！&quot;</span>);</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;插入操作执行失败！&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateAccountTest</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">// 加载配置文件</span></span><br><span class="line">       <span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> </span><br><span class="line">               <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line">       <span class="comment">// 获取AccountDao实例</span></span><br><span class="line">       <span class="type">AccountDao</span> <span class="variable">accountDao</span> <span class="operator">=</span> </span><br><span class="line">               (AccountDao) applicationContext.getBean(<span class="string">&quot;accountDao&quot;</span>);</span><br><span class="line">       <span class="comment">// 创建Account对象，并向Account对象中添加数据</span></span><br><span class="line">       <span class="type">Account</span> <span class="variable">account</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Account</span>();</span><br><span class="line">       account.setId(<span class="number">1</span>);</span><br><span class="line">       account.setUsername(<span class="string">&quot;tom&quot;</span>);</span><br><span class="line">       account.setBalance(<span class="number">2000.00</span>);</span><br><span class="line">       <span class="comment">// 执行updateAccount()方法，并获取返回结果</span></span><br><span class="line">       <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> accountDao.updateAccount(account);</span><br><span class="line">       <span class="keyword">if</span> (num &gt; <span class="number">0</span>) &#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;成功修改了&quot;</span> + num + <span class="string">&quot;条数据！&quot;</span>);</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;修改操作执行失败！&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteAccountTest</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">// 加载配置文件</span></span><br><span class="line">       <span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> </span><br><span class="line">               <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line">       <span class="comment">// 获取AccountDao实例</span></span><br><span class="line">       <span class="type">AccountDao</span> <span class="variable">accountDao</span> <span class="operator">=</span> </span><br><span class="line">               (AccountDao) applicationContext.getBean(<span class="string">&quot;accountDao&quot;</span>);</span><br><span class="line">       <span class="comment">// 执行deleteAccount()方法，并获取返回结果</span></span><br><span class="line">       <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> accountDao.deleteAccount(<span class="number">1</span>);</span><br><span class="line">       <span class="keyword">if</span> (num &gt; <span class="number">0</span>) &#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;成功删除了&quot;</span> + num + <span class="string">&quot;条数据！&quot;</span>);</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;删除操作执行失败！&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findAccountByIdTest</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">// 加载配置文件</span></span><br><span class="line">       <span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> </span><br><span class="line">               <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line">       <span class="comment">// 获取AccountDao实例</span></span><br><span class="line">       <span class="type">AccountDao</span> <span class="variable">accountDao</span> <span class="operator">=</span> </span><br><span class="line">               (AccountDao) applicationContext.getBean(<span class="string">&quot;accountDao&quot;</span>);</span><br><span class="line">       <span class="comment">// 执行findAccountById()方法</span></span><br><span class="line">       <span class="type">Account</span> <span class="variable">account</span> <span class="operator">=</span> accountDao.findAccountById(<span class="number">1</span>);</span><br><span class="line">       System.out.println(account);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findAllAccountTest</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">// 加载配置文件</span></span><br><span class="line">       <span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> </span><br><span class="line">               <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line">       <span class="comment">// 获取AccountDao实例</span></span><br><span class="line">       <span class="type">AccountDao</span> <span class="variable">accountDao</span> <span class="operator">=</span> </span><br><span class="line">               (AccountDao) applicationContext.getBean(<span class="string">&quot;accountDao&quot;</span>);</span><br><span class="line">       <span class="comment">// 执行findAllAccount()方法,获取Account对象的集合</span></span><br><span class="line">       List&lt;Account&gt; account = accountDao.findAllAccount();</span><br><span class="line">       <span class="comment">// 循环输出集合中的对象</span></span><br><span class="line">       <span class="keyword">for</span> (Account act : account) &#123;</span><br><span class="line">           System.out.println(act);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="7-Spring事务管理"><a href="#7-Spring事务管理" class="headerlink" title="7.Spring事务管理"></a>7.Spring事务管理</h2><ol>
<li>事务管理核心接口</li>
</ol>
<ul>
<li>PlatformTransactionManager（接口是Spring提供的平台事务管理器）</li>
</ul>
<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>TransactionStatus getTransaction(TransactionDefinition definition)</td>
<td>普通</td>
<td>用于获取事务状态信息</td>
</tr>
<tr>
<td>void commit(TransactionStatus status)</td>
<td>普通</td>
<td>用于提交事务</td>
</tr>
<tr>
<td>void rollback(TransactionStatus status)</td>
<td>普通</td>
<td>用于回滚事务</td>
</tr>
</tbody></table>
<ul>
<li>TransactionDefinition（接口是事务定义（描述）的对象）</li>
</ul>
<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>String getName( )</td>
<td>普通</td>
<td>获取事务对象名称</td>
</tr>
<tr>
<td>int getIsolationLevel( )</td>
<td>普通</td>
<td>获取事务的隔离级别</td>
</tr>
<tr>
<td>int getPropagationBehavior( )</td>
<td>普通</td>
<td>获取事务的传播行为</td>
</tr>
<tr>
<td>int getTimeout( )</td>
<td>普通</td>
<td>获取事务的超时时间</td>
</tr>
<tr>
<td>boolean isReadOnly( )</td>
<td>普通</td>
<td>获取事务是否可读</td>
</tr>
</tbody></table>
<ul>
<li>TransactionStatus(事务的状态)</li>
</ul>
<blockquote>
<p>是否有保存点</p>
</blockquote>
<blockquote>
<p>是否一个新的事务</p>
</blockquote>
<blockquote>
<p>事务是否已经提交</p>
</blockquote>
<ol>
<li>基于XML方式声明式事务</li>
</ol>
<ul>
<li>栗子</li>
</ul>
<p>（1） 导入新包</p>
<pre><code>- aopalliance-1.0.jar
- aspectjweaver-1.8.10.jar
- spring-aop-4.3.6.RELEASE.jar
- spring-aspects-4.3.6.RELEASE.jar
- mysql-connector-java-5.1.8.jar
- spring-tx-4.3.6.RELEASE.jar
</code></pre>
<p>(2) 配置文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans </span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/tx </span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/tx/spring-tx-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/context </span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/context/spring-context-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/aop </span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/aop/spring-aop-4.3.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1.配置数据源 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DriverManagerDataSource&quot;</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--数据库驱动 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--连接数据库的url --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost/temp1&quot;</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--连接数据库的用户名 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--连接数据库的密码 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 2.配置JDBC模板 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;jdbcTemplate&quot;</span> </span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.core.JdbcTemplate&quot;</span>&gt;</span></span><br><span class="line">		 <span class="comment">&lt;!-- 默认必须使用数据源 --&gt;</span></span><br><span class="line">		 <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--3.定义id为accountDao的Bean --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;accountDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.itheima.jdbc.AccountDaoImpl&quot;</span>&gt;</span></span><br><span class="line">		 <span class="comment">&lt;!-- 将jdbcTemplate注入到AccountDao实例中 --&gt;</span></span><br><span class="line">		 <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcTemplate&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;jdbcTemplate&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span>	</span><br><span class="line">   <span class="comment">&lt;!-- 4.事务管理器，依赖于数据源 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=</span></span><br><span class="line"><span class="tag">   <span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span>	</span><br><span class="line">   <span class="comment">&lt;!-- 5.编写通知：对事务进行增强(通知),需要编写对切入点和具体执行事务细节 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- name：*表示任意方法名称 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> </span></span><br><span class="line"><span class="tag">                           <span class="attr">isolation</span>=<span class="string">&quot;DEFAULT&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 6.编写aop，让spring自动对目标生成代理，需要使用AspectJ的表达式 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 切入点 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.itheima.jdbc.*.*(..))&quot;</span></span></span><br><span class="line"><span class="tag">			<span class="attr">id</span>=<span class="string">&quot;txPointCut&quot;</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 切面：将切入点与通知整合 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;txPointCut&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(3) 在上一次的AccountDao接口加方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transfer</span><span class="params">(String outUser,String inUser,Double money)</span>;</span><br></pre></td></tr></table></figure>

<p>(4) 实现类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@Transactional(propagation = Propagation.REQUIRED,</span></span><br><span class="line"><span class="meta">           isolation = Isolation.DEFAULT, readOnly = false)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transfer</span><span class="params">(String outUser, String inUser, Double money)</span> &#123;</span><br><span class="line">    <span class="comment">// 收款时，收款用户的余额=现有余额+所汇金额</span></span><br><span class="line">    <span class="built_in">this</span>.jdbcTemplate.update(<span class="string">&quot;update account set balance = balance +? &quot;</span></span><br><span class="line">            + <span class="string">&quot;where username = ?&quot;</span>,money, inUser);</span><br><span class="line">    <span class="comment">// 模拟系统运行时的突发性问题</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>/<span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 汇款时，汇款用户的余额=现有余额-所汇金额</span></span><br><span class="line">    <span class="built_in">this</span>.jdbcTemplate.update(<span class="string">&quot;update account set balance = balance-? &quot;</span></span><br><span class="line">            + <span class="string">&quot;where username = ?&quot;</span>,money, outUser);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>(5) 测试</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.jdbc;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> </span><br><span class="line">org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"><span class="comment">//测试类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TransactionTest</span> &#123;</span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">xmlTest</span><span class="params">()</span>&#123;</span><br><span class="line">		<span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> </span><br><span class="line">		   <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line">		<span class="comment">// 获取AccountDao实例</span></span><br><span class="line">		<span class="type">AccountDao</span> <span class="variable">accountDao</span> <span class="operator">=</span> </span><br><span class="line">            (AccountDao)applicationContext.getBean(<span class="string">&quot;accountDao&quot;</span>);</span><br><span class="line">		<span class="comment">// 调用实例中的转账方法</span></span><br><span class="line">		accountDao.transfer(<span class="string">&quot;Jack&quot;</span>, <span class="string">&quot;Rose&quot;</span>, <span class="number">100.0</span>);</span><br><span class="line">	    <span class="comment">// 输出提示信息</span></span><br><span class="line">	    System.out.println(<span class="string">&quot;转账成功！&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">annotationTest</span><span class="params">()</span>&#123;</span><br><span class="line">	    <span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> </span><br><span class="line">	<span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;applicationContext-annotation.xml&quot;</span>);</span><br><span class="line">	    <span class="comment">// 获取AccountDao实例</span></span><br><span class="line">	    <span class="type">AccountDao</span> <span class="variable">accountDao</span> <span class="operator">=</span> </span><br><span class="line">	(AccountDao)applicationContext.getBean(<span class="string">&quot;accountDao&quot;</span>);</span><br><span class="line">	    <span class="comment">// 调用实例中的转账方法</span></span><br><span class="line">	    accountDao.transfer(<span class="string">&quot;Jack&quot;</span>, <span class="string">&quot;Rose&quot;</span>, <span class="number">100.0</span>);</span><br><span class="line">	    <span class="comment">// 输出提示信息</span></span><br><span class="line">	    System.out.println(<span class="string">&quot;转账成功！&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>基于注解方式声明式事务</li>
</ol>
<p>(1)  在实现类增加注解</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@Transactional(propagation = Propagation.REQUIRED,</span></span><br><span class="line"><span class="meta">           isolation = Isolation.DEFAULT, readOnly = false)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transfer</span><span class="params">(String outUser, String inUser, Double money)</span> &#123;</span><br><span class="line">    <span class="comment">// 收款时，收款用户的余额=现有余额+所汇金额</span></span><br><span class="line">    <span class="built_in">this</span>.jdbcTemplate.update(<span class="string">&quot;update account set balance = balance +? &quot;</span></span><br><span class="line">            + <span class="string">&quot;where username = ?&quot;</span>,money, inUser);</span><br><span class="line">    <span class="comment">// 模拟系统运行时的突发性问题</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>/<span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 汇款时，汇款用户的余额=现有余额-所汇金额</span></span><br><span class="line">    <span class="built_in">this</span>.jdbcTemplate.update(<span class="string">&quot;update account set balance = balance-? &quot;</span></span><br><span class="line">            + <span class="string">&quot;where username = ?&quot;</span>,money, outUser);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>(2) 修改配置文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans </span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/tx </span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/tx/spring-tx-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/context </span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/context/spring-context-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/aop </span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/aop/spring-aop-4.3.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1.配置数据源 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DriverManagerDataSource&quot;</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--数据库驱动 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--连接数据库的url --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost/temp1&quot;</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--连接数据库的用户名 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--连接数据库的密码 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 2.配置JDBC模板 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;jdbcTemplate&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.core.JdbcTemplate&quot;</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 默认必须使用数据源 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--3.定义id为accountDao的Bean --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;accountDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.itheima.jdbc.AccountDaoImpl&quot;</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 将jdbcTemplate注入到AccountDao实例中 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcTemplate&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;jdbcTemplate&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 4.事务管理器，依赖于数据源 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=</span></span><br><span class="line"><span class="tag">     <span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span>	</span><br><span class="line">    <span class="comment">&lt;!-- 5.注册事务管理器驱动 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(3) 测试</p>
<h2 id="8-MyBatis"><a href="#8-MyBatis" class="headerlink" title="8. MyBatis"></a>8. MyBatis</h2><blockquote>
<p>持久层框架</p>
</blockquote>
<ol>
<li>工作原理</li>
</ol>
<p><img src="https://xxy8.github.io/images/ssm3.png" alt="image-20210630181734459"></p>
<ul>
<li>栗子</li>
</ul>
<p>(1) 导入新包</p>
<ul>
<li>mybatis-3.4.2.jar</li>
<li>mysql-connector-java-5.1.40-bin.jar</li>
</ul>
<p>(2) 配置日志信息log4j.properties</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Global logging configuration</span></span><br><span class="line"><span class="attr">log4j.rootLogger</span>=<span class="string">ERROR, stdout</span></span><br><span class="line"><span class="comment"># MyBatis logging configuration...</span></span><br><span class="line"><span class="attr">log4j.logger.com.itheima</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="comment"># Console output...</span></span><br><span class="line"><span class="attr">log4j.appender.stdout</span>=<span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="attr">log4j.appender.stdout.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="attr">log4j.appender.stdout.layout.ConversionPattern</span>=<span class="string">%5p [%t] - %m%n</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(3) 持久类entity</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.po;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 客户持久化类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Customer</span> &#123;</span><br><span class="line">   <span class="keyword">private</span> Integer id;       <span class="comment">// 主键id</span></span><br><span class="line">   <span class="keyword">private</span> String username; <span class="comment">// 客户名称</span></span><br><span class="line">   <span class="keyword">private</span> String jobs;      <span class="comment">// 职业</span></span><br><span class="line">   <span class="keyword">private</span> String phone;     <span class="comment">// 电话</span></span><br><span class="line">   <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> id;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.id = id;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> username;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.username = username;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">getJobs</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> jobs;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setJobs</span><span class="params">(String jobs)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.jobs = jobs;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">getPhone</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> phone;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPhone</span><span class="params">(String phone)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.phone = phone;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;Customer [id=&quot;</span> + id + <span class="string">&quot;, username=&quot;</span> + username + </span><br><span class="line">                   <span class="string">&quot;, jobs=&quot;</span> + jobs + <span class="string">&quot;, phone=&quot;</span> + phone + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>(4) 映射文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">    <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- namespace表示命名空间 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.itheima.mapper.CustomerMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--根据客户编号获取客户信息 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findCustomerById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Integer&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">resultType</span>=<span class="string">&quot;com.itheima.po.Customer&quot;</span>&gt;</span></span><br><span class="line">      select * from t_customer where id = #&#123;id&#125;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">   <span class="comment">&lt;!--根据客户名模糊查询客户信息列表--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findCustomerByName&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;String&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">resultType</span>=<span class="string">&quot;com.itheima.po.Customer&quot;</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- select * from t_customer where username like &#x27;%$&#123;value&#125;%&#x27; --&gt;</span></span><br><span class="line">       select * from t_customer where username like concat(&#x27;%&#x27;,#&#123;value&#125;,&#x27;%&#x27;)</span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">   <span class="comment">&lt;!-- 添加客户信息 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addCustomer&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.itheima.po.Customer&quot;</span>&gt;</span></span><br><span class="line">       insert into t_customer(username,jobs,phone)</span><br><span class="line">       values(#&#123;username&#125;,#&#123;jobs&#125;,#&#123;phone&#125;)</span><br><span class="line">   <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">   <span class="comment">&lt;!-- 更新客户信息 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateCustomer&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.itheima.po.Customer&quot;</span>&gt;</span></span><br><span class="line">       update t_customer set</span><br><span class="line">       username=#&#123;username&#125;,jobs=#&#123;jobs&#125;,phone=#&#123;phone&#125;</span><br><span class="line">       where id=#&#123;id&#125;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">   <span class="comment">&lt;!-- 删除客户信息 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteCustomer&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Integer&quot;</span>&gt;</span></span><br><span class="line">       delete from t_customer where id=#&#123;id&#125;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>(5) MyBatis配置文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">    <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--1.配置环境 ，默认的环境id为mysql--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;mysql&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--1.2.配置id为mysql的数据库环境 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;mysql&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 使用JDBC的事务管理 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--数据库连接池 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span> /&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> </span></span><br><span class="line"><span class="tag">                            <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis&quot;</span> /&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span> /&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--2.配置Mapper的位置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/itheima/mapper/CustomerMapper.xml&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>(6) 测试</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.test;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> com.itheima.po.Customer;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 入门程序测试类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisTest</span> &#123;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 根据客户编号查询客户信息</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findCustomerByIdTest</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">      <span class="comment">// 1、读取配置文件</span></span><br><span class="line">      <span class="type">String</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">      <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> </span><br><span class="line">                     Resources.getResourceAsStream(resource);</span><br><span class="line">      <span class="comment">// 2、根据配置文件构建SqlSessionFactory</span></span><br><span class="line">      <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> </span><br><span class="line">                     <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class="line">      <span class="comment">// 3、通过SqlSessionFactory创建SqlSession</span></span><br><span class="line">      <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br><span class="line">      <span class="comment">// 4、SqlSession执行映射文件中定义的SQL，并返回映射结果</span></span><br><span class="line">      <span class="type">Customer</span> <span class="variable">customer</span> <span class="operator">=</span> sqlSession.selectOne(<span class="string">&quot;com.itheima.mapper&quot;</span></span><br><span class="line">              + <span class="string">&quot;.CustomerMapper.findCustomerById&quot;</span>, <span class="number">1</span>);</span><br><span class="line">      <span class="comment">// 打印输出结果</span></span><br><span class="line">      System.out.println(customer.toString());</span><br><span class="line">      <span class="comment">// 5、关闭SqlSession</span></span><br><span class="line">      sqlSession.close();</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 根据用户名称来模糊查询用户信息列表</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findCustomerByNameTest</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123; </span><br><span class="line">       <span class="comment">// 1、读取配置文件</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">       <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> Resources.getResourceAsStream(resource);</span><br><span class="line">       <span class="comment">// 2、根据配置文件构建SqlSessionFactory</span></span><br><span class="line">       <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> </span><br><span class="line">   <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class="line">       <span class="comment">// 3、通过SqlSessionFactory创建SqlSession</span></span><br><span class="line">       <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br><span class="line">       <span class="comment">// 4、SqlSession执行映射文件中定义的SQL，并返回映射结果</span></span><br><span class="line">       List&lt;Customer&gt; customers = sqlSession.selectList(<span class="string">&quot;com.itheima.mapper&quot;</span></span><br><span class="line">               + <span class="string">&quot;.CustomerMapper.findCustomerByName&quot;</span>, <span class="string">&quot;j&quot;</span>);</span><br><span class="line">       <span class="keyword">for</span> (Customer customer : customers) &#123;</span><br><span class="line">           <span class="comment">//打印输出结果集</span></span><br><span class="line">           System.out.println(customer);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">// 5、关闭SqlSession</span></span><br><span class="line">       sqlSession.close();</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 添加客户</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addCustomerTest</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;       </span><br><span class="line">       <span class="comment">// 1、读取配置文件</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">       <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> Resources.getResourceAsStream(resource);</span><br><span class="line">       <span class="comment">// 2、根据配置文件构建SqlSessionFactory</span></span><br><span class="line">       <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> </span><br><span class="line">             <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class="line">       <span class="comment">// 3、通过SqlSessionFactory创建SqlSession</span></span><br><span class="line">       <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br><span class="line">       <span class="comment">// 4、SqlSession执行添加操作</span></span><br><span class="line">       <span class="comment">// 4.1创建Customer对象，并向对象中添加数据</span></span><br><span class="line">       <span class="type">Customer</span> <span class="variable">customer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Customer</span>();</span><br><span class="line">       customer.setUsername(<span class="string">&quot;rose&quot;</span>);</span><br><span class="line">       customer.setJobs(<span class="string">&quot;student&quot;</span>);</span><br><span class="line">       customer.setPhone(<span class="string">&quot;13333533092&quot;</span>);</span><br><span class="line">       <span class="comment">// 4.2执行SqlSession的插入方法，返回的是SQL语句影响的行数</span></span><br><span class="line">      <span class="type">int</span> <span class="variable">rows</span> <span class="operator">=</span> sqlSession.insert(<span class="string">&quot;com.itheima.mapper&quot;</span></span><br><span class="line">               + <span class="string">&quot;.CustomerMapper.addCustomer&quot;</span>, customer);</span><br><span class="line">       <span class="comment">// 4.3通过返回结果判断插入操作是否执行成功</span></span><br><span class="line">       <span class="keyword">if</span>(rows &gt; <span class="number">0</span>)&#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;您成功插入了&quot;</span>+rows+<span class="string">&quot;条数据！&quot;</span>);</span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;执行插入操作失败！！！&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">// 4.4提交事务</span></span><br><span class="line">       sqlSession.commit();</span><br><span class="line">       <span class="comment">// 5、关闭SqlSession</span></span><br><span class="line">       sqlSession.close();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 更新客户</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateCustomerTest</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;    </span><br><span class="line">       <span class="comment">// 1、读取配置文件</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">       <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> Resources.getResourceAsStream(resource);</span><br><span class="line">       <span class="comment">// 2、根据配置文件构建SqlSessionFactory</span></span><br><span class="line">       <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> </span><br><span class="line">             <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class="line">       <span class="comment">// 3、通过SqlSessionFactory创建SqlSession</span></span><br><span class="line">       <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br><span class="line">       <span class="comment">// 4、SqlSession执行更新操作</span></span><br><span class="line">       <span class="comment">// 4.1创建Customer对象，对对象中的数据进行模拟更新</span></span><br><span class="line">       <span class="type">Customer</span> <span class="variable">customer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Customer</span>();</span><br><span class="line">       customer.setId(<span class="number">4</span>);</span><br><span class="line">       customer.setUsername(<span class="string">&quot;rose&quot;</span>);</span><br><span class="line">       customer.setJobs(<span class="string">&quot;programmer&quot;</span>);</span><br><span class="line">       customer.setPhone(<span class="string">&quot;13311111111&quot;</span>);</span><br><span class="line">       <span class="comment">// 4.2执行SqlSession的更新方法，返回的是SQL语句影响的行数</span></span><br><span class="line">       <span class="type">int</span> <span class="variable">rows</span> <span class="operator">=</span> sqlSession.update(<span class="string">&quot;com.itheima.mapper&quot;</span></span><br><span class="line">               + <span class="string">&quot;.CustomerMapper.updateCustomer&quot;</span>, customer);</span><br><span class="line">       <span class="comment">// 4.3通过返回结果判断更新操作是否执行成功</span></span><br><span class="line">       <span class="keyword">if</span>(rows &gt; <span class="number">0</span>)&#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;您成功修改了&quot;</span>+rows+<span class="string">&quot;条数据！&quot;</span>);</span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;执行修改操作失败！！！&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">// 4.4提交事务</span></span><br><span class="line">       sqlSession.commit();</span><br><span class="line">       <span class="comment">// 5、关闭SqlSession</span></span><br><span class="line">       sqlSession.close();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 删除客户</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteCustomerTest</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;    </span><br><span class="line">       <span class="comment">// 1、读取配置文件</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">       <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> Resources.getResourceAsStream(resource);</span><br><span class="line">       <span class="comment">// 2、根据配置文件构建SqlSessionFactory</span></span><br><span class="line">       <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> </span><br><span class="line">               <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class="line">       <span class="comment">// 3、通过SqlSessionFactory创建SqlSession</span></span><br><span class="line">       <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br><span class="line">       <span class="comment">// 4、SqlSession执行删除操作</span></span><br><span class="line">       <span class="comment">// 4.1执行SqlSession的删除方法，返回的是SQL语句影响的行数</span></span><br><span class="line">       <span class="type">int</span> <span class="variable">rows</span> <span class="operator">=</span> sqlSession.delete(<span class="string">&quot;com.itheima.mapper&quot;</span></span><br><span class="line">               + <span class="string">&quot;.CustomerMapper.deleteCustomer&quot;</span>, <span class="number">4</span>);</span><br><span class="line">       <span class="comment">// 4.2通过返回结果判断删除操作是否执行成功</span></span><br><span class="line">       <span class="keyword">if</span>(rows &gt; <span class="number">0</span>)&#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;您成功删除了&quot;</span>+rows+<span class="string">&quot;条数据！&quot;</span>);</span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;执行删除操作失败！！！&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">// 4.3提交事务</span></span><br><span class="line">       sqlSession.commit();</span><br><span class="line">       <span class="comment">// 5、关闭SqlSession</span></span><br><span class="line">       sqlSession.close();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>附：MySQL语句</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> `t_customer`(</span><br><span class="line">	id <span class="type">int</span> <span class="keyword">primary</span> key AUTO_INCREMENT,</span><br><span class="line">	username <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">	jobs <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">	phone <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">)AUTO_INCREMENT<span class="operator">=</span><span class="number">0001</span> <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>SqlSession</li>
</ol>
<blockquote>
<p>是MyBatis的关键对象,是执行持久化操作的独享,类似于JDBC中的Connection,线程不安全,使用完要确保finally关闭它</p>
</blockquote>
<ul>
<li>SqlSessionFactory源码</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.apache.ibatis.session;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">SqlSessionFactory</span> &#123;</span><br><span class="line"></span><br><span class="line">  SqlSession <span class="title function_">openSession</span><span class="params">()</span>;<span class="comment">//这个方法最经常用,用来创建SqlSession对象.</span></span><br><span class="line"></span><br><span class="line">  SqlSession <span class="title function_">openSession</span><span class="params">(<span class="type">boolean</span> autoCommit)</span>;</span><br><span class="line">  SqlSession <span class="title function_">openSession</span><span class="params">(Connection connection)</span>;</span><br><span class="line">  SqlSession <span class="title function_">openSession</span><span class="params">(TransactionIsolationLevel level)</span>;</span><br><span class="line"></span><br><span class="line">  SqlSession <span class="title function_">openSession</span><span class="params">(ExecutorType execType)</span>;</span><br><span class="line">  SqlSession <span class="title function_">openSession</span><span class="params">(ExecutorType execType, <span class="type">boolean</span> autoCommit)</span>;</span><br><span class="line">  SqlSession <span class="title function_">openSession</span><span class="params">(ExecutorType execType, TransactionIsolationLevel level)</span>;</span><br><span class="line">  SqlSession <span class="title function_">openSession</span><span class="params">(ExecutorType execType, Connection connection)</span>;</span><br><span class="line"></span><br><span class="line">  Configuration <span class="title function_">getConfiguration</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>MyBatis配置文件</li>
</ol>
<ul>
<li>栗子</li>
</ul>
<p>(1) log4j.properties【用于控制台输出】</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Global logging configuration</span></span><br><span class="line"><span class="attr">log4j.rootLogger</span>=<span class="string">DEBUG, stdout</span></span><br><span class="line"><span class="comment"># Console output...</span></span><br><span class="line"><span class="attr">log4j.appender.stdout</span>=<span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="attr">log4j.appender.stdout.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="attr">log4j.appender.stdout.layout.ConversionPattern</span>=<span class="string">%5p [%t] - %m%n</span></span><br></pre></td></tr></table></figure>

<p>(2) db.properties文件</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">jdbc.driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">jdbc.url</span>=<span class="string">jdbc:mysql://localhost:3306/temp1</span></span><br><span class="line"><span class="attr">jdbc.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">jdbc.password</span>=<span class="string">root</span></span><br></pre></td></tr></table></figure>

<p>(3) MyBatis配置文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">  <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">  <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;db.properties&quot;</span> /&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 定义别名 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- &lt;typeAlias alias=&quot;user&quot; type=&quot;com.itheima.po.User&quot; /&gt; --&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--只适合没有entity包注解--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.itheima.po&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">&lt;!-- 配置自定义工厂 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">objectFactory</span> <span class="attr">type</span>=<span class="string">&quot;com.itheima.factory.MyObjectFactory&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;MyObjectFactory&quot;</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">objectFactory</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--常见配置--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--	&lt;settings&gt;</span></span><br><span class="line"><span class="comment">		&lt;setting name=&quot;cacheEnabled&quot; value=&quot;true&quot; /&gt;</span></span><br><span class="line"><span class="comment">		&lt;setting name=&quot;lazyLoadingEnabled&quot; value=&quot;true&quot; /&gt;</span></span><br><span class="line"><span class="comment">		&lt;setting name=&quot;aggressiveLazyloading&quot; value=&quot;true&quot; /&gt;</span></span><br><span class="line"><span class="comment">		&lt;setting name=&quot;multipleResultSetsEnabled&quot; value=&quot;true&quot; /&gt;</span></span><br><span class="line"><span class="comment">		&lt;setting name=&quot;useColumnLabel&quot; value=&quot;true&quot; /&gt;</span></span><br><span class="line"><span class="comment">		&lt;setting name=&quot;useGeneratedKeys&quot; value=&quot;false&quot; /&gt;</span></span><br><span class="line"><span class="comment">		&lt;setting name=&quot;autoMappingBehavior&quot; value=&quot;PARTIAL&quot; /&gt;</span></span><br><span class="line"><span class="comment">		&lt;setting name=&quot;defa&quot; value=&quot;PARTIAL&quot; /&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">		&lt;setting name=&quot;autoMappingUnknownColumnBehavior&quot; value=&quot;WARNING&quot;/&gt;</span></span><br><span class="line"><span class="comment">		&lt;setting name=&quot;defaultExecutorType&quot; value=&quot;SIMPLE&quot;/&gt;</span></span><br><span class="line"><span class="comment">		&lt;setting name=&quot;defaultStatementTimeout&quot; value=&quot;30&quot;/&gt;</span></span><br><span class="line"><span class="comment">		&lt;setting name=&quot;defaultFetchSize&quot; value=&quot;200&quot;/&gt;</span></span><br><span class="line"><span class="comment">		&lt;setting name=&quot;safeRowBoundsEnabled&quot; value=&quot;false&quot;/&gt;</span></span><br><span class="line"><span class="comment">		&lt;setting name=&quot;mapUnderscoreToCamelCase&quot; value=&quot;false&quot;/&gt;</span></span><br><span class="line"><span class="comment">		&lt;setting name=&quot;localCacheScope&quot; value=&quot;SESSION&quot;/&gt;</span></span><br><span class="line"><span class="comment">		&lt;setting name=&quot;jdbcTypeForNull&quot; value=&quot;OTHER&quot;/&gt;</span></span><br><span class="line"><span class="comment">		&lt;setting name=&quot;lazyLoadTriggerMethods&quot; value=&quot;equals,clone,hashCode,toString&quot;/&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">	&lt;/settings&gt;--&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">&lt;!--注册一个类型处理器--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--	&lt;typeHandlers&gt;</span></span><br><span class="line"><span class="comment">		&lt;typeHandler handler=&quot;com.itheima.po.Customer&quot; /&gt;</span></span><br><span class="line"><span class="comment">	&lt;/typeHandlers&gt;--&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--注册一个包中所有的类型处理器--&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--&lt;typeHandlers&gt;</span></span><br><span class="line"><span class="comment">		&lt;typeHandler handler=&quot;com.itheima.po&quot; /&gt;</span></span><br><span class="line"><span class="comment">	&lt;/typeHandlers&gt;--&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--1.配置环境 ，默认的环境id为mysql --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;mysql&quot;</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--1.2.配置id为mysql的数据库环境 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;mysql&quot;</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 使用JDBC的事务管理 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span> /&gt;</span></span><br><span class="line">			<span class="comment">&lt;!--数据库连接池 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 数据库驱动 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span> /&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 连接数据库的url --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span> /&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 连接数据库的用户名 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span> /&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 连接数据库的密码 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!--2.配置Mapper的位置 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--使用类路径引入--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/itheima/mapper/CustomerMapper.xml&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/itheima/mapper/UserMapper.xml&quot;</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--使用本地路径引入--&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--&lt;mapper url=&quot;file:\\\C:\Users\xxy\Desktop\SSM\源代码\ssmcode\chapter07\src\com\itheima\mapper\CustomerMapper.xml&quot;--&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--使用接口类引入--&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--&lt;mapper class=&quot;com.itheima.mapper.CustomerMapper.xml&quot; /&gt;--&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--使用包名引入--&gt;</span></span><br><span class="line">		&lt;<span class="comment">&lt;!--package name=&quot;com.itheima.mapper&quot; /&gt;--&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(4) 映射文件+动态SQL</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;mapper.StudentMapper&quot;</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--   &lt;resultMap id=&quot;resultMap&quot; type=&quot;student&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;id property=&quot;stu_id&quot; column=&quot;stu_id&quot; /&gt;</span></span><br><span class="line"><span class="comment">        &lt;result property=&quot;classid&quot; column=&quot;class_id&quot; /&gt;</span></span><br><span class="line"><span class="comment">        &lt;result property=&quot;stu_name&quot; column=&quot;stu_name&quot; /&gt;</span></span><br><span class="line"><span class="comment">        &lt;result property=&quot;st_sex&quot; column=&quot;stu_sex&quot; /&gt;</span></span><br><span class="line"><span class="comment">        &lt;result property=&quot;stu_telphone&quot; column=&quot;stu_telphone&quot; /&gt;</span></span><br><span class="line"><span class="comment">    &lt;/resultMap&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findStudentByNameAndPhoneUseWhere&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">parameterType</span>=<span class="string">&quot;student&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">resultType</span>=<span class="string">&quot;student&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">flushCache</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">useCache</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">timeout</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bind</span> <span class="attr">name</span>=<span class="string">&quot;pattern_stu_name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&#x27;%&#x27;+_parameter.getStu_name()+&#x27;%&#x27;&quot;</span> /&gt;</span></span><br><span class="line">            select * from t_student</span><br><span class="line">            <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;stu_name != null and stu_name != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                    and stu_name like concat(&#x27;%&#x27;,#&#123;stu_name&#125;,&#x27;%&#x27;)</span><br><span class="line">                <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;stu_telphone != null and stu_telphone != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                    and stu_telphone = #&#123;stu_telphone&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findStudentByNameAndPhoneUseTrim&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">parameterType</span>=<span class="string">&quot;student&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">resultType</span>=<span class="string">&quot;student&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">flushCache</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">useCache</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">timeout</span>=<span class="string">&quot;10&quot;</span>&gt;</span></span><br><span class="line">            select * from t_student</span><br><span class="line">            <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;where&quot;</span> <span class="attr">prefixOverrides</span>=<span class="string">&quot;and&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;stu_name !=null and stu_name !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                    and stu_name like concat(&#x27;%&#x27;,#&#123;stu_name&#125;,&#x27;%&#x27;)</span><br><span class="line">                <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;stu_telphone !=null and stu_telphone !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                    and stu_telphone = #&#123;stu_telphone&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findStudentByNameAndClass&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">parameterType</span>=<span class="string">&quot;student&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">resultType</span>=<span class="string">&quot;student&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">flushCache</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">useCache</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">timeout</span>=<span class="string">&quot;10&quot;</span>&gt;</span></span><br><span class="line">            select * from t_student where 1=1</span><br><span class="line">            <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;stu_name !=null and stu_name !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                    and stu_name like concat(&#x27;%&#x27;,#&#123;stu_name&#125;,&#x27;%&#x27;)</span><br><span class="line">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;class_id !=null and class_id !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                    and class_id = #&#123;class_id&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">                    and stu_telphone is not null</span><br><span class="line">                <span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findStudentByManyClasses&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">parameterType</span>=<span class="string">&quot;java.util.ArrayList&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">resultType</span>=<span class="string">&quot;student&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">flushCache</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">useCache</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">timeout</span>=<span class="string">&quot;10&quot;</span>&gt;</span></span><br><span class="line">            select * from t_student where class_id in</span><br><span class="line">            <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;array&quot;</span> <span class="attr">item</span>=<span class="string">&quot;id&quot;</span> <span class="attr">index</span>=<span class="string">&quot;index&quot;</span> <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span>&gt;</span></span><br><span class="line">                #&#123;id&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">insert</span>  <span class="attr">id</span>=<span class="string">&quot;addStudent&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">parameterType</span>=<span class="string">&quot;student&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">flushCache</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">statementType</span>=<span class="string">&quot;PREPARED&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">keyProperty</span>=<span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">keyColumn</span>=<span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">useGeneratedKeys</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">timeout</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line">            insert into t_student values (#&#123;stu_id&#125;,#&#123;class_id&#125;,#&#123;stu_name&#125;,#&#123;stu_sex&#125;,#&#123;stu_telphone&#125;)</span><br><span class="line">        <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">update</span>  <span class="attr">id</span>=<span class="string">&quot;updateStudentByValue&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">parameterType</span>=<span class="string">&quot;student&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">flushCache</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">statementType</span>=<span class="string">&quot;PREPARED&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">timeout</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line">            update t_student</span><br><span class="line">            <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;stu_name != null and stu_name != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                    stu_name = #&#123;stu_name&#125;,</span><br><span class="line">                <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;class_id != null and class_id != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                    class_id = #&#123;class_id&#125;,</span><br><span class="line">                <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;stu_telphone != null and stu_telphone != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                    stu_telphone = #&#123;stu_telphone&#125;,</span><br><span class="line">                <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">            where stu_id = #&#123;stu_id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">delete</span>  <span class="attr">id</span>=<span class="string">&quot;deleteStudentByName&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">parameterType</span>=<span class="string">&quot;student&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">flushCache</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">statementType</span>=<span class="string">&quot;PREPARED&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">timeout</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bind</span> <span class="attr">name</span>=<span class="string">&quot;pattern_stu_name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&#x27;%&#x27;+_parameter.getStu_name()+&#x27;%&#x27;&quot;</span> /&gt;</span></span><br><span class="line">            delete from t_student</span><br><span class="line">            where</span><br><span class="line">            stu_name like #&#123;pattern_stu_name&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(5) MyBatis工具类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> edu.hhtc.jsj.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Reader;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisUtils</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">// 初始化SqlSessionFactory对象</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 使用MyBatis提供的Resources类加载MyBatis的配置文件</span></span><br><span class="line">            <span class="type">Reader</span> <span class="variable">reader</span> <span class="operator">=</span></span><br><span class="line">                    Resources.getResourceAsReader(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">            <span class="comment">// 构建SqlSessionFactory工厂</span></span><br><span class="line">            sqlSessionFactory =</span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(reader);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 获取SqlSession对象的静态方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title function_">getSession</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactory.openSession();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(6) 测试</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> edu.hhtc.jsj.dao.StudentDao;</span><br><span class="line"><span class="keyword">import</span> edu.hhtc.jsj.dao.StudentDaoImpl;</span><br><span class="line"><span class="keyword">import</span> edu.hhtc.jsj.entity.Student;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findStudentByNameAndPhoneUseWhereTest</span><span class="params">()</span> <span class="keyword">throws</span> SQLException&#123;</span><br><span class="line">        <span class="comment">// 1、创建方法调用需要的参数，设置Student的成员值</span></span><br><span class="line">        Student stu=<span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="comment">//2、创建Dao实例</span></span><br><span class="line">        StudentDao studao=<span class="keyword">new</span> <span class="title class_">StudentDaoImpl</span>();</span><br><span class="line">        <span class="comment">//3、调用studao实例的方法进行测试</span></span><br><span class="line">        <span class="comment">//studao.xxxxx(stu);</span></span><br><span class="line">        stu.setStu_name(<span class="string">&quot;向&quot;</span>);</span><br><span class="line">        stu.setStu_telphone(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        List&lt;Student&gt; students = studao.findStudentByNameAndPhoneUseWhere(stu);</span><br><span class="line">        <span class="keyword">for</span>(Student student : students)&#123;</span><br><span class="line">            System.out.println(student.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findStudentByNameAndPhoneUseTrimTest</span><span class="params">()</span> <span class="keyword">throws</span> SQLException&#123;</span><br><span class="line">        <span class="comment">// 1、创建方法调用需要的参数，设置Student的成员值</span></span><br><span class="line">        Student stu=<span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="comment">//2、创建Dao实例</span></span><br><span class="line">        StudentDao studao=<span class="keyword">new</span> <span class="title class_">StudentDaoImpl</span>();</span><br><span class="line">        <span class="comment">//3、调用studao实例的方法进行测试</span></span><br><span class="line">        <span class="comment">//studao.xxxxx(stu);</span></span><br><span class="line">        stu.setStu_name(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        stu.setStu_telphone(<span class="string">&quot;1234575&quot;</span>);</span><br><span class="line">        List&lt;Student&gt; students = studao.findStudentByNameAndPhoneUseTrim(stu);</span><br><span class="line">        <span class="keyword">for</span>(Student student : students)&#123;</span><br><span class="line">            System.out.println(student.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findStudentByNameAndClassTest</span><span class="params">()</span> <span class="keyword">throws</span> SQLException&#123;</span><br><span class="line">        <span class="comment">// 1、创建方法调用需要的参数，设置Student的成员值</span></span><br><span class="line">        Student stu=<span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="comment">//2、创建Dao实例</span></span><br><span class="line">        StudentDao studao=<span class="keyword">new</span> <span class="title class_">StudentDaoImpl</span>();</span><br><span class="line">        <span class="comment">//3、调用studao实例的方法进行测试</span></span><br><span class="line">        <span class="comment">//studao.xxxxx(stu);</span></span><br><span class="line">        stu.setStu_name(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        stu.setClass_id(<span class="string">&quot;1506401&quot;</span>);</span><br><span class="line">        List&lt;Student&gt; students = studao.findStudentByNameAndClass(stu);</span><br><span class="line">        <span class="keyword">for</span>(Student student : students)&#123;</span><br><span class="line">            System.out.println(student.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateStudentByValueTest</span><span class="params">()</span> <span class="keyword">throws</span> SQLException&#123;</span><br><span class="line">        <span class="comment">// 1、创建方法调用需要的参数，设置Student的成员值</span></span><br><span class="line">        Student stu=<span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="comment">//2、创建Dao实例</span></span><br><span class="line">        StudentDao studao=<span class="keyword">new</span> <span class="title class_">StudentDaoImpl</span>();</span><br><span class="line">        <span class="comment">//3、调用studao实例的方法进行测试</span></span><br><span class="line">        <span class="comment">//studao.xxxxx(stu);</span></span><br><span class="line">        stu.setStu_id(<span class="string">&quot;1006401023&quot;</span>);</span><br><span class="line">        stu.setStu_name(<span class="string">&quot;向小波&quot;</span>);</span><br><span class="line">        stu.setStu_telphone(<span class="string">&quot;1234574&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> studao.updateStudentByValue(stu);</span><br><span class="line">        <span class="keyword">if</span>(n &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;成功修改了&quot;</span>+n+<span class="string">&quot;条数据!&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;修改失败!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findStudentByManyClassesTest</span><span class="params">()</span> <span class="keyword">throws</span> SQLException&#123;</span><br><span class="line">        <span class="comment">//2、创建Dao实例</span></span><br><span class="line">        StudentDao studao=<span class="keyword">new</span> <span class="title class_">StudentDaoImpl</span>();</span><br><span class="line">        <span class="comment">//3、调用studao实例的方法进行测试</span></span><br><span class="line">        <span class="comment">//studao.xxxxx(stu);</span></span><br><span class="line">        String[] classes = &#123;<span class="string">&quot;1506401&quot;</span>,<span class="string">&quot;1706401&quot;</span>&#125;;</span><br><span class="line">        List&lt;Student&gt; students = studao.findStudentByManyClasses(classes);</span><br><span class="line">        <span class="keyword">for</span>(Student student : students)&#123;</span><br><span class="line">            System.out.println(student.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteStudentByNameTest</span><span class="params">()</span> <span class="keyword">throws</span> SQLException&#123;</span><br><span class="line">        <span class="comment">// 1、创建方法调用需要的参数，设置Student的成员值</span></span><br><span class="line">        Student stu=<span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="comment">//2、创建Dao实例</span></span><br><span class="line">        StudentDao studao=<span class="keyword">new</span> <span class="title class_">StudentDaoImpl</span>();</span><br><span class="line">        <span class="comment">//3、调用studao实例的方法进行测试</span></span><br><span class="line">        <span class="comment">//studao.xxxxx(stu);</span></span><br><span class="line">        stu.setStu_name(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> studao.deleteStudentByName(stu);</span><br><span class="line">        <span class="keyword">if</span>(n &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;成功删除了&quot;</span>+n+<span class="string">&quot;条数据!&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;删除失败!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>关联映射</li>
</ol>
<blockquote>
<p>操作多张联合表</p>
</blockquote>
<ul>
<li>栗子</li>
</ul>
<p>(1) 导入jar包maven</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>chapter_8<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>SSM_Test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>SSM_Test Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.ant<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ant<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.ant<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ant-launcher<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>asm<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>asm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cglib<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cglib<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.javassist<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javassist<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.22.0-CR2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.45<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ognl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ognl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>SSM_Test<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span><span class="comment">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-clean-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.22.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-install-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-deploy-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(2) 一对一映射文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">    <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.itheima.mapper.PersonMapper&quot;</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 嵌套查询：通过执行另外一条SQL映射语句来返回预期的特殊类型 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findPersonById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Integer&quot;</span> </span></span><br><span class="line"><span class="tag">                                      <span class="attr">resultMap</span>=<span class="string">&quot;IdCardWithPersonResult&quot;</span>&gt;</span></span><br><span class="line">		SELECT * from tb_person where id=#&#123;id&#125;</span><br><span class="line">	<span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">type</span>=<span class="string">&quot;Person&quot;</span> <span class="attr">id</span>=<span class="string">&quot;IdCardWithPersonResult&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;age&quot;</span> <span class="attr">column</span>=<span class="string">&quot;age&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sex&quot;</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 一对一：association使用select属性引入另外一条SQL语句 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;card&quot;</span> <span class="attr">column</span>=<span class="string">&quot;card_id&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;IdCard&quot;</span></span></span><br><span class="line"><span class="tag">			<span class="attr">select</span>=<span class="string">&quot;com.itheima.mapper.IdCardMapper.findCodeById&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">&lt;!-- 嵌套结果：使用嵌套结果映射来处理重复的联合结果的子集 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findPersonById2&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Integer&quot;</span> </span></span><br><span class="line"><span class="tag">	                                   <span class="attr">resultMap</span>=<span class="string">&quot;IdCardWithPersonResult2&quot;</span>&gt;</span></span><br><span class="line">	    SELECT p.*,idcard.code</span><br><span class="line">	    from tb_person p,tb_idcard idcard</span><br><span class="line">	    where p.card_id=idcard.id </span><br><span class="line">	    and p.id= #&#123;id&#125;</span><br><span class="line">	<span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">type</span>=<span class="string">&quot;Person&quot;</span> <span class="attr">id</span>=<span class="string">&quot;IdCardWithPersonResult2&quot;</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> /&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> /&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;age&quot;</span> <span class="attr">column</span>=<span class="string">&quot;age&quot;</span> /&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sex&quot;</span> /&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;card&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;IdCard&quot;</span>&gt;</span></span><br><span class="line">	        <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;card_id&quot;</span> /&gt;</span></span><br><span class="line">	        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;code&quot;</span> <span class="attr">column</span>=<span class="string">&quot;code&quot;</span> /&gt;</span></span><br><span class="line">	    <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">	</span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">    <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.itheima.mapper.IdCardMapper&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 根据id查询证件信息 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findCodeById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Integer&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;IdCard&quot;</span>&gt;</span></span><br><span class="line">	  SELECT * from tb_idcard where id=#&#123;id&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(3) 一对多关系映射</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">    <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- namespace表示命名空间 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.itheima.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 一对多：查看某一用户及其关联的订单信息 </span></span><br><span class="line"><span class="comment">	      注意：当关联查询出的列名相同，则需要使用别名区分 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findUserWithOrders&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Integer&quot;</span> </span></span><br><span class="line"><span class="tag">						   <span class="attr">resultMap</span>=<span class="string">&quot;UserWithOrdersResult&quot;</span>&gt;</span></span><br><span class="line">		SELECT u.*,o.id as orders_id,o.number </span><br><span class="line">		from tb_user u,tb_orders o </span><br><span class="line">		WHERE u.id=o.user_id </span><br><span class="line">         and u.id=#&#123;id&#125;</span><br><span class="line">	<span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">type</span>=<span class="string">&quot;User&quot;</span> <span class="attr">id</span>=<span class="string">&quot;UserWithOrdersResult&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span> <span class="attr">column</span>=<span class="string">&quot;username&quot;</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;address&quot;</span> <span class="attr">column</span>=<span class="string">&quot;address&quot;</span>/&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 一对多关联映射：collection </span></span><br><span class="line"><span class="comment">			ofType表示属性集合中元素的类型，List&lt;Orders&gt;属性即Orders类 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;ordersList&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;Orders&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;orders_id&quot;</span>/&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;number&quot;</span> <span class="attr">column</span>=<span class="string">&quot;number&quot;</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(4) 多对多关系映射</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> </span></span><br><span class="line"><span class="meta">     <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.itheima.mapper.OrdersMapper&quot;</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 多对多嵌套查询：通过执行另外一条SQL映射语句来返回预期的特殊类型 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findOrdersWithPorduct&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Integer&quot;</span> </span></span><br><span class="line"><span class="tag">              <span class="attr">resultMap</span>=<span class="string">&quot;OrdersWithProductResult&quot;</span>&gt;</span></span><br><span class="line">		select * from tb_orders WHERE id=#&#123;id&#125;	</span><br><span class="line">	<span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">type</span>=<span class="string">&quot;Orders&quot;</span> <span class="attr">id</span>=<span class="string">&quot;OrdersWithProductResult&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;number&quot;</span> <span class="attr">column</span>=<span class="string">&quot;number&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;productList&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;Product&quot;</span> </span></span><br><span class="line"><span class="tag">		     <span class="attr">select</span>=<span class="string">&quot;com.itheima.mapper.ProductMapper.findProductById&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">&lt;!-- 多对多嵌套结果查询：查询某订单及其关联的商品详情 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findOrdersWithPorduct2&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Integer&quot;</span> </span></span><br><span class="line"><span class="tag">	         <span class="attr">resultMap</span>=<span class="string">&quot;OrdersWithPorductResult2&quot;</span>&gt;</span></span><br><span class="line">	    select o.*,p.id as pid,p.name,p.price</span><br><span class="line">	    from tb_orders o,tb_product p,tb_ordersitem  oi</span><br><span class="line">	    WHERE oi.orders_id=o.id </span><br><span class="line">	    and oi.product_id=p.id </span><br><span class="line">	    and o.id=#&#123;id&#125;</span><br><span class="line">	<span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 自定义手动映射类型 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">type</span>=<span class="string">&quot;Orders&quot;</span> <span class="attr">id</span>=<span class="string">&quot;OrdersWithPorductResult2&quot;</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> /&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;number&quot;</span> <span class="attr">column</span>=<span class="string">&quot;number&quot;</span> /&gt;</span></span><br><span class="line">	    <span class="comment">&lt;!-- 多对多关联映射：collection --&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;productList&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;Product&quot;</span>&gt;</span></span><br><span class="line">	        <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;pid&quot;</span> /&gt;</span></span><br><span class="line">	        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> /&gt;</span></span><br><span class="line">	        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;price&quot;</span> <span class="attr">column</span>=<span class="string">&quot;price&quot;</span> /&gt;</span></span><br><span class="line">	    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">	</span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(5) 测试</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> edu.hhtc.jsj.pojo.Cource;</span><br><span class="line"><span class="keyword">import</span> edu.hhtc.jsj.pojo.Student;</span><br><span class="line"><span class="keyword">import</span> edu.hhtc.jsj.pojo.Teacher;</span><br><span class="line"><span class="keyword">import</span> edu.hhtc.jsj.utils.MybatisUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisAssociatedTest</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 一对一关联</span></span><br><span class="line"><span class="comment">     * 功能：通过提供一个学生的学号，查找该学生，输出学生的相关信息和关联对象的相关信息，如学生证信息和学生所在班信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findStudentByIdTest</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 1、通过工具类生成SqlSession对象</span></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">        <span class="comment">// 2.使用MyBatis嵌套查询的方式查询id为1的人的信息</span></span><br><span class="line">        String id=<span class="string">&quot;180306702&quot;</span>;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> session.selectOne(<span class="string">&quot;mapper.StudentMapper.findStudentById&quot;</span>,id );</span><br><span class="line">        <span class="comment">// 3、输出查询结果信息</span></span><br><span class="line">        System.out.println(<span class="string">&quot;学号：&quot;</span>+student.getId()+<span class="string">&quot;姓名：&quot;</span>+student.getName());</span><br><span class="line"><span class="comment">//        System.out.println(student.getCard());</span></span><br><span class="line"><span class="comment">//        System.out.println(student.getClasses());</span></span><br><span class="line">        System.out.println(<span class="string">&quot;学生证编号：&quot;</span>+student.getCard().getCar_id()+<span class="string">&quot;发放单位：&quot;</span>+student.getCard().getPublisher());</span><br><span class="line">        System.out.println(<span class="string">&quot;班级：&quot;</span>+student.getClasses().getName());</span><br><span class="line">        <span class="comment">// 4、关闭SqlSession</span></span><br><span class="line">        session.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 一对多关联</span></span><br><span class="line"><span class="comment">     * 功能：通过提供一个学生的学号，查找该学生，再通过该学生的所在班级成员得到班级，输出该班全体学生信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findStudentesByStuIdTest</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 1、通过工具类生成SqlSession对象</span></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">        <span class="comment">// 2.使用MyBatis嵌套查询的方式查询id为1的人的信息</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> session.selectOne(<span class="string">&quot;mapper.StudentMapper.findStudentById&quot;</span>, <span class="string">&quot;180306703&quot;</span>);</span><br><span class="line">        <span class="comment">// 3、输出查询结果信息</span></span><br><span class="line">        System.out.println(<span class="string">&quot;班级编号：&quot;</span>+student.getClasses().getC_id()+<span class="string">&quot; 班级名称：&quot;</span>+student.getClasses().getName());</span><br><span class="line">        List&lt;Student&gt; stulist=student.getClasses().getStudentlist();</span><br><span class="line">        <span class="keyword">for</span>(Student stu:stulist) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;学号：&quot;</span>+stu.getId()+<span class="string">&quot;姓名：&quot;</span>+stu.getName());</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 4、关闭SqlSession</span></span><br><span class="line">        session.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 多对多嵌套查询</span></span><br><span class="line"><span class="comment">     * 功能：通过提供一课程的编号，查找该课程，输出该课程的授课教师信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findTeacherOfCourceByCourceIdTest</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 1、通过工具类生成SqlSession对象</span></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">        <span class="comment">// 2.使用MyBatis嵌套查询的方式查询id为1的人的信息</span></span><br><span class="line">        <span class="type">Cource</span> <span class="variable">cource</span> <span class="operator">=</span> session.selectOne(<span class="string">&quot;mapper.CourceMapper.findCourceWithTeacherById&quot;</span>, <span class="string">&quot;11112&quot;</span>);</span><br><span class="line">        <span class="comment">// 3、输出查询结果信息</span></span><br><span class="line">        System.out.println(cource);</span><br><span class="line">        System.out.println(<span class="string">&quot;课程编号：&quot;</span>+cource.getCource_id()+<span class="string">&quot; 姓名：&quot;</span>+cource.getName()+<span class="string">&quot; 课程学分：&quot;</span>+cource.getCredit());</span><br><span class="line">        List&lt;Teacher&gt; tlist=cource.getTeacherlist();</span><br><span class="line">        <span class="keyword">for</span>(Teacher t:tlist) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;教师工号：&quot;</span>+t.getTeacher_id()+<span class="string">&quot; 姓名：&quot;</span>+t.getName()+<span class="string">&quot; 职称：&quot;</span>+t.getRanks());</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 4、关闭SqlSession</span></span><br><span class="line">        session.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 多对多嵌套结果查询</span></span><br><span class="line"><span class="comment">     * 功能：通过提供一教师的编号，查找该教师所承担的课程</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findCourceOfTeacherByTeacherIdTest</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 1、通过工具类生成SqlSession对象</span></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtils.getSession();</span><br><span class="line">        <span class="comment">// 2.使用MyBatis嵌套查询的方式查询id为1的人的信息</span></span><br><span class="line">        <span class="type">Teacher</span> <span class="variable">teacher</span> <span class="operator">=</span> session.selectOne(<span class="string">&quot;mapper.TeacherMapper.findTeacherWithCourceByteacherId&quot;</span>, <span class="string">&quot;06003&quot;</span>);</span><br><span class="line">        <span class="comment">// 3、输出查询结果信息</span></span><br><span class="line">        System.out.println(<span class="string">&quot;教师工号：&quot;</span>+teacher.getTeacher_id()+<span class="string">&quot; 姓名：&quot;</span>+teacher.getName()+<span class="string">&quot; 职称：&quot;</span>+teacher.getRanks());</span><br><span class="line">        List&lt;Cource&gt; clist=teacher.getCourcelist();</span><br><span class="line">        <span class="keyword">for</span>(Cource c:clist) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;课程编号：&quot;</span>+c.getCource_id()+<span class="string">&quot; 课程名称：&quot;</span>+c.getName()+<span class="string">&quot; 课程学分：&quot;</span>+c.getCredit());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 4、关闭SqlSession</span></span><br><span class="line">        session.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol>
<li><p>Spring与MyBatis整合</p>
</li>
<li><p>maven导包</p>
</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 核心 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- AOP --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjrt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.48<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- mybatis --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-dbcp2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>(2) log4j.properties控制台输出</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># Global logging configuration</span><br><span class="line">log4j.rootLogger=ERROR, stdout</span><br><span class="line"># MyBatis logging configuration...</span><br><span class="line">log4j.logger.com.itheima=DEBUG</span><br><span class="line"># Console output...</span><br><span class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n</span><br></pre></td></tr></table></figure>

<p>（3）db.properties文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">jdbc.driver=com.mysql.jdbc.Driver</span><br><span class="line">jdbc.url=jdbc:mysql://localhost:3306/mybatis</span><br><span class="line">jdbc.username=root</span><br><span class="line">jdbc.password=root</span><br><span class="line">jdbc.maxTotal=30</span><br><span class="line">jdbc.maxIdle=10</span><br><span class="line">jdbc.initialSize=5</span><br></pre></td></tr></table></figure>

<p>(4) applicationContext.xml </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans </span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/tx </span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/tx/spring-tx-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/context </span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/context/spring-context-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/aop </span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/aop/spring-aop-4.3.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--读取db.properties --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:db.properties&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置数据源 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">&quot;org.apache.commons.dbcp2.BasicDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--数据库驱动 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--连接数据库的url --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--连接数据库的用户名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--连接数据库的密码 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--最大连接数 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxTotal&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.maxTotal&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--最大空闲连接  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxIdle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.maxIdle&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--初始化连接数  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.initialSize&#125;&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 事务管理器，依赖于数据源 --&gt;</span> </span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=</span></span><br><span class="line"><span class="tag">     <span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span>	</span><br><span class="line">    <span class="comment">&lt;!--开启事务注解 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置MyBatis工厂 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--注入数据源 --&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--指定核心配置文件位置 --&gt;</span></span><br><span class="line">   		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis-config.xml&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">   <span class="comment">&lt;!--实例化Dao --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;customerDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.itheima.dao.impl.CustomerDaoImpl&quot;</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 注入SqlSessionFactory对象实例--&gt;</span></span><br><span class="line">	     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- Mapper代理开发（基于MapperFactoryBean） --&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- &lt;bean id=&quot;customerMapper&quot; class=&quot;org.mybatis.spring.mapper.MapperFactoryBean&quot;&gt;</span></span><br><span class="line"><span class="comment">	    &lt;property name=&quot;mapperInterface&quot; value=&quot;com.itheima.mapper.CustomerMapper&quot; /&gt;</span></span><br><span class="line"><span class="comment">	    &lt;property name=&quot;sqlSessionFactory&quot; ref=&quot;sqlSessionFactory&quot; /&gt;  </span></span><br><span class="line"><span class="comment">	&lt;/bean&gt; --&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- Mapper代理开发（基于MapperScannerConfigurer） --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">	     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.itheima.mapper&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">&lt;!-- 开启扫描 --&gt;</span> </span><br><span class="line">	<span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.itheima.service&quot;</span> /&gt;</span></span><br><span class="line">	</span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(5) mybatis-config.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">    <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置别名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.itheima.po&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置Mapper的位置 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mappers</span>&gt;</span> </span><br><span class="line">       <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/itheima/po/CustomerMapper.xml&quot;</span> /&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- Mapper接口开发方式 --&gt;</span></span><br><span class="line">	   <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/itheima/mapper/CustomerMapper.xml&quot;</span> /&gt;</span></span><br><span class="line">       </span><br><span class="line">	<span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(6) 持久层</p>
<p>(7) DAO层接口和映射文件</p>
<p>(8) DAO实现类</p>
<p>(9) Service层和实现层</p>
<p>(10) 测试</p>
<h2 id="9-Sprinng-MVC"><a href="#9-Sprinng-MVC" class="headerlink" title="9. Sprinng MVC"></a>9. Sprinng MVC</h2><blockquote>
<p>轻量级web框架</p>
</blockquote>
<ol>
<li>栗子</li>
</ol>
<p>（1）maven导入新包</p>
<ul>
<li>spring-web-4.3.6.RELEASE.jar</li>
<li>spring-webmvc-4.3.6.RELEASE.jar</li>
</ul>
<p>（2）配置文件web.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置前端过滤器 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">            org.springframework.web.servlet.DispatcherServlet</span><br><span class="line">        <span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 初始化时加载配置文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc-config.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 表示容器在启动时立即加载Servlet --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>(3) entity</p>
<p>(4) DAO和映射文件</p>
<p>(5) Service和实现类</p>
<p>(6) 创建Controller类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> edu.hhtc.jsj.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> edu.hhtc.jsj.convert.DateFormatter;</span><br><span class="line"><span class="keyword">import</span> edu.hhtc.jsj.pojo.CourceTable;</span><br><span class="line"><span class="keyword">import</span> edu.hhtc.jsj.pojo.CourceTableVO;</span><br><span class="line"><span class="keyword">import</span> edu.hhtc.jsj.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Locale;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller(&quot;/mycontroller&quot;)</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/mycontroller&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyController</span> &#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/index&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">fistRequest</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">secondRequest</span><span class="params">(User user)</span> &#123;</span><br><span class="line">        <span class="comment">// 输出user的成员值</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> user.getId();</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> user.getUsername();</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> user.getPassword();</span><br><span class="line">        System.out.println(<span class="string">&quot;id=&quot;</span> + id);</span><br><span class="line">        System.out.println(<span class="string">&quot;username=&quot;</span> + username);</span><br><span class="line">        System.out.println(<span class="string">&quot;password=&quot;</span> + password);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;interest&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/registerInterest&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">registerInterest</span><span class="params">(String[] interests)</span> &#123;</span><br><span class="line">        <span class="comment">// 输出user的成员值</span></span><br><span class="line">        <span class="keyword">if</span>(interests != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span> (String interest : interests)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;项目兴趣选择了&quot;</span> + interest);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;兴趣为空！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;date&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/registerdatetime&quot;)</span></span><br><span class="line">            <span class="keyword">public</span> String <span class="title function_">registerDateTime</span><span class="params">(Date date)</span>&#123;</span><br><span class="line">            <span class="comment">// 输出date的值</span></span><br><span class="line"></span><br><span class="line">             System.out.println(<span class="string">&quot;date=&quot;</span> + date);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;courcetable&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@RequestMapping(&quot;/addCourcetable&quot;)</span></span><br><span class="line">                    <span class="keyword">public</span> String <span class="title function_">registerDateTime</span><span class="params">(CourceTableVO courcetables)</span> &#123;</span><br><span class="line">                    <span class="comment">// 输出周课表的信息</span></span><br><span class="line">                List&lt;CourceTable&gt; courceTables = courcetables.getCourcetables();</span><br><span class="line">                <span class="keyword">for</span> (CourceTable courceTable : courceTables) &#123;</span><br><span class="line">                    <span class="keyword">if</span>((Integer)courceTable.getId() != <span class="literal">null</span>)&#123;</span><br><span class="line">                        System.out.println(<span class="string">&quot;增加的课表id：&quot;</span> + courceTable.getId() + <span class="string">&quot;增加的课表星期：&quot;</span> + courceTable.getWeekday() + <span class="string">&quot;增加的课表时间：&quot;</span> + courceTable.getCourcetime() + <span class="string">&quot;增加的课表名字：&quot;</span> + courceTable.getCourcename() + <span class="string">&quot;增加的课表地址：&quot;</span> + courceTable.getAddress());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(7) springmvc-config.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context/spring-context-4.3.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定需要扫描的包 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;edu.hhtc.jsj.controller&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 定义视图解析器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;viewResolver&quot;</span> <span class="attr">class</span>=</span></span><br><span class="line"><span class="tag">            <span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置前缀 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置后缀 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 显示的装配自定义类型转换器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span> <span class="attr">conversion-service</span>=<span class="string">&quot;conversionService&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 自定义类型转换器配置 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 	&lt;bean id=&quot;conversionService&quot; class=</span></span><br><span class="line"><span class="comment">         &quot;org.springframework.context.support.ConversionServiceFactoryBean&quot;&gt;</span></span><br><span class="line"><span class="comment">            &lt;property name=&quot;converters&quot;&gt;</span></span><br><span class="line"><span class="comment">                &lt;set&gt;</span></span><br><span class="line"><span class="comment">                    &lt;bean class=&quot;com.itheima.convert.DateConverter&quot; /&gt;</span></span><br><span class="line"><span class="comment">                &lt;/set&gt;</span></span><br><span class="line"><span class="comment">            &lt;/property&gt;</span></span><br><span class="line"><span class="comment">        &lt;/bean&gt; --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 自定义类型格式化转换器配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;conversionService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.format.support.FormattingConversionServiceFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;formatters&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;edu.hhtc.jsj.convert.DateFormatter&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--@Controller(&quot;/mycontroller&quot;)相当于--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置处理器Handle，映射“/firstController”请求 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;bean name=&quot;/firstController&quot;</span></span><br><span class="line"><span class="comment">          class=&quot;com.itheima.controller.FirstController&quot; /&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 处理器映射器，将处理器Handle的name作为url进行查找 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;bean class=</span></span><br><span class="line"><span class="comment">                  &quot;org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping&quot; /&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 处理器适配器，配置对处理器中handleRequest()方法的调用--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;bean class=</span></span><br><span class="line"><span class="comment">                  &quot;org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter&quot; /&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 视图解析器 --&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--   &lt;bean class=</span></span><br><span class="line"><span class="comment">                  &quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;&gt;</span></span><br><span class="line"><span class="comment">    &lt;/bean&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>(8) View页面</p>
<p>(9) 时间格式化工具</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> edu.hhtc.jsj.convert;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.cglib.core.Local;</span><br><span class="line"><span class="keyword">import</span> org.springframework.format.Formatter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Locale;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DateFormatter</span> <span class="keyword">implements</span> <span class="title class_">Formatter</span>&lt;Date&gt; &#123;</span><br><span class="line">    <span class="comment">//定义日期格式</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">datePattern</span> <span class="operator">=</span> <span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span> ;</span><br><span class="line">    <span class="comment">//声明SimpleDateFormat对象</span></span><br><span class="line">    <span class="keyword">private</span> SimpleDateFormat simpleDateFormat;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">print</span><span class="params">(Date date, Locale locale)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>().format(date);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">parse</span><span class="params">(String source,Locale locale)</span> <span class="keyword">throws</span> ParseException&#123;</span><br><span class="line">        simpleDateFormat = <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(datePattern);</span><br><span class="line">        <span class="keyword">return</span> simpleDateFormat.parse(source);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.convert;</span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.convert.converter.Converter;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义日期转换器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DateConverter</span> <span class="keyword">implements</span> <span class="title class_">Converter</span>&lt;String, Date&gt; &#123;</span><br><span class="line">	<span class="comment">// 定义日期格式</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">String</span> <span class="variable">datePattern</span> <span class="operator">=</span> <span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> Date <span class="title function_">convert</span><span class="params">(String source)</span> &#123;</span><br><span class="line">         <span class="comment">// 格式化日期</span></span><br><span class="line">		<span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(datePattern);</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> sdf.parse(source);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(</span><br><span class="line">					<span class="string">&quot;无效的日期格式，请使用这种格式:&quot;</span>+datePattern);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<ol start="2">
<li>工作流程</li>
</ol>
<p><img src="https://xxy8.github.io/images/ssm4.png" alt="image-20210701004845439"></p>
<ol start="3">
<li>核心类与注解</li>
</ol>
<ul>
<li>DispatcherServlet（前端控制器）</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">//在web.xml文件中</span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置前端过滤器 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">            org.springframework.web.servlet.DispatcherServlet</span><br><span class="line">        <span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 初始化时加载配置文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc-config.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 表示容器在启动时立即加载Servlet --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>@Controller</li>
</ul>
<blockquote>
<p>表明类是一个控制器</p>
</blockquote>
<p>注意：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 1.指定需要扫描的包 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.itheima.controller&quot;</span> /&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--2.使用注解时，程序运行依赖于Spring的AOP包--&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>@RequestMapping(value&#x3D;”&#x2F;hello”,method &#x3D;RequestMethod.GET)</p>
</li>
<li><p>参数类型：Model，数据类型，HttpServletRequest，HttpServletResponse，HttpSession</p>
</li>
<li><p>返回值类型:String【视图】+参数【Model】、ModelAndView【未解耦】、void【数据，异步请求】</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.controller;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 控制器类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(value=&quot;/hello&quot;,method =RequestMethod.GET)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FirstController</span>&#123;</span><br><span class="line">	<span class="meta">@RequestMapping(value=&quot;/firstController&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">handleRequest</span><span class="params">(HttpServletRequest request,</span></span><br><span class="line"><span class="params">			HttpServletResponse response, Model model,HttpSession )</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">		<span class="comment">// 向模型对象中添加数据</span></span><br><span class="line">		model.addAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;这是我的第一个Spring MVC程序&quot;</span>);</span><br><span class="line">		<span class="comment">// 返回视图页面</span></span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;first&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li><p>redirect【重定向】+forward【请求转发，修改】</p>
</li>
<li><p>视图解析器</p>
</li>
</ul>
<blockquote>
<p>简化view路径</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 定义视图解析器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;viewResolver&quot;</span> <span class="attr">class</span>=</span></span><br><span class="line"><span class="tag">   <span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- 设置前缀 --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span> /&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- 设置后缀 --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="10-数据绑定"><a href="#10-数据绑定" class="headerlink" title="10. 数据绑定"></a>10. 数据绑定</h2><ol>
<li>注解</li>
</ol>
<ul>
<li><p>@RequestParam绑定单个请求参数值；</p>
</li>
<li><p>@PathVariable绑定URI模板变量值；</p>
</li>
<li><p>@CookieValue绑定Cookie数据值</p>
</li>
<li><p>@RequestHeader绑定请求头数据；</p>
</li>
<li><p>@ModelValue绑定参数到命令对象；</p>
</li>
<li><p>@SessionAttributes绑定命令对象到session；</p>
</li>
<li><p>@RequestBody绑定请求的内容区数据并能进行自动类型转换等,例如JSON和RESTful风格。</p>
</li>
<li><p>@RequestPart绑定“multipart&#x2F;data”数据，除了能绑定@RequestParam能做到的请求参数外，还能绑定上传的文件等。</p>
</li>
<li><p>除了上边提到的注解，我们还可以通过如HttpServletRequest等API得到请求数据，但推荐使用注解方式，因为使用起来更简单。</p>
</li>
</ul>
<ol start="2">
<li>流程</li>
</ol>
<p><img src="https://xxy8.github.io/images/ssm5.png" alt="image-20210701132530041"></p>
<ol start="3">
<li>简单数据绑定</li>
</ol>
<ul>
<li>基本数据类型</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/selectUser&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">selectUser</span><span class="params">(<span class="meta">@RequestParam(value=&quot;user_id&quot;)</span>Integer id)</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;id=&quot;</span>+id);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<ul>
<li>POJO类型</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 接收用户注册信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/registerUser&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">registerUser</span><span class="params">(User user)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> user.getUsername();</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">password</span> <span class="operator">=</span> user.getPassword();</span><br><span class="line">    System.out.println(<span class="string">&quot;username=&quot;</span>+username);</span><br><span class="line">    System.out.println(<span class="string">&quot;password=&quot;</span>+password);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<ul>
<li>乱码</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置编码过滤器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span>		</span><br><span class="line">	<span class="tag">&lt;<span class="name">filter-class</span>&gt;</span></span><br><span class="line">      		org.springframework.web.filter.CharacterEncodingFilter</span><br><span class="line">	<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">   		<span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      		<span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">  		<span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>包装类POJO</li>
</ul>
<blockquote>
<p>前端的name值如果是POJO子属性，应为：对象.属性 例如user.username</p>
</blockquote>
<p>(1) entity</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.po;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 订单POJO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Orders</span> &#123;</span><br><span class="line">	<span class="keyword">private</span> Integer ordersId; <span class="comment">// 订单编号</span></span><br><span class="line">	<span class="keyword">private</span> User user;          <span class="comment">// 用户POJO，所属用户</span></span><br><span class="line">	<span class="keyword">public</span> Integer <span class="title function_">getOrdersId</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> ordersId;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOrdersId</span><span class="params">(Integer ordersId)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.ordersId = ordersId;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> User <span class="title function_">getUser</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> user;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUser</span><span class="params">(User user)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.user = user;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(2) Controller</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> com.itheima.po.Orders;</span><br><span class="line"><span class="keyword">import</span> com.itheima.po.User;</span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrdersController</span> &#123;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 向订单查询页面跳转</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@RequestMapping(&quot;/tofindOrdersWithUser&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">tofindOrdersWithUser</span><span class="params">( )</span> &#123;</span><br><span class="line">	    <span class="keyword">return</span> <span class="string">&quot;orders&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 查询订单和用户信息</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@RequestMapping(&quot;/findOrdersWithUser&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">findOrdersWithUser</span><span class="params">(Orders orders)</span> &#123;</span><br><span class="line">	    <span class="type">Integer</span> <span class="variable">orderId</span> <span class="operator">=</span> orders.getOrdersId();</span><br><span class="line">	    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> orders.getUser();</span><br><span class="line">	    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> user.getUsername();</span><br><span class="line">	    System.out.println(<span class="string">&quot;orderId=&quot;</span>+orderId);</span><br><span class="line">	    System.out.println(<span class="string">&quot;username=&quot;</span>+username);</span><br><span class="line">	    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(3) 前端</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">	pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC <span class="string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span> </span><br><span class="line">	<span class="string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;订单查询&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">	&lt;form action=<span class="string">&quot;$&#123;pageContext.request.contextPath &#125;/findOrdersWithUser&quot;</span></span><br><span class="line">		                                                           method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">		订单编号：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;ordersId&quot;</span> /&gt;&lt;br /&gt; </span><br><span class="line">		所属用户：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;user.username&quot;</span> /&gt;&lt;br /&gt; </span><br><span class="line">		          &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;查询&quot;</span> /&gt;</span><br><span class="line">	&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>自定义数据绑定</li>
</ul>
<p>(1) 自定义日期转换器</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.convert;</span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.convert.converter.Converter;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义日期转换器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DateConverter</span> <span class="keyword">implements</span> <span class="title class_">Converter</span>&lt;String, Date&gt; &#123;</span><br><span class="line">	<span class="comment">// 定义日期格式</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">String</span> <span class="variable">datePattern</span> <span class="operator">=</span> <span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> Date <span class="title function_">convert</span><span class="params">(String source)</span> &#123;</span><br><span class="line">         <span class="comment">// 格式化日期</span></span><br><span class="line">		<span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(datePattern);</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> sdf.parse(source);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(</span><br><span class="line">					<span class="string">&quot;无效的日期格式，请使用这种格式:&quot;</span>+datePattern);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.convert;</span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Locale;</span><br><span class="line"><span class="keyword">import</span> org.springframework.format.Formatter;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用Formatter自定义日期转换器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DateFormatter</span> <span class="keyword">implements</span> <span class="title class_">Formatter</span>&lt;Date&gt;&#123;</span><br><span class="line">    <span class="comment">// 定义日期格式</span></span><br><span class="line">	<span class="type">String</span> <span class="variable">datePattern</span> <span class="operator">=</span> <span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>;</span><br><span class="line">	<span class="comment">// 声明SimpleDateFormat对象</span></span><br><span class="line">    <span class="keyword">private</span> SimpleDateFormat simpleDateFormat;   </span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">print</span><span class="params">(Date date, Locale locale)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>().format(date);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">     <span class="keyword">public</span> Date <span class="title function_">parse</span><span class="params">(String source, Locale locale)</span> <span class="keyword">throws</span> ParseException</span><br><span class="line">     &#123;</span><br><span class="line">		simpleDateFormat = <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(datePattern);</span><br><span class="line">		<span class="keyword">return</span> simpleDateFormat.parse(source);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(2) Spring MVC配置</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 自定义类型转换器配置 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 	&lt;bean id=&quot;conversionService&quot; class=</span></span><br><span class="line"><span class="comment">     &quot;org.springframework.context.support.ConversionServiceFactoryBean&quot;&gt;</span></span><br><span class="line"><span class="comment">		&lt;property name=&quot;converters&quot;&gt;</span></span><br><span class="line"><span class="comment">			&lt;set&gt;</span></span><br><span class="line"><span class="comment">				&lt;bean class=&quot;com.itheima.convert.DateConverter&quot; /&gt;</span></span><br><span class="line"><span class="comment">			&lt;/set&gt;</span></span><br><span class="line"><span class="comment">		&lt;/property&gt;</span></span><br><span class="line"><span class="comment">	&lt;/bean&gt; --&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 自定义类型格式化转换器配置 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;conversionService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.format.support.FormattingConversionServiceFactoryBean&quot;</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;formatters&quot;</span>&gt;</span></span><br><span class="line">        	<span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.itheima.convert.DateFormatter&quot;</span> /&gt;</span></span><br><span class="line">        	<span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>(3) Controller</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.controller;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 日期控制器类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DateController</span> &#123;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 使用自定义类型数据绑定日期数据</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@RequestMapping(&quot;/customDate&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">CustomDate</span><span class="params">(Date date)</span> &#123;</span><br><span class="line">	    System.out.println(<span class="string">&quot;date=&quot;</span>+date);</span><br><span class="line">	    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>复杂数据绑定</li>
</ol>
<ul>
<li>绑定数组</li>
</ul>
<p>(1) 前端</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">	pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;爱好选择&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">	&lt;form action=<span class="string">&quot;$&#123;pageContext.request.contextPath &#125;/mycontroller/registerInterest&quot;</span></span><br><span class="line">		   method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">		&lt;table width=<span class="string">&quot;80%&quot;</span> border=<span class="number">1</span>&gt;</span><br><span class="line">			&lt;tr&gt;</span><br><span class="line">				&lt;td width=<span class="string">&quot;10%&quot;</span>&gt;项目&lt;/td&gt;</span><br><span class="line">				&lt;td width=<span class="string">&quot;90%&quot;</span>&gt;选择&lt;/td&gt;</span><br><span class="line">			&lt;/tr&gt;</span><br><span class="line">			&lt;tr&gt;</span><br><span class="line">				&lt;td&gt;兴趣&lt;/td&gt;</span><br><span class="line">				&lt;td&gt;</span><br><span class="line">				&lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;interests&quot;</span> value=<span class="string">&quot;篮球&quot;</span>&gt;篮球&amp;nbsp&amp;nbsp</span><br><span class="line">				&lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;interests&quot;</span> value=<span class="string">&quot;游戏&quot;</span>&gt;游戏&amp;nbsp&amp;nbsp</span><br><span class="line">				&lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;interests&quot;</span> value=<span class="string">&quot;上网&quot;</span>&gt;上网&amp;nbsp&amp;nbsp</span><br><span class="line">				&lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;interests&quot;</span> value=<span class="string">&quot;旅游&quot;</span>&gt;旅游&amp;nbsp&amp;nbsp</span><br><span class="line">				&lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;interests&quot;</span> value=<span class="string">&quot;羽毛球&quot;</span>&gt;羽毛球&amp;nbsp&amp;nbsp</span><br><span class="line">				&lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;interests&quot;</span> value=<span class="string">&quot;舞蹈&quot;</span>&gt;舞蹈&amp;nbsp&amp;nbsp</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">			&lt;/tr&gt;</span><br><span class="line">			</span><br><span class="line">		&lt;/table&gt;</span><br><span class="line">		&lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>/&gt;</span><br><span class="line">	&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(2) Controller</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/registerInterest&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">registerInterest</span><span class="params">(String[] interests)</span> &#123;</span><br><span class="line">    <span class="comment">// 输出user的成员值</span></span><br><span class="line">    <span class="keyword">if</span>(interests != <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span> (String interest : interests)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;项目兴趣选择了&quot;</span> + interest);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;兴趣为空！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;date&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>绑定集合</li>
</ul>
<p>(1) 包装类UserVo</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.vo;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> com.itheima.po.User;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户包装类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserVO</span> &#123;</span><br><span class="line">	<span class="keyword">private</span> List&lt;User&gt; users;</span><br><span class="line">	<span class="keyword">public</span> List&lt;User&gt; <span class="title function_">getUsers</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> users;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsers</span><span class="params">(List&lt;User&gt; users)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.users = users;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(2) 前端</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">	pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;修改用户&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">	&lt;form action=<span class="string">&quot;$&#123;pageContext.request.contextPath &#125;/editUsers&quot;</span></span><br><span class="line">		   method=<span class="string">&quot;post&quot;</span> id=<span class="string">&#x27;formid&#x27;</span>&gt;</span><br><span class="line">		&lt;table width=<span class="string">&quot;30%&quot;</span> border=<span class="number">1</span>&gt;</span><br><span class="line">			&lt;tr&gt;</span><br><span class="line">				&lt;td&gt;选择&lt;/td&gt;</span><br><span class="line">				&lt;td&gt;用户名&lt;/td&gt;</span><br><span class="line">			&lt;/tr&gt;</span><br><span class="line">			&lt;tr&gt;</span><br><span class="line">			  &lt;td&gt;</span><br><span class="line">				&lt;input name=<span class="string">&quot;users[0].id&quot;</span> value=<span class="string">&quot;1&quot;</span> type=<span class="string">&quot;checkbox&quot;</span> /&gt;</span><br><span class="line">		      &lt;/td&gt;</span><br><span class="line">			  &lt;td&gt;</span><br><span class="line">			  &lt;input name=<span class="string">&quot;users[0].username&quot;</span> value=<span class="string">&quot;tome&quot;</span> type=<span class="string">&quot;text&quot;</span> /&gt;</span><br><span class="line">			  &lt;/td&gt;</span><br><span class="line">			&lt;/tr&gt;</span><br><span class="line">			&lt;tr&gt;</span><br><span class="line">			  &lt;td&gt;</span><br><span class="line">				&lt;input name=<span class="string">&quot;users[1].id&quot;</span> value=<span class="string">&quot;2&quot;</span> type=<span class="string">&quot;checkbox&quot;</span> /&gt;</span><br><span class="line">			  &lt;/td&gt;</span><br><span class="line">			  &lt;td&gt;</span><br><span class="line">			  &lt;input name=<span class="string">&quot;users[1].username&quot;</span> value=<span class="string">&quot;jack&quot;</span> type=<span class="string">&quot;text&quot;</span> /&gt;</span><br><span class="line">			  &lt;/td&gt;</span><br><span class="line">			&lt;/tr&gt;</span><br><span class="line">		&lt;/table&gt;</span><br><span class="line">		&lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;修改&quot;</span> /&gt;</span><br><span class="line">	&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(3) Controller</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 向用户批量修改页面跳转</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@RequestMapping(&quot;/toUserEdit&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">toUserEdit</span><span class="params">()</span> &#123;</span><br><span class="line">	    <span class="keyword">return</span> <span class="string">&quot;user_edit&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 接收批量修改用户的方法</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@RequestMapping(&quot;/editUsers&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">editUsers</span><span class="params">(UserVO userList)</span> &#123;</span><br><span class="line">	    <span class="comment">// 将所有用户数据封装到集合中</span></span><br><span class="line">	    List&lt;User&gt; users = userList.getUsers();</span><br><span class="line">	    <span class="comment">// 循环输出所有用户信息</span></span><br><span class="line">	    <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">	        <span class="comment">// 如果接收的用户id不为空，则表示对该用户进行了修改</span></span><br><span class="line">	        <span class="keyword">if</span>(user.getId() !=<span class="literal">null</span>)&#123; </span><br><span class="line">	            System.out.println(<span class="string">&quot;修改了id为&quot;</span>+user.getId()+ </span><br><span class="line">	                    <span class="string">&quot;的用户名为：&quot;</span>+user.getUsername());</span><br><span class="line">	        &#125;</span><br><span class="line">	    &#125;</span><br><span class="line">	    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<h2 id="11-JSON数据交互与RESTful支持"><a href="#11-JSON数据交互与RESTful支持" class="headerlink" title="11. JSON数据交互与RESTful支持"></a>11. JSON数据交互与RESTful支持</h2><ol>
<li>JSON数据转化</li>
</ol>
<p>（1）导入新包</p>
<ul>
<li>jackson-annotations-2.8.8.jar</li>
<li>jackson-core-2.8.8.jar</li>
<li>jackson-databind-2.8.8.jar</li>
</ul>
<p>(2) 注解</p>
<ul>
<li>@ResponseBody：直接返回return对象，用于method</li>
<li>@RequestBody：用于请求的数据绑定到方法的形参中，用于形参上</li>
</ul>
<p>(3) web.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	      <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">	      <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee </span></span></span><br><span class="line"><span class="string"><span class="tag">	      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;</span></span></span><br><span class="line"><span class="tag">	      <span class="attr">id</span>=<span class="string">&quot;WebApp_ID&quot;</span> <span class="attr">version</span>=<span class="string">&quot;3.1&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>chapter14<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 配置Spring MVC前端控制器 DispatcherServlet --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">           org.springframework.web.servlet.DispatcherServlet</span><br><span class="line">       <span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 配置Spring MVC加载配置文件路径 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc-config.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 配置服务器启动后立即加载Spring MVC配置文件 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">   <span class="comment">&lt;!--激活tomcat的静态资源拦截，需要哪些静态文件，再往下追加--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 	&lt;servlet-mapping&gt;</span></span><br><span class="line"><span class="comment">		&lt;servlet-name&gt;default&lt;/servlet-name&gt;</span></span><br><span class="line"><span class="comment">		&lt;url-pattern&gt;*.js&lt;/url-pattern&gt;</span></span><br><span class="line"><span class="comment">	&lt;/servlet-mapping&gt;</span></span><br><span class="line"><span class="comment">	&lt;servlet-mapping&gt;</span></span><br><span class="line"><span class="comment">		&lt;servlet-name&gt;default&lt;/servlet-name&gt;</span></span><br><span class="line"><span class="comment">		&lt;url-pattern&gt;*.css&lt;/url-pattern&gt;</span></span><br><span class="line"><span class="comment">	&lt;/servlet-mapping&gt; --&gt;</span></span><br><span class="line">   </span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(4) springMVC配置文件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;beans xmlns=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="line">	xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> xmlns:mvc=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span><br><span class="line">	xmlns:context=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span> xmlns:tx=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span><br><span class="line">	xsi:schemaLocation=<span class="string">&quot;http://www.springframework.org/schema/beans </span></span><br><span class="line"><span class="string">  http://www.springframework.org/schema/beans/spring-beans-4.3.xsd </span></span><br><span class="line"><span class="string">  http://www.springframework.org/schema/mvc </span></span><br><span class="line"><span class="string">  http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd </span></span><br><span class="line"><span class="string">  http://www.springframework.org/schema/context </span></span><br><span class="line"><span class="string">  http://www.springframework.org/schema/context/spring-context-4.3.xsd&quot;</span>&gt;</span><br><span class="line">	&lt;!-- 定义组件扫描器，指定需要扫描的包 --&gt;</span><br><span class="line">	&lt;context:component-scan base-<span class="keyword">package</span>=<span class="string">&quot;com.itheima.controller&quot;</span> /&gt;</span><br><span class="line">	&lt;!-- 配置注解驱动 --&gt;</span><br><span class="line">	&lt;mvc:annotation-driven /&gt;</span><br><span class="line">	</span><br><span class="line">	&lt;!--配置静态资源的访问映射，此配置中的文件，将不被前端控制器拦截 --&gt;</span><br><span class="line">	&lt;mvc:resources location=<span class="string">&quot;/js/&quot;</span> mapping=<span class="string">&quot;/js/**&quot;</span> /&gt;</span><br><span class="line">	&lt;!-- &lt;mvc:<span class="keyword">default</span>-servlet-handler /&gt; --&gt;</span><br><span class="line">	</span><br><span class="line">	&lt;!-- 配置视图解析器 --&gt;</span><br><span class="line">	&lt;bean</span><br><span class="line">		class=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span><br><span class="line">		&lt;property name=<span class="string">&quot;prefix&quot;</span> value=<span class="string">&quot;/WEB-INF/jsp/&quot;</span> /&gt;</span><br><span class="line">		&lt;property name=<span class="string">&quot;suffix&quot;</span> value=<span class="string">&quot;.jsp&quot;</span> /&gt;</span><br><span class="line">	&lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">	&lt;!-- &lt;bean&gt;标签配置注解方式的处理器映射器和处理器适配器必须配对使用 --&gt;</span><br><span class="line">	&lt;!-- 使用&lt;bean&gt;标签配置注解方式的处理器映射器 --&gt;</span><br><span class="line">&lt;!-- 	&lt;bean</span><br><span class="line">		class=<span class="string">&quot;org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping&quot;</span> /&gt;</span><br><span class="line">	使用&lt;bean&gt;标签配置注解方式的处理器适配器</span><br><span class="line">	&lt;bean</span><br><span class="line">		class=<span class="string">&quot;org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter&quot;</span>&gt;</span><br><span class="line">		&lt;property name=<span class="string">&quot;messageConverters&quot;</span>&gt;</span><br><span class="line">			&lt;list&gt;</span><br><span class="line">				在注解适配器中配置JSON转换器</span><br><span class="line">				&lt;bean</span><br><span class="line">					class=<span class="string">&quot;org.springframework.http.converter.json.MappingJackson2HttpMessageConverter&quot;</span> /&gt;</span><br><span class="line">			&lt;/list&gt;</span><br><span class="line">		&lt;/property&gt;</span><br><span class="line">	&lt;/bean&gt; --&gt;</span><br><span class="line"></span><br><span class="line">&lt;/beans&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(5) entity</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.po;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户POJO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">	<span class="keyword">private</span> String username;</span><br><span class="line">	<span class="keyword">private</span> String password;</span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> username;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.username = username;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> password;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.password = password;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">	 <span class="keyword">return</span> <span class="string">&quot;User [username=&quot;</span> + username + <span class="string">&quot;, password=&quot;</span> + password + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(6) Controller</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> com.itheima.po.User;</span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 接收页面请求的JSON数据，并返回JSON格式结果</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@RequestMapping(&quot;/testJson&quot;)</span></span><br><span class="line">	<span class="meta">@ResponseBody</span></span><br><span class="line">	<span class="keyword">public</span> User <span class="title function_">testJson</span><span class="params">(<span class="meta">@RequestBody</span> User user)</span> &#123;</span><br><span class="line">		<span class="comment">// 打印接收的JSON格式数据</span></span><br><span class="line">		System.out.println(user);</span><br><span class="line">		<span class="comment">// 返回JSON格式的响应</span></span><br><span class="line">		<span class="keyword">return</span> user;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 *接收RESTful风格的请求,其接收方式为GET</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@RequestMapping(value=&quot;/user/&#123;id&#125;&quot;,method=RequestMethod.GET)</span></span><br><span class="line">	<span class="meta">@ResponseBody</span></span><br><span class="line">	<span class="keyword">public</span> User <span class="title function_">selectUser</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> String id)</span>&#123;</span><br><span class="line">	    <span class="comment">//查看数据接收</span></span><br><span class="line">	    System.out.println(<span class="string">&quot;id=&quot;</span>+id);</span><br><span class="line">	    User user=<span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">	    <span class="comment">//模拟根据id查询出到用户对象数据</span></span><br><span class="line">	    <span class="keyword">if</span>(id.equals(<span class="string">&quot;1234&quot;</span>))&#123;	    	</span><br><span class="line">	        user.setUsername(<span class="string">&quot;tom&quot;</span>);</span><br><span class="line">	    &#125;</span><br><span class="line">	    <span class="comment">//返回JSON格式的数据</span></span><br><span class="line">	    <span class="keyword">return</span> user;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(7) 前端</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: xxy</span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">4</span>/<span class="number">20</span></span><br><span class="line">  Time: <span class="number">22</span>:<span class="number">06</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">         pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC <span class="string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span></span><br><span class="line"><span class="string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span></span><br><span class="line">        src=<span class="string">&quot;$&#123;pageContext.request.contextPath &#125;/js/jquery-1.11.3.min.js&quot;</span>&gt;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">    function <span class="title function_">testJson</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">// 获取输入的用户名和密码</span></span><br><span class="line">        <span class="type">var</span> <span class="variable">username</span> <span class="operator">=</span>$(<span class="string">&quot;#username&quot;</span>).val();</span><br><span class="line">        <span class="type">var</span> <span class="variable">password</span> <span class="operator">=</span>$(<span class="string">&quot;#password&quot;</span>).val();</span><br><span class="line"></span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url : <span class="string">&quot;$&#123;pageContext.request.contextPath &#125;/testJson&quot;</span>,</span><br><span class="line">            type : <span class="string">&quot;post&quot;</span>,</span><br><span class="line">            <span class="comment">// data表示发送的数据</span></span><br><span class="line">            data :JSON.stringify(&#123;username:username,password:password&#125;),</span><br><span class="line">            <span class="comment">// 定义发送请求的数据格式为JSON字符串</span></span><br><span class="line">            contentType : <span class="string">&quot;application/json;charset=UTF-8&quot;</span>,</span><br><span class="line">            <span class="comment">//定义回调响应的数据格式为JSON字符串,该属性可以省略</span></span><br><span class="line">            dataType : <span class="string">&quot;json&quot;</span>,</span><br><span class="line">            <span class="comment">//成功响应的结果</span></span><br><span class="line">            success : function(data)&#123;</span><br><span class="line">                <span class="keyword">if</span>(data != <span class="literal">null</span>)&#123;</span><br><span class="line">                    <span class="comment">//将data的结果提取并显示到页面定义的div页面上，每个数据单独使用一行显示。</span></span><br><span class="line">                    alert(<span class="string">&quot;你输入的用户名为：&quot;</span> + data.username + <span class="string">&quot;你输入的密码为：&quot;</span> + data.password);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;JSON提交&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form&gt;</span><br><span class="line">    用户名：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> id=<span class="string">&quot;username&quot;</span>&gt;&lt;br /&gt;</span><br><span class="line">    密&amp;nbsp;&amp;nbsp;&amp;nbsp;码：</span><br><span class="line">    &lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;password&quot;</span> id=<span class="string">&quot;password&quot;</span>&gt;&lt;br /&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;button&quot;</span> value=<span class="string">&quot;测试JSON交互&quot;</span> onclick=<span class="string">&quot; testJson()&quot;</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>RESTful风格</li>
</ol>
<blockquote>
<p>一种请求路径的风格</p>
</blockquote>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: xxy</span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">4</span>/<span class="number">20</span></span><br><span class="line">  Time: <span class="number">22</span>:<span class="number">06</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">         pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC <span class="string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span></span><br><span class="line"><span class="string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span></span><br><span class="line">        src=<span class="string">&quot;$&#123;pageContext.request.contextPath &#125;/js/jquery-1.11.3.min.js&quot;</span>&gt;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">    function <span class="title function_">testJson1</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">// 获取输入的用户名和密码</span></span><br><span class="line">        <span class="type">var</span> <span class="variable">username</span> <span class="operator">=</span>$(<span class="string">&quot;#username&quot;</span>).val();</span><br><span class="line">        <span class="type">var</span> <span class="variable">password</span> <span class="operator">=</span>$(<span class="string">&quot;#password&quot;</span>).val();</span><br><span class="line"></span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url : <span class="string">&quot;$&#123;pageContext.request.contextPath &#125;/testJson1&quot;</span>+<span class="string">&quot;/&quot;</span> + username + <span class="string">&quot;/&quot;</span> + password,</span><br><span class="line">            type : <span class="string">&quot;get&quot;</span>,</span><br><span class="line">            <span class="comment">// data表示发送的数据</span></span><br><span class="line">          <span class="comment">/*  data :JSON.stringify(&#123;username:username,password:password&#125;),*/</span></span><br><span class="line">            <span class="comment">// 定义发送请求的数据格式为JSON字符串</span></span><br><span class="line">            <span class="comment">/*contentType : &quot;application/json;charset=UTF-8&quot;,*/</span></span><br><span class="line">            <span class="comment">//定义回调响应的数据格式为JSON字符串,该属性可以省略</span></span><br><span class="line">            dataType : <span class="string">&quot;json&quot;</span>,</span><br><span class="line">            <span class="comment">//成功响应的结果</span></span><br><span class="line">            success : function(data)&#123;</span><br><span class="line">                <span class="keyword">if</span>(data != <span class="literal">null</span>)&#123;</span><br><span class="line">                    <span class="comment">//将data的结果提取并显示到页面定义的div页面上，每个数据单独使用一行显示。</span></span><br><span class="line">                    <span class="comment">/*alert(&quot;你输入的用户名为：&quot; + username + &quot;你输入的密码为：&quot; + password);*/</span></span><br><span class="line">                    $(<span class="string">&quot;#test&quot;</span>).html(<span class="string">&quot;你输入的用户名为：&quot;</span> + data.username + <span class="string">&quot;你输入的密码为：&quot;</span> + password);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;JSON提交&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form&gt;</span><br><span class="line">    用户名：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> id=<span class="string">&quot;username&quot;</span>&gt;&lt;br /&gt;</span><br><span class="line">    密&amp;nbsp;&amp;nbsp;&amp;nbsp;码：</span><br><span class="line">    &lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;password&quot;</span> id=<span class="string">&quot;password&quot;</span>&gt;&lt;br /&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;button&quot;</span> value=<span class="string">&quot;测试JSON交互&quot;</span> onclick=<span class="string">&quot; testJson1()&quot;</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;div id=<span class="string">&quot;test&quot;</span> name=<span class="string">&quot;test&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="12-拦截器"><a href="#12-拦截器" class="headerlink" title="12. 拦截器"></a>12. 拦截器</h2><blockquote>
<p>类似于过滤器，用于拦截用户请求，做出相应处理;顺序postHandle，afterCompletion与拦截器顺序相反</p>
</blockquote>
<ul>
<li>栗子</li>
</ul>
<p>(1) 设置拦截器1</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> edu.hhtc.jsj.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> edu.hhtc.jsj.pojo.Student;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MonitorInterceptor</span> <span class="keyword">implements</span> <span class="title class_">HandlerInterceptor</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">preHandle</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> httpServletRequest.getSession();</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> (Student) session.getAttribute(<span class="string">&quot;STUDENT_SESSION&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(student.getPosition() == <span class="string">&quot;monitor&quot;</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">            httpServletRequest.setAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;不好意思，您还不是班长，请先当选班长!&quot;</span>);</span><br><span class="line"></span><br><span class="line">            httpServletRequest.getRequestDispatcher(<span class="string">&quot;/WEB-INF/jsp/student/main_stu.jsp&quot;</span>).forward(httpServletRequest,httpServletResponse);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">postHandle</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterCompletion</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o, Exception e)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(2) 设置拦截器2</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> edu.hhtc.jsj.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> edu.hhtc.jsj.pojo.Teacher;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PrincipalInterceptor</span> <span class="keyword">implements</span> <span class="title class_">HandlerInterceptor</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">preHandle</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> httpServletRequest.getSession();</span><br><span class="line">        <span class="type">Teacher</span> <span class="variable">teacher</span> <span class="operator">=</span> (Teacher) session.getAttribute(<span class="string">&quot;TEACHER_SESSION&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(teacher.getPosition() == <span class="string">&quot;principal&quot;</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        httpServletRequest.setAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;不好意思，您还不是教研室主任!&quot;</span>);</span><br><span class="line"></span><br><span class="line">        httpServletRequest.getRequestDispatcher(<span class="string">&quot;/WEB-INF/jsp/teacher/main_teacher.jsp&quot;</span>).forward(httpServletRequest,httpServletResponse);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">postHandle</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterCompletion</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o, Exception e)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>(3)  设置拦截器3</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> edu.hhtc.jsj.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> edu.hhtc.jsj.pojo.Teacher;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TeacherInterceptor</span> <span class="keyword">implements</span> <span class="title class_">HandlerInterceptor</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">preHandle</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> httpServletRequest.getRequestURI();</span><br><span class="line"></span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> httpServletRequest.getSession();</span><br><span class="line">        <span class="type">Teacher</span> <span class="variable">teacher</span> <span class="operator">=</span> (Teacher) session.getAttribute(<span class="string">&quot;TEACHER_SESSION&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(teacher != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">            httpServletRequest.setAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;您还没有登录，请先登录!&quot;</span>);</span><br><span class="line"></span><br><span class="line">            httpServletRequest.getRequestDispatcher(<span class="string">&quot;/WEB-INF/jsp/login.jsp&quot;</span>).forward(httpServletRequest,httpServletResponse);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">postHandle</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterCompletion</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o, Exception e)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(4) SpringMVC配置文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context/spring-context-4.3.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定需要扫描的包 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;edu.hhtc.jsj.controller&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置注解驱动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--  配置静态资源的访问映射，此配置中的文件，将不被前端控制器拦截--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/js/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/js/&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 定义视图解析器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;viewResolver&quot;</span> <span class="attr">class</span>=</span></span><br><span class="line"><span class="tag">            <span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置前缀 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置后缀 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 显示的装配自定义类型转换器 --&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- &lt;mvc:annotation-driven conversion-service=&quot;conversionService&quot; /&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 自定义类型转换器配置 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 	&lt;bean id=&quot;conversionService&quot; class=</span></span><br><span class="line"><span class="comment">         &quot;org.springframework.context.support.ConversionServiceFactoryBean&quot;&gt;</span></span><br><span class="line"><span class="comment">            &lt;property name=&quot;converters&quot;&gt;</span></span><br><span class="line"><span class="comment">                &lt;set&gt;</span></span><br><span class="line"><span class="comment">                    &lt;bean class=&quot;com.itheima.convert.DateConverter&quot; /&gt;</span></span><br><span class="line"><span class="comment">                &lt;/set&gt;</span></span><br><span class="line"><span class="comment">            &lt;/property&gt;</span></span><br><span class="line"><span class="comment">        &lt;/bean&gt; --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 自定义类型格式化转换器配置 --&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- &lt;bean id=&quot;conversionService&quot; class=&quot;org.springframework.format.support.FormattingConversionServiceFactoryBean&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;property name=&quot;formatters&quot;&gt;</span></span><br><span class="line"><span class="comment">            &lt;set&gt;</span></span><br><span class="line"><span class="comment">                &lt;bean class=&quot;edu.hhtc.jsj.convert.DateFormatter&quot; /&gt;</span></span><br><span class="line"><span class="comment">            &lt;/set&gt;</span></span><br><span class="line"><span class="comment">        &lt;/property&gt;</span></span><br><span class="line"><span class="comment">    &lt;/bean&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置拦截器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--使用bean直接定义在&lt;mvc:interceptors&gt;下面的拦截器将拦截所有请求--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  &lt;bean class=&quot;xxx.xxx.interceptor.XXXInterceptor&quot;/&gt; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 拦截器1 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">&quot;/student/**&quot;</span> /&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 定义在&lt;mvc:interceptor&gt;下面的表示匹配指定路径的请求才进行拦截的 &gt; --&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;edu.hhtc.jsj.interceptor.StudentInterceptor&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 拦截器2 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">&quot;/student/monitor/**&quot;</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 定义在&lt;mvc:interceptor&gt;下面的表示匹配指定路径的请求才进行拦截的 &gt; --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;edu.hhtc.jsj.interceptor.MonitorInterceptor&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 拦截器2 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">&quot;/teacher/**&quot;</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 定义在&lt;mvc:interceptor&gt;下面的表示匹配指定路径的请求才进行拦截的 &gt; --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;edu.hhtc.jsj.interceptor.TeacherInterceptor&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 拦截器2 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">&quot;/teacher/principal/**&quot;</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 定义在&lt;mvc:interceptor&gt;下面的表示匹配指定路径的请求才进行拦截的 &gt; --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;edu.hhtc.jsj.interceptor.PrincipalInterceptor&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>(5) 前端</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: xxy</span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">4</span>/<span class="number">21</span></span><br><span class="line">  Time: <span class="number">15</span>:<span class="number">38</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">         pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC <span class="string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span></span><br><span class="line"><span class="string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;登录界面&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">$&#123;msg&#125;</span><br><span class="line">&lt;form action=<span class="string">&quot;$&#123;pageContext.request.contextPath &#125;/login&quot;</span></span><br><span class="line">      method=<span class="string">&quot;POST&quot;</span>&gt;</span><br><span class="line">    用户类型：&lt;select name=<span class="string">&quot;usertype&quot;</span> style=<span class="string">&quot;width:130px&quot;</span>&gt;</span><br><span class="line">    &lt;option value=<span class="string">&quot;student&quot;</span>&gt;学生&lt;/option&gt;</span><br><span class="line">    &lt;option value=<span class="string">&quot;teacher&quot;</span>&gt;教师&lt;/option&gt;</span><br><span class="line">    &lt;option/&gt;</span><br><span class="line">&lt;/select&gt; &lt;br /&gt;</span><br><span class="line">    用户编号：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;userid&quot;</span> style=<span class="string">&quot;width:130px&quot;</span>/&gt;&lt;br /&gt;</span><br><span class="line">    密&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;码：</span><br><span class="line">    &lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;password&quot;</span> style=<span class="string">&quot;width:130px&quot;</span>/&gt;&lt;br /&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;登录&quot;</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="13-文件上传和下载"><a href="#13-文件上传和下载" class="headerlink" title="13. 文件上传和下载"></a>13. 文件上传和下载</h2><ol>
<li>上传与下载</li>
</ol>
<p>(1）导入新包</p>
<ul>
<li>commons-io-2.5.jar</li>
<li>hamcrest-core-1.3.jar</li>
</ul>
<p>(2) SringMVC配置文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">location</span>=<span class="string">&quot;/js/&quot;</span> <span class="attr">mapping</span>=<span class="string">&quot;/js/**&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/UpLoadFile/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/UpLoadFile/&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/DowLoadFile/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/DowLoadFile/&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;edu.hhtc.jsj.controller&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 定义视图解析器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;viewResolver&quot;</span> <span class="attr">class</span>=</span></span><br><span class="line"><span class="tag">            <span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置前缀 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;property name=&quot;prefix&quot; value=&quot;/WEB-INF/jsp/&quot; /&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &amp;lt;!&amp;ndash; 设置后缀 &amp;ndash;&amp;gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;property name=&quot;suffix&quot; value=&quot;.jsp&quot; /&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置文件上传解析器 MultipartResolver --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;multipartResolver&quot;</span> <span class="attr">class</span>=   <span class="string">&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置请求编码格式--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;defaultEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置上传文件最大长度--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxUploadSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2097152&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置推迟文件解析--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;resolveLazily&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>(2) 前端</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">         pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;%@ taglib uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> prefix=<span class="string">&quot;c&quot;</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">&quot;java.net.URLEncoder&quot;</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">&quot;java.util.*&quot;</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">&quot;java.lang.*&quot;</span>%&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html PUBLIC <span class="string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span></span><br><span class="line"><span class="string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;上传文件&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    上传文件&lt;br&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;$&#123;pageContext.request.contextPath &#125;/uploadfile&quot;</span> method=<span class="string">&quot;POST&quot;</span>  enctype=<span class="string">&quot;multipart/form-data&quot;</span> onsubmit=<span class="string">&quot;return check()&quot;</span>&gt;</span><br><span class="line">    请选择文件：&lt;input id=<span class="string">&quot;file&quot;</span> type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;uploadfile&quot;</span> multiple=<span class="string">&quot;multiple&quot;</span> /&gt;&lt;br /&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;上传&quot;</span> /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    文件下载显示内容：</span><br><span class="line">    下载：&lt;br&gt;</span><br><span class="line">    &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;not empty filelist&#125;&quot;</span>&gt;</span><br><span class="line">        &lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;s&quot;</span> items=<span class="string">&quot;$&#123;filelist&#125;&quot;</span>&gt;</span><br><span class="line">            &lt;a href=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;//downloadfile?filename=$&#123;s&#125;&quot;</span>&gt;$&#123;s&#125;&lt;/a&gt;&lt;br/&gt;</span><br><span class="line">        &lt;/c:forEach&gt;</span><br><span class="line">&lt;%--    &lt;c:set <span class="keyword">var</span>=<span class="string">&quot;filelist&quot;</span> value=<span class="string">&quot;$&#123;filelist&#125;&quot;</span> scope=<span class="string">&quot;request&quot;</span>&gt;&lt;/c:set&gt;--%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%--        &lt;c:set <span class="keyword">var</span>=<span class="string">&quot;path&quot;</span> value=<span class="string">&quot;$&#123;pageContext.request.contextPath &#125;&quot;</span> scope=<span class="string">&quot;request&quot;</span>&gt;&lt;/c:set&gt;--%&gt;</span><br><span class="line">&lt;%--    &lt;%--%&gt;</span><br><span class="line">&lt;%--        List&lt;String&gt; filelist=(List&lt;String&gt;)request.getAttribute(<span class="string">&quot;filelist&quot;</span>);--%&gt;</span><br><span class="line">&lt;%--        <span class="keyword">for</span>(String filename:filelist)&#123;--%&gt;</span><br><span class="line">&lt;%--            System.out.print(<span class="string">&quot;&lt;a href=\&quot;&quot;</span>+request.getAttribute(<span class="string">&quot;path&quot;</span>)+<span class="string">&quot;/download?filename=&quot;</span>+URLEncoder.encode(filename, <span class="string">&quot;UTF-8&quot;</span>)+<span class="string">&quot;\&quot;&gt;&quot;</span>);--%&gt;</span><br><span class="line">&lt;%--            System.out.print(filename+<span class="string">&quot;&lt;/a&gt;&lt;br&gt;&quot;</span>);--%&gt;</span><br><span class="line">&lt;%--        &#125;--%&gt;</span><br><span class="line">&lt;%--    %&gt;--%&gt;</span><br><span class="line">    &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 判断是否已选择上传文件</span></span><br><span class="line">    function <span class="title function_">check</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">var</span> <span class="variable">file</span> <span class="operator">=</span> document.getElementById(<span class="string">&quot;file&quot;</span>).value;</span><br><span class="line">        <span class="keyword">if</span>(file.length==<span class="number">0</span>||file==<span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">            alert(<span class="string">&quot;请选择上传文件&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>(3) Controller</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> edu.hhtc.jsj.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpHeaders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileUpandDownController</span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件上传  接收文件后返回upanddownfile.jsp页面</span></span><br><span class="line"><span class="comment">     * 由于页面在跟目录下，不能使用视图解析器，必须通过ModeandView定制返回响应页面和下载文件名数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;upanddownfile&quot;,method = RequestMethod.GET)</span></span><br><span class="line">    <span class="keyword">public</span> ModelAndView <span class="title function_">index</span><span class="params">(HttpServletRequest request)</span>&#123;</span><br><span class="line">        List&lt;String&gt; filelist = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">        <span class="type">String</span> <span class="variable">dirPath</span> <span class="operator">=</span> request.getServletContext().getRealPath(<span class="string">&quot;/DowLoadFile/&quot;</span>);</span><br><span class="line">        <span class="type">File</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(dirPath);</span><br><span class="line">        <span class="keyword">if</span>(!filePath.exists())&#123;</span><br><span class="line">            filePath.mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(File file1 : filePath.listFiles())&#123;</span><br><span class="line">            filelist.add(file1.getName());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 创建ModelAndView对象</span></span><br><span class="line">        <span class="type">ModelAndView</span> <span class="variable">mav</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>();</span><br><span class="line">        <span class="comment">// 向模型对象中添加数据</span></span><br><span class="line">        mav.addObject(<span class="string">&quot;filelist&quot;</span>, filelist);</span><br><span class="line">        <span class="comment">// 设置逻辑视图名</span></span><br><span class="line">        mav.setViewName(<span class="string">&quot;upanddownfile.jsp&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> mav;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value=&quot;/uploadfile&quot;,method= RequestMethod.POST)</span></span><br><span class="line">    <span class="keyword">public</span> ModelAndView <span class="title function_">uploadfile</span><span class="params">(<span class="meta">@RequestParam(&quot;uploadfile&quot;)</span> List&lt;MultipartFile&gt; uploadfile,</span></span><br><span class="line"><span class="params">                                   HttpServletRequest request)</span> &#123;</span><br><span class="line">        <span class="comment">//为了提供下载文件 创建一个List存储上传的文件名</span></span><br><span class="line">        List&lt;String&gt; filelist=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">        <span class="comment">//处理流程</span></span><br><span class="line">        <span class="comment">//1.通过uploadfile的遍历处理每个上传文件，并将文件名加入filelist</span></span><br><span class="line">        <span class="comment">//2.将文件以源文件名保存到UpLoadFile文件夹下</span></span><br><span class="line">        <span class="keyword">if</span>(!uploadfile.isEmpty() &amp;&amp; uploadfile.size() &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(MultipartFile file : uploadfile)&#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">orginalFilename</span> <span class="operator">=</span> file.getOriginalFilename();</span><br><span class="line">                <span class="type">String</span> <span class="variable">dirPath</span> <span class="operator">=</span> request.getServletContext().getRealPath(<span class="string">&quot;/DowLoadFile/&quot;</span>);</span><br><span class="line">                <span class="type">File</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(dirPath);</span><br><span class="line">                filelist.add(orginalFilename);</span><br><span class="line">                <span class="keyword">if</span>(!filePath.exists())&#123;</span><br><span class="line">                    filePath.mkdirs();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span>(File file1 : filePath.listFiles())&#123;</span><br><span class="line">                    filelist.add(file1.getName());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">String</span> <span class="variable">filename</span> <span class="operator">=</span> orginalFilename;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    file.transferTo(<span class="keyword">new</span> <span class="title class_">File</span>(dirPath+filename));</span><br><span class="line">                    System.out.println(<span class="string">&quot;上传成功！&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 创建ModelAndView对象</span></span><br><span class="line">        <span class="type">ModelAndView</span> <span class="variable">mav</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>();</span><br><span class="line">        <span class="comment">// 向模型对象中添加数据</span></span><br><span class="line">        mav.addObject(<span class="string">&quot;filelist&quot;</span>, filelist);</span><br><span class="line">        <span class="comment">// 设置逻辑视图名</span></span><br><span class="line">        mav.setViewName(<span class="string">&quot;upanddownfile.jsp&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> mav;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件下载</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(value=&quot;/downloadfile&quot;,method=RequestMethod.GET)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseEntity&lt;<span class="type">byte</span>[]&gt; fileDownload(HttpServletRequest request,</span><br><span class="line">                                               String filename) <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">// 指定要下载的文件所在路径</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> request.getServletContext().getRealPath(<span class="string">&quot;/DowLoadFile/&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建该文件对象</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(path+File.separator+filename);</span><br><span class="line">        <span class="comment">// 对文件名编码，防止中文文件乱码</span></span><br><span class="line">        filename = <span class="built_in">this</span>.getFilename(request, filename);</span><br><span class="line">        <span class="comment">// 设置响应头</span></span><br><span class="line">        <span class="type">HttpHeaders</span> <span class="variable">headers</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpHeaders</span>();</span><br><span class="line">        <span class="comment">// 通知浏览器以下载的方式打开文件</span></span><br><span class="line">        headers.setContentDispositionFormData(<span class="string">&quot;attachment&quot;</span>, filename);</span><br><span class="line">        <span class="comment">// 定义以流的形式下载返回文件数据</span></span><br><span class="line">        headers.setContentType(MediaType.APPLICATION_OCTET_STREAM);</span><br><span class="line">        <span class="comment">// 使用Sring MVC框架的ResponseEntity对象封装返回下载数据</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ResponseEntity</span>&lt;<span class="type">byte</span>[]&gt;(FileUtils.readFileToByteArray(file),</span><br><span class="line">                headers, HttpStatus.OK);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据浏览器的不同进行编码设置，返回编码后的文件名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getFilename</span><span class="params">(HttpServletRequest request,</span></span><br><span class="line"><span class="params">                              String filename)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// IE不同版本User-Agent中出现的关键词</span></span><br><span class="line">        String[] IEBrowserKeyWords = &#123;<span class="string">&quot;MSIE&quot;</span>, <span class="string">&quot;Trident&quot;</span>, <span class="string">&quot;Edge&quot;</span>&#125;;</span><br><span class="line">        <span class="comment">// 获取请求头代理信息</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">userAgent</span> <span class="operator">=</span> request.getHeader(<span class="string">&quot;User-Agent&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (String keyWord : IEBrowserKeyWords) &#123;</span><br><span class="line">            <span class="keyword">if</span> (userAgent.contains(keyWord)) &#123;</span><br><span class="line">                <span class="comment">//IE内核浏览器，统一为UTF-8编码显示</span></span><br><span class="line">                <span class="keyword">return</span> URLEncoder.encode(filename, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//火狐等其它浏览器统一为ISO-8859-1编码显示</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>(filename.getBytes(<span class="string">&quot;UTF-8&quot;</span>), <span class="string">&quot;ISO-8859-1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="14-SSM整合"><a href="#14-SSM整合" class="headerlink" title="14. SSM整合"></a>14. SSM整合</h2><ol>
<li>maven导入jar包</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line"></span><br><span class="line">&lt;project xmlns=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line">         xsi:schemaLocation=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br><span class="line">    &lt;modelVersion&gt;<span class="number">4.0</span><span class="number">.0</span>&lt;/modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;groupId&gt;cn.com.byte1024&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;VoteSystem&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">1.0</span>-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;packaging&gt;war&lt;/packaging&gt;</span><br><span class="line"></span><br><span class="line">    &lt;name&gt;VoteSystem Maven Webapp&lt;/name&gt;</span><br><span class="line">    &lt;url&gt;http:<span class="comment">//www.example.com&lt;/url&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;project.build.sourceEncoding&gt;UTF-<span class="number">8</span>&lt;/project.build.sourceEncoding&gt;</span><br><span class="line">        &lt;maven.compiler.source&gt;<span class="number">1.7</span>&lt;/maven.compiler.source&gt;</span><br><span class="line">        &lt;maven.compiler.target&gt;<span class="number">1.7</span>&lt;/maven.compiler.target&gt;</span><br><span class="line">        &lt;spring.version&gt;<span class="number">4.1</span><span class="number">.9</span>.RELEASE&lt;/spring.version&gt;</span><br><span class="line">        &lt;mybatis.version&gt;<span class="number">3.2</span><span class="number">.6</span>&lt;/mybatis.version&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">4.12</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-test&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- spring核心包 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-core&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-web&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-oxm&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-tx&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-aop&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-context-support&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-test&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 映入JSON --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.codehaus.jackson&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jackson-mapper-asl&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">1.9</span><span class="number">.13</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!-- 上传组件包 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;commons-fileupload&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-fileupload&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">1.3</span><span class="number">.1</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;commons-io&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-io&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">2.4</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;commons-codec&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-codec&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">1.9</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.github.sgroschupf&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;zkclient&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">0.1</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jackson-core&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">2.5</span><span class="number">.1</span>&lt;/version&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jackson-annotations&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">2.5</span><span class="number">.0</span>&lt;/version&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">2.4</span><span class="number">.0</span>&lt;/version&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;javax&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;javaee-api&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">7.0</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 连接mysql --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.mybatis&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mybatis&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;mybatis.version&#125;&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.mybatis&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">1.2</span><span class="number">.2</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">5.1</span><span class="number">.30</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;druid&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">1.1</span><span class="number">.9</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.aspectj&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">1.8</span><span class="number">.4</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;commons-dbcp&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-dbcp&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">1.2</span><span class="number">.2</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;!-- redis包 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;redis.clients&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jedis&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">2.9</span><span class="number">.0</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.data&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-data-redis&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">1.6</span><span class="number">.2</span>.RELEASE&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;!-- 腾讯云短信平台--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.tencentcloudapi&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;tencentcloud-sdk-java&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">3.1</span><span class="number">.172</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;commons-lang&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-lang&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">2.6</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-lang3&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">3.1</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;commons-lang&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-lang&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">2.5</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!--  引入jstlC标签--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.taglibs&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;taglibs-standard-spec&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">1.2</span><span class="number">.5</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.taglibs&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;taglibs-standard-impl&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">1.2</span><span class="number">.5</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;!-- 如果不添加此节点mybatis的mapper.xml文件都会被漏掉。 --&gt;</span><br><span class="line">        &lt;resources&gt;</span><br><span class="line">            &lt;resource&gt;</span><br><span class="line">                &lt;directory&gt;src/main/java&lt;/directory&gt;</span><br><span class="line">                &lt;includes&gt;</span><br><span class="line">                    &lt;include&gt;**<span class="comment">/*.properties&lt;/include&gt;</span></span><br><span class="line"><span class="comment">                    &lt;include&gt;**/</span>*.xml&lt;/include&gt;</span><br><span class="line">                &lt;/includes&gt;</span><br><span class="line">                &lt;filtering&gt;<span class="literal">false</span>&lt;/filtering&gt;</span><br><span class="line">            &lt;/resource&gt;</span><br><span class="line">            &lt;resource&gt;</span><br><span class="line">                &lt;directory&gt;src/main/resources&lt;/directory&gt;</span><br><span class="line">                &lt;includes&gt;</span><br><span class="line">                    &lt;include&gt;**<span class="comment">/*.properties&lt;/include&gt;</span></span><br><span class="line"><span class="comment">                    &lt;include&gt;**/</span>*.xml&lt;/include&gt;</span><br><span class="line">                &lt;/includes&gt;</span><br><span class="line">                &lt;filtering&gt;<span class="literal">false</span>&lt;/filtering&gt;</span><br><span class="line">            &lt;/resource&gt;</span><br><span class="line">        &lt;/resources&gt;</span><br><span class="line">    &lt;/build&gt;</span><br><span class="line">&lt;/project&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>文件组织结构</li>
</ol>
<p><img src="https://xxy8.github.io/images/ssm6.png" alt="image-20210701210845702"></p>
<ol start="3">
<li>数据库设置</li>
</ol>
<ul>
<li>管理员表(tb_admin)</li>
</ul>
<table>
<thead>
<tr>
<th><strong>表名（中文）</strong></th>
<th><strong>表名（英文）</strong></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><strong>管理员表</strong></td>
<td><strong>tb_admin</strong></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>字段名</strong></td>
<td><strong>数据类型</strong></td>
<td><strong>长度</strong></td>
<td><strong>备注</strong></td>
<td><strong>说明</strong></td>
</tr>
<tr>
<td>user_id</td>
<td>varchar</td>
<td>50</td>
<td>主键</td>
<td>用户id</td>
</tr>
<tr>
<td>login_name</td>
<td>varchar</td>
<td>50</td>
<td></td>
<td>登录名</td>
</tr>
<tr>
<td>user_name</td>
<td>varchar</td>
<td>255</td>
<td></td>
<td>用户名</td>
</tr>
<tr>
<td>password</td>
<td>varchar</td>
<td>100</td>
<td></td>
<td>用户密码</td>
</tr>
<tr>
<td>phone</td>
<td>varchar</td>
<td>11</td>
<td></td>
<td>手机号</td>
</tr>
<tr>
<td>email</td>
<td>varchar</td>
<td>30</td>
<td></td>
<td>电子邮箱</td>
</tr>
<tr>
<td>user_state</td>
<td>varchar</td>
<td>2</td>
<td></td>
<td>管理员状态</td>
</tr>
<tr>
<td>user_creatdata</td>
<td>Datatime</td>
<td></td>
<td></td>
<td>创建时间</td>
</tr>
</tbody></table>
<ul>
<li>用户表（tb_user）</li>
</ul>
<table>
<thead>
<tr>
<th><strong>表名（中文）</strong></th>
<th><strong>表名（英文）</strong></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><strong>用户表</strong></td>
<td><strong>tb_user</strong></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>字段名</strong></td>
<td><strong>数据类型</strong></td>
<td><strong>长度</strong></td>
<td><strong>备注</strong></td>
<td><strong>说明</strong></td>
</tr>
<tr>
<td>user_id</td>
<td>varchar</td>
<td>50</td>
<td>主键</td>
<td>用户id</td>
</tr>
<tr>
<td>login_name</td>
<td>varchar</td>
<td>50</td>
<td></td>
<td>登录名</td>
</tr>
<tr>
<td>user_name</td>
<td>varchar</td>
<td>255</td>
<td></td>
<td>用户名</td>
</tr>
<tr>
<td>password</td>
<td>varchar</td>
<td>100</td>
<td></td>
<td>用户密码</td>
</tr>
<tr>
<td>phone</td>
<td>varchar</td>
<td>11</td>
<td></td>
<td>手机号</td>
</tr>
<tr>
<td>email</td>
<td>varchar</td>
<td>30</td>
<td></td>
<td>电子邮箱</td>
</tr>
</tbody></table>
<ul>
<li>数字字典表（tb_base_dict）</li>
</ul>
<table>
<thead>
<tr>
<th><strong>表名（中文）</strong></th>
<th><strong>表名（英文）</strong></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><strong>数字字典表</strong></td>
<td><strong>tb_base_dict</strong></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>英文名称</strong></td>
<td><strong>数据类型</strong></td>
<td><strong>长度</strong></td>
<td><strong>备注</strong></td>
<td><strong>属性项名称</strong></td>
</tr>
<tr>
<td>dict_id</td>
<td>varchar</td>
<td>10</td>
<td>主键</td>
<td>数据字典id</td>
</tr>
<tr>
<td>dict_type_code</td>
<td>varchar</td>
<td>10</td>
<td></td>
<td>数据字典类别代码</td>
</tr>
<tr>
<td>dict_type_name</td>
<td>varchar</td>
<td>10</td>
<td></td>
<td>数据字典类别名称</td>
</tr>
<tr>
<td>dict_item_name</td>
<td>varchar</td>
<td>10</td>
<td></td>
<td>数据字典项目名称</td>
</tr>
<tr>
<td>dict_item_code</td>
<td>varchar</td>
<td>10</td>
<td></td>
<td>数据字典项目代码（可为空）</td>
</tr>
<tr>
<td>dict_sort</td>
<td>int</td>
<td>11</td>
<td></td>
<td>排序字段</td>
</tr>
<tr>
<td>dict_enable</td>
<td>varchar</td>
<td>2</td>
<td></td>
<td>是否可用：1：使用，0：停用</td>
</tr>
<tr>
<td>dict_memo</td>
<td>varchar</td>
<td>50</td>
<td></td>
<td>备注</td>
</tr>
</tbody></table>
<ol start="4">
<li>log4j.properties【控制台输出】</li>
</ol>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">log4j.rootLogger</span>=<span class="string">INFO,Console,File  </span></span><br><span class="line"><span class="comment">#定义日志输出目的地为控制台  </span></span><br><span class="line"><span class="attr">log4j.appender.Console</span>=<span class="string">org.apache.log4j.ConsoleAppender  </span></span><br><span class="line"><span class="attr">log4j.appender.Console.Target</span>=<span class="string">System.out  </span></span><br><span class="line"><span class="comment">#可以灵活地指定日志输出格式，下面一行是指定具体的格式  </span></span><br><span class="line"><span class="attr">log4j.appender.Console.layout</span> = <span class="string">org.apache.log4j.PatternLayout  </span></span><br><span class="line"><span class="attr">log4j.appender.Console.layout.ConversionPattern</span>=<span class="string">[%c] - %m%n  </span></span><br><span class="line"><span class="comment">  </span></span><br><span class="line"><span class="comment">#文件大小到达指定尺寸的时候产生一个新的文件  </span></span><br><span class="line"><span class="attr">log4j.appender.File</span> = <span class="string">org.apache.log4j.RollingFileAppender  </span></span><br><span class="line"><span class="comment">#指定输出目录  </span></span><br><span class="line"><span class="attr">log4j.appender.File.File</span> = <span class="string">logs/ssm.log  </span></span><br><span class="line"><span class="comment">#定义文件最大大小  </span></span><br><span class="line"><span class="attr">log4j.appender.File.MaxFileSize</span> = <span class="string">10MB  </span></span><br><span class="line"><span class="comment"># 输出所以日志，如果换成DEBUG表示输出DEBUG以上级别日志  </span></span><br><span class="line"><span class="attr">log4j.appender.File.Threshold</span> = <span class="string">ALL  </span></span><br><span class="line"><span class="attr">log4j.appender.File.layout</span> = <span class="string">org.apache.log4j.PatternLayout  </span></span><br><span class="line"><span class="attr">log4j.appender.File.layout.ConversionPattern</span> =<span class="string">[%p] [%d&#123;yyyy-MM-dd HH\:mm\:ss&#125;][%c]%m%n  </span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li>db.properties【数据库参数】</li>
</ol>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">jdbc.driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">jdbc.url</span>=<span class="string">jdbc:mysql://127.0.0.1:3306/vote_system?useUnicode=true&amp;characterEncoding=utf8</span></span><br><span class="line"><span class="attr">jdbc.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">jdbc.password</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">jdbc.initialSize</span>=<span class="string">0</span></span><br><span class="line"><span class="attr">jdbc.maxActive</span>=<span class="string">20</span></span><br><span class="line"><span class="attr">jdbc.maxIdle</span>=<span class="string">20</span></span><br><span class="line"><span class="attr">jdbc.minIdle</span>=<span class="string">1</span></span><br><span class="line"><span class="attr">jdbc.maxWait</span>=<span class="string">60000</span></span><br></pre></td></tr></table></figure>

<ol start="6">
<li>redis.properties【缓存参数】</li>
</ol>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">redis.host</span>=<span class="string">127.0.0.1</span></span><br><span class="line"><span class="attr">redis.port</span>=<span class="string">6379</span></span><br><span class="line"><span class="attr">redis.password</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">redis.timeout</span>=<span class="string">100000</span></span><br><span class="line"><span class="attr">redis.maxTotal</span>=<span class="string">300</span></span><br><span class="line"><span class="attr">redis.maxIdle</span>=<span class="string">200</span></span><br><span class="line"><span class="attr">redis.maxWait</span>=<span class="string">10000</span></span><br><span class="line"><span class="attr">redis.testOnBorrow</span>=<span class="string">true</span></span><br><span class="line"><span class="attr">redis.testOnReturn</span>=<span class="string">true</span></span><br><span class="line"><span class="comment"># 默认缓存失效时间</span></span><br><span class="line"><span class="attr">defaultCacheExpireTime</span>=<span class="string">3600</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="7">
<li>resource.properties【字典dict_type_code的值】</li>
</ol>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">customer.from.type</span>=<span class="string">002</span></span><br><span class="line"><span class="attr">customer.industry.type</span>=<span class="string">001</span></span><br><span class="line"><span class="attr">customer.level.type</span>=<span class="string">006</span></span><br></pre></td></tr></table></figure>

<ol start="8">
<li>spring.xml【Spring配置文件，有redis】</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span> </span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans    </span></span></span><br><span class="line"><span class="string"><span class="tag">                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd    </span></span></span><br><span class="line"><span class="string"><span class="tag">                        http://www.springframework.org/schema/context    </span></span></span><br><span class="line"><span class="string"><span class="tag">                        http://www.springframework.org/schema/context/spring-context-4.0.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">                        http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="string"><span class="tag">                        http://www.springframework.org/schema/tx/spring-tx.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">                        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="string"><span class="tag">                        http://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 自动扫描 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;cn.com.byte1024&quot;</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:db.properties&quot;</span> <span class="attr">ignore-unresolvable</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span> <span class="attr">init-method</span>=<span class="string">&quot;init&quot;</span> <span class="attr">destroy-method</span>=<span class="string">&quot;close&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 初始化连接大小 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.initialSize&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 连接池最大数量 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxActive&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.maxActive&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 连接池最大空闲 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxIdle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.maxIdle&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 连接池最小空闲 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minIdle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.minIdle&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 获取连接最大等待时间 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxWait&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.maxWait&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注入数据库连接池 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 自动扫描mapping.xml文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mapperLocations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:cn/com/byte1024/mapper/*Mapper.xml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 扫描包位置 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--当你设置这个 ，那么在Mybatis的Mapper文件里面就可以直接写对应的类名 而不用写全路径名了--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;typeAliasesPackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;cn.com.byte1024.entity&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- mapper接口所在包名，Spring会自动查找其下的类 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 给出需要扫描Mapper接口包 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;cn.com.byte1024.mapper&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注入sqlSessionFactory --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sqlSessionFactoryBeanName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;sqlSessionFactory&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- (事务管理)transaction manager, use JtaTransactionManager for global tx --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注入数据库连接池 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置事务 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 事务操作 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;get*&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;find*&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;select*&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;query*&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 设置非只读事务 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置AOP切面 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 切入点 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* cn.com.byte1024.service.impl.*.*(..))&quot;</span> <span class="attr">id</span>=<span class="string">&quot;pt&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 切面 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pt&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 导入spring-redis.xml --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;spring-redis.xml&quot;</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="9">
<li>applicationContext.xml【不用缓存，Spring配置文件，可选】</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/tx/spring-tx-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/context/spring-context-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/aop/spring-aop-4.3.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">    http://www.springframework.org/schema/beans &quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    配置数据源--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:db.properties&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=</span></span><br><span class="line"><span class="tag">            <span class="string">&quot;org.apache.commons.dbcp2.BasicDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.ur&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxTotal&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.maxTotal&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxIdle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.maxIdle&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.initialSize&#125;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    配置事务管理，依赖数据源--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=</span></span><br><span class="line"><span class="tag">            <span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    开启事务注解--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 通知 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 传播行为 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;save*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;insert*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;add*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;create*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;delete*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;update*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;find*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;SUPPORTS&quot;</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;select*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;SUPPORTS&quot;</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;get*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;SUPPORTS&quot;</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 切面 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;txAdvice&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">pointcut</span>=<span class="string">&quot;execution(* edu.hhtc.jsj.service.*.*(..))&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--mybatis sqlSessionFactory配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis-config.xml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mapperLocations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mappers/*.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置扫描dao接口包，mybatis动态实现dao接口，注入spring容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sqlSessionFactoryBeanName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;sqlSessionFactory&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;edu.hhtc.jsj.dao&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    扫描service--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;edu.hhtc.jsj.service&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="10">
<li>redis.properties【缓存参数】</li>
</ol>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">redis.host</span>=<span class="string">127.0.0.1</span></span><br><span class="line"><span class="attr">redis.port</span>=<span class="string">6379</span></span><br><span class="line"><span class="attr">redis.password</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">redis.timeout</span>=<span class="string">100000</span></span><br><span class="line"><span class="attr">redis.maxTotal</span>=<span class="string">300</span></span><br><span class="line"><span class="attr">redis.maxIdle</span>=<span class="string">200</span></span><br><span class="line"><span class="attr">redis.maxWait</span>=<span class="string">10000</span></span><br><span class="line"><span class="attr">redis.testOnBorrow</span>=<span class="string">true</span></span><br><span class="line"><span class="attr">redis.testOnReturn</span>=<span class="string">true</span></span><br><span class="line"><span class="comment"># 默认缓存失效时间</span></span><br><span class="line"><span class="attr">defaultCacheExpireTime</span>=<span class="string">3600</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="11">
<li>mybatis-config.xml【Mybatis配置文件，无redis】</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;edu.hhtc.jsj.entity&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="12">
<li>spring-redis.xml【redis配置文件】</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 加载配置文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:redis.properties&quot;</span> <span class="attr">ignore-unresolvable</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- redis连接池配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;jedisPoolConfig&quot;</span> <span class="attr">class</span>=<span class="string">&quot;redis.clients.jedis.JedisPoolConfig&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxIdle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;redis.maxIdle&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxTotal&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;redis.maxTotal&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxWaitMillis&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;redis.maxWait&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;testOnBorrow&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;redis.testOnBorrow&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;testOnReturn&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;redis.testOnReturn&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- redis连接工厂 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;connectionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.data.redis.connection.jedis.JedisConnectionFactory&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;poolConfig&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;jedisPoolConfig&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hostName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;redis.host&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;port&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;redis.port&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;redis.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;timeout&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;redis.timeout&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;redisTemplate&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.data.redis.core.RedisTemplate&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;connectionFactory&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;connectionFactory&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;keySerializer&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.data.redis.serializer.StringRedisSerializer&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;valueSerializer&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.data.redis.serializer.JdkSerializationRedisSerializer&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hashKeySerializer&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.data.redis.serializer.StringRedisSerializer&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hashValueSerializer&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.data.redis.serializer.StringRedisSerializer&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 缓存拦截器配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;methodCacheInterceptor&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.com.byte1024.interceptor.MethodCacheInterceptor&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;redisUtil&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;redisUtil&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;defaultCacheExpireTime&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;defaultCacheExpireTime&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 禁用缓存的类名列表 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;targetNamesList&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span><span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 禁用缓存的方法名列表 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;methodNamesList&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span><span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;redisUtil&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.com.byte1024.utils.RedisUtil&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;redisTemplate&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;redisTemplate&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置切面拦截方法 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;aop:config proxy-target-class=&quot;true&quot;&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;aop:pointcut id=&quot;controllerMethodPointcut&quot; expression=&quot;execution(* cn.com.byte1024.service.impl.*.list*(..))&quot;/&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;aop:advisor advice-ref=&quot;methodCacheInterceptor&quot; pointcut-ref=&quot;controllerMethodPointcut&quot;/&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;/aop:config&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="13">
<li>springmvc-config.xml【springMVC配置文件，无redis】</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 加载属性文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span></span></span><br><span class="line"><span class="tag">            <span class="attr">location</span>=<span class="string">&quot;classpath:resource.properties&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置扫描器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;edu.hhtc.jsj.controller&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--mvc注解支持--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 解除servlet对静态资源文件访问的限制 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置静态资源的访问映射，此配置中的文件，将不被前端控制器拦截 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">location</span>=<span class="string">&quot;/js/&quot;</span> <span class="attr">mapping</span>=<span class="string">&quot;/js/**&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">location</span>=<span class="string">&quot;/css/&quot;</span> <span class="attr">mapping</span>=<span class="string">&quot;/css/**&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">location</span>=<span class="string">&quot;/fonts/&quot;</span> <span class="attr">mapping</span>=<span class="string">&quot;/fonts/**&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">location</span>=<span class="string">&quot;/images/&quot;</span> <span class="attr">mapping</span>=<span class="string">&quot;/images/**&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 定义视图解析器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;viewResolver&quot;</span> <span class="attr">class</span>=</span></span><br><span class="line"><span class="tag">            <span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置前缀 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置后缀 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置文件上传解析器 MultipartResolver --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;multipartResolver&quot;</span> <span class="attr">class</span>=   <span class="string">&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置请求编码格式--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;defaultEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置上传文件最大长度--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxUploadSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2097152&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置推迟文件解析--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;resolveLazily&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 定义日期转换 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;conversionService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.format.support.FormattingConversionServiceFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;formatters&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;edu.hhtc.jsj.util.DateFormatter&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--使用bean直接定义在&lt;mvc:interceptors&gt;下面的拦截器将拦截所有请求--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  &lt;bean class=&quot;xxx.xxx.interceptor.XXXInterceptor&quot;/&gt; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 拦截器1 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">&quot;/secretary/*&quot;</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 定义在&lt;mvc:interceptor&gt;下面的表示匹配指定路径的请求才进行拦截的 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;edu.hhtc.jsj.interceptor.SecretaryInterceptor&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">&quot;/*&quot;</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 定义在&lt;mvc:interceptor&gt;下面的表示匹配指定路径的请求才进行拦截的 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;edu.hhtc.jsj.interceptor.LoginInterceptor&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="14">
<li>springmvc.xml【有缓存，SpringMVC配置文件】</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans    </span></span></span><br><span class="line"><span class="string"><span class="tag">                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    </span></span></span><br><span class="line"><span class="string"><span class="tag">                        http://www.springframework.org/schema/context    </span></span></span><br><span class="line"><span class="string"><span class="tag">                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    </span></span></span><br><span class="line"><span class="string"><span class="tag">                        http://www.springframework.org/schema/mvc    </span></span></span><br><span class="line"><span class="string"><span class="tag">                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd&quot;</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;cn.com.byte1024.controller&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line">    <span class="comment">&lt;!--避免IE执行AJAX时，返回JSON出现下载文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;mappingJacksonHttpMessageConverter&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.json.MappingJackson2HttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;supportedMediaTypes&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>application/json;charset=UTF-8<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>text/plain;charset=UTF-8<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>text/html;charset=UTF-8<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;messageConverters&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;mappingJacksonHttpMessageConverter&quot;</span> /&gt;</span> <span class="comment">&lt;!-- JSON转换器 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 开启静态资源处理 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 定义跳转的文件的前后缀 ，视图模式配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;multipartResolver&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 默认编码 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;defaultEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 文件大小最大值 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxUploadSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10485760000&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 内存中的最大值 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxInMemorySize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;40960&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span> </span><br></pre></td></tr></table></figure>

<ol start="15">
<li>generatorConfig.xml【自动生成缓存配置文件，有redis】</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span>  </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">generatorConfiguration</span>  </span></span><br><span class="line"><span class="meta">  <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span>  </span></span><br><span class="line"><span class="meta">  <span class="string">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span>  </span><br><span class="line"><span class="comment">&lt;!-- 数据库驱动--&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">classPathEntry</span>  <span class="attr">location</span>=<span class="string">&quot;mysql-connector-java-5.1.23-bin.jar&quot;</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">&quot;DB2Tables&quot;</span>  <span class="attr">targetRuntime</span>=<span class="string">&quot;MyBatis3&quot;</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suppressDate&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span>  </span><br><span class="line">            <span class="comment">&lt;!-- 是否去除自动生成的注释 true：是 ： false:否 --&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suppressAllComments&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span>  </span><br><span class="line">        <span class="comment">&lt;!--数据库链接URL，用户名、密码 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span> <span class="attr">connectionURL</span>=<span class="string">&quot;jdbc:mysql://127.0.0.1:3306/vote_system&quot;</span> <span class="attr">userId</span>=<span class="string">&quot;root&quot;</span> <span class="attr">password</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">javaTypeResolver</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;forceBigDecimals&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaTypeResolver</span>&gt;</span>  </span><br><span class="line">        <span class="comment">&lt;!-- 生成模型的包名和位置 实体类--&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;cn.com.byte1024.entity&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;.././java&quot;</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;trimStrings&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span>  </span><br><span class="line">        <span class="comment">&lt;!-- 生成映射文件的包名和位置 映射xml文件--&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;cn.com.byte1024.mapper&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;.././java&quot;</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span>  </span><br><span class="line">        <span class="comment">&lt;!-- 生成DAO的包名和位置 --&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">&quot;XMLMAPPER&quot;</span> <span class="attr">targetPackage</span>=<span class="string">&quot;cn.com.byte1024.mapper&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;.././java&quot;</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span>  </span><br><span class="line">        <span class="comment">&lt;!-- 要生成的表 tableName是数据库中的表名或视图名 domainObjectName是实体类名--&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;user&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;User&quot;</span> <span class="attr">enableCountByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableUpdateByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableDeleteByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableSelectByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">selectByExampleQueryId</span>=<span class="string">&quot;false&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;user_vote_project&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;UserVoteProject&quot;</span> <span class="attr">enableCountByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableUpdateByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableDeleteByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableSelectByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">selectByExampleQueryId</span>=<span class="string">&quot;false&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;vote&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;Vote&quot;</span> <span class="attr">enableCountByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableUpdateByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableDeleteByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableSelectByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">selectByExampleQueryId</span>=<span class="string">&quot;false&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;vote_log&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;VoteLog&quot;</span> <span class="attr">enableCountByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableUpdateByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableDeleteByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableSelectByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">selectByExampleQueryId</span>=<span class="string">&quot;false&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;vote_project&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;VoteProject&quot;</span> <span class="attr">enableCountByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableUpdateByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableDeleteByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableSelectByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">selectByExampleQueryId</span>=<span class="string">&quot;false&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;vote_project_vote&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;VoteProjectVote&quot;</span> <span class="attr">enableCountByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableUpdateByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableDeleteByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableSelectByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">selectByExampleQueryId</span>=<span class="string">&quot;false&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;register_log&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;RegisterLog&quot;</span> <span class="attr">enableCountByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableUpdateByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableDeleteByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableSelectByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">selectByExampleQueryId</span>=<span class="string">&quot;false&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--&lt;table tableName=&quot;tb_help&quot; domainObjectName=&quot;Help&quot; enableCountByExample=&quot;false&quot; enableUpdateByExample=&quot;false&quot; enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;false&quot; selectByExampleQueryId=&quot;false&quot;&gt;&lt;/table&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;tb_admin&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;Admin&quot;</span> <span class="attr">selectByExampleQueryId</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableSelectByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableDeleteByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableUpdateByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableCountByExample</span>=<span class="string">&quot;false&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 在这个目录下用cmd和这个命令生成实体类、dao、xml映射文件 --&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- java -jar mybatis-generator-core-1.3.2.jar -configfile generatorConfig.xml -overwrite --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="16">
<li>web.xml【有redis】</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">web-app</span> <span class="keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta"> <span class="string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta"> <span class="string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;3.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>VoteSystem<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Spring和mybatis的配置文件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 编码过滤器 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">async-supported</span>&gt;</span>true<span class="tag">&lt;/<span class="name">async-supported</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Spring监听器 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 防止Spring内存溢出监听器 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.util.IntrospectorCleanupListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- Spring MVC servlet --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring*.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">async-supported</span>&gt;</span>true<span class="tag">&lt;/<span class="name">async-supported</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 此处可以可以配置成*.do，对应struts的后缀习惯 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;welcome-file&gt;/WEB-INF/jsp/login.jsp&lt;/welcome-file&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>/WEB-INF/jsp/front.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="17">
<li>web.xml【无缓存】</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">web-app</span> <span class="keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta"> <span class="string">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta"> <span class="string">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">id</span>=<span class="string">&quot;WebAPP_id&quot;</span> <span class="attr">version</span>=<span class="string">&quot;3.1&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置前端过滤器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">      org.springframework.web.servlet.DispatcherServlet</span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 初始化时加载配置文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc-config.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 表示容器在启动时立即加载Servlet --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="18">
<li>entity【实体类】</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.com.byte1024.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String userId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String loginName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUserId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserId</span><span class="params">(String userId)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userId = userId == <span class="literal">null</span> ? <span class="literal">null</span> : userId.trim();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getLoginName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> loginName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setLoginName</span><span class="params">(String loginName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.loginName = loginName == <span class="literal">null</span> ? <span class="literal">null</span> : loginName.trim();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUserName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserName</span><span class="params">(String userName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userName = userName == <span class="literal">null</span> ? <span class="literal">null</span> : userName.trim();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.password = password == <span class="literal">null</span> ? <span class="literal">null</span> : password.trim();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPhone</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> phone;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPhone</span><span class="params">(String phone)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.phone = phone == <span class="literal">null</span> ? <span class="literal">null</span> : phone.trim();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getEmail</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEmail</span><span class="params">(String email)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.email = email == <span class="literal">null</span> ? <span class="literal">null</span> : email.trim();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="19">
<li>DAO【数据访问层】</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.com.byte1024.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.com.byte1024.entity.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line"></span><br><span class="line">    User <span class="title function_">selectByUser</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    User <span class="title function_">selectByLoginName</span><span class="params">(<span class="meta">@Param(value=&quot;phone&quot;)</span> String phone)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">saveUser</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    User <span class="title function_">selectByPrimaryKey</span><span class="params">(String userId)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">updateByPrimaryKeySelective</span><span class="params">(User record)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">deleteByPrimaryKey</span><span class="params">(String userId)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">insert</span><span class="params">(User record)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">insertSelective</span><span class="params">(User record)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> <span class="title function_">updateByPrimaryKey</span><span class="params">(User record)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="20">
<li>Mapper【数据访问层映射文件】</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;cn.com.byte1024.mapper.UserMapper&quot;</span> &gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;BaseResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;cn.com.byte1024.entity.User&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;user_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;userId&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;login_name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;loginName&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;user_name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;userName&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;password&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;phone&quot;</span> <span class="attr">property</span>=<span class="string">&quot;phone&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;email&quot;</span> <span class="attr">property</span>=<span class="string">&quot;email&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;Base_Column_List&quot;</span> &gt;</span></span><br><span class="line">    user_id, login_name, user_name, password, phone, email</span><br><span class="line">  <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByUser&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BaseResultMap&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;cn.com.byte1024.entity.User&quot;</span>&gt;</span></span><br><span class="line">    select</span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;Base_Column_List&quot;</span> /&gt;</span></span><br><span class="line">    from user </span><br><span class="line">    where login_name=#&#123;loginName,jdbcType=VARCHAR&#125; and password=#&#123;password,jdbcType=VARCHAR&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByLoginName&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;cn.com.byte1024.entity.User&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;java.lang.String&quot;</span>&gt;</span> 	</span><br><span class="line"> 	select </span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;Base_Column_List&quot;</span> /&gt;</span></span><br><span class="line">    from user </span><br><span class="line">    where login_name=#&#123;phone&#125; limit 1</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;saveUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;cn.com.byte1024.entity.User&quot;</span>&gt;</span></span><br><span class="line">		insert into</span><br><span class="line">		user(user_id,login_name,user_name,password,phone,email)</span><br><span class="line">		values(#&#123;userId&#125;,#&#123;loginName&#125;,#&#123;userName&#125;,#&#123;password&#125;,#&#123;phone&#125;,#&#123;email&#125;)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByPrimaryKey&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BaseResultMap&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;java.lang.String&quot;</span> &gt;</span></span><br><span class="line">    select </span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;Base_Column_List&quot;</span> /&gt;</span></span><br><span class="line">    from user</span><br><span class="line">    where user_id = #&#123;userId,jdbcType=VARCHAR&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteByPrimaryKey&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;java.lang.String&quot;</span> &gt;</span></span><br><span class="line">    delete from user</span><br><span class="line">    where user_id = #&#123;userId,jdbcType=VARCHAR&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insert&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;cn.com.byte1024.entity.User&quot;</span> &gt;</span></span><br><span class="line">    insert into user (user_id, login_name, user_name, </span><br><span class="line">      password, phone, email</span><br><span class="line">      )</span><br><span class="line">    values (#&#123;userId,jdbcType=VARCHAR&#125;, #&#123;loginName,jdbcType=VARCHAR&#125;, #&#123;userName,jdbcType=VARCHAR&#125;, </span><br><span class="line">      #&#123;password,jdbcType=VARCHAR&#125;, #&#123;phone,jdbcType=VARCHAR&#125;, #&#123;email,jdbcType=VARCHAR&#125;</span><br><span class="line">      )</span><br><span class="line">  <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertSelective&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;cn.com.byte1024.entity.User&quot;</span> &gt;</span></span><br><span class="line">    insert into user</span><br><span class="line">    <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;(&quot;</span> <span class="attr">suffix</span>=<span class="string">&quot;)&quot;</span> <span class="attr">suffixOverrides</span>=<span class="string">&quot;,&quot;</span> &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;userId != null&quot;</span> &gt;</span></span><br><span class="line">        user_id,</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;loginName != null&quot;</span> &gt;</span></span><br><span class="line">        login_name,</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;userName != null&quot;</span> &gt;</span></span><br><span class="line">        user_name,</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;password != null&quot;</span> &gt;</span></span><br><span class="line">        password,</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;phone != null&quot;</span> &gt;</span></span><br><span class="line">        phone,</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;email != null&quot;</span> &gt;</span></span><br><span class="line">        email,</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;values (&quot;</span> <span class="attr">suffix</span>=<span class="string">&quot;)&quot;</span> <span class="attr">suffixOverrides</span>=<span class="string">&quot;,&quot;</span> &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;userId != null&quot;</span> &gt;</span></span><br><span class="line">        #&#123;userId,jdbcType=VARCHAR&#125;,</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;loginName != null&quot;</span> &gt;</span></span><br><span class="line">        #&#123;loginName,jdbcType=VARCHAR&#125;,</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;userName != null&quot;</span> &gt;</span></span><br><span class="line">        #&#123;userName,jdbcType=VARCHAR&#125;,</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;password != null&quot;</span> &gt;</span></span><br><span class="line">        #&#123;password,jdbcType=VARCHAR&#125;,</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;phone != null&quot;</span> &gt;</span></span><br><span class="line">        #&#123;phone,jdbcType=VARCHAR&#125;,</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;email != null&quot;</span> &gt;</span></span><br><span class="line">        #&#123;email,jdbcType=VARCHAR&#125;,</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateByPrimaryKeySelective&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;cn.com.byte1024.entity.User&quot;</span> &gt;</span></span><br><span class="line">    update user</span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span> &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;loginName != null&quot;</span> &gt;</span></span><br><span class="line">        login_name = #&#123;loginName,jdbcType=VARCHAR&#125;,</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;userName != null&quot;</span> &gt;</span></span><br><span class="line">        user_name = #&#123;userName,jdbcType=VARCHAR&#125;,</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;password != null&quot;</span> &gt;</span></span><br><span class="line">        password = #&#123;password,jdbcType=VARCHAR&#125;,</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;phone != null&quot;</span> &gt;</span></span><br><span class="line">        phone = #&#123;phone,jdbcType=VARCHAR&#125;,</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;email != null&quot;</span> &gt;</span></span><br><span class="line">        email = #&#123;email,jdbcType=VARCHAR&#125;,</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    where user_id = #&#123;userId,jdbcType=VARCHAR&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateByPrimaryKey&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;cn.com.byte1024.entity.User&quot;</span> &gt;</span></span><br><span class="line">    update user</span><br><span class="line">    set login_name = #&#123;loginName,jdbcType=VARCHAR&#125;,</span><br><span class="line">      user_name = #&#123;userName,jdbcType=VARCHAR&#125;,</span><br><span class="line">      password = #&#123;password,jdbcType=VARCHAR&#125;,</span><br><span class="line">      phone = #&#123;phone,jdbcType=VARCHAR&#125;,</span><br><span class="line">      email = #&#123;email,jdbcType=VARCHAR&#125;</span><br><span class="line">    where user_id = #&#123;userId,jdbcType=VARCHAR&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="21">
<li>service【业务逻辑层接口】</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.com.byte1024.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.com.byte1024.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    User <span class="title function_">selectByUser</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    User <span class="title function_">selectByLoginName</span><span class="params">(String phone)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">saveUser</span><span class="params">(User user)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="22">
<li>service.impl【业务逻辑层实现类】</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.com.byte1024.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.com.byte1024.entity.User;</span><br><span class="line"><span class="keyword">import</span> cn.com.byte1024.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> cn.com.byte1024.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: VoteSystem</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span>: UserServiceImpl</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2021/4/4 2:13</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">selectByUser</span><span class="params">(User user)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.selectByUser(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">selectByLoginName</span><span class="params">(String phone)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.selectByLoginName(phone);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">saveUser</span><span class="params">(User user)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.saveUser(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="23">
<li>Controller【控制表现层】</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">package cn.com.byte1024.controller;</span><br><span class="line"></span><br><span class="line">import org.springframework.stereotype.Controller;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @ProjectName: VoteSystem</span><br><span class="line"> * @ClassName: LoginController</span><br><span class="line"> * @Description:</span><br><span class="line"> * @Author: xxy</span><br><span class="line"> * @Date: 2021/05/25 22:23</span><br><span class="line"> */</span><br><span class="line">@Controller</span><br><span class="line">@RequestMapping(&quot;/login&quot;)</span><br><span class="line">public class LoginController &#123;</span><br><span class="line">    </span><br><span class="line">    @RequestMapping(&quot;/goLoginJsp&quot;)</span><br><span class="line">    public String toLoginJsp()&#123;</span><br><span class="line">        return &quot;login&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    @RequestMapping(&quot;/goAdminLoginJsp&quot;)</span><br><span class="line">    public String goAdminLoginJsp()&#123;</span><br><span class="line">        return &quot;adminlogin&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="24">
<li>前端</li>
</ol>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> <span class="keyword">import</span>=<span class="string">&quot;java.util.*&quot;</span> pageEncoding=<span class="string">&quot;utf-8&quot;</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;renderer&quot;</span> content=<span class="string">&quot;webkit|ie-comp|ie-stand&quot;</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;IE=edge,chrome=1&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width,initial-scale=1,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no&quot;</span> /&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">&quot;Cache-Control&quot;</span> content=<span class="string">&quot;no-siteapp&quot;</span> /&gt;</span><br><span class="line">    &lt;!--[<span class="keyword">if</span> lt IE <span class="number">9</span>]&gt;</span><br><span class="line">    &lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/lib/html5shiv.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/lib/respond.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;![endif]--&gt;</span><br><span class="line">    &lt;link href=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/static/h-ui/css/H-ui.min.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span> type=<span class="string">&quot;text/css&quot;</span> /&gt;</span><br><span class="line">    &lt;link href=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/static/h-ui.admin/css/H-ui.login.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span> type=<span class="string">&quot;text/css&quot;</span> /&gt;</span><br><span class="line">    &lt;link href=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/static/h-ui.admin/css/style.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span> type=<span class="string">&quot;text/css&quot;</span> /&gt;</span><br><span class="line">    &lt;link href=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/css/bootstrap.min.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">    &lt;link href=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/lib/Hui-iconfont/1.0.8/iconfont.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span> type=<span class="string">&quot;text/css&quot;</span> /&gt;</span><br><span class="line">    &lt;link href=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/css/bootstrap.min.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/css/font-awesome.min.css&quot;</span>&gt;</span><br><span class="line">    &lt;link href=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/css/front.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">    &lt;!--[<span class="keyword">if</span> IE <span class="number">6</span>]&gt;</span><br><span class="line">    &lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/lib/DD_belatedPNG_0.0.8a-min.js&quot;</span> &gt;&lt;/script&gt;</span><br><span class="line">    &lt;script&gt;DD_belatedPNG.fix(<span class="string">&#x27;*&#x27;</span>);&lt;/script&gt;</span><br><span class="line">    &lt;![endif]--&gt;</span><br><span class="line">    &lt;title&gt;登录 - 投票管理系统&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;hidden&quot;</span> id=<span class="string">&quot;&quot;</span> name=<span class="string">&quot;&quot;</span> value=<span class="string">&quot;&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 导航栏开始 --&gt;</span><br><span class="line">    &lt;nav class=<span class="string">&quot;navbar navbar-expand-lg navbar-dark bg-dark&quot;</span>&gt;</span><br><span class="line">        &lt;button class=<span class="string">&quot;navbar-toggler&quot;</span> type=<span class="string">&quot;button&quot;</span> data-toggle=<span class="string">&quot;collapse&quot;</span> data-target=<span class="string">&quot;#navbarsExample08&quot;</span> aria-controls=<span class="string">&quot;navbarsExample08&quot;</span> aria-expanded=<span class="string">&quot;false&quot;</span> aria-label=<span class="string">&quot;Toggle navigation&quot;</span>&gt;</span><br><span class="line">            &lt;span class=<span class="string">&quot;navbar-toggler-icon&quot;</span>&gt;&lt;/span&gt;</span><br><span class="line">        &lt;/button&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div class=<span class="string">&quot;collapse navbar-collapse justify-content-md-center&quot;</span> id=<span class="string">&quot;navbarsExample08&quot;</span>&gt;</span><br><span class="line">            &lt;ul class=<span class="string">&quot;navbar-nav&quot;</span>&gt;</span><br><span class="line">                &lt;li class=<span class="string">&quot;nav-item&quot;</span>&gt;</span><br><span class="line">                    &lt;div class=<span class="string">&quot;nav-link&quot;</span>&gt;</span><br><span class="line">                        &lt;i class=<span class="string">&quot;fa fa-paper-plane-o fa-fw&quot;</span>&gt;&lt;/i&gt;有你一票</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li class=<span class="string">&quot;nav-item&quot;</span>&gt;</span><br><span class="line">                    &lt;a class=<span class="string">&quot;nav-link&quot;</span> href=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/front/goFrontJsp&quot;</span>&gt;&lt;i class=<span class="string">&quot;fa fa-home fa-fw&quot;</span> aria-hidden=<span class="string">&quot;true&quot;</span>&gt;&lt;/i&gt;首页&lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;%--  &lt;li class=<span class="string">&quot;nav-item&quot;</span>&gt;</span><br><span class="line">                      &lt;a class=<span class="string">&quot;nav-link&quot;</span> href=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/front/goClassifyJsp&quot;</span>&gt;&lt;i class=<span class="string">&quot;fa fa-pie-chart fa-fw&quot;</span>&gt;&lt;/i&gt;分类&lt;/a&gt;</span><br><span class="line">                  &lt;/li&gt;--%&gt;</span><br><span class="line"></span><br><span class="line">                &lt;li class=<span class="string">&quot;nav-item&quot;</span>&gt;</span><br><span class="line">                    &lt;a class=<span class="string">&quot;nav-link&quot;</span> href=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/front/goHelpJsp&quot;</span>&gt;&lt;i class=<span class="string">&quot;fa fa-heart fa-fw&quot;</span>&gt;&lt;/i&gt;帮助&lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li class=<span class="string">&quot;nav-item&quot;</span>&gt;</span><br><span class="line">                    &lt;a class=<span class="string">&quot;nav-link&quot;</span> href=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/front/goAboutJsp&quot;</span>&gt;&lt;i class=<span class="string">&quot;fa fa-envelope fa-fw&quot;</span>&gt;&lt;/i&gt;关于&lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li class=<span class="string">&quot;nav-item&quot;</span>&gt;</span><br><span class="line">                    &lt;a class=<span class="string">&quot;nav-link&quot;</span> href=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/front/goFeedbackAddJsp&quot;</span>&gt;&lt;i class=<span class="string">&quot;fa fa-undo fa-fw&quot;</span>&gt;&lt;/i&gt;反馈&lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li class=<span class="string">&quot;nav-item&quot;</span>&gt;</span><br><span class="line">                    &lt;a class=<span class="string">&quot;nav-link btn btn-outline-success&quot;</span> href=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/register/goRegisterJsp&quot;</span>&gt;&lt;i class=<span class="string">&quot;fa fa-user fa-fw&quot;</span>&gt;&lt;/i&gt;注册&lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/nav&gt;</span><br><span class="line">    &lt;!-- 导航栏结束 --&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class=<span class="string">&quot;loginWraper&quot;</span> &lt;%--style=<span class="string">&quot;background: url(&#x27;$&#123;pageContext.request.contextPath&#125;/static/h-ui.admin/images/liti2.jpg&#x27;)&quot;</span>--%&gt;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div id=<span class="string">&quot;loginform&quot;</span> class=<span class="string">&quot;loginBox&quot;</span> style=<span class="string">&quot;height: 400px&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div class=<span class="string">&quot;lg-title&quot;</span>&gt;</span><br><span class="line">            &lt;h3&gt;&lt;i class=<span class="string">&quot;fa fa-paper-plane-o fa-fw&quot;</span>&gt;&lt;/i&gt;有你一票&lt;/h3&gt;</span><br><span class="line">            &lt;span  style=<span class="string">&quot;color: red;&quot;</span>&gt;$&#123;msg &#125;&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;form class=<span class="string">&quot;form form-horizontal&quot;</span> id=<span class="string">&quot;loginForm1&quot;</span> action=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/user/login&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">            &lt;div class=<span class="string">&quot;row cl&quot;</span>&gt;</span><br><span class="line">                &lt;label class=<span class="string">&quot;form-label col-xs-3&quot;</span>&gt;&lt;i class=<span class="string">&quot;Hui-iconfont&quot;</span>&gt;&amp;#xe60d;&lt;/i&gt;&lt;/label&gt;</span><br><span class="line">                &lt;div class=<span class="string">&quot;formControls col-xs-8&quot;</span>&gt;</span><br><span class="line">                    &lt;input id=<span class="string">&quot;loginName&quot;</span> name=<span class="string">&quot;loginName&quot;</span> type=<span class="string">&quot;text&quot;</span> placeholder=<span class="string">&quot;请输入账户&quot;</span> class=<span class="string">&quot;input-text size-L&quot;</span> required=<span class="string">&quot;required&quot;</span>&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;br&gt;</span><br><span class="line">            &lt;div class=<span class="string">&quot;row cl&quot;</span>&gt;</span><br><span class="line">                &lt;label class=<span class="string">&quot;form-label col-xs-3&quot;</span>&gt;&lt;i class=<span class="string">&quot;Hui-iconfont&quot;</span>&gt;&amp;#xe60e;&lt;/i&gt;&lt;/label&gt;</span><br><span class="line">                &lt;div class=<span class="string">&quot;formControls col-xs-8&quot;</span>&gt;</span><br><span class="line">                    &lt;input id=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;password&quot;</span> type=<span class="string">&quot;password&quot;</span> placeholder=<span class="string">&quot;请输入密码&quot;</span> class=<span class="string">&quot;input-text size-L&quot;</span> required=<span class="string">&quot;required&quot;</span>&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">       </span><br><span class="line">           &lt;%-- &lt;div class=<span class="string">&quot;row cl&quot;</span>&gt;</span><br><span class="line">                &lt;div class=<span class="string">&quot;formControls col-xs-8 col-xs-offset-3&quot;</span>&gt;</span><br><span class="line">                    &lt;label <span class="keyword">for</span>=<span class="string">&quot;online&quot;</span>&gt;</span><br><span class="line">                        &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;online&quot;</span> id=<span class="string">&quot;online&quot;</span> value=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">                        记住密码&lt;/label&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;--%&gt;</span><br><span class="line">            &lt;div class=<span class="string">&quot;row cl&quot;</span>&gt;</span><br><span class="line">                &lt;div class=<span class="string">&quot;formControls col-xs-8 col-xs-offset-3&quot;</span>&gt;</span><br><span class="line">                    &lt;input name=<span class="string">&quot;&quot;</span> type=<span class="string">&quot;submit&quot;</span> class=<span class="string">&quot;btn btn-success radius size-L&quot;</span> value=<span class="string">&quot;&amp;nbsp;登&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;录&amp;nbsp;&quot;</span>&gt;&amp;nbsp;&amp;nbsp;</span><br><span class="line">                    &lt;input name=<span class="string">&quot;&quot;</span> type=<span class="string">&quot;reset&quot;</span> class=<span class="string">&quot;btn btn-default radius size-L&quot;</span> value=<span class="string">&quot;&amp;nbsp;重&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;置&amp;nbsp;&quot;</span>&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">           &lt;%-- &lt;div class=<span class="string">&quot;row cl&quot;</span>&gt;</span><br><span class="line">                &lt;div class=<span class="string">&quot;formControls col-xs-8 col-xs-offset-3&quot;</span>&gt;</span><br><span class="line">                    &lt;a href=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/register/goRegisterJsp&quot;</span> style=<span class="string">&quot;&quot;</span>&gt;还没有账号？免费注册&lt;/a&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;--%&gt;</span><br><span class="line">            &lt;div style=<span class="string">&quot;font-size:14px;color:red;width:180px;height:15px;padding:15px 0px 0px 45px;overflow:hidden;&quot;</span> id=<span class="string">&quot;msg&quot;</span>&gt;$&#123;msg&#125;&lt;/div&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=<span class="string">&quot;footer&quot;</span>&gt;&lt;i class=<span class="string">&quot;fa fa-paper-plane-o fa-fw&quot;</span>&gt;&lt;/i&gt;Copyright © <span class="number">2021</span> 玄宇有限公司 投票管理系统v1<span class="number">.0</span>. All Rights Reserved.&lt;/div&gt;</span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/lib/jquery/1.9.1/jquery.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/static/h-ui/js/H-ui.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/js/bootstrap.bundle.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<h2 id="15-总结"><a href="#15-总结" class="headerlink" title="15. 总结"></a>15. 总结</h2><p>总结了JavaSSM企业框架，明白要做的事情还有很多，要走的路还有很长，时间很短，却要做很多来不及的事情，随心出发最好。</p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>java常用类</title>
    <url>/2022/05/09/java%E5%B8%B8%E7%94%A8%E7%B1%BB/</url>
    <content><![CDATA[<blockquote>
<center>大学之道，在明明德，在亲民，在止于至善</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<blockquote>
<p>是一些比较常见的常用类，不是所有的常用类。</p>
</blockquote>
<h2 id="1-Object（所有类的父类）"><a href="#1-Object（所有类的父类）" class="headerlink" title="1. Object（所有类的父类）"></a>1. Object（所有类的父类）</h2><center>Object类的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>Object clone()</td>
<td>普通</td>
<td>浅拷贝，需要实现Cloneable接口,深拷贝需要反序列化</td>
</tr>
<tr>
<td>boolean equals(Object)</td>
<td>普通</td>
<td>比较两个对象的地址是否相等</td>
</tr>
<tr>
<td>void finalize()</td>
<td>普通</td>
<td>当垃圾回收器确定不存在对该对象的更多引用时，对象的圾回收器调用该方法</td>
</tr>
<tr>
<td>Class getClass()</td>
<td>普通</td>
<td>反射返回一个对象运行时的实例类（.class文件）</td>
</tr>
<tr>
<td>int hashCode()</td>
<td>普通</td>
<td>返回该对象的散列码值，可以判断两个对象是否相等，不同一定不等，相同不一定相等</td>
</tr>
<tr>
<td>void notify()</td>
<td>普通</td>
<td>激活等待在该对象的监视器上的一个线程，notify(), wait()依赖于“同步锁”&lt;共享的资源&gt;</td>
</tr>
<tr>
<td>void notifyAll()</td>
<td>普通</td>
<td>激活等待在该对象的监视器上的全部线程</td>
</tr>
<tr>
<td>String toString()</td>
<td>普通</td>
<td>默认返回运行时类名+@+对象的hashCode的16进制数</td>
</tr>
<tr>
<td>void wait()</td>
<td>普通</td>
<td>在其他线程调用此对象的 notify() 方法或 notifyAll() 方法前，导致当前线程等待</td>
</tr>
</tbody></table>
<h2 id="2-String类"><a href="#2-String类" class="headerlink" title="2. String类"></a>2. String类</h2><center>String类的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>String()</td>
<td>构造</td>
<td>创建一个空的字符串</td>
</tr>
<tr>
<td>String(byte[] bys)</td>
<td>构造</td>
<td>通过字节数组创建字符串</td>
</tr>
<tr>
<td>String(char[] chs)</td>
<td>构造</td>
<td>通过字符数组创建字符串</td>
</tr>
<tr>
<td>String(byte[] bys,int offset,int length)</td>
<td>构造</td>
<td>通过字节数组一部分创建字符串</td>
</tr>
<tr>
<td>String(char[] chs,int offset,int length)</td>
<td>构造</td>
<td>通过字符数组一部分创建字符串</td>
</tr>
<tr>
<td>String(String original)</td>
<td>构造</td>
<td>通过字符串常量值创建字符串</td>
</tr>
<tr>
<td>equals(Object obj)</td>
<td>普通</td>
<td>比较两个字符串是否相等</td>
</tr>
<tr>
<td>equalsIngnoreCase(Object obj)</td>
<td>普通</td>
<td>忽略大小写比较两个字符串是否相等</td>
</tr>
<tr>
<td>contains(String str)</td>
<td>普通</td>
<td>是否包含指定字符串</td>
</tr>
<tr>
<td>startsWith(String str)</td>
<td>普通</td>
<td>是否以指定的字符串开头</td>
</tr>
<tr>
<td>endWith(String str)</td>
<td>普通</td>
<td>是否以指定的字符串结尾</td>
</tr>
<tr>
<td>isEmpty()</td>
<td>普通</td>
<td>是否为空</td>
</tr>
<tr>
<td>matches(String regex)</td>
<td>普通</td>
<td>判断字符串是否匹配给定的正则表达式</td>
</tr>
<tr>
<td>length()</td>
<td>普通</td>
<td>获取长度</td>
</tr>
<tr>
<td>charAt(int index)</td>
<td>普通</td>
<td>获取指定索引位置处的字符</td>
</tr>
<tr>
<td>indexOf(int ch)</td>
<td>普通</td>
<td>获取指定字符第一次出现的索引值(从0开始)</td>
</tr>
<tr>
<td>indexOf(int ch,int fromIndex)</td>
<td>普通</td>
<td>获取从指定索引位置开始，获取指定字符第一次出现的索引值</td>
</tr>
<tr>
<td>indexOf(String s)</td>
<td>普通</td>
<td>获取指定字符串第一次出现的索引值</td>
</tr>
<tr>
<td>indexOf(String s,int fromIndex)</td>
<td>普通</td>
<td>获取从指定索引位置开始，获取指定字符串第一次出现的索引值</td>
</tr>
<tr>
<td>lastIndexOf(int ch)</td>
<td>普通</td>
<td>获取指定字符最后一次出现的索引值</td>
</tr>
<tr>
<td>substring(int start)</td>
<td>普通</td>
<td>从指定位置开始一直截取到末尾</td>
</tr>
<tr>
<td>substring(int start,int end)</td>
<td>普通</td>
<td>截取[start,end)范围</td>
</tr>
<tr>
<td>byte[] getBytes()</td>
<td>普通</td>
<td>将字符串转成字节数组</td>
</tr>
<tr>
<td>char[] toCharArray()</td>
<td>普通</td>
<td>将字符串转成字符数组</td>
</tr>
<tr>
<td>static valueOf(char[] chs)</td>
<td>普通</td>
<td>将char[]转成字符串</td>
</tr>
<tr>
<td>static valueOf(int num)</td>
<td>普通</td>
<td>将int类型转成字符串</td>
</tr>
<tr>
<td>static valueOf(Object obj)</td>
<td>普通</td>
<td>将任意类型转成字符串</td>
</tr>
<tr>
<td>toLowerCase()</td>
<td>普通</td>
<td>转成小写</td>
</tr>
<tr>
<td>toUpcase()</td>
<td>普通</td>
<td>转成大写</td>
</tr>
<tr>
<td>concat(String str)</td>
<td>普通</td>
<td>字符连接</td>
</tr>
<tr>
<td>replace(char old,char new)</td>
<td>普通</td>
<td>将old字符替换成new字符</td>
</tr>
<tr>
<td>replace(String old,String new)</td>
<td>普通</td>
<td>将old字符串替换成new字符串</td>
</tr>
<tr>
<td>trim()</td>
<td>普通</td>
<td>去除两边空格</td>
</tr>
<tr>
<td>int compareTo(String s)</td>
<td>普通</td>
<td>字典比较，如果前面值小于后面值返回负数，否则返回正数，先比较第一个元素，如果相等再比较第二个元素…返回元素之间的差值；如果比较字符串有包含关系，返回的值是它们长度的差值</td>
</tr>
<tr>
<td>int compareToIgnoreCase(String s)</td>
<td>普通</td>
<td>忽略大小写字典比较</td>
</tr>
<tr>
<td>String replaceAll(String regex, String replacement)</td>
<td>普通</td>
<td>使用给定的 replacement 替换此字符串所有匹配给定的正则表达式的子字符串</td>
</tr>
<tr>
<td>String replaceFirst(String regex, String replacement)</td>
<td>普通</td>
<td>使用给定的 replacement 替换此字符串匹配给定的正则表达式的第一个子字符串</td>
</tr>
<tr>
<td>String[] split(String regex)</td>
<td>普通</td>
<td>根据给定正则表达式的匹配拆分此字符串</td>
</tr>
<tr>
<td>String[] split(String regex, int limit)</td>
<td>普通</td>
<td>根据匹配给定的正则表达式来拆分此字符串</td>
</tr>
</tbody></table>
<h2 id="3-StringBuilder类"><a href="#3-StringBuilder类" class="headerlink" title="3. StringBuilder类"></a>3. StringBuilder类</h2><center>StringBuilder类的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>StringBuilder()</td>
<td>构造</td>
<td>以默认容量创建空的StringBuilder对象</td>
</tr>
<tr>
<td>StringBuilder(int capacity)</td>
<td>构造</td>
<td>以指定容量创建空的StringBuilder对象</td>
</tr>
<tr>
<td>StringBuilder(String str)</td>
<td>构造</td>
<td>以指定的字符串创建StringBuilder对象</td>
</tr>
<tr>
<td>int capacity()</td>
<td>普通</td>
<td>获取容量</td>
</tr>
<tr>
<td>int length()</td>
<td>普通</td>
<td>获取长度</td>
</tr>
<tr>
<td>append(int value)</td>
<td>普通</td>
<td>追加。可以追加多种类型</td>
</tr>
<tr>
<td>insert(int offset,String s)</td>
<td>普通</td>
<td>在指定的位置插入指定数据</td>
</tr>
<tr>
<td>deleteCharAt(int index)</td>
<td>普通</td>
<td>删除指定索引处的元素</td>
</tr>
<tr>
<td>delete(int start,int end)</td>
<td>普通</td>
<td>删除[start,start-1]范围内的元素</td>
</tr>
<tr>
<td>replace(int start,int end,String s)</td>
<td>普通</td>
<td>将[start,end-1]范围内的元素替换成指定字符串</td>
</tr>
<tr>
<td>reverse()</td>
<td>普通</td>
<td>元素反转</td>
</tr>
<tr>
<td>String subString(int start)</td>
<td>普通</td>
<td>截取指定位置一直到末尾</td>
</tr>
<tr>
<td>String subString(int start,int end)</td>
<td>普通</td>
<td>截取[start,end-1]范围</td>
</tr>
</tbody></table>
<h2 id="4-StringBuffer类"><a href="#4-StringBuffer类" class="headerlink" title="4.  StringBuffer类"></a>4.  StringBuffer类</h2><center>StringBuffer类的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>StringBuffer()</td>
<td>构造</td>
<td>以默认容量创建空的StringBuffer对象</td>
</tr>
<tr>
<td>StringBuffer(int capacity)</td>
<td>构造</td>
<td>以指定容量创建空的StringBuffer对象</td>
</tr>
<tr>
<td>StringBuffer(String str)</td>
<td>构造</td>
<td>以指定的字符串创建StringBuffer对象</td>
</tr>
<tr>
<td>append(int value)</td>
<td>普通</td>
<td>追加。可以追加多种类型</td>
</tr>
<tr>
<td>insert(int offset,String s)</td>
<td>普通</td>
<td>在指定的位置插入指定数据</td>
</tr>
<tr>
<td>delete(int start,int end)</td>
<td>普通</td>
<td>删除[start,start-1]范围内的元素</td>
</tr>
<tr>
<td>reverse()</td>
<td>普通</td>
<td>元素反转</td>
</tr>
</tbody></table>
<h2 id="5-CharSequence接口"><a href="#5-CharSequence接口" class="headerlink" title="5. CharSequence接口"></a>5. CharSequence接口</h2><center>CharSequence接口的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public char charAt(int index)</td>
<td>普通</td>
<td>获取指定索引的字符</td>
</tr>
<tr>
<td>public int length()</td>
<td>普通</td>
<td>获取字符串长度</td>
</tr>
<tr>
<td>public CharSequence subSequence(int start, int end)</td>
<td>普通</td>
<td>截取部分字符串</td>
</tr>
</tbody></table>
<blockquote>
<ul>
<li><p>String、StringBuilder、StringBuffer三者都实现了CharSequence接口</p>
</li>
<li><p>String内容不可改变，StringBuilder和StringBuffer内容可变</p>
</li>
<li><p>StringBuilder是线程不安全的，不同步，效率高；StringBuffer是线程安全的，同步，效率低</p>
</li>
</ul>
</blockquote>
<h2 id="6-编码表"><a href="#6-编码表" class="headerlink" title="6.  编码表"></a>6.  编码表</h2><center>编码表</center>

<table>
<thead>
<tr>
<th>编码名字</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>ASCII码</td>
<td>最高为是符号为，其他是数值位，所有编码表都兼容ASCII码表</td>
</tr>
<tr>
<td>ISO-8859-1</td>
<td>拉丁码表</td>
</tr>
<tr>
<td>BG2312</td>
<td>中文编码表</td>
</tr>
<tr>
<td>GBK</td>
<td>GB2312的升级版，1个汉字对应2个字节</td>
</tr>
<tr>
<td>GB18030</td>
<td>GBK的升级版</td>
</tr>
<tr>
<td>BIG-5</td>
<td>中文繁体编码表，俗称”大5码”</td>
</tr>
<tr>
<td>Unicode</td>
<td>国际标注码，所有字符都有两个字节表示，Java默认使用该编码表</td>
</tr>
<tr>
<td>UTF-8</td>
<td>万国码，一个汉字对应3个字节</td>
</tr>
</tbody></table>
<h2 id="7-正则表达式"><a href="#7-正则表达式" class="headerlink" title="7.  正则表达式"></a>7.  正则表达式</h2><center>正则表达式</center>

<table>
<thead>
<tr>
<th>正则表达式</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>x</td>
<td>x字符，a表a字符</td>
</tr>
<tr>
<td>\\</td>
<td>反斜线字符</td>
</tr>
<tr>
<td>\n</td>
<td>换行符</td>
</tr>
<tr>
<td>\r</td>
<td>回车符</td>
</tr>
<tr>
<td>\t</td>
<td>制表符</td>
</tr>
<tr>
<td>[abc]</td>
<td>表示a、b、c中的一个字符</td>
</tr>
<tr>
<td>[^abc]</td>
<td>表示不是a、b、c中的任何一个字符</td>
</tr>
<tr>
<td>[a-zA-Z]</td>
<td>表示a<del>z或A</del>Z中的一个字符</td>
</tr>
<tr>
<td>[0-9]</td>
<td>表示数字</td>
</tr>
<tr>
<td>.</td>
<td>表示任意字符</td>
</tr>
<tr>
<td>\.</td>
<td>表示’.’字符</td>
</tr>
<tr>
<td>\d</td>
<td>表示数字字符，[0-9]</td>
</tr>
<tr>
<td>\D</td>
<td>[^0-9],表示非数字字符</td>
</tr>
<tr>
<td>\w</td>
<td>表示单词字符，[a-zA-Z_0-9]</td>
</tr>
<tr>
<td>\W</td>
<td>[^a-zA-Z_0-9]，表示非单词字符</td>
</tr>
<tr>
<td>\s</td>
<td>任意一位空格如”\n“、”\t“</td>
</tr>
<tr>
<td>\S</td>
<td>任何一位非空格</td>
</tr>
<tr>
<td>^</td>
<td>表示行的开头</td>
</tr>
<tr>
<td>$</td>
<td>表示行的结尾</td>
</tr>
<tr>
<td>\b</td>
<td>表示单词的边界</td>
</tr>
<tr>
<td>?</td>
<td>表示0次或者1次</td>
</tr>
<tr>
<td>*</td>
<td>表示0次或者多次</td>
</tr>
<tr>
<td>+</td>
<td>表示1次或者多次</td>
</tr>
<tr>
<td>{n}</td>
<td>表示n次</td>
</tr>
<tr>
<td>{n,}</td>
<td>表示至少n次</td>
</tr>
<tr>
<td>{n,m}</td>
<td>n~m次</td>
</tr>
<tr>
<td>正则表达式A正则表达式B</td>
<td>与</td>
</tr>
<tr>
<td>正则表达式A|正则表达式B</td>
<td>或</td>
</tr>
<tr>
<td>（正则表达式）</td>
<td>多个作为一组表示</td>
</tr>
</tbody></table>
<h2 id="8-AutoCloseable接口"><a href="#8-AutoCloseable接口" class="headerlink" title="8. AutoCloseable接口"></a>8. AutoCloseable接口</h2><center>使用方式，自动关闭处理</center>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">IMessage</span> <span class="keyword">extends</span> <span class="title class_">AutoCloseable</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="9-Runtime类"><a href="#9-Runtime类" class="headerlink" title="9. Runtime类"></a>9. Runtime类</h2><center>Runtime类的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public static Runtime getRuntime()</td>
<td>普通</td>
<td>通过该类的实例对象来获取当前虚拟机的相关信息</td>
</tr>
<tr>
<td>public int availableProcessors()</td>
<td>普通</td>
<td>获取可以用的处理器的个数</td>
</tr>
<tr>
<td>long  maxMemory()</td>
<td>普通</td>
<td>返回 Java 虚拟机试图使用的最大内存量</td>
</tr>
<tr>
<td>long freeMemory()</td>
<td>普通</td>
<td>返回 Java 虚拟机中的空闲内存量</td>
</tr>
<tr>
<td>long totalMemory()</td>
<td>普通</td>
<td>返回 Java 虚拟机中的内存总量</td>
</tr>
<tr>
<td>void gc()</td>
<td>普通</td>
<td>运行垃圾收集器，释放垃圾空间</td>
</tr>
</tbody></table>
<h2 id="10-System类"><a href="#10-System类" class="headerlink" title="10. System类"></a>10. System类</h2><center>System类的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>没有构造方法</td>
<td></td>
<td></td>
</tr>
<tr>
<td>public static void arrayCopy(Object[] srcArr,int srcPos,Object[] desArr,int destPos,int len)</td>
<td>普通</td>
<td>数组复制</td>
</tr>
<tr>
<td>public static long  currentTimeMills()</td>
<td>普通</td>
<td>获取当前时间毫秒值</td>
</tr>
<tr>
<td>public static void gc()</td>
<td>普通</td>
<td>运行垃圾回收处理机制（系统会在某个不确定的时间调用该方法),会调用finalize()，进行垃圾回收</td>
</tr>
<tr>
<td>exit(int status)</td>
<td>普通</td>
<td>退出JVM，0表示非异常退出</td>
</tr>
</tbody></table>
<h2 id="11-Cleaner类"><a href="#11-Cleaner类" class="headerlink" title="11. Cleaner类"></a>11. Cleaner类</h2><center>使用方式，自动释放资源</center>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//传统回收前依靠finalize（），jdk1.9提供Cleaner类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MemberCleaning</span> <span class="keyword">implements</span> <span class="title class_">AutoCloseable</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="12-Math类"><a href="#12-Math类" class="headerlink" title="12. Math类"></a>12. Math类</h2><center>Math类的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>abs(int a)</td>
<td>普通</td>
<td>绝对值</td>
</tr>
<tr>
<td>ceil(double d)</td>
<td>普通</td>
<td>向上取整</td>
</tr>
<tr>
<td>floor(double d)</td>
<td>普通</td>
<td>向下取整</td>
</tr>
<tr>
<td>max(int a,int b)</td>
<td>普通</td>
<td>最大值</td>
</tr>
<tr>
<td>pow(double a,double b)</td>
<td>普通</td>
<td>a的b次幂</td>
</tr>
<tr>
<td>random()</td>
<td>普通</td>
<td>随机数[0.0,1.0]</td>
</tr>
<tr>
<td>round(float f)</td>
<td>普通</td>
<td>四舍五入</td>
</tr>
<tr>
<td>sqrt(double d)</td>
<td>普通</td>
<td>算术平方根</td>
</tr>
<tr>
<td>log(int a)</td>
<td>普通</td>
<td>对数</td>
</tr>
</tbody></table>
<h2 id="13-Random类"><a href="#13-Random类" class="headerlink" title="13. Random类"></a>13. Random类</h2><center>Random类的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>Random()</td>
<td>构造</td>
<td>以当前时间毫秒值作为种子，创建Random对象</td>
</tr>
<tr>
<td>Random(long seed)</td>
<td>构造</td>
<td>以指定种子创建Random对象</td>
</tr>
<tr>
<td>nextInt()</td>
<td>普通</td>
<td>生成1个int类型范围的随机数</td>
</tr>
<tr>
<td>nextInt(int n)</td>
<td>普通</td>
<td>产生1个[0,n-1]范围内的随机数</td>
</tr>
</tbody></table>
<h2 id="14-大数字处理类"><a href="#14-大数字处理类" class="headerlink" title="14. 大数字处理类"></a>14. 大数字处理类</h2><center>大数字处理类的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>BigInteger(String s)</td>
<td>构造</td>
<td>通过字符串创建BigInteger对象</td>
</tr>
<tr>
<td>add(BigInteger bi)</td>
<td>普通</td>
<td>加法运算</td>
</tr>
<tr>
<td>subtract(BigInteger bi)</td>
<td>普通</td>
<td>减法运算</td>
</tr>
<tr>
<td>multiply(BigInteger bi)</td>
<td>普通</td>
<td>乘法运算</td>
</tr>
<tr>
<td>divide(BigInteger bi)</td>
<td>普通</td>
<td>除法运算</td>
</tr>
<tr>
<td>public BigInteger remainder(BigInteger val)</td>
<td>普通</td>
<td>做取余运算</td>
</tr>
<tr>
<td>public BigInteger[] divideAndRemainder (BigInteger val)</td>
<td>普通</td>
<td>用数组返回余数和商，结果数组中第一个值为商，第二个值为余数</td>
</tr>
<tr>
<td>public BigInteger max(BigInteger val)</td>
<td>普通</td>
<td>返回较大的数值</td>
</tr>
<tr>
<td>public BigInteger min(BigInteger val)</td>
<td>普通</td>
<td>返回较小的数值</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>BigDecimal(String s)</td>
<td>构造</td>
<td>通过字符创建BigDecimal对象</td>
</tr>
<tr>
<td>BigDecimal(int s)</td>
<td>构造</td>
<td>通过int创建BigDecimal对象</td>
</tr>
<tr>
<td>BigDecimal(double s)</td>
<td>构造</td>
<td>通过double创建BigDecimal对象</td>
</tr>
<tr>
<td>public BigDecimal add(BigDecimal augend)</td>
<td>普通</td>
<td>做加法操作</td>
</tr>
<tr>
<td>ublic BigDecimal subtract(BigDecimal subtrahend)</td>
<td>普通</td>
<td>做减法操作</td>
</tr>
<tr>
<td>public BigDecimal multiply(BigDecimal multiplicand)</td>
<td>普通</td>
<td>做乘法操作</td>
</tr>
<tr>
<td>public BigDecimal divide(BigDecimal divisor , int sacle ,int roundingMode)</td>
<td>普通</td>
<td>做除法操作，方法中 3 个参数分别代表除数、商的小数点后的位数、近似处理模式</td>
</tr>
</tbody></table>
<h2 id="15-Date类"><a href="#15-Date类" class="headerlink" title="15. Date类"></a>15. Date类</h2><center>Date类的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>Date()</td>
<td>构造</td>
<td>以当前时间毫秒值创建Date对象</td>
</tr>
<tr>
<td>Date(long time)</td>
<td>构造</td>
<td>以指定的毫秒值创建Date对象</td>
</tr>
<tr>
<td>long getTime()</td>
<td>普通</td>
<td>获取Date对象的毫秒值</td>
</tr>
<tr>
<td>setTime(long time)</td>
<td>普通</td>
<td>设置Data对象的毫秒值</td>
</tr>
</tbody></table>
<h2 id="16-SimpleDateFormat类（子类）和DateFormat类（抽象类）"><a href="#16-SimpleDateFormat类（子类）和DateFormat类（抽象类）" class="headerlink" title="16. SimpleDateFormat类（子类）和DateFormat类（抽象类）"></a>16. SimpleDateFormat类（子类）和DateFormat类（抽象类）</h2><center>SimpleDateFormat类（子类）和DateFormat类（抽象类）的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>getDateInstance(int style,Locale loc)</td>
<td>普通</td>
<td>获取日期格式器，该格式器具有给定的语言环境和给定的格式化风格</td>
</tr>
<tr>
<td>String format(Date date)</td>
<td>普通</td>
<td>格式化</td>
</tr>
<tr>
<td>Date parse(String time)</td>
<td>普通</td>
<td>解析</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>SimpleDateFormat()</td>
<td>构造</td>
<td>以默认模式创建对象</td>
</tr>
<tr>
<td>SimpleDateFormat(String pattern)</td>
<td>构造</td>
<td>以指定模式创建对象</td>
</tr>
<tr>
<td>String format(Date date)</td>
<td>普通</td>
<td>格式化</td>
</tr>
<tr>
<td>Date parse(String time)</td>
<td>普通</td>
<td>解析</td>
</tr>
</tbody></table>
<h2 id="17-国际化"><a href="#17-国际化" class="headerlink" title="17. 国际化"></a>17. 国际化</h2><center>国际化使用方式</center>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Locale类</span></span><br><span class="line"><span class="type">locale</span> <span class="variable">loc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Locale</span>(<span class="string">&quot;zh&quot;</span>,<span class="string">&quot;CN&quot;</span>);</span><br></pre></td></tr></table></figure>

<h2 id="18-Arrays数组操作类"><a href="#18-Arrays数组操作类" class="headerlink" title="18. Arrays数组操作类"></a>18. Arrays数组操作类</h2><center>Arrays数组操作类的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public static void sort(Object[] a)</td>
<td>普通</td>
<td>升序排列</td>
</tr>
<tr>
<td>public static int binarySearch(Object[] a, Object key)</td>
<td>普通</td>
<td>对排好序的数组进行二分查找法操作</td>
</tr>
<tr>
<td>public static int compare(int[] a,int[] b)</td>
<td>普通</td>
<td>比较两个数组的大小，大于（返回1），小于（返回-1），等于（返回0）</td>
</tr>
<tr>
<td>public static boolean equals(long[] a, long[] a2)</td>
<td>普通</td>
<td>数组相等判断</td>
</tr>
<tr>
<td>public static void fill(int[] a, int val)</td>
<td>普通</td>
<td>数组填充</td>
</tr>
<tr>
<td>public static String toString(int[] a)</td>
<td>普通</td>
<td>数组转换为字符串</td>
</tr>
</tbody></table>
<h2 id="19-UUID类"><a href="#19-UUID类" class="headerlink" title="19. UUID类"></a>19. UUID类</h2><center>UUID类的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public static UUID randomUUID();</td>
<td>普通</td>
<td>生成一个随机UUID时</td>
</tr>
<tr>
<td>public static UUID fromString(String name)</td>
<td>普通</td>
<td>通过指定格式的字符串获取UUID数据</td>
</tr>
</tbody></table>
<h2 id="20-Optional空处理"><a href="#20-Optional空处理" class="headerlink" title="20. Optional空处理"></a>20. Optional空处理</h2><center>Optional空处理类的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public static <T>  Optional<T>empty（）</td>
<td>普通</td>
<td>返回空数据</td>
</tr>
<tr>
<td>public T get（）</td>
<td>普通</td>
<td>获取保存的数据</td>
</tr>
<tr>
<td>public static <T>  Optional<T>of（T value）</td>
<td>普通</td>
<td>保存数据，如果有null则出现NullPointerException异常</td>
</tr>
<tr>
<td>public static <T>  Optional<T>ofNullable（T value）</td>
<td>普通</td>
<td>保存数据，允许为空</td>
</tr>
<tr>
<td>public T orElse(T other)</td>
<td>普通</td>
<td>空数据时返回其他数据</td>
</tr>
</tbody></table>
<h2 id="21-ThreadLocal"><a href="#21-ThreadLocal" class="headerlink" title="21. ThreadLocal"></a>21. ThreadLocal</h2><center>ThreadLocal类的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public void set(T value)</td>
<td>普通</td>
<td>保存数据</td>
</tr>
<tr>
<td>public T get()</td>
<td>普通</td>
<td>获取数据</td>
</tr>
<tr>
<td>public void remove</td>
<td>普通</td>
<td>删除当前线程保存的数据</td>
</tr>
</tbody></table>
<h2 id="22-Scanner类"><a href="#22-Scanner类" class="headerlink" title="22. Scanner类"></a>22. Scanner类</h2><center>Scanner类的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>Scanner(InputStream is)</td>
<td>构造</td>
<td>构造一个文本扫描器，它生成的值是从指定的值输入流扫描的,System.in 是一个标准的输入流，属于InputStream</td>
</tr>
<tr>
<td>boolean hasNext()</td>
<td>普通</td>
<td>是否有下一个数,有true，没有false</td>
</tr>
<tr>
<td>String next()</td>
<td>普通</td>
<td>获取下个数</td>
</tr>
<tr>
<td>int nextInt()</td>
<td>普通</td>
<td>获取下个int数据</td>
</tr>
<tr>
<td>String nextLine()</td>
<td>普通</td>
<td>获取一行数据</td>
</tr>
</tbody></table>
<h2 id="23-Calendar类"><a href="#23-Calendar类" class="headerlink" title="23. Calendar类"></a>23. Calendar类</h2><center>Calendar类的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>static Calender getInstance()</td>
<td>普通</td>
<td>以默认时区和语言创建日历</td>
</tr>
<tr>
<td>int get(int field)</td>
<td>普通</td>
<td>获取指定字段的日历值</td>
</tr>
<tr>
<td>set(int field,int value)</td>
<td>普通</td>
<td>给指定的日历字段设置指定的值</td>
</tr>
<tr>
<td>set(int year,int month,int date)</td>
<td>普通</td>
<td>设置年月日</td>
</tr>
<tr>
<td>Date getTime()</td>
<td>普通</td>
<td>获取日历对象的日期</td>
</tr>
<tr>
<td>setTime(Date d)</td>
<td>普通</td>
<td>设置日历对象的日期</td>
</tr>
<tr>
<td>add(int field,int amount)</td>
<td>普通</td>
<td>对指定的日历字段添加指定的值</td>
</tr>
</tbody></table>
<h2 id="24-总结"><a href="#24-总结" class="headerlink" title="24. 总结"></a>24. 总结</h2><p>还有很多没有写完的常用类，欢迎大家总结！</p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>js随想</title>
    <url>/2022/05/09/js%E9%9A%8F%E6%83%B3/</url>
    <content><![CDATA[<blockquote>
<center>假舆马者，非利足也，而致千里；假舟楫者，非能水也，而绝江河</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<blockquote>
<p>DOM文档操作        BOM浏览器操作      ES搜索引擎操作</p>
</blockquote>
<h2 id="1-MD5算法加密（不建议，比较消耗cpu）"><a href="#1-MD5算法加密（不建议，比较消耗cpu）" class="headerlink" title="1. MD5算法加密（不建议，比较消耗cpu）"></a>1. MD5算法加密（不建议，比较消耗cpu）</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.bootcss.com/blueimp-md5/2.10.0/js/md5.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcss.com/blueimp-md5/2.10.0/js/md5.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">密码：&lt;input type = <span class="string">&quot;password&quot;</span> id = <span class="string">&quot;input-password&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">id</span>=<span class="string">&quot;md5-password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">var pwd = document.getElementById(input-password);</span></span><br><span class="line"><span class="language-xml">var md5pwd = document.getElementById(md5-password);</span></span><br><span class="line"><span class="language-xml">//md5算法</span></span><br><span class="line"><span class="language-xml">pwd.value = md5(pwd.value);</span></span><br><span class="line"><span class="language-xml"></span></span><br></pre></td></tr></table></figure>

<h2 id="2-JQuery库：（大量javaScript函数）"><a href="#2-JQuery库：（大量javaScript函数）" class="headerlink" title="2. JQuery库：（大量javaScript函数）"></a>2. JQuery库：（大量javaScript函数）</h2><blockquote>
<p>公式：$(selector).action()</p>
</blockquote>
<ol>
<li><p>引入包</p>
</li>
<li><p>cdn<a href="https://code.jquery.com/">cdn JQuery包下载地址</a></p>
</li>
<li><p>文档工具站<a href="http://jquery.cuishifeng.cn/"></a></p>
</li>
<li><p>事件(鼠标事件，键盘事件，其他事件)</p>
</li>
<li><p>前端模板：</p>
</li>
</ol>
<blockquote>
<p><a href="https://www.ihewro.com/">友人C博客</a></p>
</blockquote>
<blockquote>
<p><a href="https://ant.design/index-cn">阿里ant</a></p>
</blockquote>
<blockquote>
<p><a href="https://cn.vuejs.org/">vue</a></p>
</blockquote>
<blockquote>
<p><a href="https://www.layui.com/">layui弹窗</a></p>
</blockquote>
<blockquote>
<p><a href="https://element.eleme.cn/#/zh-CN">Element</a></p>
</blockquote>
<blockquote>
<p><a href="https://v3.bootcss.com/">bootstrap</a></p>
</blockquote>
<ol start="6">
<li>如何巩固JS（看JQuery源码，看游戏源码）</li>
<li><a href="https://www.bootcss.com/p/layoutit/">Bootstrap可视化布局</a></li>
</ol>
<h2 id="3-BOM【浏览器对象模型】"><a href="#3-BOM【浏览器对象模型】" class="headerlink" title="3. BOM【浏览器对象模型】"></a>3. BOM【浏览器对象模型】</h2><h3 id="3-1-window"><a href="#3-1-window" class="headerlink" title="3.1 window"></a>3.1 window</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="property">outerHeight</span>)</span><br><span class="line">&gt; <span class="number">1027</span></span><br></pre></td></tr></table></figure>

<h3 id="3-2-navigator"><a href="#3-2-navigator" class="headerlink" title="3.2 navigator"></a>3.2 navigator</h3><blockquote>
<p>navigator很容易被用户修改，获取的值不一定正确</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(navigator.<span class="property">language</span>)</span><br><span class="line">&gt; <span class="title class_">VM1377</span>:<span class="number">1</span> zh-<span class="variable constant_">CN</span></span><br><span class="line"><span class="literal">undefined</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(navigator.<span class="property">platform</span>)</span><br><span class="line">&gt; <span class="title class_">VM1414</span>:<span class="number">1</span> <span class="title class_">Win32</span></span><br><span class="line"><span class="literal">undefined</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(navigator.<span class="property">userAgent</span>)</span><br><span class="line">&gt; <span class="title class_">VM1468</span>:<span class="number">1</span> <span class="title class_">Mozilla</span>/<span class="number">5.0</span> (<span class="title class_">Windows</span> <span class="variable constant_">NT</span> <span class="number">10.0</span>; <span class="title class_">Win64</span>; x64) <span class="title class_">AppleWebKit</span>/<span class="number">537.36</span> (<span class="variable constant_">KHTML</span>, like <span class="title class_">Gecko</span>) <span class="title class_">Chrome</span>/<span class="number">89.0</span><span class="number">.4389</span><span class="number">.90</span> <span class="title class_">Safari</span>/<span class="number">537.36</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="3-3-screen"><a href="#3-3-screen" class="headerlink" title="3.3 screen"></a>3.3 screen</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">onsole.log(screen)</span><br></pre></td></tr></table></figure>

<h3 id="3-4-location"><a href="#3-4-location" class="headerlink" title="3.4 location"></a>3.4 location</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">location.<span class="property">protocol</span></span><br><span class="line">&gt; <span class="string">&quot;https:&quot;</span></span><br><span class="line">location.<span class="property">host</span></span><br><span class="line">&gt; <span class="string">&quot;www.bilibili.com&quot;</span></span><br><span class="line">location.<span class="property">hostname</span></span><br><span class="line">&gt; <span class="string">&quot;www.bilibili.com&quot;</span></span><br><span class="line">location.<span class="property">port</span></span><br><span class="line">&gt; <span class="string">&quot;&quot;</span></span><br><span class="line">location.<span class="property">pathname</span></span><br><span class="line">&gt; <span class="string">&quot;/video/&quot;</span></span><br><span class="line">location.<span class="property">href</span></span><br><span class="line">&gt; <span class="string">&quot;https://www.bilibili.com/video/BV18E411a7mC&quot;</span></span><br><span class="line">location.<span class="property">search</span></span><br><span class="line">&gt; <span class="string">&quot;&quot;</span></span><br><span class="line">location.<span class="property">hash</span></span><br><span class="line">&gt; <span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-5-document"><a href="#3-5-document" class="headerlink" title="3.5 document"></a>3.5 document</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&quot;努力&quot;</span></span><br><span class="line"><span class="string">&quot;努力&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-6-history"><a href="#3-6-history" class="headerlink" title="3.6 history"></a>3.6 history</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">history.<span class="property">go</span></span><br><span class="line">&gt; ƒ <span class="title function_">go</span>(<span class="params"></span>) &#123; [native code] &#125;</span><br><span class="line">history.<span class="property">back</span></span><br><span class="line">&gt; ƒ <span class="title function_">back</span>(<span class="params"></span>) &#123; [native code] &#125;</span><br><span class="line">history.<span class="property">forward</span></span><br><span class="line">&gt; ƒ <span class="title function_">forward</span>(<span class="params"></span>) &#123; [native code] &#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-DOM【文档对象模型】"><a href="#4-DOM【文档对象模型】" class="headerlink" title="4. DOM【文档对象模型】"></a>4. DOM【文档对象模型】</h2><h3 id="4-1-获取DOM"><a href="#4-1-获取DOM" class="headerlink" title="4.1 获取DOM"></a>4.1 获取DOM</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> ul = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.hitokotoText ul&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> ls = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;.hitokotoText ul li&quot;</span>);</span><br><span class="line">div</span><br><span class="line"></span><br><span class="line">div[<span class="number">0</span>].<span class="title function_">click</span>()</span><br></pre></td></tr></table></figure>

<h3 id="4-2-增加DOM"><a href="#4-2-增加DOM" class="headerlink" title="4.2 增加DOM"></a>4.2 增加DOM</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> li = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>);</span><br></pre></td></tr></table></figure>

<h3 id="4-3-删除DOM"><a href="#4-3-删除DOM" class="headerlink" title="4.3 删除DOM"></a>4.3 删除DOM</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">ul.<span class="property">innerHTML</span> = <span class="string">&#x27;&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h3 id="4-4-修改DOM"><a href="#4-4-修改DOM" class="headerlink" title="4.4 修改DOM"></a>4.4 修改DOM</h3><h3 id="4-5-遍历DOM"><a href="#4-5-遍历DOM" class="headerlink" title="4.5 遍历DOM"></a>4.5 遍历DOM</h3><h2 id="5-获取api数据"><a href="#5-获取api数据" class="headerlink" title="5.获取api数据"></a>5.获取api数据</h2><h3 id="5-1-原型js和ajax"><a href="#5-1-原型js和ajax" class="headerlink" title="5.1 原型js和ajax"></a>5.1 原型js和ajax</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> api = &#123;</span><br><span class="line">        <span class="title function_">init</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> that = <span class="variable language_">this</span>;</span><br><span class="line">            that.<span class="title function_">getHitokotoData</span>();</span><br><span class="line">        &#125;,</span><br><span class="line">    <span class="comment">//获取每日一言</span></span><br><span class="line">    <span class="title function_">getHitokotoData</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">//第一种方式（原生js）</span></span><br><span class="line">        <span class="comment">// let http = new XMLHttpRequest();</span></span><br><span class="line">        <span class="comment">// http.open(&quot;GET&quot;,&quot;https://v1.hitokoto.cn/?encode=json&quot;,true);</span></span><br><span class="line">        <span class="comment">// http.onload = function() &#123;</span></span><br><span class="line">        <span class="comment">//     if((http.status &gt;=200 &amp;&amp; http.status &lt; 300) || http.status == 304) &#123;</span></span><br><span class="line">        <span class="comment">//         let data = http.responseText;</span></span><br><span class="line">        <span class="comment">//         let resultData = JSON.parse(data);</span></span><br><span class="line">        <span class="comment">//         let ul = document.querySelector(&quot;.hitokotoText ul&quot;);</span></span><br><span class="line">        <span class="comment">//         ul.innerHTML = &#x27;&#x27;;</span></span><br><span class="line">                </span><br><span class="line">        <span class="comment">//         for(let key in resultData) &#123;</span></span><br><span class="line">        <span class="comment">//             let li = document.createElement(&#x27;li&#x27;);</span></span><br><span class="line">        <span class="comment">//             if(li == null) &#123;</span></span><br><span class="line">        <span class="comment">//                  return;</span></span><br><span class="line">        <span class="comment">//             &#125;</span></span><br><span class="line">        <span class="comment">//             console.log( key +&quot;:&quot; +resultData[key]);</span></span><br><span class="line">        <span class="comment">//             li.innerHTML = key + &quot;:&quot; + resultData[key];</span></span><br><span class="line">        <span class="comment">//             ul.appendChild(li);</span></span><br><span class="line">        <span class="comment">//         &#125;</span></span><br><span class="line">        <span class="comment">//     &#125; else &#123;</span></span><br><span class="line">        <span class="comment">//         console.log(&quot;http&quot; + http.status);</span></span><br><span class="line">        <span class="comment">//         console.log(http.statusText);</span></span><br><span class="line">        <span class="comment">//     &#125;</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// http.send(null);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//第二种方式 直接用jquery的ajax</span></span><br><span class="line">        <span class="comment">// $.ajax(&#123;</span></span><br><span class="line">        <span class="comment">//     type: &quot;POST&quot;,</span></span><br><span class="line">        <span class="comment">//     url: `https://v1.hitokoto.cn/?encode=json`,</span></span><br><span class="line">        <span class="comment">//     dataType:&#x27;json&#x27;,</span></span><br><span class="line">        <span class="comment">//     success: function(data) &#123;</span></span><br><span class="line">        <span class="comment">//         console.log(data);</span></span><br><span class="line">        <span class="comment">//         let ul = document.querySelector(&quot;.hitokotoText ul&quot;);</span></span><br><span class="line">        <span class="comment">//         ul.innerHTML = &#x27;&#x27;;</span></span><br><span class="line">        <span class="comment">//         for(let key in data) &#123;</span></span><br><span class="line">        <span class="comment">//             let li = document.createElement(&#x27;li&#x27;);</span></span><br><span class="line">        <span class="comment">//             li.innerHTML = key +&quot;:&quot; + data[key];</span></span><br><span class="line">        <span class="comment">//             ul.appendChild(li);</span></span><br><span class="line">        <span class="comment">//         &#125;</span></span><br><span class="line">                </span><br><span class="line">        <span class="comment">//     &#125;,</span></span><br><span class="line">        <span class="comment">//     error: function(e)&#123;</span></span><br><span class="line">        <span class="comment">//         return e;	</span></span><br><span class="line">        <span class="comment">//     &#125;</span></span><br><span class="line">        <span class="comment">// &#125;);</span></span><br><span class="line"></span><br><span class="line">          <span class="comment">//第三种方式获取单个元素,跨域jsonP相当于</span></span><br><span class="line"> <span class="comment">// 指定允许其他域名访问</span></span><br><span class="line"><span class="comment">// header(&#x27;Access-Control-Allow-Origin:*&#x27;);</span></span><br><span class="line"><span class="comment">// 响应类型</span></span><br><span class="line"><span class="comment">// header(&#x27;Access-Control-Allow-Methods:POST&#x27;);</span></span><br><span class="line"><span class="comment">// 响应头设置</span></span><br><span class="line"><span class="comment">// header(&#x27;Access-Control-Allow-Headers:x-requested-with,content-type&#x27;);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&quot;https://v1.hitokoto.cn/?encode=json&quot;</span>,</span><br><span class="line">            <span class="attr">dataType</span>: <span class="string">&quot;jsonp&quot;</span>,</span><br><span class="line">            <span class="attr">jsonp</span>: <span class="string">&#x27;callback&#x27;</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">                <span class="keyword">let</span> resultData = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(data);</span><br><span class="line">                <span class="keyword">let</span> ul = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.hitokotoText ul&quot;</span>);</span><br><span class="line">                ul.<span class="property">innerHTML</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                <span class="keyword">let</span> li = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">                <span class="keyword">let</span> from_who = resultData.<span class="property">from_who</span> == <span class="literal">null</span> ? <span class="string">&quot;无&quot;</span> : resultData.<span class="property">from_who</span>;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>()</span><br><span class="line">                li.<span class="property">innerHTML</span> =  resultData.<span class="property">hitokoto</span> + <span class="string">&quot; 作者：&quot;</span> + from_who + <span class="string">&quot; 作品：&quot;</span> + resultData.<span class="property">from</span>;</span><br><span class="line">                ul.<span class="title function_">appendChild</span>(li); </span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">error</span>: <span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> e;	</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">          </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    api.<span class="title function_">init</span>();</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>

<h3 id="5-2-axios【通常是框架vue-react】"><a href="#5-2-axios【通常是框架vue-react】" class="headerlink" title="5.2 axios【通常是框架vue react】"></a>5.2 axios【通常是框架vue react】</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// axios 中的GET请求</span></span><br><span class="line">axios.<span class="title function_">get</span>(<span class="string">&#x27;/user&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">      <span class="attr">ID</span>: <span class="number">12345</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">response</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(response);</span><br><span class="line">  &#125;)</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="keyword">function</span> (<span class="params">error</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// axios 中的POST请求</span></span><br><span class="line">axios.<span class="title function_">post</span>(<span class="string">&#x27;/user&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">firstName</span>: <span class="string">&#x27;Fred&#x27;</span>,</span><br><span class="line">    <span class="attr">lastName</span>: <span class="string">&#x27;Flintstone&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">response</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(response);</span><br><span class="line">  &#125;)</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="keyword">function</span> (<span class="params">error</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>



]]></content>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb</title>
    <url>/2022/05/09/JavaWeb/</url>
    <content><![CDATA[<blockquote>
<center>知行合一</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<h2 id="1-Web开发"><a href="#1-Web开发" class="headerlink" title="1 Web开发"></a>1 Web开发</h2><ul>
<li>静态web:html,css</li>
<li>动态web：Servlet&#x2F;JSP、ASP、PHP</li>
</ul>
<h2 id="2-Web应用程序"><a href="#2-Web应用程序" class="headerlink" title="2 Web应用程序"></a>2 Web应用程序</h2><blockquote>
<p>web应用程序编写完毕后，若想提供给外界访问，需要一个服务器统一管理</p>
</blockquote>
<h3 id="2-1-组成部分"><a href="#2-1-组成部分" class="headerlink" title="2.1 组成部分"></a>2.1 组成部分</h3><ul>
<li><p>html、css、js</p>
</li>
<li><p>jsp、servlet</p>
</li>
<li><p>Java程序</p>
</li>
<li><p>jar包</p>
</li>
<li><p>配置文件(Properties)</p>
</li>
<li><p>Web服务器</p>
</li>
<li><p>静态Web</p>
</li>
<li><p>动态Web</p>
</li>
<li><p>数据库</p>
</li>
</ul>
<h3 id="2-2-Web服务器"><a href="#2-2-Web服务器" class="headerlink" title="2.2 Web服务器"></a>2.2 Web服务器</h3><blockquote>
<p>服务器用来处理用户的请求和响应信息</p>
</blockquote>
<ul>
<li><p>Request ： 请求</p>
</li>
<li><p>Response ： 响应</p>
</li>
<li><p>IIS</p>
</li>
</ul>
<blockquote>
<p>微软的：ASP</p>
</blockquote>
<ul>
<li>Tomcat</li>
</ul>
<blockquote>
<p>Tomcat是Apache 软件基金会（Apache Software Foundation）的Jakarta 项目中的一个核心项目，由Apache、Sun 和其他一些公司及个人共同开发而成。由于有了Sun 的参与和支持，最新的Servlet 和JSP 规范总是能在Tomcat  中得到体现，Tomcat 5支持最新的Servlet 2.4 和JSP 2.0 规范。因为Tomcat  技术先进、性能稳定，而且免费，因而深受Java 爱好者的喜爱并得到了部分软件开发商的认可，成为比较流行的Web 应用服务器。</p>
</blockquote>
<blockquote>
<p>工作三五年，可以尝试手写Tomcat服务器</p>
</blockquote>
<h3 id="2-3-动态静态WEB"><a href="#2-3-动态静态WEB" class="headerlink" title="2.3 动态静态WEB"></a>2.3 动态静态WEB</h3><ul>
<li>ASP</li>
</ul>
<blockquote>
<p>微软，国内最早，在HTML嵌入VB脚本，维护成本高，页面乱，几千行代码,C#,IIS</p>
</blockquote>
<ul>
<li>PHP</li>
</ul>
<blockquote>
<p>PHP开发速度快，跨平台，代码简单（70%，WP），无法承载访问量大的情况</p>
</blockquote>
<ul>
<li>JSP&#x2F;Servlet</li>
</ul>
<blockquote>
<p>B&#x2F;S《sun公司主推》，C&#x2F;S，基于java，可以承载三高问问题带来的影响：高并发，高可用，高性能，语法像ASP</p>
</blockquote>
<ul>
<li><p>动态Web缺点与优点</p>
</li>
<li><p>加入服务器的web出现错误，重新编写后台程序，重新发布</p>
</li>
<li><p>停机维护</p>
</li>
<li><p>可以与数据库交互</p>
</li>
<li><p>可以动态更新，所有用户看到的不是同一个页面</p>
</li>
<li><p>静态Web的缺点</p>
</li>
<li><p>轮播图，点击特效：伪动态</p>
</li>
<li><p>JavaScript</p>
</li>
<li><p>VBScript</p>
</li>
<li><p>无法与数据库进行交互，数据无法持久化，用户无法交互</p>
</li>
</ul>
<h2 id="3-Tomacat"><a href="#3-Tomacat" class="headerlink" title="3. Tomacat"></a>3. Tomacat</h2><h3 id="3-1-基本操作"><a href="#3-1-基本操作" class="headerlink" title="3.1 基本操作"></a>3.1 基本操作</h3><ul>
<li><a href="https://tomcat.apache.org/">Tomcat</a></li>
<li><a href="https://blog.csdn.net/qq_40881680/article/details/83582484?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163413530016780366548151%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=163413530016780366548151&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-83582484.pc_search_ecpm_flag&utm_term=tomcat%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B&spm=1018.2226.3001.4187">下载与安装其他博主</a></li>
<li>启动：startup.bat</li>
<li>关闭：shutdown.bat</li>
<li>访问：<a href="http://localhost:8080/">http://localhost:8080/</a></li>
<li>可能遇到的问题：</li>
<li>java环境变量未配置</li>
<li>闪退：配置兼容性</li>
<li>乱码问题：配置文件</li>
</ul>
<h3 id="3-2-文件夹作用"><a href="#3-2-文件夹作用" class="headerlink" title="3.2 文件夹作用"></a>3.2 文件夹作用</h3><ul>
<li>bin：启动，关闭的脚本文件</li>
<li>conf：配置，核心：server.xml</li>
<li>lib：依赖的jar包</li>
<li>logs：日志</li>
<li>webapps：发存放网站</li>
</ul>
<h3 id="3-3-配置"><a href="#3-3-配置" class="headerlink" title="3.3 配置"></a>3.3 配置</h3><ul>
<li>conf &#x2F; server.xml 可以配置启动的名称和端口号</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span> </span></span><br><span class="line"><span class="tag">           <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span> </span></span><br><span class="line"><span class="tag">           <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> <span class="attr">URIEncoding</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>默认的主机名为：127.0.0.1&#x2F;localhost</li>
<li>默认的网站存储位置：webapps</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">&quot;localhost&quot;</span>  <span class="attr">appBase</span>=<span class="string">&quot;webapps&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">unpackWARs</span>=<span class="string">&quot;true&quot;</span> <span class="attr">autoDeploy</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlValidation</span>=<span class="string">&quot;false&quot;</span> <span class="attr">xmlNamespaceAware</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>可以配置一下环境变量</li>
</ul>
<h4 id="3-3-1-默认端口号"><a href="#3-3-1-默认端口号" class="headerlink" title="3.3.1 默认端口号"></a>3.3.1 默认端口号</h4><ul>
<li>Tomcat :8080</li>
<li>mysql:3306</li>
<li>http:80</li>
<li>https:443</li>
</ul>
<h4 id="3-3-2-面试题"><a href="#3-3-2-面试题" class="headerlink" title="3.3.2 面试题"></a>3.3.2 面试题</h4><ul>
<li><p>谈谈一个网站如何运行</p>
</li>
<li><p>客户端：输入一个域名或者ip,</p>
</li>
<li><p>检查本机的C:\Windows\System32\drivers\etc\hosts配置文件下有没有这个域名的映射或ip；</p>
</li>
<li><p>有返回对应的IP,这个地址中有我们需要访问的Web程序，可以直接访问，没有，去DNS服务器，找到返回，没有报404</p>
</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">127.0.0.1       localhost</span><br></pre></td></tr></table></figure>

<h3 id="3-4-发布一个Web网站"><a href="#3-4-发布一个Web网站" class="headerlink" title="3.4 发布一个Web网站"></a>3.4 发布一个Web网站</h3><ul>
<li><p>将自己写的网站，放到服务器（Tomcat）中指定的Web应用的文件夹（Webapps）下，就可以访问了</p>
</li>
<li><p>网站应该有的结构</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">-- webapps ： Tomcat服务的Web目录</span><br><span class="line">    - ROOT</span><br><span class="line">    - xxy : 网站的目录名</span><br><span class="line">        - WEB-INF</span><br><span class="line">        	- classes ：java程序</span><br><span class="line">        	- lib : Web应用所依赖的jar包</span><br><span class="line">        	- web.xml</span><br><span class="line">        - index.html : 默认的首页</span><br><span class="line">        - <span class="keyword">static</span></span><br><span class="line">            - css</span><br><span class="line">            	- style.css</span><br><span class="line">            - js</span><br><span class="line">            - img</span><br><span class="line">            - ...</span><br></pre></td></tr></table></figure>

<h2 id="4-HTTP"><a href="#4-HTTP" class="headerlink" title="4. HTTP"></a>4. HTTP</h2><blockquote>
<p>超文本传输协议（Hyper Text Transfer Protocol，HTTP）是一个简单的请求-响应协议，它通常运行在[TCP]之上。它指定了客户端可能发送给服务器什么样的消息以及得到什么样的响应。请求和响应消息的头以[ASCII]形式给出；而消息内容则具有一个类似[MIME]的格式。这个简单模型是早期Web成功的有功之臣，因为它使开发和部署非常地直截了当。</p>
</blockquote>
<h3 id="4-1-基础"><a href="#4-1-基础" class="headerlink" title="4.1 基础"></a>4.1 基础</h3><ul>
<li>默认端口：80</li>
<li>Https：443 更安全</li>
</ul>
<h4 id="4-1-1-两个时代"><a href="#4-1-1-两个时代" class="headerlink" title="4.1.1 两个时代"></a>4.1.1 两个时代</h4><ul>
<li>http1.0<ul>
<li>HTTP&#x2F;1.0:客户端与Web服务器连接后，只能获取一个Web资源，断开连接</li>
</ul>
</li>
<li>http2.0<ul>
<li>HTTP&#x2F;1.1：客户端可以与Web服务器连接后，可以获取多个Web资源。</li>
</ul>
</li>
</ul>
<h4 id="4-1-2-HTTP请求"><a href="#4-1-2-HTTP请求" class="headerlink" title="4.1.2 HTTP请求"></a>4.1.2 HTTP请求</h4><ul>
<li>客户端 – 发请求 – 服务器 </li>
<li>请求通用：</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">Request URL: https://www.baidu.com/ //请求地址</span><br><span class="line">Request Method: GET //get/post方法</span><br><span class="line">Status Code: 200 OK //状态码：200</span><br><span class="line">Remote（远程） Address: 14.215.177.39:443</span><br><span class="line">Referrer Policy: strict-origin-when-cross-origin //第三方协议</span><br></pre></td></tr></table></figure>

<p>（1）请求行</p>
<ul>
<li>请求行中的请求方式 ： GET</li>
<li>请求方式：Get，Post，HEAD，DELETE,PUT,TRACT…</li>
<li>Get:请求携带的参数比较少，大小限制，会显示数据内容，不安全，高效</li>
<li>Post：请求携带的参数没有限制，大小不限制，不会显示数据内容，安全，不高效</li>
</ul>
<p>（2）消息头</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">Accept:  </span><br><span class="line">//告诉浏览器，它所支持的数据类型</span><br><span class="line">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Accept-Encoding: gzip, deflate, br //支持的编码</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9 //语言环境</span><br><span class="line">Cache-Control: max-age=0 //缓存控制</span><br><span class="line">Connection: keep-alive //告诉浏览器，请求完成是断开还是保持连接</span><br><span class="line">Cookie: BIDUPSID=1142C916CB69356E53A9EE152AC21F23; PSTM=1626077675; BAIDUID=1142C916CB69356E4321E1BE24C3224D:FG=1; __yjs_duid=1_41cb417f65a4f8dbac6d44cde76807851626078324319; BAIDUID_BFESS=1142C916CB69356E4321E1BE24C3224D:FG=1; COOKIE_SESSION=1827474_0_9_9_2_8_1_0_9_7_2_1_1276549_0_0_0_1627960958_0_1629788426%7C9%2310315_10_1626240902%7C7; BD_UPN=12314753; BD_HOME=1; H_PS_PSSID=34442_34068_31253_34584_34505_34871_26350_34761_34825; BA_HECTOR=a40g848k20ah8g80pc1gn4s5j0q</span><br><span class="line">Host: www.baidu.com //主机</span><br><span class="line">sec-ch-ua: &quot;Google Chrome&quot;;v=&quot;95&quot;, &quot;Chromium&quot;;v=&quot;95&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</span><br><span class="line">sec-ch-ua-mobile: ?0</span><br><span class="line">sec-ch-ua-platform: &quot;Windows&quot;</span><br><span class="line">Sec-Fetch-Dest: document</span><br><span class="line">Sec-Fetch-Mode: navigate</span><br><span class="line">Sec-Fetch-Site: none</span><br><span class="line">Sec-Fetch-User: ?1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.54 Safari/537.36</span><br></pre></td></tr></table></figure>



<h4 id="4-1-3-HTTP响应"><a href="#4-1-3-HTTP响应" class="headerlink" title="4.1.3 HTTP响应"></a>4.1.3 HTTP响应</h4><ul>
<li><p>服务器 – 响应 – 客户端</p>
</li>
<li><p>响应头：</p>
</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">Bdpagetype: 1</span><br><span class="line">Bdqid: 0xb2e001630001bd3b</span><br><span class="line">Cache-Control: private //缓存控制</span><br><span class="line">Connection: keep-alive //连接</span><br><span class="line">Content-Encoding: gzip //编码</span><br><span class="line">Content-Type: text/html;charset=utf-8 //类型</span><br><span class="line">Date: Fri, 22 Oct 2021 08:05:19 GMT</span><br><span class="line">Expires: Fri, 22 Oct 2021 08:05:13 GMT</span><br><span class="line">Server: BWS/1.1</span><br><span class="line">Set-Cookie: BDSVRTM=0; path=/</span><br><span class="line">Set-Cookie: BD_HOME=1; path=/</span><br><span class="line">Set-Cookie: H_PS_PSSID=34442_34068_31253_34584_34505_34871_26350_34761_34825; path=/; domain=.baidu.com</span><br><span class="line">Strict-Transport-Security: max-age=172800</span><br><span class="line">Traceid: 1634889919043977575412889303658247863611</span><br><span class="line">Transfer-Encoding: chunked</span><br><span class="line">X-Frame-Options: sameorigin</span><br><span class="line">X-Ua-Compatible: IE=Edge,chrome=1</span><br></pre></td></tr></table></figure>

<p>（1）响应体</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">Accept:  </span><br><span class="line">//告诉浏览器，它所支持的数据类型</span><br><span class="line">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Accept-Encoding: gzip, deflate, br //支持的编码</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9 //语言环境</span><br><span class="line">Cache-Control: max-age=0 //缓存控制</span><br><span class="line">Connection: keep-alive //告诉浏览器，请求完成是断开还是保持连接</span><br><span class="line">Cookie: BIDUPSID=1142C916CB69356E53A9EE152AC21F23; PSTM=1626077675; BAIDUID=1142C916CB69356E4321E1BE24C3224D:FG=1; __yjs_duid=1_41cb417f65a4f8dbac6d44cde76807851626078324319; BAIDUID_BFESS=1142C916CB69356E4321E1BE24C3224D:FG=1; COOKIE_SESSION=1827474_0_9_9_2_8_1_0_9_7_2_1_1276549_0_0_0_1627960958_0_1629788426%7C9%2310315_10_1626240902%7C7; BD_UPN=12314753; BD_HOME=1; H_PS_PSSID=34442_34068_31253_34584_34505_34871_26350_34761_34825; BA_HECTOR=a40g848k20ah8g80pc1gn4s5j0q</span><br><span class="line">Host: www.baidu.com //主机</span><br><span class="line">sec-ch-ua: &quot;Google Chrome&quot;;v=&quot;95&quot;, &quot;Chromium&quot;;v=&quot;95&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</span><br><span class="line">sec-ch-ua-mobile: ?0</span><br><span class="line">sec-ch-ua-platform: &quot;Windows&quot;</span><br><span class="line">Sec-Fetch-Dest: document</span><br><span class="line">Sec-Fetch-Mode: navigate</span><br><span class="line">Sec-Fetch-Site: none</span><br><span class="line">Sec-Fetch-User: ?1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.54 Safari/537.36</span><br><span class="line">Refresh: //告诉客户端，多久刷新一次</span><br><span class="line">Location: //让网页重新定位</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>（2）响应状态码</p>
<blockquote>
<p>200： 请求响应成功</p>
<p>3**：请求重定向</p>
<p>4**：找不到资源 404</p>
<p>5**：服务器代码错误 500 502网关错误</p>
</blockquote>
<h2 id="5-Maven"><a href="#5-Maven" class="headerlink" title="5. Maven"></a>5. Maven</h2><blockquote>
<p>目前是管理Jar包自动导入和配置，对java代码有约束，不要违反</p>
</blockquote>
<h3 id="5-1-Maven项目架构管理工具"><a href="#5-1-Maven项目架构管理工具" class="headerlink" title="5.1 Maven项目架构管理工具"></a>5.1 Maven项目架构管理工具</h3><ul>
<li>核心思想：约定大于配置</li>
</ul>
<h3 id="5-2-下载安装配置"><a href="#5-2-下载安装配置" class="headerlink" title="5.2 下载安装配置"></a>5.2 下载安装配置</h3><ul>
<li><p><a href="https://maven.apache.org/">maven官网</a></p>
</li>
<li><p>可以使用镜像下载，下载后解压，所有环境都放入一个文件夹里面</p>
</li>
<li><p><a href="https://blog.csdn.net/Smile__1/article/details/100884299?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163515567616780366588763%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=163515567616780366588763&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-1-100884299.pc_search_result_cache&utm_term=maven%E4%B8%8B%E8%BD%BD&spm=1018.2226.3001.4187">下载安装maven的博主</a></p>
</li>
<li><p>配置环境变量</p>
</li>
<li><p>MAVEN_HOME maven的目录</p>
</li>
<li><p>M2_HOME maven目录下的bin的目录</p>
</li>
<li><p>Path配置 %MAVEN_HOME%\bin</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查</span></span><br><span class="line">mvn -version</span><br></pre></td></tr></table></figure>

<ul>
<li>maven 安装目录的 <strong>conf&#x2F;settings.xml</strong> </li>
<li>修改配置，阿里云镜像</li>
<li>官网</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyunmaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>阿里云公共仓库<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>自己学习</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-aliyun<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*,!jeecg,!jeecg-snapshots<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>Nexus aliyun<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/nexus/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>如果想使用其它代理仓库，可在<repositories></repositories>节点中加入对应的仓库使用地址。以使用 spring 代理仓为例：</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>spring<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/spring<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>本地仓库 远程仓库</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>D:\install\apache-maven-3.8.3-bin\apache-maven-3.8.3\maven-repo<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="5-3-IDEA中使用Maven注意点"><a href="#5-3-IDEA中使用Maven注意点" class="headerlink" title="5.3 IDEA中使用Maven注意点"></a>5.3 IDEA中使用Maven注意点</h3><ul>
<li>create from archetype 使用模板；可以不使用</li>
<li>选择Maven-archetype-webapp</li>
<li>GroupId 组Id 一般用公司域名倒称com.xxy</li>
<li>ArtifactId 项目名</li>
<li>maven地址配置 seting</li>
<li>配置项目地址</li>
<li>加载包，出现build success，表示成功</li>
<li>IDEA项目构建完成，看Maven配置，MavenHome要注意地址，可能会被改为默认的</li>
<li>Maven junit版本报错 将版本改为4.12</li>
<li>标记新建文件夹 java 为 sources root，test为 testsources Root，resources为Resources Root</li>
<li>Maven生命周期（lifecycle）命令</li>
</ul>
<blockquote>
<p>clean</p>
<p>validate</p>
<p>compile</p>
<p>test</p>
<p>package</p>
<p>verify</p>
<p>install</p>
<p>site</p>
<p>deploy</p>
</blockquote>
<ul>
<li>Maven Plugins</li>
<li>Maven Dependencies</li>
<li>pom文件</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--这里是maven的版本号和头文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--  这是刚刚配置的GAV--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.xxy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Demo01<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  java应用：jar包</span></span><br><span class="line"><span class="comment">  javaWeb应用 ：war包--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>Demo01 Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    默认构建编码--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--编码版本--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--项目依赖--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--具体依赖的jar包和文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    &lt;dependency&gt;</span></span><br><span class="line"><span class="comment">      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">      &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">      &lt;version&gt;2.1.1.RELEASE&lt;/version&gt;</span></span><br><span class="line"><span class="comment">      &lt;scope&gt;compile&lt;/scope&gt;</span></span><br><span class="line"><span class="comment">    &lt;/dependency&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--项目构建用的东西--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>Demo01<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--在build中配置resources,来防止我们资源导出失败的问题--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span><span class="comment">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-clean-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.22.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-install-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-deploy-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>mavne约定大于配置，会帮我导入这个包所依赖的jar包，资源导出可能会失败或无法生效</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">    <span class="comment">&lt;!--在build中配置resources,来防止我们资源导出失败的问题--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>注意：</strong>maven 3.6.2及以上 和jdk8不兼容</li>
<li>Maven父子项目</li>
<li>父项目会有</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>MavenTest02<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>子项目会有</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>MavenTest01<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.xxy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>父项目的东西子项目可以直接使用</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">son <span class="keyword">extends</span> <span class="title class_">parent</span></span><br></pre></td></tr></table></figure>

<h3 id="5-4-IDEA中配置Tomcat注意点"><a href="#5-4-IDEA中配置Tomcat注意点" class="headerlink" title="5.4 IDEA中配置Tomcat注意点"></a>5.4 IDEA中配置Tomcat注意点</h3><ul>
<li><p>我们访问一个网站，必须需要配置一个文件夹名字，因为名字映射的是一个文件</p>
</li>
<li><p>当点击+没有发现出现 artifacts 选项的时候 可以 File—setting–build,Execution,deployment—maven —-importing—选择import maven projects automatically–&gt;apply–ok</p>
</li>
<li><p>Tomcat乱码</p>
<blockquote>
<p>本质原因就一个：字节流解码为字符串时，使用了错误的字符集\（和编码所用字符集不一致）</p>
</blockquote>
<blockquote>
<p>解决方案:将conf\logging.properties文件修改</p>
</blockquote>
</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">java.util.logging.ConsoleHandler.encoding = GBK</span><br></pre></td></tr></table></figure>

<ul>
<li><p>Maven中Tomcat无法配置</p>
<blockquote>
<p>原因：Web项目中Web.xml版本问题</p>
<p>解决方案：替换为Tomcat里面的Web.xml</p>
</blockquote>
</li>
</ul>
<h3 id="5-5-Maven-仓库的使用"><a href="#5-5-Maven-仓库的使用" class="headerlink" title="5.5 Maven 仓库的使用"></a>5.5 Maven 仓库的使用</h3><ul>
<li>pom.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.xxy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>MavenTest01<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>MavenTest01 Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--作用域--&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--&lt;scope&gt;provided&lt;/scope&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.servlet/jsp-api --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;dependency&gt;</span></span><br><span class="line"><span class="comment">      &lt;groupId&gt;javax.servlet.jsp&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">      &lt;artifactId&gt;javax.servlet.jsp.jsp-api&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">      &lt;version&gt;2.3.3&lt;/version&gt;</span></span><br><span class="line"><span class="comment">      &amp;lt;!&amp;ndash;&lt;scope&gt;provided&lt;/scope&gt;&amp;ndash;&amp;gt;</span></span><br><span class="line"><span class="comment">    &lt;/dependency&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>MavenTest01<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span><span class="comment">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-clean-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.22.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-install-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-deploy-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>HelloServlet.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> req</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resp</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ServletException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@autor</span> xxy</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021-11-03</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"><span class="comment">//        响应的类型</span></span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">        resp.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line"><span class="comment">//        获取响应的输出流</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> resp.getWriter();</span><br><span class="line">            out.println(<span class="string">&quot;&lt;html&gt;&quot;</span>);</span><br><span class="line">            out.println(<span class="string">&quot;&lt;head&gt;&quot;</span>);</span><br><span class="line">            out.println(<span class="string">&quot;&lt;title&gt;Hello World!&lt;/title&gt;&quot;</span>);</span><br><span class="line">            out.println(<span class="string">&quot;&lt;/head&gt;&quot;</span>);</span><br><span class="line">            out.println(<span class="string">&quot;&lt;body&gt;&quot;</span>);</span><br><span class="line">            out.println(<span class="string">&quot;&lt;h1&gt;Hello World!&lt;/h1&gt;&quot;</span>);</span><br><span class="line">            out.println(<span class="string">&quot;&lt;h2&gt;你好&lt;/h2&gt;&quot;</span>);</span><br><span class="line">            out.println(<span class="string">&quot;&lt;/body&gt;&quot;</span>);</span><br><span class="line">            out.println(<span class="string">&quot;&lt;/html&gt;&quot;</span>);</span><br><span class="line">            out.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> ex;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="built_in">super</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>web.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">version</span>=<span class="string">&quot;2.4&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--web.xml 是我们的核心配置--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  注册servlet--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>helloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.xxy.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  一个servelt对应一个mapping映射--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>helloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    请求路径--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="6-Servelt"><a href="#6-Servelt" class="headerlink" title="6. Servelt"></a>6. Servelt</h2><blockquote>
<p>Sun在API提供了一个接口叫Servelt，动态web的一门技术</p>
</blockquote>
<h3 id="6-1-建立Servlet步骤"><a href="#6-1-建立Servlet步骤" class="headerlink" title="6.1 建立Servlet步骤"></a>6.1 建立Servlet步骤</h3><ul>
<li>新建maven父子工程</li>
<li>新建一个note.md保存最新的web.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee</span></span></span><br><span class="line"><span class="string"><span class="tag">                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;3.1&quot;</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>编写一个servlet类，继承HttpServlet，HttpServlet继承GenericServlet，GenericServlet实现Servlet接口</li>
<li>doGet和doPost只是是实现的方式不同，可以相互调用</li>
<li>编写Servlet映射,Java程序想要浏览器访问需要一个连接Web服务器和一个浏览器能够解析的地址，所以我们需要注册Servlet和映射</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="comment">&lt;!--web.xml 是我们的核心配置--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  注册servlet--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>helloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.xxy.servlet.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  一个servelt对应一个mapping映射--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>helloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    请求路径--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>配置Tomcat,启动测试</li>
</ul>
<h3 id="6-2-Servlet原理"><a href="#6-2-Servlet原理" class="headerlink" title="6.2 Servlet原理"></a>6.2 Servlet原理</h3><ul>
<li>浏览器发送请求</li>
<li>Web容器首次访问Servlet</li>
<li>Web将请求的信息（请求头等等）给Servlet接口</li>
<li>调用Servlet接口的方法</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(ServletRequest req, ServletResponse res)</span></span><br><span class="line">	<span class="keyword">throws</span> ServletException, IOException;</span><br></pre></td></tr></table></figure>

<ul>
<li>返回Servlet的响应信息</li>
<li>Web容器读取响应的信息</li>
<li>返回浏览器</li>
</ul>
<h3 id="6-3-Mapping问题"><a href="#6-3-Mapping问题" class="headerlink" title="6.3 Mapping问题"></a>6.3 Mapping问题</h3><ul>
<li>一个Servlet映射可以指定一个、多个、通用、自定义、默认映射路径</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;!--  注册servlet--&gt;</span><br><span class="line">    &lt;servlet&gt;</span><br><span class="line">      &lt;servlet-name&gt;helloServlet&lt;/servlet-name&gt;</span><br><span class="line">      &lt;servlet-class&gt;cn.xxy.servlet.HelloServlet&lt;/servlet-class&gt;</span><br><span class="line">    &lt;/servlet&gt;</span><br><span class="line">&lt;!--  一个servelt对应一个mapping映射--&gt;</span><br><span class="line">  &lt;servlet-mapping&gt;</span><br><span class="line">    &lt;servlet-name&gt;helloServlet&lt;/servlet-name&gt;</span><br><span class="line">&lt;!--    请求路径--&gt;</span><br><span class="line">    &lt;url-pattern&gt;/hello&lt;/url-pattern&gt;</span><br><span class="line">  &lt;/servlet-mapping&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!--  一个servelt对应通用映射--&gt;</span><br><span class="line">  &lt;servlet-mapping&gt;</span><br><span class="line">    &lt;servlet-name&gt;helloServlet&lt;/servlet-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;/hello<span class="comment">/*&lt;/url-pattern&gt;</span></span><br><span class="line"><span class="comment">  &lt;/servlet-mapping&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;!--注意自定义后缀*前面不能加/--&gt;</span></span><br><span class="line"><span class="comment">  &lt;servlet-mapping&gt;</span></span><br><span class="line"><span class="comment">    &lt;servlet-name&gt;helloServlet&lt;/servlet-name&gt;</span></span><br><span class="line"><span class="comment">    &lt;url-pattern&gt;*.xxy&lt;/url-pattern&gt;</span></span><br><span class="line"><span class="comment">  &lt;/servlet-mapping&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  &lt;!--自定义前缀 --&gt;</span></span><br><span class="line"><span class="comment">  &lt;servlet-mapping&gt;</span></span><br><span class="line"><span class="comment">    &lt;servlet-name&gt;helloServlet&lt;/servlet-name&gt;</span></span><br><span class="line"><span class="comment">    &lt;url-pattern&gt;hello/dgjdj.ui&lt;/url-pattern&gt;</span></span><br><span class="line"><span class="comment">  &lt;/servlet-mapping&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  &lt;!--默认 少用--&gt;</span></span><br><span class="line"><span class="comment">  &lt;servlet-mapping&gt;</span></span><br><span class="line"><span class="comment">    &lt;servlet-name&gt;helloServlet&lt;/servlet-name&gt;</span></span><br><span class="line"><span class="comment">    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</span></span><br><span class="line"><span class="comment">  &lt;/servlet-mapping&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>指定了固有的映射路径优先级最高，如果找不到就会走默认的映射路径</li>
</ul>
<h2 id="7-Servlet-Context"><a href="#7-Servlet-Context" class="headerlink" title="7. Servlet Context"></a>7. Servlet Context</h2><blockquote>
<p>Web容器在启动的时候，为每个Web程序都创建一个对应的ServletContext对象，代表当前Web应用</p>
</blockquote>
<h3 id="7-1-共享数据"><a href="#7-1-共享数据" class="headerlink" title="7.1 共享数据"></a>7.1 共享数据</h3><blockquote>
<p>尽量少用，用ssession和cookie代替</p>
</blockquote>
<ul>
<li>栗子</li>
<li>HelloServlet.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"><span class="comment">//        this.getInitParameter(); 初始化参数</span></span><br><span class="line"><span class="comment">//        this.getServletConfig(); 配置</span></span><br><span class="line"><span class="comment">//        this.getServletContext(); 上下文</span></span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> <span class="built_in">this</span>.getServletContext();</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;xxy&quot;</span>;</span><br><span class="line">        servletContext.setAttribute(<span class="string">&quot;username&quot;</span>,username);</span><br><span class="line"><span class="comment">//        System.out.println(&quot;hello world&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="built_in">super</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>GetC.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GetC</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> <span class="built_in">this</span>.getServletContext();</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> (String) servletContext.getAttribute(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">        resp.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        resp.getWriter().print(<span class="string">&quot;名字&quot;</span> + username);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="built_in">super</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>Web.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee</span></span></span><br><span class="line"><span class="string"><span class="tag">                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;3.1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>helloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.xxy.servlet.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>helloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/helloServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>getC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.xxy.servlet.GetC<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>getC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/getC<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="7-2-获取初始化参数与请求转发"><a href="#7-2-获取初始化参数与请求转发" class="headerlink" title="7.2 获取初始化参数与请求转发"></a>7.2 获取初始化参数与请求转发</h3><blockquote>
<p>请求转发：转发的路径不变，它是什么路径就是什么路径，一次请求；重定向：路径会变，两次请求</p>
</blockquote>
<ul>
<li>栗子</li>
<li>HelloServlet.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> <span class="built_in">this</span>.getServletContext();</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> servletContext.getInitParameter(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">        resp.getWriter().println(url);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="built_in">super</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>ServletDemo01.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.RequestDispatcher;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletDemo01</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="comment">//请求转发</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> <span class="built_in">this</span>.getServletContext();</span><br><span class="line">        <span class="comment">//转发的请求路径</span></span><br><span class="line"><span class="comment">//        RequestDispatcher requestDispatcher = servletContext.getRequestDispatcher(&quot;/helloservlet&quot;);</span></span><br><span class="line"><span class="comment">//        requestDispatcher.forward(req,resp);</span></span><br><span class="line">        servletContext.getRequestDispatcher(<span class="string">&quot;/helloservlet&quot;</span>).forward(req,resp);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="built_in">super</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>web.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;2.5&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>url<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>jdbc:mysql://localhost:3306/mybatis<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>helloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.xxy.servlet.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>helloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/helloservlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>pom.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.xxy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>MavenTest04<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Demo01<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.xxy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>MavenTest04 Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>MavenTest04<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span><span class="comment">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-clean-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.22.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-install-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-deploy-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="7-3-读取资源文件"><a href="#7-3-读取资源文件" class="headerlink" title="7.3 读取资源文件"></a>7.3 读取资源文件</h3><ul>
<li>可以放置的位置</li>
</ul>
<blockquote>
<p>在java你目录下</p>
<p>在resources目录下</p>
<p>都能打包到同一路径：classes</p>
</blockquote>
<ul>
<li>db.properties</li>
</ul>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 编译后在classes里面</span></span><br><span class="line"><span class="attr">url</span> =<span class="string">jdbc:mysql://localhost:3306/mybatis</span></span><br><span class="line"><span class="attr">username</span> = <span class="string">root</span></span><br><span class="line"><span class="attr">password</span> = <span class="string">root</span></span><br></pre></td></tr></table></figure>

<ul>
<li>PropertiesServlet.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PropertiesServlet</span> <span class="keyword">extends</span> <span class="title class_">HelloServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> <span class="built_in">this</span>.getServletContext().getResourceAsStream(<span class="string">&quot;/WEB-INF/classes/db.properties&quot;</span>);</span><br><span class="line"><span class="comment">//        InputStream is1 = this.getServletContext().getResourceAsStream(&quot;/WEB-INF/classes/aa.properties&quot;);</span></span><br><span class="line">        <span class="type">Properties</span> <span class="variable">prop</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        prop.load(is);</span><br><span class="line"><span class="comment">//        prop.load(is1);</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> prop.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> prop.getProperty(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> prop.getProperty(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        resp.getWriter().println(url + <span class="string">&quot;:&quot;</span> + username + <span class="string">&quot;:&quot;</span> + password);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="built_in">super</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>pom.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.xxy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>MavenTest04<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Demo01<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.xxy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>MavenTest04 Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>MavenTest04<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--在build中配置resources,来防止我们资源导出失败的问题--&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span><span class="comment">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>web.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;2.5&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>url<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>jdbc:mysql://localhost:3306/mybatis<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>helloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.xxy.servlet.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>helloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/helloservlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>servletDemo01<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.xxy.servlet.ServletDemo01<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>servletDemo01<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/servletDemo01<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>propertiesServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.xxy.servlet.PropertiesServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>propertiesServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/propertiesServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="8-HttpServletRequest"><a href="#8-HttpServletRequest" class="headerlink" title="8. HttpServletRequest"></a>8. HttpServletRequest</h2><blockquote>
<p>HttpServletRequest请求代表客户端的请求，用户通过Http协议访问服务器，HTTP请求中所有信息都会封装到HttpServletRequest，通过这个方法，可以获取客户端的所有信息</p>
</blockquote>
<h4 id="8-1-获取前端传过来的参数和请求转发"><a href="#8-1-获取前端传过来的参数和请求转发" class="headerlink" title="8.1 获取前端传过来的参数和请求转发"></a>8.1 获取前端传过来的参数和请求转发</h4><ul>
<li>index.jsp</li>
</ul>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;cyyzm&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">        function <span class="title function_">change</span><span class="params">(obj)</span> &#123;</span><br><span class="line">            <span class="comment">/* 给服务器传递一个时间戳(参数)，每一个时刻点击的时候都会发送不同的参数，这样就会骗过服务器一直重新做加载，而不会加载缓存。 做到每点击一次就刷新一次显示的图片*/</span></span><br><span class="line">            obj.src = <span class="string">&quot;/CheckCodeServlet?time=&quot;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>().getTime();</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h2&gt;Hello World!&lt;/h2&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;/RegistServlet&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">    用户名 ： &lt;input name=<span class="string">&quot;username&quot;</span> type=<span class="string">&quot;text&quot;</span> &gt; &lt;/br&gt;</span><br><span class="line">    密码   : &lt;input name=<span class="string">&quot;password&quot;</span> type=<span class="string">&quot;password&quot;</span>&gt; &lt;/br&gt;</span><br><span class="line">    爱好   ：</span><br><span class="line">    &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobbies&quot;</span> value=<span class="string">&quot;美&quot;</span>&gt; 美</span><br><span class="line">    &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobbies&quot;</span> value=<span class="string">&quot;音&quot;</span>&gt; 音</span><br><span class="line">    &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobbies&quot;</span> value=<span class="string">&quot;体&quot;</span>&gt; 体</span><br><span class="line">    &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobbies&quot;</span> value=<span class="string">&quot;文&quot;</span>&gt; 文 &lt;/br&gt;</span><br><span class="line"></span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> placeholder=<span class="string">&quot;请输入验证码...&quot;</span>  name = <span class="string">&quot;code&quot;</span>&gt;  &lt;img src=<span class="string">&quot;/CheckCodeServlet&quot;</span> onclick=<span class="string">&quot;change(this)&quot;</span>&gt; &lt;br /&gt;&lt;br /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;注册&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>RegistServlet.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="comment">//import javax.servlet.annotation.WebServlet;</span></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="comment">//import javax.servlet.jsp.PageContext;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//@WebServlet(&quot;/RegistServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RegistServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//设置字符集</span></span><br><span class="line">        response.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Content-Encoding&quot;</span>,<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        response.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        request.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        <span class="comment">//接收请求参数</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">code</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;code&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">userName</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        String[] hobbies = request.getParameterValues(<span class="string">&quot;hobbies&quot;</span>);</span><br><span class="line">        System.out.println(Arrays.toString(hobbies));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将输入的文字转换为utf-8编码形式</span></span><br><span class="line">        <span class="comment">//byte[] bytes = code.getBytes(&quot;ISO8859-1&quot;);</span></span><br><span class="line"><span class="comment">//        byte[] bytes = code.getBytes(&quot;ISO8859-1&quot;);</span></span><br><span class="line"><span class="comment">//        code = new String(bytes,&quot;UTF-8&quot;);</span></span><br><span class="line">        System.out.println(code);</span><br><span class="line">        System.out.println(userName + <span class="string">&quot; &quot;</span> + password);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//取出一开始存放 的word 成语绘图处理界面在绘制图片的时候已经将所绘制的文字存放到了ServerletContext域当中了</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">word</span> <span class="operator">=</span> (String)<span class="built_in">this</span>.getServletContext().getAttribute(<span class="string">&quot;checkCode&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//两个做对比</span></span><br><span class="line">        <span class="keyword">if</span> (!code.equals(word)) &#123;</span><br><span class="line">            response.getWriter().write(<span class="string">&quot;验证码错误  &quot;</span>);</span><br><span class="line">            response.setHeader(<span class="string">&quot;refresh&quot;</span>,<span class="string">&quot;3;url= /index.jsp&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//            response.getWriter().write(&quot;注册 成功 &quot;);</span></span><br><span class="line"><span class="comment">//            重定向</span></span><br><span class="line"><span class="comment">//            response.sendRedirect(&quot;/success.jsp&quot;);</span></span><br><span class="line"><span class="comment">//            请求转发</span></span><br><span class="line">            <span class="comment">// &#x27;/&#x27;代表当前根目录 相当于request.getContextPath()</span></span><br><span class="line">            request.getRequestDispatcher(request.getContextPath() + <span class="string">&quot;/success.jsp&quot;</span>).forward(request,response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="9-HttpServletResponse"><a href="#9-HttpServletResponse" class="headerlink" title="9.HttpServletResponse"></a>9.HttpServletResponse</h2><blockquote>
<p>响应： Web服务器接收到客户端的http请求，针对这个请求，分别创建一个代表请求HttpServletRequest对象，代表一个响应的HttpServletResponse</p>
</blockquote>
<ul>
<li>如果获取客户端请求过来的参数 ： 找HttpServletRequest</li>
<li>如果要给客户端响应一些信息：找HttpServletResponse</li>
</ul>
<h4 id="9-1-简单分类"><a href="#9-1-简单分类" class="headerlink" title="9.1 简单分类"></a>9.1 简单分类</h4><ul>
<li>负责向浏览器发送数据的方法</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ServletOutputStream <span class="title function_">getOutputStream</span><span class="params">()</span> <span class="keyword">throws</span> IOException;</span><br><span class="line"></span><br><span class="line">PrintWriter <span class="title function_">getWriter</span><span class="params">()</span> <span class="keyword">throws</span> IOException;</span><br></pre></td></tr></table></figure>

<ul>
<li>负责向浏览器发送响应头的方法</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">setCharacterEncoding</span><span class="params">(String var1)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">setContentLength</span><span class="params">(<span class="type">int</span> var1)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">setContentType</span><span class="params">(String var1)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">setBufferSize</span><span class="params">(<span class="type">int</span> var1)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">setDateHeader</span><span class="params">(String var1, <span class="type">long</span> var2)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">addDateHeader</span><span class="params">(String var1, <span class="type">long</span> var2)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">setHeader</span><span class="params">(String var1, String var2)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">addHeader</span><span class="params">(String var1, String var2)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">setIntHeader</span><span class="params">(String var1, <span class="type">int</span> var2)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">addIntHeader</span><span class="params">(String var1, <span class="type">int</span> var2)</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>响应的状态码</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">SC_CONTINUE</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_SWITCHING_PROTOCOLS</span> <span class="operator">=</span> <span class="number">101</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_OK</span> <span class="operator">=</span> <span class="number">200</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_CREATED</span> <span class="operator">=</span> <span class="number">201</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_ACCEPTED</span> <span class="operator">=</span> <span class="number">202</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_NON_AUTHORITATIVE_INFORMATION</span> <span class="operator">=</span> <span class="number">203</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_NO_CONTENT</span> <span class="operator">=</span> <span class="number">204</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_RESET_CONTENT</span> <span class="operator">=</span> <span class="number">205</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_PARTIAL_CONTENT</span> <span class="operator">=</span> <span class="number">206</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_MULTIPLE_CHOICES</span> <span class="operator">=</span> <span class="number">300</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_MOVED_PERMANENTLY</span> <span class="operator">=</span> <span class="number">301</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_MOVED_TEMPORARILY</span> <span class="operator">=</span> <span class="number">302</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_FOUND</span> <span class="operator">=</span> <span class="number">302</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_SEE_OTHER</span> <span class="operator">=</span> <span class="number">303</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_NOT_MODIFIED</span> <span class="operator">=</span> <span class="number">304</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_USE_PROXY</span> <span class="operator">=</span> <span class="number">305</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_TEMPORARY_REDIRECT</span> <span class="operator">=</span> <span class="number">307</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_BAD_REQUEST</span> <span class="operator">=</span> <span class="number">400</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_UNAUTHORIZED</span> <span class="operator">=</span> <span class="number">401</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_PAYMENT_REQUIRED</span> <span class="operator">=</span> <span class="number">402</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_FORBIDDEN</span> <span class="operator">=</span> <span class="number">403</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_NOT_FOUND</span> <span class="operator">=</span> <span class="number">404</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_METHOD_NOT_ALLOWED</span> <span class="operator">=</span> <span class="number">405</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_NOT_ACCEPTABLE</span> <span class="operator">=</span> <span class="number">406</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_PROXY_AUTHENTICATION_REQUIRED</span> <span class="operator">=</span> <span class="number">407</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_REQUEST_TIMEOUT</span> <span class="operator">=</span> <span class="number">408</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_CONFLICT</span> <span class="operator">=</span> <span class="number">409</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_GONE</span> <span class="operator">=</span> <span class="number">410</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_LENGTH_REQUIRED</span> <span class="operator">=</span> <span class="number">411</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_PRECONDITION_FAILED</span> <span class="operator">=</span> <span class="number">412</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_REQUEST_ENTITY_TOO_LARGE</span> <span class="operator">=</span> <span class="number">413</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_REQUEST_URI_TOO_LONG</span> <span class="operator">=</span> <span class="number">414</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_UNSUPPORTED_MEDIA_TYPE</span> <span class="operator">=</span> <span class="number">415</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_REQUESTED_RANGE_NOT_SATISFIABLE</span> <span class="operator">=</span> <span class="number">416</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_EXPECTATION_FAILED</span> <span class="operator">=</span> <span class="number">417</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_INTERNAL_SERVER_ERROR</span> <span class="operator">=</span> <span class="number">500</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_NOT_IMPLEMENTED</span> <span class="operator">=</span> <span class="number">501</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_BAD_GATEWAY</span> <span class="operator">=</span> <span class="number">502</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_SERVICE_UNAVAILABLE</span> <span class="operator">=</span> <span class="number">503</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_GATEWAY_TIMEOUT</span> <span class="operator">=</span> <span class="number">504</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">SC_HTTP_VERSION_NOT_SUPPORTED</span> <span class="operator">=</span> <span class="number">505</span>;</span><br></pre></td></tr></table></figure>

<h4 id="9-2-向浏览器输出消息和下载文件"><a href="#9-2-向浏览器输出消息和下载文件" class="headerlink" title="9.2 向浏览器输出消息和下载文件"></a>9.2 向浏览器输出消息和下载文件</h4><ul>
<li>下载文件</li>
</ul>
<blockquote>
<ul>
<li>要获取下载文件的路径</li>
<li>下载的文件名叫什么</li>
<li>设置想办法让浏览器能够支持下载我们需要的东西</li>
<li>获取下载为文件的输入流</li>
<li>创建缓冲区</li>
<li>获取OutputStream对象</li>
<li>将FileOutputStream流写入到buffer缓冲区</li>
<li>使用OutputStream将缓冲区中的数据输出到客户端</li>
</ul>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletOutputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"><span class="comment">//                - 要获取下载文件的路径</span></span><br><span class="line"><span class="comment">//        String realPath  = this.getServletContext().getRealPath(&quot;/1.png&quot;);</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">realPath</span>  <span class="operator">=</span> <span class="string">&quot;D:\\ideawork\\Demo01\\MavenTest04\\src\\main\\resources\\你好.png&quot;</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;下载文件的路径：&quot;</span> + realPath);</span><br><span class="line"><span class="comment">//                - 下载的文件名叫什么</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> realPath.substring(realPath.lastIndexOf(<span class="string">&quot;\\&quot;</span>) + <span class="number">1</span>);</span><br><span class="line"><span class="comment">//                - 设置想办法让浏览器能够支持下载我们需要的东西 中文文件名URLEncoder.encode编码，否则有可能乱码</span></span><br><span class="line">        resp.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>,<span class="string">&quot;attachment;fileName = &quot;</span> + URLEncoder.encode(fileName,<span class="string">&quot;utf-8&quot;</span>));</span><br><span class="line"><span class="comment">//                - 获取下载为文件的输入流</span></span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(realPath);</span><br><span class="line"><span class="comment">//                - 创建缓冲区</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="comment">//                - 获取OutputStream对象</span></span><br><span class="line">        <span class="type">ServletOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> resp.getOutputStream();</span><br><span class="line"><span class="comment">//                - 将FileOutputStream流写入到buffer缓冲区  - 使用OutputStream将缓冲区中的数据输出到客户端</span></span><br><span class="line">        <span class="keyword">while</span> ((len = in.read(buffer)) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            out.write(buffer, <span class="number">0</span> , len);</span><br><span class="line">        &#125;</span><br><span class="line">        in.close();</span><br><span class="line">        out.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="built_in">super</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="9-3-验证码"><a href="#9-3-验证码" class="headerlink" title="9.3 验证码"></a>9.3 验证码</h4><ul>
<li>前端实现，js实现</li>
<li>后端实现，需要用到java图片类，生产一个图片</li>
<li>数字验证码</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ImageServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//每3秒刷新一次</span></span><br><span class="line">        resp.setHeader(<span class="string">&quot;Refresh&quot;</span>,<span class="string">&quot;3&quot;</span>);</span><br><span class="line">        <span class="comment">//在内存中创建一个图片</span></span><br><span class="line">        <span class="type">BufferedImage</span> <span class="variable">image</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedImage</span>(<span class="number">80</span>,<span class="number">20</span>,BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        <span class="comment">//得到图片,笔</span></span><br><span class="line">        <span class="type">Graphics2D</span> <span class="variable">g</span> <span class="operator">=</span> (Graphics2D) image.getGraphics();</span><br><span class="line">        <span class="comment">//设置图片背景</span></span><br><span class="line">        g.setBackground(Color.white);</span><br><span class="line">        g.fillRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">80</span>,<span class="number">20</span>);</span><br><span class="line">        <span class="comment">//给图片写数据</span></span><br><span class="line">        g.setColor(Color.black);</span><br><span class="line">        g.setFont(<span class="keyword">new</span> <span class="title class_">Font</span>(<span class="literal">null</span>,Font.BOLD,<span class="number">20</span>));</span><br><span class="line">        g.drawString(makeNum(),<span class="number">0</span>,<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//告诉浏览器，这个请求用图片的方式打开</span></span><br><span class="line">        resp.setContentType(<span class="string">&quot;image/jpeg&quot;</span>);</span><br><span class="line">        <span class="comment">//网站存在缓存，不让浏览器缓存</span></span><br><span class="line">        resp.setDateHeader(<span class="string">&quot;expires&quot;</span>,-<span class="number">1</span>);</span><br><span class="line">        resp.setHeader(<span class="string">&quot;Cache-Control&quot;</span>,<span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">        resp.setHeader(<span class="string">&quot;Pragma&quot;</span>,<span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">        <span class="comment">//把图片写给浏览器</span></span><br><span class="line">        ImageIO.write(image, <span class="string">&quot;jpg&quot;</span>, resp.getOutputStream());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//生成随机数</span></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">makeNum</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">num</span> <span class="operator">=</span> random.nextInt(<span class="number">9999999</span>) + <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">7</span>-num.length(); i++) &#123;</span><br><span class="line">            sb.append(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        num = sb.toString() + num;</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>成语验证码</li>
<li>cyyzm.html</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">change</span>(<span class="params">obj</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">/* 给服务器传递一个时间戳(参数)，每一个时刻点击的时候都会发送不同的参数，这样就会骗过服务器一直重新做加载，而不会加载缓存。 做到每点击一次就刷新一次显示的图片*/</span></span></span><br><span class="line"><span class="language-javascript">            obj.<span class="property">src</span> = <span class="string">&quot;/CheckCodeServlet?time=&quot;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/RegistServlet&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--在图片标签中的src图片地址直接填上绘制图片的后台Servlet即可--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入验证码...&quot;</span>  <span class="attr">name</span> = <span class="string">&quot;code&quot;</span>&gt;</span>  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/CheckCodeServlet&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;change(this)&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>CheckCodeServlet.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">RegistServletpackage cn.xxy.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.Color;</span><br><span class="line"><span class="keyword">import</span> java.awt.Font;</span><br><span class="line"><span class="keyword">import</span> java.awt.Graphics;</span><br><span class="line"><span class="keyword">import</span> java.awt.Graphics2D;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//@WebServlet(&quot;/CheckCodeServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CheckCodeServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 集合中保存所有成语</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; words = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line">        <span class="comment">// 初始化阶段，读取new_words.txt</span></span><br><span class="line">        <span class="comment">// web工程中读取 文件,必须使用绝对磁盘路径</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> getServletContext().getRealPath(<span class="string">&quot;/WEB-INF/word.txt&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">FileReader</span>(path));</span><br><span class="line">            String line;</span><br><span class="line">            <span class="comment">//把读的成语全部添加到一个集合当中</span></span><br><span class="line">            <span class="keyword">while</span> ((line = reader.readLine()) != <span class="literal">null</span>) &#123;</span><br><span class="line">                words.add(line);</span><br><span class="line">            &#125;</span><br><span class="line">            reader.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line">            <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//每5秒刷新一次</span></span><br><span class="line">        response.setHeader(<span class="string">&quot;Refresh&quot;</span>,<span class="string">&quot;60&quot;</span>);</span><br><span class="line">        <span class="comment">// 禁止缓存</span></span><br><span class="line">        response.setHeader(<span class="string">&quot;Cache-Control&quot;</span>, <span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">        <span class="comment">//设置过期时间为立即过期</span></span><br><span class="line">        response.setDateHeader(<span class="string">&quot;Expires&quot;</span>, <span class="number">0</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Pragma&quot;</span>,<span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Content-Encoding&quot;</span>,<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">width</span> <span class="operator">=</span> <span class="number">420</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">        <span class="comment">// 步骤一 绘制一张内存中图片</span></span><br><span class="line">        <span class="type">BufferedImage</span> <span class="variable">bufferedImage</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedImage</span>(width, height,</span><br><span class="line">                BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        <span class="comment">// 步骤二 图片绘制背景颜色 ---通过绘图对象</span></span><br><span class="line">        <span class="type">Graphics</span> <span class="variable">graphics</span> <span class="operator">=</span> (Graphics2D) bufferedImage.getGraphics();<span class="comment">// 得到画图对象 --- 画笔</span></span><br><span class="line">        <span class="comment">// 绘制任何图形之前 都必须指定一个颜色</span></span><br><span class="line">        graphics.setColor(getRandColor(<span class="number">200</span>, <span class="number">250</span>));</span><br><span class="line">        graphics.fillRect(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">        <span class="comment">// 步骤三 绘制边框</span></span><br><span class="line">        graphics.setColor(Color.WHITE);</span><br><span class="line">        graphics.drawRect(<span class="number">0</span>, <span class="number">0</span>, width - <span class="number">1</span>, height - <span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 步骤四 四个随机数字</span></span><br><span class="line">        <span class="type">Graphics2D</span> <span class="variable">graphics2d</span> <span class="operator">=</span> (Graphics2D) graphics;</span><br><span class="line">        <span class="comment">// 设置输出字体</span></span><br><span class="line">        graphics2d.setFont(<span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">&quot;宋体&quot;</span>, Font.BOLD, <span class="number">18</span>));</span><br><span class="line">        <span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();<span class="comment">// 生成随机数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> random.nextInt(words.size());</span><br><span class="line">        <span class="type">String</span> <span class="variable">word</span> <span class="operator">=</span> words.get(index);<span class="comment">// 获得成语</span></span><br><span class="line">        System.out.println(word);</span><br><span class="line">        <span class="comment">// 定义x坐标</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; word.length(); i++) &#123;</span><br><span class="line">            <span class="comment">// 随机颜色</span></span><br><span class="line">            graphics2d.setColor(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">20</span> + random.nextInt(<span class="number">110</span>), <span class="number">20</span> + random</span><br><span class="line">                    .nextInt(<span class="number">110</span>), <span class="number">20</span> + random.nextInt(<span class="number">110</span>)));</span><br><span class="line">            <span class="comment">// 旋转 -30 --- 30度</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">jiaodu</span> <span class="operator">=</span> random.nextInt(<span class="number">60</span>) - <span class="number">30</span>;</span><br><span class="line">            <span class="comment">// 换算弧度</span></span><br><span class="line">            <span class="type">double</span> <span class="variable">theta</span> <span class="operator">=</span> jiaodu * Math.PI / <span class="number">180</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获得字母数字</span></span><br><span class="line">            <span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> word.charAt(i);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 将c 输出到图片</span></span><br><span class="line">            graphics2d.rotate(theta, x, <span class="number">20</span>);</span><br><span class="line">            graphics2d.drawString(String.valueOf(c), x, <span class="number">20</span>);</span><br><span class="line">            graphics2d.rotate(-theta, x, <span class="number">20</span>);</span><br><span class="line">            x += <span class="number">30</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将验证码内容保存session</span></span><br><span class="line">        <span class="comment">//request.getSession().setAttribute(&quot;checkcode_session&quot;, word);</span></span><br><span class="line">        <span class="comment">//把生成的验证码存放到全局域对象当中</span></span><br><span class="line">        <span class="built_in">this</span>.getServletContext().setAttribute(<span class="string">&quot;checkCode&quot;</span>, word);</span><br><span class="line">        <span class="comment">// 步骤五 绘制干扰线</span></span><br><span class="line">        graphics.setColor(getRandColor(<span class="number">160</span>, <span class="number">200</span>));</span><br><span class="line">        <span class="type">int</span> x1;</span><br><span class="line">        <span class="type">int</span> x2;</span><br><span class="line">        <span class="type">int</span> y1;</span><br><span class="line">        <span class="type">int</span> y2;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">30</span>; i++) &#123;</span><br><span class="line">            x1 = random.nextInt(width);</span><br><span class="line">            x2 = random.nextInt(<span class="number">12</span>);</span><br><span class="line">            y1 = random.nextInt(height);</span><br><span class="line">            y2 = random.nextInt(<span class="number">12</span>);</span><br><span class="line">            graphics.drawLine(x1, y1, x1 + x2, x2 + y2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 将上面图片输出到浏览器 ImageIO</span></span><br><span class="line">        graphics.dispose();<span class="comment">// 释放资源</span></span><br><span class="line">        <span class="comment">//将图片写到response.getOutputStream()中</span></span><br><span class="line">        ImageIO.write(bufferedImage, <span class="string">&quot;jpg&quot;</span>, response.getOutputStream());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line">            <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取其某一范围的color</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fc</span></span><br><span class="line"><span class="comment">     *            int 范围参数1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bc</span></span><br><span class="line"><span class="comment">     *            int 范围参数2</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Color</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Color <span class="title function_">getRandColor</span><span class="params">(<span class="type">int</span> fc, <span class="type">int</span> bc)</span> &#123;</span><br><span class="line">        <span class="comment">// 取其随机颜色</span></span><br><span class="line">        <span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="keyword">if</span> (fc &gt; <span class="number">255</span>) &#123;</span><br><span class="line">            fc = <span class="number">255</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (bc &gt; <span class="number">255</span>) &#123;</span><br><span class="line">            bc = <span class="number">255</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">r</span> <span class="operator">=</span> fc + random.nextInt(bc - fc);</span><br><span class="line">        <span class="type">int</span> <span class="variable">g</span> <span class="operator">=</span> fc + random.nextInt(bc - fc);</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> fc + random.nextInt(bc - fc);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Color</span>(r, g, b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>RegistServlet.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="comment">//import javax.servlet.jsp.PageContext;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//@WebServlet(&quot;/RegistServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RegistServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//接收请求参数</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">code</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;code&quot;</span>);</span><br><span class="line">        System.out.println(code);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将输入的文字转换为utf-8编码形式</span></span><br><span class="line">        <span class="comment">//byte[] bytes = code.getBytes(&quot;ISO8859-1&quot;);</span></span><br><span class="line">        <span class="comment">//byte[] bytes = code.getBytes(&quot;ISO8859-1&quot;);</span></span><br><span class="line">       <span class="comment">// code = new String(bytes,&quot;UTF-8&quot;);</span></span><br><span class="line">        System.out.println(code);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//取出一开始存放 的word 成语绘图处理界面在绘制图片的时候已经将所绘制的文字存放到了ServerletContext域当中了</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">word</span> <span class="operator">=</span> (String)<span class="built_in">this</span>.getServletContext().getAttribute(<span class="string">&quot;checkCode&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置字符集</span></span><br><span class="line">        response.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//两个做对比</span></span><br><span class="line">        <span class="keyword">if</span> (!code.equals(word)) &#123;</span><br><span class="line">            response.getWriter().write(<span class="string">&quot;验证码错误  &quot;</span>);</span><br><span class="line">            response.setHeader(<span class="string">&quot;refresh&quot;</span>,<span class="string">&quot;3;url= ../target/MavenTest04/cyyzm.html&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            response.getWriter().write(<span class="string">&quot;注册 成功 &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>web.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>CheckCodeServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/CheckCodeServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>RegistServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.xxy.servlet.RegistServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>RegistServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/RegistServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>word.txt</li>
</ul>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">擎天柱</span><br><span class="line">空城计</span><br><span class="line">救世主</span><br><span class="line">丑八怪</span><br><span class="line">美人计</span><br><span class="line">里程碑</span><br></pre></td></tr></table></figure>

<h4 id="9-4-实现重定向"><a href="#9-4-实现重定向" class="headerlink" title="9.4 实现重定向"></a>9.4 实现重定向</h4><blockquote>
<p>一个web资源收到客户端A请求，B会通知客户去访问C，这个过程叫重定向</p>
</blockquote>
<table>
<thead>
<tr>
<th>类别</th>
<th>代码</th>
<th>发送请求</th>
<th>地址改变</th>
<th>共享参数</th>
<th>跨域</th>
<th>访问WEB-INF目录（不能被外部通过地址直接访问）</th>
<th>数字</th>
</tr>
</thead>
<tbody><tr>
<td>请求转发</td>
<td>req.getRequestDispatcher(“&#x2F;WEB-INF&#x2F;views&#x2F;student.jsp”).forward(req,resp);</td>
<td>一次</td>
<td>不会改变</td>
<td>可以共享</td>
<td>不能</td>
<td>能</td>
<td>307</td>
</tr>
<tr>
<td>重定向</td>
<td>resp.sendRedirect(“&#x2F;day02_01&#x2F;WEB-INF&#x2F;views&#x2F;student.jsp”)</td>
<td>两次</td>
<td>会改变</td>
<td>不可以</td>
<td>可以</td>
<td>不能</td>
<td>302</td>
</tr>
</tbody></table>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendRedirect</span><span class="params">(String location)</span> <span class="keyword">throws</span> IOException;</span><br></pre></td></tr></table></figure>

<ul>
<li>Redirect.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Redirect</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 原理：  resp.setHeader(&quot;Location&quot;,&quot;/imageServlet&quot;);</span></span><br><span class="line"><span class="comment">         *         resp.setStatus(302);</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">       resp.sendRedirect(<span class="string">&quot;/imageServlet&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>web.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Redirect<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.xxy.servlet.Redirect<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Redirect<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/Redirect<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="9-5-登录"><a href="#9-5-登录" class="headerlink" title="9.5 登录"></a>9.5 登录</h4><ul>
<li>index.html</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;cyyzm&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">        function <span class="title function_">change</span><span class="params">(obj)</span> &#123;</span><br><span class="line">            <span class="comment">/* 给服务器传递一个时间戳(参数)，每一个时刻点击的时候都会发送不同的参数，这样就会骗过服务器一直重新做加载，而不会加载缓存。 做到每点击一次就刷新一次显示的图片*/</span></span><br><span class="line">            obj.src = <span class="string">&quot;/CheckCodeServlet?time=&quot;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>().getTime();</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h2&gt;Hello World!&lt;/h2&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;/RegistServlet&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">    用户名 ： &lt;input name=<span class="string">&quot;username&quot;</span> type=<span class="string">&quot;text&quot;</span> &gt; &lt;/br&gt;</span><br><span class="line">    密码   : &lt;input name=<span class="string">&quot;password&quot;</span> type=<span class="string">&quot;password&quot;</span>&gt; &lt;/br&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> placeholder=<span class="string">&quot;请输入验证码...&quot;</span>  name = <span class="string">&quot;code&quot;</span>&gt;  &lt;img src=<span class="string">&quot;/CheckCodeServlet&quot;</span> onclick=<span class="string">&quot;change(this)&quot;</span>&gt; &lt;br /&gt;&lt;br /&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;注册&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>RegistServlet.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="comment">//import javax.servlet.jsp.PageContext;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//@WebServlet(&quot;/RegistServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RegistServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//接收请求参数</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">code</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;code&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">userName</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        System.out.println(code);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将输入的文字转换为utf-8编码形式</span></span><br><span class="line">        <span class="comment">//byte[] bytes = code.getBytes(&quot;ISO8859-1&quot;);</span></span><br><span class="line">        <span class="comment">//byte[] bytes = code.getBytes(&quot;ISO8859-1&quot;);</span></span><br><span class="line">       <span class="comment">// code = new String(bytes,&quot;UTF-8&quot;);</span></span><br><span class="line">        System.out.println(code);</span><br><span class="line">        System.out.println(userName + <span class="string">&quot; &quot;</span> + password);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//取出一开始存放 的word 成语绘图处理界面在绘制图片的时候已经将所绘制的文字存放到了ServerletContext域当中了</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">word</span> <span class="operator">=</span> (String)<span class="built_in">this</span>.getServletContext().getAttribute(<span class="string">&quot;checkCode&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置字符集</span></span><br><span class="line">        response.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//两个做对比</span></span><br><span class="line">        <span class="keyword">if</span> (!code.equals(word)) &#123;</span><br><span class="line">            response.getWriter().write(<span class="string">&quot;验证码错误  &quot;</span>);</span><br><span class="line">            response.setHeader(<span class="string">&quot;refresh&quot;</span>,<span class="string">&quot;3;url= ../target/MavenTest04/cyyzm.html&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            response.getWriter().write(<span class="string">&quot;注册 成功 &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="9-5-上传"><a href="#9-5-上传" class="headerlink" title="9.5 上传"></a>9.5 上传</h4><ul>
<li><p>上传注意</p>
<ul>
<li>上传文件要放在外界访问不到的目录下，比如WEB-INF下</li>
<li>为防止文件覆盖，需要重命名唯一的名字</li>
</ul>
<blockquote>
<p>时间戳、UUID、md5、位运算算法</p>
</blockquote>
<ul>
<li>限制文件上传的最大值</li>
<li>限制上传文件的类型</li>
</ul>
</li>
</ul>
<h2 id="10-Cookie、Session"><a href="#10-Cookie、Session" class="headerlink" title="10. Cookie、Session"></a>10. Cookie、Session</h2><h3 id="10-1-不同点"><a href="#10-1-不同点" class="headerlink" title="10.1 不同点"></a>10.1 不同点</h3><table>
<thead>
<tr>
<th>名称</th>
<th>存储位置</th>
<th>存储容量</th>
<th>存储方式</th>
<th>隐私策略</th>
<th>有效期</th>
<th>服务器压力</th>
<th>浏览器支持</th>
<th>跨域支持</th>
</tr>
</thead>
<tbody><tr>
<td>Cookie</td>
<td>客户端浏览器</td>
<td>&lt;&#x3D;4KB,最多保存20个Cookie，300个cookie浏览器上限</td>
<td>只能保管ASCII字符串</td>
<td>客户端可见，不安全</td>
<td>设置cookie的属性长期有效</td>
<td>不占用服务器资源，并发</td>
<td>禁用或不支持cookie，则会话跟踪会失效，能够设置子窗口</td>
<td>cookie支持跨域名访问</td>
</tr>
<tr>
<td>Session</td>
<td>服务器</td>
<td>设置session删除机制,没有上限</td>
<td>任何</td>
<td>透明对</td>
<td>只需关闭窗口该session就会失效</td>
<td>耗费大量的内存</td>
<td>需要使用URL地址重写的方式，本窗口以及子窗口</td>
<td>session不支持跨域名访问</td>
</tr>
</tbody></table>
<h3 id="10-2-会话"><a href="#10-2-会话" class="headerlink" title="10.2 会话"></a>10.2 会话</h3><ul>
<li>会话</li>
</ul>
<blockquote>
<p>用户打开浏览器，点开很多超链接，关闭浏览器，过程叫会话</p>
</blockquote>
<ul>
<li>有状态会话</li>
</ul>
<blockquote>
<p>服务器保存用户信息，下次登录或者来时，知道曾经登录或者来过</p>
</blockquote>
<ul>
<li>服务器给客户端一个信件，客户端下次访问服务端带上信件就可以了 -Cookie</li>
<li>服务器登记过你了，下次来的时候我来匹配你 -Session</li>
</ul>
<h3 id="10-3-Cookie"><a href="#10-3-Cookie" class="headerlink" title="10.3 Cookie"></a>10.3 Cookie</h3><ul>
<li>从请求中拿到cookie信息</li>
<li>服务器响应给客户端cookie</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Cookie[] cookies = req.getCookies(); <span class="comment">//获取cookie</span></span><br><span class="line">cookie.getName();<span class="comment">//获取cookie的key</span></span><br><span class="line">cookie.getValue();<span class="comment">//获取cookie的value</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Cookie</span>(<span class="string">&quot;lastLoginTime&quot;</span>, System.currentTimeMillis() + <span class="string">&quot;&quot;</span>);<span class="comment">//新建一个cookie</span></span><br><span class="line">cookie.setMaxAge(<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>);<span class="comment">//设置cookie的有效期</span></span><br><span class="line">resp.addCookie(cookie);<span class="comment">//响应给客户端一个cookie</span></span><br></pre></td></tr></table></figure>

<ul>
<li>cookie:一般保存在本地用户目录下 Appdata</li>
<li>删除Cookie</li>
</ul>
<blockquote>
<p>不设置有效期，关闭浏览器，设置有效期时间为0</p>
</blockquote>
<ul>
<li>CookieDemo01.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.Cookie;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.net.URLDecoder;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">//保存用户上一次访问的时间</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CookieDemo01</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">        req.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        resp.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> resp.getWriter();</span><br><span class="line">        Cookie[] cookies = req.getCookies();</span><br><span class="line">        <span class="keyword">if</span> (cookies != <span class="literal">null</span>) &#123;</span><br><span class="line">            out.write(<span class="string">&quot;你上一次访问的时间是：&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; cookies.length; i++) &#123;</span><br><span class="line">                <span class="type">Cookie</span> <span class="variable">cookie</span> <span class="operator">=</span> cookies[i];</span><br><span class="line">                <span class="comment">//获取cookie的名字</span></span><br><span class="line"><span class="comment">//                if (cookie.getName().equals(&quot;lastLoginTime&quot;)) &#123;</span></span><br><span class="line"><span class="comment">//                   Long lastLoginTime = Long.valueOf(cookie.getValue());</span></span><br><span class="line"><span class="comment">//                    Date date = new Date(lastLoginTime);</span></span><br><span class="line"><span class="comment">//                    out.write(date.toLocaleString());</span></span><br><span class="line"><span class="comment">//                &#125;</span></span><br><span class="line">                <span class="keyword">if</span> (cookie.getName().equals(<span class="string">&quot;name&quot;</span>)) &#123;</span><br><span class="line">                    out.write(URLDecoder.decode(cookie.getValue(),<span class="string">&quot;utf-8&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            out.write(<span class="string">&quot;这是您第一次访问&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//服务给客户端响应一个</span></span><br><span class="line"><span class="comment">//        Cookie cookie = new Cookie(&quot;lastLoginTime&quot;, System.currentTimeMillis() + &quot;&quot;);</span></span><br><span class="line">        <span class="type">Cookie</span> <span class="variable">cookie</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cookie</span>(<span class="string">&quot;name&quot;</span>, URLEncoder.encode(<span class="string">&quot;这里&quot;</span>,<span class="string">&quot;utf-8&quot;</span>));</span><br><span class="line">        cookie.setMaxAge(<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>);</span><br><span class="line">        resp.addCookie(cookie);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>web.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>CookieDemo01<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.xxy.servlet.CookieDemo01<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>CookieDemo01<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/CookieDemo01<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="10-4-Session"><a href="#10-4-Session" class="headerlink" title="10.4 Session"></a>10.4 Session</h3><h4 id="10-4-1-使用场景"><a href="#10-4-1-使用场景" class="headerlink" title="10.4.1 使用场景"></a>10.4.1 使用场景</h4><ul>
<li>保存登录用户的信息</li>
<li>购物车信息</li>
<li>在整个网站中经常会使用的数据</li>
</ul>
<h4 id="10-4-2-使用Session"><a href="#10-4-2-使用Session" class="headerlink" title="10.4.2 使用Session"></a>10.4.2 使用Session</h4><ul>
<li>新建session</li>
<li>SessionDemo01.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.xxy.pojo.Person;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SessionDemo01</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//解决乱码问题</span></span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">        req.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        resp.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        <span class="comment">//获取session</span></span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> req.getSession();</span><br><span class="line">        <span class="comment">//得到session存储信息</span></span><br><span class="line">        session.setAttribute(<span class="string">&quot;person&quot;</span>,<span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;he&quot;</span>,<span class="number">22</span>));</span><br><span class="line">        <span class="comment">//获取session的id</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> session.getId();</span><br><span class="line">        <span class="comment">//判断session是不是新创建的</span></span><br><span class="line">        <span class="keyword">if</span> (session.isNew()) &#123;</span><br><span class="line">            resp.getWriter().write(<span class="string">&quot;Seesion创建成功，ID：&quot;</span> + id);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            resp.getWriter().write(<span class="string">&quot;ID为：&quot;</span> + id  + <span class="string">&quot;的seesion在服务器中已经存在了&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//session在创建的时候做了什么</span></span><br><span class="line">        <span class="type">Cookie</span> <span class="variable">jsessionid</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cookie</span>(<span class="string">&quot;JSESSIONID&quot;</span>, id);</span><br><span class="line">        resp.addCookie(jsessionid);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>共享数据</li>
<li>SessionDemo02.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.xxy.pojo.Person;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SessionDemo02</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//解决乱码问题</span></span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">        req.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        resp.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        <span class="comment">//获取session</span></span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> req.getSession();</span><br><span class="line">        <span class="comment">//得到session存储信息</span></span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> (Person) session.getAttribute(<span class="string">&quot;person&quot;</span>);</span><br><span class="line">        System.out.println(person.toString());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>销毁session</li>
<li>SessionDemo03.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SessionDemo03</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> req.getSession();</span><br><span class="line">        session.removeAttribute(<span class="string">&quot;person&quot;</span>);</span><br><span class="line">        <span class="comment">//手动注销</span></span><br><span class="line">        session.invalidate();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>Session自动过期和配置文件</p>
</li>
<li><p>web.xml</p>
</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;2.5&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>CookieDemo01<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.xxy.servlet.CookieDemo01<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>CookieDemo01<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/CookieDemo01<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SessionDemo01<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.xxy.servlet.SessionDemo01<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SessionDemo01<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/SessionDemo01<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SessionDemo02<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.xxy.servlet.SessionDemo02<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SessionDemo02<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/SessionDemo02<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SessionDemo03<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.xxy.servlet.SessionDemo03<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SessionDemo03<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/SessionDemo03<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    设置session自动失效时间--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">session-config</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        15分钟session自动失效，单位为分钟--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">session-timeout</span>&gt;</span>15<span class="tag">&lt;/<span class="name">session-timeout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">session-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>共享还可以是用ApplicationContext，全局上下文</li>
</ul>
<h2 id="11-Jsp"><a href="#11-Jsp" class="headerlink" title="11. Jsp"></a>11. Jsp</h2><blockquote>
<p>此技术比较老旧，重点了解思路和方式</p>
</blockquote>
<h3 id="11-1-Jsp怎么运行的"><a href="#11-1-Jsp怎么运行的" class="headerlink" title="11.1 Jsp怎么运行的"></a>11.1 Jsp怎么运行的</h3><ul>
<li>代码</li>
<li>服务器内部工作</li>
</ul>
<blockquote>
<p>Tomcat有一个work工作夹，IDEA中使用Tomcat会在IDEA的Tomcat中生产一个work目录</p>
</blockquote>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">C:\Users\.IntelliJIdea2019.3\system\tomcat\Unnamed_Demo01\work\Catalina\localhost\_\org\apache\jsp</span><br></pre></td></tr></table></figure>

<blockquote>
<p>发现页面变为了.java程序</p>
<p>浏览器向服务器发送请求，不管访问什么资源，其实都是在访问Servlet</p>
<p>Jsp本质上就是一个Servlet</p>
<p>Jsp最终会被转换成为一个Java类,编译为.class文件供用户访问，也就是Servlet</p>
</blockquote>
<ul>
<li>index_jsp.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.apache.jsp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">index_jsp</span> <span class="keyword">extends</span> <span class="title class_">org</span>.apache.jasper.runtime.HttpJspBase</span><br><span class="line">    <span class="keyword">implements</span> <span class="title class_">org</span>.apache.jasper.runtime.JspSourceDependent &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">JspFactory</span> <span class="variable">_jspxFactory</span> <span class="operator">=</span> JspFactory.getDefaultFactory();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> java.util.List _jspx_dependants;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> javax.el.ExpressionFactory _el_expressionfactory;</span><br><span class="line">  <span class="keyword">private</span> org.apache.AnnotationProcessor _jsp_annotationprocessor;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> Object <span class="title function_">getDependants</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> _jspx_dependants;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">_jspInit</span><span class="params">()</span> &#123;</span><br><span class="line">    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();</span><br><span class="line">    _jsp_annotationprocessor = (org.apache.AnnotationProcessor) getServletConfig().getServletContext().getAttribute(org.apache.AnnotationProcessor.class.getName());</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//销毁</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">_jspDestroy</span><span class="params">()</span> &#123;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//JspService</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">_jspService</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line">        <span class="keyword">throws</span> java.io.IOException, ServletException &#123;</span><br><span class="line"><span class="comment">//1.判断请求，我这里没有</span></span><br><span class="line"><span class="comment">//2.内置一些对象，可以直接在页面使用 &lt;% %&gt;    </span></span><br><span class="line">    <span class="type">PageContext</span> <span class="variable">pageContext</span> <span class="operator">=</span> <span class="literal">null</span>;<span class="comment">//页面上下文</span></span><br><span class="line">    <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> <span class="literal">null</span>;<span class="comment">//session</span></span><br><span class="line">    <span class="type">ServletContext</span> <span class="variable">application</span> <span class="operator">=</span> <span class="literal">null</span>;<span class="comment">//aplicationContext</span></span><br><span class="line">    <span class="type">ServletConfig</span> <span class="variable">config</span> <span class="operator">=</span> <span class="literal">null</span>;<span class="comment">//config</span></span><br><span class="line">    <span class="type">JspWriter</span> <span class="variable">out</span> <span class="operator">=</span> <span class="literal">null</span>;<span class="comment">//out</span></span><br><span class="line">    <span class="type">Object</span> <span class="variable">page</span> <span class="operator">=</span> <span class="built_in">this</span>;<span class="comment">//page:当前页</span></span><br><span class="line">      <span class="comment">//HttpServletRequest request 请求</span></span><br><span class="line">      <span class="comment">//HttpServletResponse response 响应</span></span><br><span class="line">    <span class="type">JspWriter</span> <span class="variable">_jspx_out</span> <span class="operator">=</span> <span class="literal">null</span>; </span><br><span class="line">    <span class="type">PageContext</span> <span class="variable">_jspx_page_context</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出页面前 可以在页面使用$&#123;&#125;</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      response.setContentType(<span class="string">&quot;text/html&quot;</span>);<span class="comment">//设置响应的页面类型</span></span><br><span class="line">      pageContext = _jspxFactory.getPageContext(<span class="built_in">this</span>, request, response,</span><br><span class="line">      			<span class="literal">null</span>, <span class="literal">true</span>, <span class="number">8192</span>, <span class="literal">true</span>);</span><br><span class="line">      _jspx_page_context = pageContext;</span><br><span class="line">      application = pageContext.getServletContext();</span><br><span class="line">      config = pageContext.getServletConfig();</span><br><span class="line">      session = pageContext.getSession();</span><br><span class="line">      out = pageContext.getOut();</span><br><span class="line">      _jspx_out = out;</span><br><span class="line"><span class="comment">//输出的页面</span></span><br><span class="line">      out.write(<span class="string">&quot;&lt;html&gt;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;body&gt;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;h2&gt;Hello World!&lt;/h2&gt;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;/body&gt;\n&quot;</span>);</span><br><span class="line">      out.write(<span class="string">&quot;&lt;/html&gt;\n&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable t) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!(t <span class="keyword">instanceof</span> SkipPageException))&#123;</span><br><span class="line">        out = _jspx_out;</span><br><span class="line">        <span class="keyword">if</span> (out != <span class="literal">null</span> &amp;&amp; out.getBufferSize() != <span class="number">0</span>)</span><br><span class="line">          <span class="keyword">try</span> &#123; out.clearBuffer(); &#125; <span class="keyword">catch</span> (java.io.IOException e) &#123;&#125;</span><br><span class="line">        <span class="keyword">if</span> (_jspx_page_context != <span class="literal">null</span>) _jspx_page_context.handlePageException(t);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">      _jspxFactory.releasePageContext(_jspx_page_context);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>每次点击重启，删除work，然后重新生成</li>
</ul>
<blockquote>
<p>在Jsp中只要是java代码原本不动输出，如果是HTML代码就会转换为：</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">out.write(<span class="string">&quot;&lt;html&gt;\n&quot;</span>);</span><br></pre></td></tr></table></figure>

<h3 id="11-2-基本语法"><a href="#11-2-基本语法" class="headerlink" title="11.2 基本语法"></a>11.2 基本语法</h3><ul>
<li>JSP声明：会被编译到JSP生成的Java类中，其他的则是会被生成到_jspService方法中</li>
</ul>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;% %&gt;</span><br><span class="line">&lt;!--JSP注释不会在前端显示--&gt;</span><br><span class="line">&lt;!--组件化--&gt;</span><br></pre></td></tr></table></figure>

<h3 id="11-3-九大内置对象"><a href="#11-3-九大内置对象" class="headerlink" title="11.3 九大内置对象"></a>11.3 九大内置对象</h3><ul>
<li>pageContext 保存的数据只在一个页面中有效</li>
<li>request 保存的数据只在一次请求或者请求转发中有效，产生的数据，用户看完就没用了，新闻</li>
<li>response </li>
<li>application[ServletContext] 保存的数据只在服务器中有效，一个用完其他可能接着用，聊天数</li>
<li>session 保存的数据只在一次会话中有效，产生的数据，用户用完一会还有用，购物车</li>
<li>config[ServletConfig]</li>
<li>out</li>
<li>page</li>
<li>exception</li>
</ul>
<blockquote>
<p>查找保存的从底层到高层 page-request-session-application，类似于JVM双亲委派机制</p>
</blockquote>
<h3 id="11-4-Jsp标签、JSTL标签、EL表达式"><a href="#11-4-Jsp标签、JSTL标签、EL表达式" class="headerlink" title="11.4 Jsp标签、JSTL标签、EL表达式"></a>11.4 Jsp标签、JSTL标签、EL表达式</h3><h4 id="11-4-1-EL表达式"><a href="#11-4-1-EL表达式" class="headerlink" title="11.4.1 EL表达式"></a>11.4.1 EL表达式</h4><blockquote>
<p>${}</p>
</blockquote>
<ul>
<li>获取数据</li>
<li>执行运算</li>
<li>获取Web开发的常用对象</li>
<li>调用Java方法</li>
</ul>
<h4 id="11-4-2-加入的依赖"><a href="#11-4-2-加入的依赖" class="headerlink" title="11.4.2 加入的依赖"></a>11.4.2 加入的依赖</h4><ul>
<li>pom.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--    JSTL表达式的依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp.jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    standard标签库--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>standard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="11-4-3-JSP标签"><a href="#11-4-3-JSP标签" class="headerlink" title="11.4.3 JSP标签"></a>11.4.3 JSP标签</h4><ul>
<li>index.jsp</li>
</ul>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%-- 内置对象--%&gt;</span><br><span class="line">&lt;%--&lt;jsp:include page=<span class="string">&quot;/index.jsp&quot;</span>&gt;&lt;/jsp:include&gt;--%&gt;</span><br><span class="line">&lt;jsp:forward page=<span class="string">&quot;index.jsp&quot;</span>&gt;</span><br><span class="line">    &lt;jsp:param name=<span class="string">&quot;name&quot;</span> value=<span class="string">&quot;xx&quot;</span>/&gt;</span><br><span class="line">    &lt;jsp:param name=<span class="string">&quot;age&quot;</span> value=<span class="string">&quot;12&quot;</span>/&gt;</span><br><span class="line">&lt;/jsp:forward&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="11-4-4-JSTL表达式"><a href="#11-4-4-JSTL表达式" class="headerlink" title="11.4.4 JSTL表达式"></a>11.4.4 JSTL表达式</h4><blockquote>
<p>JSTL标签为了弥补HTML语言的不足，封装了JSP应用的通用核心功能</p>
</blockquote>
<ul>
<li><p>核心标签</p>
</li>
<li><p>SQL标签</p>
</li>
<li><p>XML标签</p>
</li>
<li><p>JSTL函数</p>
</li>
<li><p>index.jsp</p>
</li>
</ul>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.ArrayList&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%--引入JSTL核心标签库，我们才能使用JSTL标签，Tomcat也要引入JSTL的包，否则会报错：JSTL解析错误--%&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;fmt&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/fmt&quot;</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;sql&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/sql&quot;</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;x&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/xml&quot;</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;fn&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/functions&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    ArrayList&lt;String&gt; pepole = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    pepole.add(<span class="string">&quot;在&quot;</span>);</span><br><span class="line">    pepole.add(<span class="string">&quot;jdh&quot;</span>);</span><br><span class="line">    pepole.add(<span class="string">&quot;jfid&quot;</span>);</span><br><span class="line">    pepole.add(<span class="string">&quot;好几顿饭&quot;</span>);</span><br><span class="line">    pepole.add(<span class="string">&quot;djhf&quot;</span>);</span><br><span class="line">    pepole.add(<span class="string">&quot;djhf&quot;</span>)</span><br><span class="line">    request.setAttribute(<span class="string">&quot;list&quot;</span>,pepole);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%--</span><br><span class="line"><span class="keyword">var</span> 每一次遍历的对象</span><br><span class="line">items 受遍历的对象</span><br><span class="line">begin 开始遍历的下标</span><br><span class="line">end 结束遍历的下标</span><br><span class="line">step 步长</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;pepole&quot;</span> items=<span class="string">&quot;$&#123;list&#125;&quot;</span> begin=<span class="string">&quot;1&quot;</span> end=<span class="string">&quot;3&quot;</span> step=<span class="string">&quot;2&quot;</span> &gt;</span><br><span class="line">    &lt;c:out value=<span class="string">&quot;$&#123;pepole&#125;&quot;</span> /&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<h2 id="12-JavaBean、MVC、过滤器、监听器"><a href="#12-JavaBean、MVC、过滤器、监听器" class="headerlink" title="12. JavaBean、MVC、过滤器、监听器"></a>12. JavaBean、MVC、过滤器、监听器</h2><blockquote>
<p>对象关系映射 ORM </p>
</blockquote>
<ul>
<li>表-类</li>
<li>字段-属性</li>
<li>行记录-对象</li>
</ul>
<h3 id="12-1-MVC-model-view-controller"><a href="#12-1-MVC-model-view-controller" class="headerlink" title="12.1 MVC(model-view-controller)"></a>12.1 MVC(model-view-controller)</h3><blockquote>
<p>现在MVVM</p>
</blockquote>
<ul>
<li>Controller(Servlet)</li>
</ul>
<blockquote>
<p>接收客户的请求（req,session)，响应给客户端内容，重定向或转发</p>
</blockquote>
<ul>
<li>view</li>
</ul>
<blockquote>
<p>展示数据，提供可以供我们操作的请求</p>
</blockquote>
<ul>
<li>数据库（JDBC）</li>
<li>Model(JavaBen、Service、Dao)</li>
</ul>
<blockquote>
<p>控制业务操作，crud，导入导出，批量操作</p>
</blockquote>
<ul>
<li><p>JavaBen(pojo、entity【vo、dto】)</p>
</li>
<li><p>Service</p>
</li>
<li><p>Dao</p>
</li>
<li><p>登录</p>
</li>
</ul>
<blockquote>
<p>登录-接收用户的登录请求，处理用户的请求，获取用户登录的参数-交给业务层处理（判断用户名密码是否正确：事务）-Dao查询用户名密码是否正确-数据库</p>
</blockquote>
<h3 id="12-2-Filter过滤器"><a href="#12-2-Filter过滤器" class="headerlink" title="12.2 Filter过滤器"></a>12.2 Filter过滤器</h3><blockquote>
<p>处理乱码，登录验证</p>
</blockquote>
<ul>
<li>导包</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--    JSTL表达式的依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp.jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    standard标签库--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>standard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>编写过滤器</p>
</li>
<li><p>CharacterEncodingFilter.java</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CharacterEncodingFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">    <span class="comment">//初始化,服务器启动的时候就初始化了</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;CharacterEncodingFilter初始化&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//FilterChain 链</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 1.过滤中的所有代码，在过滤特定的请求的时候都会执行</span></span><br><span class="line"><span class="comment">     * 2. 必须注意让过滤器继续同行 filterChain.doFilter(request,response);</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filterChain</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ServletException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        request.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        response.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        response.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;CharacterEncodingFilter执行前&quot;</span>);</span><br><span class="line">        <span class="comment">//让我们的请求继续走，如果不写，程序到这里就被拦截停止</span></span><br><span class="line">        filterChain.doFilter(request,response);</span><br><span class="line">        System.out.println(<span class="string">&quot;CharacterEncodingFilter执行后&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//销毁</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;CharacterEncodingFilter销毁&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>ShowServlet.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ShowServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"><span class="comment">//        resp.setContentType(&quot;text/html&quot;);</span></span><br><span class="line"><span class="comment">//        resp.setCharacterEncoding(&quot;utf-8&quot;);</span></span><br><span class="line">        resp.getWriter().write(<span class="string">&quot;你好，世界&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>web.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ShowServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.xxy.servlet.ShowServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ShowServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/ShowServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>cn.xxy.servlet.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="12-3-监听器"><a href="#12-3-监听器" class="headerlink" title="12.3 监听器"></a>12.3 监听器</h3><ul>
<li>编写监听器</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.lister;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSessionEvent;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSessionListener;</span><br><span class="line"><span class="comment">//统计网站在线人数 ：统计session</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OnlineCountListener</span> <span class="keyword">implements</span> <span class="title class_">HttpSessionListener</span> &#123;</span><br><span class="line">    <span class="comment">//创建session监听：看你的一举一动</span></span><br><span class="line">    <span class="comment">//一旦创建Session就会触发一次这个事件</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sessionCreated</span><span class="params">(HttpSessionEvent se)</span> &#123;</span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">ctx</span> <span class="operator">=</span> se.getSession().getServletContext();</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">onlineCount</span> <span class="operator">=</span> (Integer) ctx.getAttribute(<span class="string">&quot;OnlineCount&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (onlineCount == <span class="literal">null</span>) &#123;</span><br><span class="line">            onlineCount = Integer.valueOf(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> onlineCount.intValue();</span><br><span class="line">            count += <span class="number">1</span>;</span><br><span class="line">            onlineCount = Integer.valueOf(count+<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        ctx.setAttribute(<span class="string">&quot;OnlineCount&quot;</span>,onlineCount);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//销毁Session监听</span></span><br><span class="line">    <span class="comment">//一旦销毁Session就会触发一次这个事件</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sessionDestroyed</span><span class="params">(HttpSessionEvent se)</span> &#123;</span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">ctx</span> <span class="operator">=</span> se.getSession().getServletContext();</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">onlineCount</span> <span class="operator">=</span> (Integer) ctx.getAttribute(<span class="string">&quot;OnlineCount&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (onlineCount == <span class="literal">null</span>) &#123;</span><br><span class="line">            onlineCount = Integer.valueOf(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> onlineCount.intValue();</span><br><span class="line">            count -= <span class="number">1</span>;</span><br><span class="line">            onlineCount = Integer.valueOf(count+<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        ctx.setAttribute(<span class="string">&quot;OnlineCount&quot;</span>,onlineCount);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>web.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>cn.xxy.lister.OnlineCountListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="13-JDBC"><a href="#13-JDBC" class="headerlink" title="13. JDBC"></a>13. JDBC</h2><ul>
<li>导入数据库依赖</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    mysql的驱动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>JDBC通用步骤</p>
</li>
<li><p>TestJdbc.java</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestJdbc</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException &#123;</span><br><span class="line">        <span class="comment">//解决中文乱码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/jdbc?serverTimezone=GMT&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=true&amp;serverTimezone=GMT&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        <span class="comment">//1. 加载驱动</span></span><br><span class="line">        Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        <span class="comment">//2.连接数据库</span></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> DriverManager.getConnection(url,name,password);</span><br><span class="line">        <span class="comment">//3.向数据库发送SQL的对象CRUD</span></span><br><span class="line">        <span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> connection.createStatement();</span><br><span class="line">        <span class="comment">//4.编写SQL</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from t_dept&quot;</span>;</span><br><span class="line">        <span class="comment">//5.执行查询，返回结果集</span></span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> statement.executeQuery(sql);</span><br><span class="line">        <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;id=&quot;</span> + rs.getObject(<span class="string">&quot;dept_id&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//6.关闭连接,释放资源，一定是先开后关</span></span><br><span class="line">        rs.close();</span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>事务ACID</li>
</ul>
<blockquote>
<p>@Test注解只能作用于方法上</p>
</blockquote>
<h2 id="14-SMBMS【超市订单管理系统】"><a href="#14-SMBMS【超市订单管理系统】" class="headerlink" title="14. SMBMS【超市订单管理系统】"></a>14. SMBMS【超市订单管理系统】</h2><h4 id="14-1-配置"><a href="#14-1-配置" class="headerlink" title="14.1. 配置"></a>14.1. 配置</h4><ul>
<li>SQL</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE `smbms`;</span><br><span class="line"></span><br><span class="line">USE `smbms`;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> if <span class="keyword">not</span> <span class="keyword">exists</span> `smbms_address` (</span><br><span class="line">  `id` <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">  `contact` <span class="type">VARCHAR</span>(<span class="number">15</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;联系人姓名&#x27;</span>,</span><br><span class="line">  `addressDesc` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;收货地址明细&#x27;</span>,</span><br><span class="line">  `postCode` <span class="type">VARCHAR</span>(<span class="number">15</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮编&#x27;</span>,</span><br><span class="line">  `tel` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;联系人电话&#x27;</span>,</span><br><span class="line">  `createdBy` <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建者&#x27;</span>,</span><br><span class="line">  `creationDate` DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `modifyBy` <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;修改者&#x27;</span>,</span><br><span class="line">  `modifyDate` DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  `userId` <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户ID&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB AUTO_INCREMENT<span class="operator">=</span><span class="number">7</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_unicode_ci;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span>  <span class="keyword">INTO</span> `smbms_address`(`id`,`contact`,`addressDesc`,`postCode`,`tel`,`createdBy`,`creationDate`,`modifyBy`,`modifyDate`,`userId`) <span class="keyword">VALUES</span> (<span class="number">1</span>,<span class="string">&#x27;王丽&#x27;</span>,<span class="string">&#x27;北京市东城区东交民巷44号&#x27;</span>,<span class="string">&#x27;100010&#x27;</span>,<span class="string">&#x27;13678789999&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2016-04-13 00:00:00&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">1</span>),(<span class="number">2</span>,<span class="string">&#x27;张红丽&#x27;</span>,<span class="string">&#x27;北京市海淀区丹棱街3号&#x27;</span>,<span class="string">&#x27;100000&#x27;</span>,<span class="string">&#x27;18567672312&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2016-04-13 00:00:00&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">1</span>),(<span class="number">3</span>,<span class="string">&#x27;任志强&#x27;</span>,<span class="string">&#x27;北京市东城区美术馆后街23号&#x27;</span>,<span class="string">&#x27;100021&#x27;</span>,<span class="string">&#x27;13387906742&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2016-04-13 00:00:00&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">1</span>),(<span class="number">4</span>,<span class="string">&#x27;曹颖&#x27;</span>,<span class="string">&#x27;北京市朝阳区朝阳门南大街14号&#x27;</span>,<span class="string">&#x27;100053&#x27;</span>,<span class="string">&#x27;13568902323&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2016-04-13 00:00:00&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">2</span>),(<span class="number">5</span>,<span class="string">&#x27;李慧&#x27;</span>,<span class="string">&#x27;北京市西城区三里河路南三巷3号&#x27;</span>,<span class="string">&#x27;100032&#x27;</span>,<span class="string">&#x27;18032356666&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2016-04-13 00:00:00&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">3</span>),(<span class="number">6</span>,<span class="string">&#x27;王国强&#x27;</span>,<span class="string">&#x27;北京市顺义区高丽营镇金马工业区18号&#x27;</span>,<span class="string">&#x27;100061&#x27;</span>,<span class="string">&#x27;13787882222&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2016-04-13 00:00:00&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> `id`,`contact`,`addressDesc`,`postCode`,`tel`,`createdBy`,`creationDate`,`modifyBy`,`modifyDate`,`userId` <span class="keyword">from</span> `smbms_address`;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> if <span class="keyword">not</span> <span class="keyword">exists</span> `smbms_bill` (</span><br><span class="line">  `id` <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">  `billCode` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;账单编码&#x27;</span>,</span><br><span class="line">  `productName` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品名称&#x27;</span>,</span><br><span class="line">  `productDesc` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品描述&#x27;</span>,</span><br><span class="line">  `productUnit` <span class="type">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品单位&#x27;</span>,</span><br><span class="line">  `productCount` <span class="type">DECIMAL</span>(<span class="number">20</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品数量&#x27;</span>,</span><br><span class="line">  `totalPrice` <span class="type">DECIMAL</span>(<span class="number">20</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品总额&#x27;</span>,</span><br><span class="line">  `isPayment` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;是否支付（1：未支付 2：已支付）&#x27;</span>,</span><br><span class="line">  `createdBy` <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建者（userId）&#x27;</span>,</span><br><span class="line">  `creationDate` DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `modifyBy` <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新者（userId）&#x27;</span>,</span><br><span class="line">  `modifyDate` DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  `providerId` <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;供应商ID&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB AUTO_INCREMENT<span class="operator">=</span><span class="number">19</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_unicode_ci;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span>  <span class="keyword">INTO</span> `smbms_bill`(`id`,`billCode`,`productName`,`productDesc`,`productUnit`,`productCount`,`totalPrice`,`isPayment`,`createdBy`,`creationDate`,`modifyBy`,`modifyDate`,`providerId`) <span class="keyword">VALUES</span> (<span class="number">2</span>,<span class="string">&#x27;BILL2016_002&#x27;</span>,<span class="string">&#x27;香皂、肥皂、药皂&#x27;</span>,<span class="string">&#x27;日用品-皂类&#x27;</span>,<span class="string">&#x27;块&#x27;</span>,<span class="string">&#x27;1000.00&#x27;</span>,<span class="string">&#x27;10000.00&#x27;</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;2016-03-23 04:20:40&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">13</span>),(<span class="number">3</span>,<span class="string">&#x27;BILL2016_003&#x27;</span>,<span class="string">&#x27;大豆油&#x27;</span>,<span class="string">&#x27;食品-食用油&#x27;</span>,<span class="string">&#x27;斤&#x27;</span>,<span class="string">&#x27;300.00&#x27;</span>,<span class="string">&#x27;5890.00&#x27;</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;2014-12-14 13:02:03&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">6</span>),(<span class="number">4</span>,<span class="string">&#x27;BILL2016_004&#x27;</span>,<span class="string">&#x27;橄榄油&#x27;</span>,<span class="string">&#x27;食品-进口食用油&#x27;</span>,<span class="string">&#x27;斤&#x27;</span>,<span class="string">&#x27;200.00&#x27;</span>,<span class="string">&#x27;9800.00&#x27;</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;2013-10-10 03:12:13&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">7</span>),(<span class="number">5</span>,<span class="string">&#x27;BILL2016_005&#x27;</span>,<span class="string">&#x27;洗洁精&#x27;</span>,<span class="string">&#x27;日用品-厨房清洁&#x27;</span>,<span class="string">&#x27;瓶&#x27;</span>,<span class="string">&#x27;500.00&#x27;</span>,<span class="string">&#x27;7000.00&#x27;</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;2014-12-14 13:02:03&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">9</span>),(<span class="number">6</span>,<span class="string">&#x27;BILL2016_006&#x27;</span>,<span class="string">&#x27;美国大杏仁&#x27;</span>,<span class="string">&#x27;食品-坚果&#x27;</span>,<span class="string">&#x27;袋&#x27;</span>,<span class="string">&#x27;300.00&#x27;</span>,<span class="string">&#x27;5000.00&#x27;</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;2016-04-14 06:08:09&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">4</span>),(<span class="number">7</span>,<span class="string">&#x27;BILL2016_007&#x27;</span>,<span class="string">&#x27;沐浴液、精油&#x27;</span>,<span class="string">&#x27;日用品-沐浴类&#x27;</span>,<span class="string">&#x27;瓶&#x27;</span>,<span class="string">&#x27;500.00&#x27;</span>,<span class="string">&#x27;23000.00&#x27;</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;2016-07-22 10:10:22&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">14</span>),(<span class="number">8</span>,<span class="string">&#x27;BILL2016_008&#x27;</span>,<span class="string">&#x27;不锈钢盘碗&#x27;</span>,<span class="string">&#x27;日用品-厨房用具&#x27;</span>,<span class="string">&#x27;个&#x27;</span>,<span class="string">&#x27;600.00&#x27;</span>,<span class="string">&#x27;6000.00&#x27;</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;2016-04-14 05:12:13&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">14</span>),(<span class="number">9</span>,<span class="string">&#x27;BILL2016_009&#x27;</span>,<span class="string">&#x27;塑料杯&#x27;</span>,<span class="string">&#x27;日用品-杯子&#x27;</span>,<span class="string">&#x27;个&#x27;</span>,<span class="string">&#x27;350.00&#x27;</span>,<span class="string">&#x27;1750.00&#x27;</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;2016-02-04 11:40:20&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">14</span>),(<span class="number">10</span>,<span class="string">&#x27;BILL2016_010&#x27;</span>,<span class="string">&#x27;豆瓣酱&#x27;</span>,<span class="string">&#x27;食品-调料&#x27;</span>,<span class="string">&#x27;瓶&#x27;</span>,<span class="string">&#x27;200.00&#x27;</span>,<span class="string">&#x27;2000.00&#x27;</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;2013-10-29 05:07:03&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">8</span>),(<span class="number">11</span>,<span class="string">&#x27;BILL2016_011&#x27;</span>,<span class="string">&#x27;海之蓝&#x27;</span>,<span class="string">&#x27;饮料-国酒&#x27;</span>,<span class="string">&#x27;瓶&#x27;</span>,<span class="string">&#x27;50.00&#x27;</span>,<span class="string">&#x27;10000.00&#x27;</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;2016-04-14 16:16:00&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">1</span>),(<span class="number">12</span>,<span class="string">&#x27;BILL2016_012&#x27;</span>,<span class="string">&#x27;芝华士&#x27;</span>,<span class="string">&#x27;饮料-洋酒&#x27;</span>,<span class="string">&#x27;瓶&#x27;</span>,<span class="string">&#x27;20.00&#x27;</span>,<span class="string">&#x27;6000.00&#x27;</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;2016-09-09 17:00:00&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">1</span>),(<span class="number">13</span>,<span class="string">&#x27;BILL2016_013&#x27;</span>,<span class="string">&#x27;长城红葡萄酒&#x27;</span>,<span class="string">&#x27;饮料-红酒&#x27;</span>,<span class="string">&#x27;瓶&#x27;</span>,<span class="string">&#x27;60.00&#x27;</span>,<span class="string">&#x27;800.00&#x27;</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;2016-11-14 15:23:00&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">1</span>),(<span class="number">14</span>,<span class="string">&#x27;BILL2016_014&#x27;</span>,<span class="string">&#x27;泰国香米&#x27;</span>,<span class="string">&#x27;食品-大米&#x27;</span>,<span class="string">&#x27;斤&#x27;</span>,<span class="string">&#x27;400.00&#x27;</span>,<span class="string">&#x27;5000.00&#x27;</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;2016-10-09 15:20:00&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">3</span>),(<span class="number">15</span>,<span class="string">&#x27;BILL2016_015&#x27;</span>,<span class="string">&#x27;东北大米&#x27;</span>,<span class="string">&#x27;食品-大米&#x27;</span>,<span class="string">&#x27;斤&#x27;</span>,<span class="string">&#x27;600.00&#x27;</span>,<span class="string">&#x27;4000.00&#x27;</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;2016-11-14 14:00:00&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">3</span>),(<span class="number">16</span>,<span class="string">&#x27;BILL2016_016&#x27;</span>,<span class="string">&#x27;可口可乐&#x27;</span>,<span class="string">&#x27;饮料&#x27;</span>,<span class="string">&#x27;瓶&#x27;</span>,<span class="string">&#x27;2000.00&#x27;</span>,<span class="string">&#x27;6000.00&#x27;</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;2012-03-27 13:03:01&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">2</span>),(<span class="number">17</span>,<span class="string">&#x27;BILL2016_017&#x27;</span>,<span class="string">&#x27;脉动&#x27;</span>,<span class="string">&#x27;饮料&#x27;</span>,<span class="string">&#x27;瓶&#x27;</span>,<span class="string">&#x27;1500.00&#x27;</span>,<span class="string">&#x27;4500.00&#x27;</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;2016-05-10 12:00:00&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">2</span>),(<span class="number">18</span>,<span class="string">&#x27;BILL2016_018&#x27;</span>,<span class="string">&#x27;哇哈哈&#x27;</span>,<span class="string">&#x27;饮料&#x27;</span>,<span class="string">&#x27;瓶&#x27;</span>,<span class="string">&#x27;2000.00&#x27;</span>,<span class="string">&#x27;4000.00&#x27;</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;2015-11-24 15:12:03&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> `id`,`billCode`,`productName`,`productDesc`,`productUnit`,`productCount`,`totalPrice`,`isPayment`,`createdBy`,`creationDate`,`modifyBy`,`modifyDate`,`providerId` <span class="keyword">from</span> `smbms_bill`;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> if <span class="keyword">not</span> <span class="keyword">exists</span> `smbms_provider` (</span><br><span class="line">  `id` <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">  `proCode` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;供应商编码&#x27;</span>,</span><br><span class="line">  `proName` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;供应商名称&#x27;</span>,</span><br><span class="line">  `proDesc` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;供应商详细描述&#x27;</span>,</span><br><span class="line">  `proContact` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;供应商联系人&#x27;</span>,</span><br><span class="line">  `proPhone` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;联系电话&#x27;</span>,</span><br><span class="line">  `proAddress` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;地址&#x27;</span>,</span><br><span class="line">  `proFax` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;传真&#x27;</span>,</span><br><span class="line">  `createdBy` <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建者（userId）&#x27;</span>,</span><br><span class="line">  `creationDate` DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `modifyDate` DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  `modifyBy` <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新者（userId）&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB AUTO_INCREMENT<span class="operator">=</span><span class="number">16</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_unicode_ci;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span>  <span class="keyword">INTO</span> `smbms_provider`(`id`,`proCode`,`proName`,`proDesc`,`proContact`,`proPhone`,`proAddress`,`proFax`,`createdBy`,`creationDate`,`modifyDate`,`modifyBy`) <span class="keyword">VALUES</span> (<span class="number">1</span>,<span class="string">&#x27;BJ_GYS001&#x27;</span>,<span class="string">&#x27;北京三木堂商贸有限公司&#x27;</span>,<span class="string">&#x27;长期合作伙伴，主营产品:茅台、五粮液、郎酒、酒鬼酒、泸州老窖、赖茅酒、法国红酒等&#x27;</span>,<span class="string">&#x27;张国强&#x27;</span>,<span class="string">&#x27;13566667777&#x27;</span>,<span class="string">&#x27;北京市丰台区育芳园北路&#x27;</span>,<span class="string">&#x27;010-58858787&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2013-03-21 16:52:07&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">2</span>,<span class="string">&#x27;HB_GYS001&#x27;</span>,<span class="string">&#x27;石家庄帅益食品贸易有限公司&#x27;</span>,<span class="string">&#x27;长期合作伙伴，主营产品:饮料、水饮料、植物蛋白饮料、休闲食品、果汁饮料、功能饮料等&#x27;</span>,<span class="string">&#x27;王军&#x27;</span>,<span class="string">&#x27;13309094212&#x27;</span>,<span class="string">&#x27;河北省石家庄新华区&#x27;</span>,<span class="string">&#x27;0311-67738876&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2016-04-13 04:20:40&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">3</span>,<span class="string">&#x27;GZ_GYS001&#x27;</span>,<span class="string">&#x27;深圳市泰香米业有限公司&#x27;</span>,<span class="string">&#x27;初次合作伙伴，主营产品：良记金轮米,龙轮香米等&#x27;</span>,<span class="string">&#x27;郑程瀚&#x27;</span>,<span class="string">&#x27;13402013312&#x27;</span>,<span class="string">&#x27;广东省深圳市福田区深南大道6006华丰大厦&#x27;</span>,<span class="string">&#x27;0755-67776212&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2014-03-21 16:56:07&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">4</span>,<span class="string">&#x27;GZ_GYS002&#x27;</span>,<span class="string">&#x27;深圳市喜来客商贸有限公司&#x27;</span>,<span class="string">&#x27;长期合作伙伴，主营产品：坚果炒货.果脯蜜饯.天然花茶.营养豆豆.特色美食.进口食品.海味零食.肉脯肉&#x27;</span>,<span class="string">&#x27;林妮&#x27;</span>,<span class="string">&#x27;18599897645&#x27;</span>,<span class="string">&#x27;广东省深圳市福龙工业区B2栋3楼西&#x27;</span>,<span class="string">&#x27;0755-67772341&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2013-03-22 16:52:07&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">5</span>,<span class="string">&#x27;JS_GYS001&#x27;</span>,<span class="string">&#x27;兴化佳美调味品厂&#x27;</span>,<span class="string">&#x27;长期合作伙伴，主营产品：天然香辛料、鸡精、复合调味料&#x27;</span>,<span class="string">&#x27;徐国洋&#x27;</span>,<span class="string">&#x27;13754444221&#x27;</span>,<span class="string">&#x27;江苏省兴化市林湖工业区&#x27;</span>,<span class="string">&#x27;0523-21299098&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2015-11-22 16:52:07&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">6</span>,<span class="string">&#x27;BJ_GYS002&#x27;</span>,<span class="string">&#x27;北京纳福尔食用油有限公司&#x27;</span>,<span class="string">&#x27;长期合作伙伴，主营产品：山茶油、大豆油、花生油、橄榄油等&#x27;</span>,<span class="string">&#x27;马莺&#x27;</span>,<span class="string">&#x27;13422235678&#x27;</span>,<span class="string">&#x27;北京市朝阳区珠江帝景1号楼&#x27;</span>,<span class="string">&#x27;010-588634233&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2012-03-21 17:52:07&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">7</span>,<span class="string">&#x27;BJ_GYS003&#x27;</span>,<span class="string">&#x27;北京国粮食用油有限公司&#x27;</span>,<span class="string">&#x27;初次合作伙伴，主营产品：花生油、大豆油、小磨油等&#x27;</span>,<span class="string">&#x27;王驰&#x27;</span>,<span class="string">&#x27;13344441135&#x27;</span>,<span class="string">&#x27;北京大兴青云店开发区&#x27;</span>,<span class="string">&#x27;010-588134111&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2016-04-13 00:00:00&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">8</span>,<span class="string">&#x27;ZJ_GYS001&#x27;</span>,<span class="string">&#x27;慈溪市广和绿色食品厂&#x27;</span>,<span class="string">&#x27;长期合作伙伴，主营产品：豆瓣酱、黄豆酱、甜面酱，辣椒，大蒜等农产品&#x27;</span>,<span class="string">&#x27;薛圣丹&#x27;</span>,<span class="string">&#x27;18099953223&#x27;</span>,<span class="string">&#x27;浙江省宁波市慈溪周巷小安村&#x27;</span>,<span class="string">&#x27;0574-34449090&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2013-11-21 06:02:07&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">9</span>,<span class="string">&#x27;GX_GYS001&#x27;</span>,<span class="string">&#x27;优百商贸有限公司&#x27;</span>,<span class="string">&#x27;长期合作伙伴，主营产品：日化产品&#x27;</span>,<span class="string">&#x27;李立国&#x27;</span>,<span class="string">&#x27;13323566543&#x27;</span>,<span class="string">&#x27;广西南宁市秀厢大道42-1号&#x27;</span>,<span class="string">&#x27;0771-98861134&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2013-03-21 19:52:07&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">10</span>,<span class="string">&#x27;JS_GYS002&#x27;</span>,<span class="string">&#x27;南京火头军信息技术有限公司&#x27;</span>,<span class="string">&#x27;长期合作伙伴，主营产品：不锈钢厨具等&#x27;</span>,<span class="string">&#x27;陈女士&#x27;</span>,<span class="string">&#x27;13098992113&#x27;</span>,<span class="string">&#x27;江苏省南京市浦口区浦口大道1号新城总部大厦A座903室&#x27;</span>,<span class="string">&#x27;025-86223345&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2013-03-25 16:52:07&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">11</span>,<span class="string">&#x27;GZ_GYS003&#x27;</span>,<span class="string">&#x27;广州市白云区美星五金制品厂&#x27;</span>,<span class="string">&#x27;长期合作伙伴，主营产品：海绵床垫、坐垫、靠垫、海绵枕头、头枕等&#x27;</span>,<span class="string">&#x27;梁天&#x27;</span>,<span class="string">&#x27;13562276775&#x27;</span>,<span class="string">&#x27;广州市白云区钟落潭镇福龙路20号&#x27;</span>,<span class="string">&#x27;020-85542231&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2016-12-21 06:12:17&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">12</span>,<span class="string">&#x27;BJ_GYS004&#x27;</span>,<span class="string">&#x27;北京隆盛日化科技&#x27;</span>,<span class="string">&#x27;长期合作伙伴，主营产品：日化环保清洗剂，家居洗涤专卖、洗涤用品网、墙体除霉剂、墙面霉菌清除剂等&#x27;</span>,<span class="string">&#x27;孙欣&#x27;</span>,<span class="string">&#x27;13689865678&#x27;</span>,<span class="string">&#x27;北京市大兴区旧宫&#x27;</span>,<span class="string">&#x27;010-35576786&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2014-11-21 12:51:11&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">13</span>,<span class="string">&#x27;SD_GYS001&#x27;</span>,<span class="string">&#x27;山东豪克华光联合发展有限公司&#x27;</span>,<span class="string">&#x27;长期合作伙伴，主营产品：洗衣皂、洗衣粉、洗衣液、洗洁精、消杀类、香皂等&#x27;</span>,<span class="string">&#x27;吴洪转&#x27;</span>,<span class="string">&#x27;13245468787&#x27;</span>,<span class="string">&#x27;山东济阳济北工业区仁和街21号&#x27;</span>,<span class="string">&#x27;0531-53362445&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2015-01-28 10:52:07&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">14</span>,<span class="string">&#x27;JS_GYS003&#x27;</span>,<span class="string">&#x27;无锡喜源坤商行&#x27;</span>,<span class="string">&#x27;长期合作伙伴，主营产品：日化品批销&#x27;</span>,<span class="string">&#x27;周一清&#x27;</span>,<span class="string">&#x27;18567674532&#x27;</span>,<span class="string">&#x27;江苏无锡盛岸西路&#x27;</span>,<span class="string">&#x27;0510-32274422&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2016-04-23 11:11:11&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">15</span>,<span class="string">&#x27;ZJ_GYS002&#x27;</span>,<span class="string">&#x27;乐摆日用品厂&#x27;</span>,<span class="string">&#x27;长期合作伙伴，主营产品：各种中、高档塑料杯，塑料乐扣水杯（密封杯）、保鲜杯（保鲜盒）、广告杯、礼品杯&#x27;</span>,<span class="string">&#x27;王世杰&#x27;</span>,<span class="string">&#x27;13212331567&#x27;</span>,<span class="string">&#x27;浙江省金华市义乌市义东路&#x27;</span>,<span class="string">&#x27;0579-34452321&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2016-08-22 10:01:30&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> `id`,`proCode`,`proName`,`proDesc`,`proContact`,`proPhone`,`proAddress`,`proFax`,`createdBy`,`creationDate`,`modifyDate`,`modifyBy` <span class="keyword">from</span> `smbms_provider`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> if <span class="keyword">not</span> <span class="keyword">exists</span> `smbms_role` (</span><br><span class="line">  `id` <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">  `roleCode` <span class="type">VARCHAR</span>(<span class="number">15</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;角色编码&#x27;</span>,</span><br><span class="line">  `roleName` <span class="type">VARCHAR</span>(<span class="number">15</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;角色名称&#x27;</span>,</span><br><span class="line">  `createdBy` <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建者&#x27;</span>,</span><br><span class="line">  `creationDate` DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `modifyBy` <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;修改者&#x27;</span>,</span><br><span class="line">  `modifyDate` DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB AUTO_INCREMENT<span class="operator">=</span><span class="number">4</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_unicode_ci;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span>  <span class="keyword">INTO</span> `smbms_role`(`id`,`roleCode`,`roleName`,`createdBy`,`creationDate`,`modifyBy`,`modifyDate`) <span class="keyword">VALUES</span> (<span class="number">1</span>,<span class="string">&#x27;SMBMS_ADMIN&#x27;</span>,<span class="string">&#x27;系统管理员&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2016-04-13 00:00:00&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">2</span>,<span class="string">&#x27;SMBMS_MANAGER&#x27;</span>,<span class="string">&#x27;经理&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2016-04-13 00:00:00&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">3</span>,<span class="string">&#x27;SMBMS_EMPLOYEE&#x27;</span>,<span class="string">&#x27;普通员工&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2016-04-13 00:00:00&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> `id`,`roleCode`,`roleName`,`createdBy`,`creationDate`,`modifyBy`,`modifyDate` <span class="keyword">from</span> `smbms_role`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> if <span class="keyword">not</span> <span class="keyword">exists</span> `smbms_user` (</span><br><span class="line">  `id` <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">  `userCode` <span class="type">VARCHAR</span>(<span class="number">15</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户编码&#x27;</span>,</span><br><span class="line">  `userName` <span class="type">VARCHAR</span>(<span class="number">15</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户名称&#x27;</span>,</span><br><span class="line">  `userPassword` <span class="type">VARCHAR</span>(<span class="number">15</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户密码&#x27;</span>,</span><br><span class="line">  `gender` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;性别（1:女、 2:男）&#x27;</span>,</span><br><span class="line">  `birthday` <span class="type">DATE</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;出生日期&#x27;</span>,</span><br><span class="line">  `phone` <span class="type">VARCHAR</span>(<span class="number">15</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;手机&#x27;</span>,</span><br><span class="line">  `address` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;地址&#x27;</span>,</span><br><span class="line">  `userRole` <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户角色（取自角色表-角色id）&#x27;</span>,</span><br><span class="line">  `createdBy` <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建者（userId）&#x27;</span>,</span><br><span class="line">  `creationDate` DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `modifyBy` <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新者（userId）&#x27;</span>,</span><br><span class="line">  `modifyDate` DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB AUTO_INCREMENT<span class="operator">=</span><span class="number">16</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_unicode_ci;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span>  <span class="keyword">INTO</span> `smbms_user`(`id`,`userCode`,`userName`,`userPassword`,`gender`,`birthday`,`phone`,`address`,`userRole`,`createdBy`,`creationDate`,`modifyBy`,`modifyDate`) <span class="keyword">VALUES</span> (<span class="number">1</span>,<span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;系统管理员&#x27;</span>,<span class="string">&#x27;1234567&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;1983-10-10&#x27;</span>,<span class="string">&#x27;13688889999&#x27;</span>,<span class="string">&#x27;北京市海淀区成府路207号&#x27;</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;2013-03-21 16:52:07&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">2</span>,<span class="string">&#x27;liming&#x27;</span>,<span class="string">&#x27;李明&#x27;</span>,<span class="string">&#x27;0000000&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;1983-12-10&#x27;</span>,<span class="string">&#x27;13688884457&#x27;</span>,<span class="string">&#x27;北京市东城区前门东大街9号&#x27;</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;2014-12-31 19:52:09&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">5</span>,<span class="string">&#x27;hanlubiao&#x27;</span>,<span class="string">&#x27;韩路彪&#x27;</span>,<span class="string">&#x27;0000000&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;1984-06-05&#x27;</span>,<span class="string">&#x27;18567542321&#x27;</span>,<span class="string">&#x27;北京市朝阳区北辰中心12号&#x27;</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;2014-12-31 19:52:09&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">6</span>,<span class="string">&#x27;zhanghua&#x27;</span>,<span class="string">&#x27;张华&#x27;</span>,<span class="string">&#x27;0000000&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;1983-06-15&#x27;</span>,<span class="string">&#x27;13544561111&#x27;</span>,<span class="string">&#x27;北京市海淀区学院路61号&#x27;</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="string">&#x27;2013-02-11 10:51:17&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">7</span>,<span class="string">&#x27;wangyang&#x27;</span>,<span class="string">&#x27;王洋&#x27;</span>,<span class="string">&#x27;0000000&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;1982-12-31&#x27;</span>,<span class="string">&#x27;13444561124&#x27;</span>,<span class="string">&#x27;北京市海淀区西二旗辉煌国际16层&#x27;</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="string">&#x27;2014-06-11 19:09:07&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">8</span>,<span class="string">&#x27;zhaoyan&#x27;</span>,<span class="string">&#x27;赵燕&#x27;</span>,<span class="string">&#x27;0000000&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;1986-03-07&#x27;</span>,<span class="string">&#x27;18098764545&#x27;</span>,<span class="string">&#x27;北京市海淀区回龙观小区10号楼&#x27;</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="string">&#x27;2016-04-21 13:54:07&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">10</span>,<span class="string">&#x27;sunlei&#x27;</span>,<span class="string">&#x27;孙磊&#x27;</span>,<span class="string">&#x27;0000000&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;1981-01-04&#x27;</span>,<span class="string">&#x27;13387676765&#x27;</span>,<span class="string">&#x27;北京市朝阳区管庄新月小区12楼&#x27;</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="string">&#x27;2015-05-06 10:52:07&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">11</span>,<span class="string">&#x27;sunxing&#x27;</span>,<span class="string">&#x27;孙兴&#x27;</span>,<span class="string">&#x27;0000000&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;1978-03-12&#x27;</span>,<span class="string">&#x27;13367890900&#x27;</span>,<span class="string">&#x27;北京市朝阳区建国门南大街10号&#x27;</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="string">&#x27;2016-11-09 16:51:17&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">12</span>,<span class="string">&#x27;zhangchen&#x27;</span>,<span class="string">&#x27;张晨&#x27;</span>,<span class="string">&#x27;0000000&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;1986-03-28&#x27;</span>,<span class="string">&#x27;18098765434&#x27;</span>,<span class="string">&#x27;朝阳区管庄路口北柏林爱乐三期13号楼&#x27;</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="string">&#x27;2016-08-09 05:52:37&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2016-04-14 14:15:36&#x27;</span>),(<span class="number">13</span>,<span class="string">&#x27;dengchao&#x27;</span>,<span class="string">&#x27;邓超&#x27;</span>,<span class="string">&#x27;0000000&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;1981-11-04&#x27;</span>,<span class="string">&#x27;13689674534&#x27;</span>,<span class="string">&#x27;北京市海淀区北航家属院10号楼&#x27;</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="string">&#x27;2016-07-11 08:02:47&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">14</span>,<span class="string">&#x27;yangguo&#x27;</span>,<span class="string">&#x27;杨过&#x27;</span>,<span class="string">&#x27;0000000&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;1980-01-01&#x27;</span>,<span class="string">&#x27;13388886623&#x27;</span>,<span class="string">&#x27;北京市朝阳区北苑家园茉莉园20号楼&#x27;</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="string">&#x27;2015-02-01 03:52:07&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),(<span class="number">15</span>,<span class="string">&#x27;zhaomin&#x27;</span>,<span class="string">&#x27;赵敏&#x27;</span>,<span class="string">&#x27;0000000&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;1987-12-04&#x27;</span>,<span class="string">&#x27;18099897657&#x27;</span>,<span class="string">&#x27;北京市昌平区天通苑3区12号楼&#x27;</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;2015-09-12 12:02:12&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> `id`,`userCode`,`userName`,`userPassword`,`gender`,`birthday`,`phone`,`address`,`userRole`,`createdBy`,`creationDate`,`modifyBy`,`modifyDate` <span class="keyword">from</span> `smbms_user`</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<ul>
<li><p>搭建一个Maven Web项目</p>
</li>
<li><p>web.xml</p>
</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee</span></span></span><br><span class="line"><span class="string"><span class="tag">                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;3.1&quot;</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>配置Tomcat</li>
<li>测试项目跑起来</li>
<li>导入项目中会遇到的jar包</li>
<li>pom.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.xxy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>smbms<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--    JSTL表达式的依赖，记得Tomcat需要导包--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp.jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--    standard标签库--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>standard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>创建项目包结构</p>
</li>
<li><p>编写实体类</p>
</li>
<li><p>User.java</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.pojo;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/11/9</span></span><br><span class="line"><span class="comment"> * 用户类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * id id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * userCode 用户编码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String userCode;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * userName 用户名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * userPassword 用户密码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String userPassword;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * gender 性别</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer gender;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * birthday 出生日期</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * phone 电话</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * address 地址</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * userRole 用户角色</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer userRole;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * createdBy 创建者</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer createdBy;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * creationDate 创建时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Date creationDate;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * modifyBy 更新者</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer modifyBy;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * modifyDate 更新时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Date modifyDate;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * age 年龄</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * userRoleName 用户角色名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String userRoleName;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUserRoleName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userRoleName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserRoleName</span><span class="params">(String userRoleName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userRoleName = userRoleName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">age</span> <span class="operator">=</span> date.getYear()-birthday.getYear();</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUserCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userCode;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserCode</span><span class="params">(String userCode)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userCode = userCode;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUserName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserName</span><span class="params">(String userName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userName = userName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUserPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userPassword;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserPassword</span><span class="params">(String userPassword)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userPassword = userPassword;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getGender</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> gender;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setGender</span><span class="params">(Integer gender)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">getBirthday</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> birthday;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBirthday</span><span class="params">(Date birthday)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.birthday = birthday;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPhone</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> phone;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPhone</span><span class="params">(String phone)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.phone = phone;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAddress</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAddress</span><span class="params">(String address)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getUserRole</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userRole;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserRole</span><span class="params">(Integer userRole)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userRole = userRole;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getCreatedBy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> createdBy;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCreatedBy</span><span class="params">(Integer createdBy)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.createdBy = createdBy;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">getCreationDate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> creationDate;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCreationDate</span><span class="params">(Date creationDate)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.creationDate = creationDate;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getModifyBy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> modifyBy;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setModifyBy</span><span class="params">(Integer modifyBy)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.modifyBy = modifyBy;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">getModifyDate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> modifyDate;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setModifyDate</span><span class="params">(Date modifyDate)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.modifyDate = modifyDate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>Bill.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021-11-09</span></span><br><span class="line"><span class="comment"> * Bill 订单类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Bill</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *id id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *billCode 账单编码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String billCode;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *productName 商品名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String productName;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *productDesc 商品描述</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String productDesc;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *productUnit商品单位</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String productUnit;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *productCount 商品数量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal productCount;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *totalPrice 总金额</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal totalPrice;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *isPayment 是否支付</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer isPayment;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *providerId 供应商ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer providerId;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *createdBy 创建者</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer createdBy;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *creationDate 创建时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Date creationDate;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *modifyBy 更新者</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer modifyBy;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *modifyDate 更新时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Date modifyDate;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *providerName 供应商名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String providerName;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getProviderName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> providerName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setProviderName</span><span class="params">(String providerName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.providerName = providerName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getBillCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> billCode;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBillCode</span><span class="params">(String billCode)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.billCode = billCode;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getProductName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> productName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setProductName</span><span class="params">(String productName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.productName = productName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getProductDesc</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> productDesc;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setProductDesc</span><span class="params">(String productDesc)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.productDesc = productDesc;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getProductUnit</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> productUnit;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setProductUnit</span><span class="params">(String productUnit)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.productUnit = productUnit;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> BigDecimal <span class="title function_">getProductCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> productCount;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setProductCount</span><span class="params">(BigDecimal productCount)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.productCount = productCount;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> BigDecimal <span class="title function_">getTotalPrice</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> totalPrice;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTotalPrice</span><span class="params">(BigDecimal totalPrice)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.totalPrice = totalPrice;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getIsPayment</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> isPayment;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setIsPayment</span><span class="params">(Integer isPayment)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.isPayment = isPayment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getProviderId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> providerId;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setProviderId</span><span class="params">(Integer providerId)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.providerId = providerId;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getCreatedBy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> createdBy;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCreatedBy</span><span class="params">(Integer createdBy)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.createdBy = createdBy;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">getCreationDate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> creationDate;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCreationDate</span><span class="params">(Date creationDate)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.creationDate = creationDate;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getModifyBy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> modifyBy;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setModifyBy</span><span class="params">(Integer modifyBy)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.modifyBy = modifyBy;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">getModifyDate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> modifyDate;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setModifyDate</span><span class="params">(Date modifyDate)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.modifyDate = modifyDate;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>Role.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021-11-09</span></span><br><span class="line"><span class="comment"> * Role 角色类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Role</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *id id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *roleCode 角色编码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String roleCode;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *roleName角色名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String roleName;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *createdBy 创建者</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer createdBy;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *creationDate 创建时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Date creationDate;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *modifyBy 更新者</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer modifyBy;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *modifyDate 更新时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Date modifyDate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getRoleCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> roleCode;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRoleCode</span><span class="params">(String roleCode)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.roleCode = roleCode;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getRoleName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> roleName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRoleName</span><span class="params">(String roleName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.roleName = roleName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getCreatedBy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> createdBy;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCreatedBy</span><span class="params">(Integer createdBy)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.createdBy = createdBy;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">getCreationDate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> creationDate;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCreationDate</span><span class="params">(Date creationDate)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.creationDate = creationDate;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getModifyBy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> modifyBy;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setModifyBy</span><span class="params">(Integer modifyBy)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.modifyBy = modifyBy;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">getModifyDate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> modifyDate;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setModifyDate</span><span class="params">(Date modifyDate)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.modifyDate = modifyDate;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>Provider.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021-11-09</span></span><br><span class="line"><span class="comment"> * Provider 供应商类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Provider</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *id id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *proCode 供应商编码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String proCode;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *proName 供应商名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String proName;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *proDesc 供应商描述</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String proDesc;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *proContact 供应商联系人</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String proContact;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *proPhone 供应商电话</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String proPhone;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *proAddress 供应商地址</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String proAddress;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *proFax  供应商传真</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String proFax;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *createdBy 创建者</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer createdBy;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *creationDate 创建时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Date creationDate;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *modifyBy 更新者</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer modifyBy;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * modifyDate 更新时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Date modifyDate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getProCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> proCode;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setProCode</span><span class="params">(String proCode)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.proCode = proCode;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getProName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> proName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setProName</span><span class="params">(String proName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.proName = proName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getProDesc</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> proDesc;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setProDesc</span><span class="params">(String proDesc)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.proDesc = proDesc;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getProContact</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> proContact;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setProContact</span><span class="params">(String proContact)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.proContact = proContact;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getProPhone</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> proPhone;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setProPhone</span><span class="params">(String proPhone)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.proPhone = proPhone;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getProAddress</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> proAddress;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setProAddress</span><span class="params">(String proAddress)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.proAddress = proAddress;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getProFax</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> proFax;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setProFax</span><span class="params">(String proFax)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.proFax = proFax;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getCreatedBy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> createdBy;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCreatedBy</span><span class="params">(Integer createdBy)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.createdBy = createdBy;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">getCreationDate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> creationDate;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCreationDate</span><span class="params">(Date creationDate)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.creationDate = creationDate;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getModifyBy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> modifyBy;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setModifyBy</span><span class="params">(Integer modifyBy)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.modifyBy = modifyBy;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">getModifyDate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> modifyDate;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setModifyDate</span><span class="params">(Date modifyDate)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.modifyDate = modifyDate;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>编写基础公共类</p>
</li>
<li><p>BaseDaoUtil</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">//操作数据库的公共类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseDaoUtil</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String driver;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String url;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String username;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//静态代码块，类加载的时候就初始化了</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        <span class="comment">//通过类加载器读取对应的资源</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> BaseDaoUtil.class.getClassLoader().getResourceAsStream(<span class="string">&quot;db.properties&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            properties.load(is);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        driver = properties.getProperty(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">        url = properties.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">        username = properties.getProperty(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        password = properties.getProperty(<span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取数据库的链接</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title function_">getConnection</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(driver);</span><br><span class="line">            connection = DriverManager.getConnection(url, username, password);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> connection;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//编写查询公共方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ResultSet <span class="title function_">execute</span><span class="params">(Connection connection, String sql, Object[] params, ResultSet resultSet, PreparedStatement preparedStatement)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        <span class="comment">//预编译的sql，在后面直接执行就可以了</span></span><br><span class="line">        preparedStatement = connection.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; params.length; i++) &#123;</span><br><span class="line">            <span class="comment">//setObject,占位符从1开始，但是我们的数组是从0开始！</span></span><br><span class="line">            preparedStatement.setObject(i+<span class="number">1</span>,params[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        resultSet = preparedStatement.executeQuery();</span><br><span class="line">        <span class="keyword">return</span> resultSet;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//编写增删改公共方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">execute</span><span class="params">(Connection connection,String sql,Object[] params,PreparedStatement preparedStatement)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        preparedStatement = connection.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; params.length; i++) &#123;</span><br><span class="line">            <span class="comment">//setObject,占位符从1开始，但是我们的数组是从0开始！</span></span><br><span class="line">            preparedStatement.setObject(i+<span class="number">1</span>,params[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">updateRows</span> <span class="operator">=</span> preparedStatement.executeUpdate();</span><br><span class="line">        <span class="keyword">return</span> updateRows;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//释放资源</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">closeResource</span><span class="params">(Connection connection,PreparedStatement preparedStatement,ResultSet resultSet)</span>&#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (resultSet!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">                <span class="comment">//GC回收</span></span><br><span class="line">                resultSet = <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (preparedStatement!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                preparedStatement.close();</span><br><span class="line">                <span class="comment">//GC回收</span></span><br><span class="line">                preparedStatement = <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (connection!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">                <span class="comment">//GC回收</span></span><br><span class="line">                connection = <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li><p>编写字符编码过滤器</p>
</li>
<li><p>CharacterEncodingFilter.java</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.filter;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CharacterEncodingFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        request.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        response.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        chain.doFilter(request,response);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>导入静态资源</li>
</ul>
<h4 id="14-2-编码"><a href="#14-2-编码" class="headerlink" title="14.2 编码"></a>14.2 编码</h4><ul>
<li>一般数据访问层Dao</li>
<li>IUserDao</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.dao.user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.xxy.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户接口 smbms_user、smbms_role</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> XXX.XXX.XX</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021-12-29</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IUserDao</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 得到要登陆的用户getLoginUser</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> connection   数据库连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userCode     用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userPassword 用户密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> User 该用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SQLException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021-12-29</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@version</span> XXX.XXX.XX</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    User <span class="title function_">getLoginUser</span><span class="params">(Connection connection, String userCode, String userPassword)</span> <span class="keyword">throws</span> SQLException;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 得到要登陆的用户getLoginUser</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> connection   数据库连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userCode     用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> User 该用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SQLException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021-12-29</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@version</span> XXX.XXX.XX</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    User <span class="title function_">getUserCode</span><span class="params">(Connection connection, String userCode)</span> <span class="keyword">throws</span> SQLException;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据条件查询用户数量</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> connection    数据库连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryUserName 查询的用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryUserRole 查询的角色</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021-12-29</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@version</span> XXX.XXX.XX</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">getUserCount</span><span class="params">(Connection connection, String queryUserName, <span class="type">int</span> queryUserRole)</span> <span class="keyword">throws</span> Exception;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户Id修改当前密码</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> connection   数据库连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id           Id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userPassword 新密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SQLException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021-12-29</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@version</span> XXX.XXX.XX</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">updatePwd</span><span class="params">(Connection connection, <span class="type">int</span> id, String userPassword)</span> <span class="keyword">throws</span> SQLException;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过条件查询列表并分页</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> connection    数据库连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userName      用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userRole      用户角色</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> currentPageNo 当前页</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pageSize      一页的数目</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> List&lt;User&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021-12-29</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@version</span> XXX.XXX.XX</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;User&gt; <span class="title function_">getUserList</span><span class="params">(Connection connection, String userName, <span class="type">int</span> userRole, <span class="type">int</span> currentPageNo, <span class="type">int</span> pageSize)</span> <span class="keyword">throws</span> Exception;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 增加用户信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> connection 数据库连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user       用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021-12-29</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@version</span> XXX.XXX.XX</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">addUser</span><span class="params">(Connection connection, User user)</span> <span class="keyword">throws</span> Exception;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id删除用户</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> connection 数据库连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id         id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021-12-29</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@version</span> XXX.XXX.XX     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">deleteUserById</span><span class="params">(Connection connection, Integer id)</span> <span class="keyword">throws</span> Exception;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改用户信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> connection 数据库连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user       用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021-12-29</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@version</span> XXX.XXX.XX     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">updateUserById</span><span class="params">(Connection connection, User user)</span> <span class="keyword">throws</span> Exception;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id查询当前用户信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> connection 数据库连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id         id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> User</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021-12-29</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@version</span> XXX.XXX.XX</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    User <span class="title function_">getUserById</span><span class="params">(Connection connection, String id)</span> <span class="keyword">throws</span> Exception;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>UserDaoImpl</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.dao.user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.xxy.pojo.User;</span><br><span class="line"><span class="keyword">import</span> cn.xxy.util.BaseDaoUtil;</span><br><span class="line"><span class="keyword">import</span> com.mysql.jdbc.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户接口实现类 smbms_user、smbms_role</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> XXX.XXX.XX</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021-12-29</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">IUserDao</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">getLoginUser</span><span class="params">(Connection connection, String userCode, String userPassword)</span> <span class="keyword">throws</span> SQLException&#123;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">pstm</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select `id`,`userCode`,`userName`,`userPassword`,`gender`,`birthday`,`phone`,`address`,`userRole`,`createdBy`,`creationDate`,`modifyBy`,`modifyDate` from `smbms_user` su where su.userCode = ? and su.userPassword = ? &quot;</span>;</span><br><span class="line">        Object[] params = &#123;userCode,userPassword&#125;;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="literal">null</span> != connection) &#123;</span><br><span class="line">                rs = BaseDaoUtil.execute(connection, sql, params, rs, pstm);</span><br><span class="line">                <span class="keyword">if</span> (rs.next()) &#123;</span><br><span class="line">                    user = <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">                    user.setId(rs.getInt(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">                    user.setUserCode(rs.getString(<span class="string">&quot;userCode&quot;</span>));</span><br><span class="line">                    user.setUserName(rs.getString(<span class="string">&quot;userName&quot;</span>));</span><br><span class="line">                    user.setUserPassword(rs.getString(<span class="string">&quot;userPassword&quot;</span>));</span><br><span class="line">                    user.setGender(rs.getInt(<span class="string">&quot;gender&quot;</span>));</span><br><span class="line">                    user.setBirthday(rs.getDate(<span class="string">&quot;birthday&quot;</span>));</span><br><span class="line">                    user.setPhone(rs.getString(<span class="string">&quot;phone&quot;</span>));</span><br><span class="line">                    user.setAddress(rs.getString(<span class="string">&quot;address&quot;</span>));</span><br><span class="line">                    user.setUserRole(rs.getInt(<span class="string">&quot;userRole&quot;</span>));</span><br><span class="line">                    user.setCreatedBy(rs.getInt(<span class="string">&quot;createdBy&quot;</span>));</span><br><span class="line">                    user.setCreationDate(rs.getTimestamp(<span class="string">&quot;creationDate&quot;</span>));</span><br><span class="line">                    user.setModifyBy(rs.getInt(<span class="string">&quot;modifyBy&quot;</span>));</span><br><span class="line">                    user.setModifyDate(rs.getTimestamp(<span class="string">&quot;modifyDate&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            BaseDaoUtil.closeResource(connection,pstm,rs);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">getUserCode</span><span class="params">(Connection connection, String userCode)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">pstm</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select `id`,`userCode`,`userName`,`userPassword`,`gender`,`birthday`,`phone`,`address`,`userRole`,`createdBy`,`creationDate`,`modifyBy`,`modifyDate` from `smbms_user` su where su.userCode = ?  &quot;</span>;</span><br><span class="line">        Object[] params = &#123;userCode&#125;;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="literal">null</span> != connection) &#123;</span><br><span class="line">                rs = BaseDaoUtil.execute(connection, sql, params, rs, pstm);</span><br><span class="line">                <span class="keyword">if</span> (rs.next()) &#123;</span><br><span class="line">                    user = <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">                    user.setId(rs.getInt(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">                    user.setUserCode(rs.getString(<span class="string">&quot;userCode&quot;</span>));</span><br><span class="line">                    user.setUserName(rs.getString(<span class="string">&quot;userName&quot;</span>));</span><br><span class="line">                    user.setUserPassword(rs.getString(<span class="string">&quot;userPassword&quot;</span>));</span><br><span class="line">                    user.setGender(rs.getInt(<span class="string">&quot;gender&quot;</span>));</span><br><span class="line">                    user.setBirthday(rs.getDate(<span class="string">&quot;birthday&quot;</span>));</span><br><span class="line">                    user.setPhone(rs.getString(<span class="string">&quot;phone&quot;</span>));</span><br><span class="line">                    user.setAddress(rs.getString(<span class="string">&quot;address&quot;</span>));</span><br><span class="line">                    user.setUserRole(rs.getInt(<span class="string">&quot;userRole&quot;</span>));</span><br><span class="line">                    user.setCreatedBy(rs.getInt(<span class="string">&quot;createdBy&quot;</span>));</span><br><span class="line">                    user.setCreationDate(rs.getTimestamp(<span class="string">&quot;creationDate&quot;</span>));</span><br><span class="line">                    user.setModifyBy(rs.getInt(<span class="string">&quot;modifyBy&quot;</span>));</span><br><span class="line">                    user.setModifyDate(rs.getTimestamp(<span class="string">&quot;modifyDate&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            BaseDaoUtil.closeResource(connection,pstm,rs);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getUserCount</span><span class="params">(Connection connection, String queryUserName, <span class="type">int</span> queryUserRole)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">pstm</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">StringBuffer</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">            sql.append(<span class="string">&quot; select count(*) as count from smbms_user su inner join smbms_role sr on su.userRole = sr.id  &quot;</span>);</span><br><span class="line">            List&lt;Object&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Object&gt;();</span><br><span class="line">            <span class="keyword">if</span> (!StringUtils.isNullOrEmpty(queryUserName)) &#123;</span><br><span class="line">                sql.append(<span class="string">&quot; where su.userName like ? &quot;</span>);</span><br><span class="line">                list.add(<span class="string">&quot;%&quot;</span> + queryUserName + <span class="string">&quot;%&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (queryUserRole &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                sql.append(<span class="string">&quot; and su.userRole = ? &quot;</span>);</span><br><span class="line">                list.add(queryUserRole);</span><br><span class="line">            &#125;</span><br><span class="line">            Object[] params = list.toArray();</span><br><span class="line">            System.out.println(<span class="string">&quot;sql---&gt;&quot;</span> + sql.toString());</span><br><span class="line">            rs = BaseDaoUtil.execute(connection,sql.toString(),params,rs,pstm);</span><br><span class="line">            <span class="keyword">if</span> (rs.next()) &#123;</span><br><span class="line">                count = rs.getInt(<span class="string">&quot;count&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">           BaseDaoUtil.closeResource(connection,pstm,rs);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updatePwd</span><span class="params">(Connection connection, <span class="type">int</span> id, String userPassword)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;UserDaoImpl&quot;</span> + userPassword);</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">pstm</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">execute</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != connection) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot; update smbms_user su set su.userPassword = ? where su.id = ? &quot;</span>;</span><br><span class="line">            Object params[] = &#123;userPassword,id&#125;;</span><br><span class="line">            execute = BaseDaoUtil.execute(connection, sql, params, pstm);</span><br><span class="line">            BaseDaoUtil.closeResource(<span class="literal">null</span>,pstm,<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> execute;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">getUserList</span><span class="params">(Connection connection, String userName, <span class="type">int</span> userRole, <span class="type">int</span> currentPageNo, <span class="type">int</span> pageSize)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">pstm</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        List&lt;User&gt; userList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;User&gt;();</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != connection) &#123;</span><br><span class="line">            <span class="type">StringBuffer</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">            sql.append(<span class="string">&quot; select su.*,sr.roleName as userRoleName from smbms_user su inner join smbms_role sr on su.userRole = sr.id &quot;</span>);</span><br><span class="line">            List&lt;Object&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Object&gt;();</span><br><span class="line">            <span class="keyword">if</span> (!StringUtils.isNullOrEmpty(userName)) &#123;</span><br><span class="line">                sql.append(<span class="string">&quot; where su.userName like ?  &quot;</span>);</span><br><span class="line">                list.add(<span class="string">&quot;%&quot;</span> + userName + <span class="string">&quot;%&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (userRole &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                sql.append(<span class="string">&quot; and su.userRole = ? &quot;</span>);</span><br><span class="line">                list.add(userRole);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//在数据库中分页使用limit</span></span><br><span class="line">            sql.append(<span class="string">&quot; order by su.creationDate desc limit ?,? &quot;</span>);</span><br><span class="line">            currentPageNo = (currentPageNo - <span class="number">1</span>) * pageSize;</span><br><span class="line">            list.add(currentPageNo);</span><br><span class="line">            list.add(pageSize);</span><br><span class="line">            Object[] params = list.toArray();</span><br><span class="line">            System.out.println(<span class="string">&quot;sql --&gt;&quot;</span> + sql.toString());</span><br><span class="line">            rs = BaseDaoUtil.execute(connection,sql.toString(),params,rs,pstm);</span><br><span class="line">            <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">                <span class="type">User</span> <span class="variable">user1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">                user1.setId(rs.getInt(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">                user1.setUserCode(rs.getString(<span class="string">&quot;userCode&quot;</span>));</span><br><span class="line">                user1.setUserName(rs.getString(<span class="string">&quot;userName&quot;</span>));</span><br><span class="line">                user1.setGender(rs.getInt(<span class="string">&quot;gender&quot;</span>));</span><br><span class="line">                user1.setBirthday(rs.getDate(<span class="string">&quot;birthday&quot;</span>));</span><br><span class="line">                user1.setPhone(rs.getString(<span class="string">&quot;phone&quot;</span>));</span><br><span class="line">                user1.setUserRole(rs.getInt(<span class="string">&quot;userRole&quot;</span>));</span><br><span class="line">                user1.setUserRoleName(rs.getString(<span class="string">&quot;userRoleName&quot;</span>));</span><br><span class="line">                userList.add(user1);</span><br><span class="line">            &#125;</span><br><span class="line">            BaseDaoUtil.closeResource(connection,pstm,rs);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> userList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">addUser</span><span class="params">(Connection connection, User user)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">pstm</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">execute</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != connection) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot; INSERT  INTO `smbms_user`(`userCode`,`userName`,`userPassword`,`gender`,`birthday`,`phone`,`address`,`userRole`,`creationDate`,`createdBy`) VALUES (?,?,?,?,?,?,?,?,?,?) &quot;</span>;</span><br><span class="line">            Object[] params = &#123;user.getUserCode(),user.getUserName(),user.getUserPassword(), user.getGender(),user.getBirthday(), user.getPhone(),user.getAddress(),user.getUserRole(),user.getCreationDate(),user.getCreatedBy()&#125;;</span><br><span class="line">            execute = BaseDaoUtil.execute(connection,sql,params,pstm);</span><br><span class="line">            BaseDaoUtil.closeResource(<span class="literal">null</span>,pstm,<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> execute;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">deleteUserById</span><span class="params">(Connection connection, Integer id)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">pstm</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">execute</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot; delete su.* from smbms_user su where su.id = ? &quot;</span>;</span><br><span class="line">            System.out.println();</span><br><span class="line">            Object[] params = &#123;id&#125;;</span><br><span class="line">            execute = BaseDaoUtil.execute(connection, sql, params, pstm);</span><br><span class="line">            BaseDaoUtil.closeResource(<span class="literal">null</span>,pstm,<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> execute;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updateUserById</span><span class="params">(Connection connection, User user)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">pstm</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">execute</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != connection) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update smbms_user set userName=?,&quot;</span>+</span><br><span class="line">                    <span class="string">&quot;gender=?,birthday=?,phone=?,address=?,userRole=?,modifyBy=?,modifyDate=? where id = ? &quot;</span>;</span><br><span class="line">            Object[] params = &#123;user.getUserName(),user.getGender(),user.getBirthday(),</span><br><span class="line">                    user.getPhone(),user.getAddress(),user.getUserRole(),user.getModifyBy(),</span><br><span class="line">                    user.getModifyDate(),user.getId()&#125;;</span><br><span class="line">             execute = BaseDaoUtil.execute(connection, sql, params, pstm);</span><br><span class="line">             BaseDaoUtil.closeResource(<span class="literal">null</span>,pstm,<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> execute;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">getUserById</span><span class="params">(Connection connection, String id)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">pstm</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select u.*,r.roleName as userRoleName from smbms_user u,smbms_role r where u.id=? and u.userRole = r.id&quot;</span>;</span><br><span class="line">            Object[] params = &#123;id&#125;;</span><br><span class="line">            rs = BaseDaoUtil.execute(connection,sql,params,rs,pstm);</span><br><span class="line">            <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">                user = <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">                user.setId(rs.getInt(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">                user.setUserCode(rs.getString(<span class="string">&quot;userCode&quot;</span>));</span><br><span class="line">                user.setUserName(rs.getString(<span class="string">&quot;userName&quot;</span>));</span><br><span class="line">                user.setUserPassword(rs.getString(<span class="string">&quot;userPassword&quot;</span>));</span><br><span class="line">                user.setGender(rs.getInt(<span class="string">&quot;gender&quot;</span>));</span><br><span class="line">                user.setBirthday(rs.getDate(<span class="string">&quot;birthday&quot;</span>));</span><br><span class="line">                user.setPhone(rs.getString(<span class="string">&quot;phone&quot;</span>));</span><br><span class="line">                user.setAddress(rs.getString(<span class="string">&quot;address&quot;</span>));</span><br><span class="line">                user.setUserRole(rs.getInt(<span class="string">&quot;userRole&quot;</span>));</span><br><span class="line">                user.setCreatedBy(rs.getInt(<span class="string">&quot;createdBy&quot;</span>));</span><br><span class="line">                user.setCreationDate(rs.getTimestamp(<span class="string">&quot;creationDate&quot;</span>));</span><br><span class="line">                user.setModifyBy(rs.getInt(<span class="string">&quot;modifyBy&quot;</span>));</span><br><span class="line">                user.setModifyDate(rs.getTimestamp(<span class="string">&quot;modifyDate&quot;</span>));</span><br><span class="line">                user.setUserRoleName(rs.getString(<span class="string">&quot;userRoleName&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            BaseDaoUtil.closeResource(connection,pstm,rs);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>Service层【业务逻辑层】</li>
<li>IUserService</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.service.user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.xxy.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户业务逻辑层 smbms_user、smbms_role</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> XXX.XXX.XX</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021-12-29</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IUserService</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户登录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userCode     用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userPassword 用户密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> User</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021-12-29</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@version</span> XXX.XXX.XX</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    User <span class="title function_">login</span><span class="params">(String userCode, String userPassword)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据条件查询用户表记录数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryUserName 查询名字</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryUserRole 查询用户角色</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021-12-29</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@version</span> XXX.XXX.XX</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">getUserCount</span><span class="params">(String queryUserName, <span class="type">int</span> queryUserRole)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据条件查询用户列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryUserName 查询名字</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryUserRole 查询用户角色</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> List&lt;User&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021-12-29</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@version</span> XXX.XXX.XX</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;User&gt; <span class="title function_">getUserList</span><span class="params">(String queryUserName, <span class="type">int</span> queryUserRole, <span class="type">int</span> currentPageNo, <span class="type">int</span> pageSize)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id修改密码</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id       id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password 新密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SQLException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021-12-29</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@version</span> XXX.XXX.XX</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">updatePwd</span><span class="params">(<span class="type">int</span> id, String password)</span> <span class="keyword">throws</span> SQLException;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 增加用户信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user 用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021-12-29</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@version</span> XXX.XXX.XX</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">addUser</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id删除用户信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021-12-29</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@version</span> XXX.XXX.XX</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">deleteUserById</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改用户信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user 用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021-12-29</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@version</span> XXX.XXX.XX</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">updateUserById</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id查找用户信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> User</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021-12-29</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@version</span> XXX.XXX.XX</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    User <span class="title function_">getUserById</span><span class="params">(String id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据userCode查询出User</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userCode 用户code</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> User</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021-12-29</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@version</span> XXX.XXX.XX</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    User <span class="title function_">selectUserCodeExist</span><span class="params">(String userCode)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>UserServiceImpl</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.service.user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.xxy.dao.user.IUserDao;</span><br><span class="line"><span class="keyword">import</span> cn.xxy.dao.user.UserDaoImpl;</span><br><span class="line"><span class="keyword">import</span> cn.xxy.pojo.User;</span><br><span class="line"><span class="keyword">import</span> cn.xxy.util.BaseDaoUtil;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户业务逻辑实现层 smbms_user、smbms_role</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> XXX.XXX.XX</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021-12-29</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">IUserService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> IUserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserServiceImpl</span><span class="params">()</span> &#123;</span><br><span class="line">        userDao = <span class="keyword">new</span> <span class="title class_">UserDaoImpl</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">login</span><span class="params">(String userCode, String password)</span> &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = BaseDaoUtil.getConnection();</span><br><span class="line">            user = userDao.getLoginUser(connection,userCode,password);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            BaseDaoUtil.closeResource(connection,<span class="literal">null</span>,<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getUserCount</span><span class="params">(String queryUserName, <span class="type">int</span> queryUserRole)</span> &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;queryUserName ---&gt;&quot;</span> + queryUserName);</span><br><span class="line">        System.out.println(<span class="string">&quot;queryUserRole----&gt;&quot;</span> + queryUserRole);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">             connection = BaseDaoUtil.getConnection();</span><br><span class="line">             count = userDao.getUserCount(connection, queryUserName, queryUserRole);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            BaseDaoUtil.closeResource(connection,<span class="literal">null</span>,<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">getUserList</span><span class="params">(String queryUserName, <span class="type">int</span> queryUserRole, <span class="type">int</span> currentPageNo, <span class="type">int</span> pageSize)</span> &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        List&lt;User&gt; userList = <span class="literal">null</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;queryUserName ---- &gt; &quot;</span> + queryUserName);</span><br><span class="line">        System.out.println(<span class="string">&quot;queryUserRole ---- &gt; &quot;</span> + queryUserRole);</span><br><span class="line">        System.out.println(<span class="string">&quot;currentPageNo ---- &gt; &quot;</span> + currentPageNo);</span><br><span class="line">        System.out.println(<span class="string">&quot;pageSize ---- &gt; &quot;</span> + pageSize);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = BaseDaoUtil.getConnection();</span><br><span class="line">            userList = userDao.getUserList(connection,queryUserName,queryUserRole,currentPageNo,pageSize);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            BaseDaoUtil.closeResource(connection,<span class="literal">null</span>,<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> userList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">updatePwd</span><span class="params">(<span class="type">int</span> id, String password)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;UserDaoImpl&quot;</span> + password);</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="comment">//修改密码</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = BaseDaoUtil.getConnection();</span><br><span class="line">            <span class="keyword">if</span> (userDao.updatePwd(connection,id,password) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                 flag = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            BaseDaoUtil.closeResource(connection,<span class="literal">null</span>,<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">addUser</span><span class="params">(User user)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">updateRows</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = BaseDaoUtil.getConnection();</span><br><span class="line">            connection.setAutoCommit(<span class="literal">false</span>);</span><br><span class="line">            updateRows = userDao.addUser(connection, user);</span><br><span class="line">            connection.commit();</span><br><span class="line">            <span class="keyword">if</span> (updateRows &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                System.out.println(<span class="string">&quot;add success&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;add failed&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;rollback======&quot;</span>);</span><br><span class="line">                connection.rollback();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException ex) &#123;</span><br><span class="line">                ex.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            BaseDaoUtil.closeResource(connection,<span class="literal">null</span>,<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">deleteUserById</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">delRows</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = BaseDaoUtil.getConnection();</span><br><span class="line">            connection.setAutoCommit(<span class="literal">false</span>);</span><br><span class="line">            delRows = userDao.deleteUserById(connection,id);</span><br><span class="line">            connection.commit();</span><br><span class="line">            <span class="keyword">if</span> (delRows &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                System.out.println(<span class="string">&quot;delete success&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;delete failed&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;rollback==================&quot;</span>);</span><br><span class="line">                connection.rollback();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException ex) &#123;</span><br><span class="line">                ex.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            BaseDaoUtil.closeResource(connection,<span class="literal">null</span>,<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">updateUserById</span><span class="params">(User user)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">updateRows</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = BaseDaoUtil.getConnection();</span><br><span class="line">            connection.setAutoCommit(<span class="literal">false</span>);</span><br><span class="line">            updateRows = userDao.updateUserById(connection,user);</span><br><span class="line">            connection.commit();</span><br><span class="line">            <span class="keyword">if</span> (updateRows &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                System.out.println(<span class="string">&quot;update success&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;update failed&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;rollback=======&quot;</span>);</span><br><span class="line">                connection.rollback();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException ex) &#123;</span><br><span class="line">                ex.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            BaseDaoUtil.closeResource(connection,<span class="literal">null</span>,<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">getUserById</span><span class="params">(String id)</span> &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = BaseDaoUtil.getConnection();</span><br><span class="line">           user = userDao.getUserById(connection,id);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            user = <span class="literal">null</span>;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            BaseDaoUtil.closeResource(connection,<span class="literal">null</span>,<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">selectUserCodeExist</span><span class="params">(String userCode)</span> &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = BaseDaoUtil.getConnection();</span><br><span class="line">            user = userDao.getUserCode(connection,userCode);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            BaseDaoUtil.closeResource(connection,<span class="literal">null</span>,<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    @Test</span></span><br><span class="line"><span class="comment">//    public void test() &#123;</span></span><br><span class="line"><span class="comment">//        IUserService userService = new UserServiceImpl();</span></span><br><span class="line"><span class="comment">//        User admin = userService.login(&quot;admin&quot;, &quot;12&quot;);</span></span><br><span class="line"><span class="comment">//        System.out.println(admin.getUserPassword());</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//    @Test</span></span><br><span class="line"><span class="comment">//    public void testGetUserCount() &#123;</span></span><br><span class="line"><span class="comment">//        IUserService userService = new UserServiceImpl();</span></span><br><span class="line"><span class="comment">//        int userCount = userService.getUserCount(null, 1);</span></span><br><span class="line"><span class="comment">//        System.out.println(userCount);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>Servlet层</li>
<li>LoginServlet</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.servlet.user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.xxy.pojo.User;</span><br><span class="line"><span class="keyword">import</span> cn.xxy.service.user.IUserService;</span><br><span class="line"><span class="keyword">import</span> cn.xxy.service.user.UserServiceImpl;</span><br><span class="line"><span class="keyword">import</span> cn.xxy.util.Constants;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="built_in">this</span>.doPost(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;login----------------&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">userCode</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;userCode&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">userPassword</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;userPassword&quot;</span>);</span><br><span class="line">        <span class="type">IUserService</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.login(userCode,userPassword);</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != user) &#123;</span><br><span class="line">            req.getSession().setAttribute(Constants.USER_SESSION, user);</span><br><span class="line">            resp.sendRedirect(<span class="string">&quot;/jsp/frame.jsp&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            req.setAttribute(<span class="string">&quot;error&quot;</span>,<span class="string">&quot;用户名和密码不正确，请重新输入&quot;</span>);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;login.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>LogoutServlet</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.servlet.user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.xxy.util.Constants;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 退出登录，移除session中的用户对象Constants.USER_SESSION，重定向页面</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogoutServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LogoutServlet</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        req.getSession().removeAttribute(Constants.USER_SESSION);</span><br><span class="line">        resp.sendRedirect(req.getContextPath() + <span class="string">&quot;/login.jsp&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.destroy();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>UserServlet</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.servlet.user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.xxy.pojo.Role;</span><br><span class="line"><span class="keyword">import</span> cn.xxy.pojo.User;</span><br><span class="line"><span class="keyword">import</span> cn.xxy.service.role.IRoleService;</span><br><span class="line"><span class="keyword">import</span> cn.xxy.service.role.RoleServiceImpl;</span><br><span class="line"><span class="keyword">import</span> cn.xxy.service.user.IUserService;</span><br><span class="line"><span class="keyword">import</span> cn.xxy.service.user.UserServiceImpl;</span><br><span class="line"><span class="keyword">import</span> cn.xxy.util.BaseDaoUtil;</span><br><span class="line"><span class="keyword">import</span> cn.xxy.util.Constants;</span><br><span class="line"><span class="keyword">import</span> cn.xxy.util.PageSupport;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONArray;</span><br><span class="line"><span class="keyword">import</span> com.mysql.jdbc.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserServlet</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">method</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;method&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;method---&gt;&quot;</span> + method);</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != method &amp;&amp; Constants.ADD.equals(method)) &#123;</span><br><span class="line">            <span class="comment">//增加操作</span></span><br><span class="line">            <span class="built_in">this</span>.add(req,resp);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="literal">null</span> != method &amp;&amp; Constants.DELUSER.equals(method)) &#123;</span><br><span class="line">            <span class="comment">//删除操作</span></span><br><span class="line">            <span class="built_in">this</span>.delUser(req,resp);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="literal">null</span> != method &amp;&amp; Constants.MODIFY.equals(method)) &#123;</span><br><span class="line">            <span class="comment">//修改查看操作，查询出信息</span></span><br><span class="line">            <span class="built_in">this</span>.getUserById(req, resp,<span class="string">&quot;usermodify.jsp&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="literal">null</span> != method &amp;&amp; Constants.MODIFYEXE.equals(method)) &#123;</span><br><span class="line">            <span class="comment">//修改保存操作</span></span><br><span class="line">            <span class="built_in">this</span>.modifyexe(req,resp);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="literal">null</span> != method &amp;&amp; Constants.GETROLELIST.equals(method)) &#123;</span><br><span class="line">            <span class="comment">//获取用户角色操作</span></span><br><span class="line">            <span class="built_in">this</span>.getrolelist(req,resp);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="literal">null</span> != method &amp;&amp; Constants.QUERY.equals(method)) &#123;</span><br><span class="line">            <span class="comment">//查询所有列表操作</span></span><br><span class="line">            <span class="built_in">this</span>.query(req,resp);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="literal">null</span> != method &amp;&amp; Constants.VIEW.equals(method)) &#123;</span><br><span class="line">            <span class="comment">//根据id查询当前用户</span></span><br><span class="line">            <span class="built_in">this</span>.getUserById(req, resp,<span class="string">&quot;userview.jsp&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="literal">null</span> != method &amp;&amp; Constants.SAVEPWD.equals(method)) &#123;</span><br><span class="line">            <span class="comment">//进行保存密码</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.pwdModify(req, resp);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="literal">null</span> != method &amp;&amp; Constants.PWDMODIFY.equals(method)) &#123;</span><br><span class="line">            <span class="comment">//修改密码异步操作判断旧密码是否相同</span></span><br><span class="line">            <span class="built_in">this</span>.oldPwdModify(req,resp);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="literal">null</span> != method &amp;&amp; Constants.UCEXIST.equals(method)) &#123;</span><br><span class="line">            <span class="comment">//新增异步操作检查是否存在</span></span><br><span class="line">            <span class="built_in">this</span>.ucexist(req,resp);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">modifyexe</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;modfiyexe----------&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;uid&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">userName</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;userName&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">gender</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;gender&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">birthday</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;birthday&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">phone</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;phone&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">address</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;address&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">userRole</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;userRole&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setId(Integer.valueOf(id));</span><br><span class="line">        user.setUserName(userName);</span><br><span class="line">        user.setGender(Integer.valueOf(gender));</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            user.setBirthday(<span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd&quot;</span>).parse(birthday));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        user.setPhone(phone);</span><br><span class="line">        user.setAddress(address);</span><br><span class="line">        user.setUserRole(Integer.valueOf(userRole));</span><br><span class="line">        user.setModifyBy(((User)req.getSession().getAttribute(Constants.USER_SESSION)).getId());</span><br><span class="line">        user.setModifyDate(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        <span class="type">IUserService</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">        <span class="keyword">if</span> (userService.updateUserById(user)) &#123;</span><br><span class="line">            resp.sendRedirect(req.getContextPath() + <span class="string">&quot;/jsp/user.do?method=query&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;usermodify.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">getUserById</span><span class="params">(HttpServletRequest req, HttpServletResponse resp, String url)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;view-------&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;uid&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isNullOrEmpty(id)) &#123;</span><br><span class="line">            <span class="type">IUserService</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">            <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.getUserById(id);</span><br><span class="line">            req.setAttribute(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">            req.getRequestDispatcher(url).forward(req,resp);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">getrolelist</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;getrolelist---------------&quot;</span>);</span><br><span class="line">        List&lt;Role&gt; roleList = <span class="literal">null</span>;</span><br><span class="line">        <span class="type">IRoleService</span> <span class="variable">roleService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RoleServiceImpl</span>();</span><br><span class="line">         roleList = roleService.getRoleList();</span><br><span class="line">         <span class="keyword">if</span> (roleList != <span class="literal">null</span>) &#123;</span><br><span class="line">             resp.setContentType(<span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">             <span class="type">PrintWriter</span> <span class="variable">outPrintWriter</span> <span class="operator">=</span> resp.getWriter();</span><br><span class="line">             outPrintWriter.write(JSONArray.toJSONString(roleList));</span><br><span class="line">             outPrintWriter.flush();</span><br><span class="line">             outPrintWriter.close();</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">delUser</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;del---------&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;uid&quot;</span>);</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">delId</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">             delId = Integer.parseInt(id);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">             delId = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        HashMap&lt;String,String&gt; resultMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">        <span class="keyword">if</span> (delId &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            resultMap.put(<span class="string">&quot;delResult&quot;</span>,<span class="string">&quot;notexist&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">IUserService</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">            <span class="keyword">if</span> (userService.deleteUserById(delId)) &#123;</span><br><span class="line">                resultMap.put(<span class="string">&quot;delResult&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                resultMap.put(<span class="string">&quot;delResult&quot;</span>, <span class="string">&quot;false&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        resp.setContentType(<span class="string">&quot;pplication/json&quot;</span>);</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">outPrintWriter</span> <span class="operator">=</span> resp.getWriter();</span><br><span class="line">        outPrintWriter.write(JSONArray.toJSONString(resultMap));</span><br><span class="line">        outPrintWriter.flush();</span><br><span class="line">        outPrintWriter.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">ucexist</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;ucexist======&quot;</span>);</span><br><span class="line">        <span class="comment">//判断用户账号是否可用</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">userCode</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;userCode&quot;</span>);</span><br><span class="line">        HashMap&lt;String, String&gt; resultMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNullOrEmpty(userCode)) &#123;</span><br><span class="line">            resultMap.put(<span class="string">&quot;userCode&quot;</span>,<span class="string">&quot;exist&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">IUserService</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">            <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.selectUserCodeExist(userCode);</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != user) &#123;</span><br><span class="line">                resultMap.put(<span class="string">&quot;userCode&quot;</span>,<span class="string">&quot;exist&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                resultMap.put(<span class="string">&quot;userCode&quot;</span>, <span class="string">&quot;notexist&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        resp.setContentType(<span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        <span class="comment">//从response对象中获取往外输出的writer对象</span></span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">outPrintWriter</span> <span class="operator">=</span> resp.getWriter();</span><br><span class="line">        <span class="comment">//把resultMap转为json字符串 输出</span></span><br><span class="line">        outPrintWriter.write(JSONArray.toJSONString(resultMap));</span><br><span class="line">        outPrintWriter.flush();<span class="comment">//刷新</span></span><br><span class="line">        outPrintWriter.close();<span class="comment">//关闭流</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//验证旧密码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">oldPwdModify</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> &#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> req.getSession().getAttribute(Constants.USER_SESSION);</span><br><span class="line">        <span class="type">String</span> <span class="variable">oldPassword</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;oldpassword&quot;</span>);</span><br><span class="line">        <span class="comment">//万能的Map</span></span><br><span class="line">        HashMap&lt;String, String&gt; resultMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">        <span class="comment">//session失效了</span></span><br><span class="line">        <span class="keyword">if</span> (o == <span class="literal">null</span>) &#123;</span><br><span class="line">            resultMap.put(<span class="string">&quot;result&quot;</span>,<span class="string">&quot;sessionerror&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (StringUtils.isNullOrEmpty(oldPassword)) &#123;</span><br><span class="line">            resultMap.put(<span class="string">&quot;result&quot;</span>,<span class="string">&quot;error&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">userPassword</span> <span class="operator">=</span> ((User)o).getUserPassword();</span><br><span class="line">            <span class="keyword">if</span> (oldPassword.equals(userPassword)) &#123;</span><br><span class="line">                resultMap.put(<span class="string">&quot;result&quot;</span>,<span class="string">&quot;true&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                resultMap.put(<span class="string">&quot;result&quot;</span>,<span class="string">&quot;false&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resp.setContentType(<span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">                <span class="type">PrintWriter</span> <span class="variable">writer</span> <span class="operator">=</span> resp.getWriter();</span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * resultMap = &#123;&quot;result&quot;,&quot;sessionerror&quot;&#125;</span></span><br><span class="line"><span class="comment">                 * JSON格式 = &#123;key ： value&#125;</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                <span class="comment">//阿里巴巴的JSON工具类，转换格式</span></span><br><span class="line">                writer.write(JSONArray.toJSONString(resultMap));</span><br><span class="line">                writer.flush();</span><br><span class="line">                writer.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">pwdModify</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> SQLException, ServletException, IOException &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">falg</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="comment">//从Session拿ID</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> req.getSession().getAttribute(Constants.USER_SESSION);</span><br><span class="line">        <span class="type">String</span> <span class="variable">newPassword</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;newpassword&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;UserServlet&quot;</span> + newPassword);</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != o &amp;&amp; !StringUtils.isNullOrEmpty(newPassword))  &#123;</span><br><span class="line">            <span class="type">IUserService</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">            falg = userService.updatePwd(((User) o).getId(), newPassword);</span><br><span class="line">            <span class="keyword">if</span> (falg) &#123;</span><br><span class="line">                req.setAttribute(Constants.SYS_MESSAGE,<span class="string">&quot;用户修改成功，请退出，使用新密码登录&quot;</span>);</span><br><span class="line">                <span class="comment">//密码修改成功，移除当前session</span></span><br><span class="line">                req.getSession().removeAttribute(Constants.USER_SESSION);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                req.setAttribute(Constants.SYS_MESSAGE,<span class="string">&quot;密码修改失败&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            req.setAttribute(Constants.SYS_MESSAGE,<span class="string">&quot;新密码不合格式，请重新输入&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        req.getRequestDispatcher(<span class="string">&quot;pwdmodify.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">query</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        <span class="comment">//查询用户列表</span></span><br><span class="line">        <span class="comment">//从前端获取数据</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">queryUserName</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;queryname&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">temp</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;queryUserRole&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">pageIndex</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;pageIndex&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">queryUserRole</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//获取用户列表</span></span><br><span class="line">        <span class="type">IUserService</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">        <span class="comment">//第一次走页面一定是第一页，页面大小是固定的</span></span><br><span class="line">        List&lt;User&gt; userList = <span class="literal">null</span>;</span><br><span class="line">        <span class="comment">//设置页面容量</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">pageSize</span> <span class="operator">=</span> Constants.pageSize;</span><br><span class="line">        <span class="comment">//设置当前页码</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">currentPageNo</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * http://localhost:8090/SMBMS/userlist.do</span></span><br><span class="line"><span class="comment">         * ----queryUserName --NULL</span></span><br><span class="line"><span class="comment">         * http://localhost:8090/SMBMS/userlist.do?queryname=</span></span><br><span class="line"><span class="comment">         * --queryUserName ---&quot;&quot;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(<span class="string">&quot;queryUserName servlet--------&quot;</span>+queryUserName);</span><br><span class="line">        System.out.println(<span class="string">&quot;queryUserRole servlet--------&quot;</span>+queryUserRole);</span><br><span class="line">        System.out.println(<span class="string">&quot;query pageIndex--------- &gt; &quot;</span> + pageIndex);</span><br><span class="line">        <span class="keyword">if</span> (queryUserName == <span class="literal">null</span>) &#123;</span><br><span class="line">            queryUserName = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (temp != <span class="literal">null</span> &amp;&amp; !<span class="string">&quot;&quot;</span>.equals(temp)) &#123;</span><br><span class="line">            queryUserRole = Integer.parseInt(temp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (pageIndex != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                currentPageNo = Integer.valueOf(pageIndex);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (NumberFormatException e) &#123;</span><br><span class="line">                resp.sendRedirect(<span class="string">&quot;error.jsp&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//总数量（表）</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">totalCount</span> <span class="operator">=</span> userService.getUserCount(queryUserName,queryUserRole);</span><br><span class="line">        <span class="comment">//总页数</span></span><br><span class="line">        <span class="type">PageSupport</span> <span class="variable">pages</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PageSupport</span>();</span><br><span class="line">        pages.setCurrentPageNo(currentPageNo);</span><br><span class="line">        pages.setPageSize(pageSize);</span><br><span class="line">        pages.setTotalCount(totalCount);</span><br><span class="line">        <span class="type">int</span> <span class="variable">totalPageCount</span> <span class="operator">=</span> pages.getTotalPageCount();</span><br><span class="line">        <span class="comment">//控制首页和尾页,如果页面小于1了，显示第一页</span></span><br><span class="line">        <span class="keyword">if</span> (currentPageNo &lt; <span class="number">1</span>) &#123;</span><br><span class="line">            currentPageNo = <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (currentPageNo &gt; totalPageCount) &#123; <span class="comment">//如果页面大于最后一页，显示最后一页的数据</span></span><br><span class="line">            currentPageNo = totalPageCount;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        userList = userService.getUserList(queryUserName,queryUserRole,currentPageNo,pageSize);</span><br><span class="line">        req.setAttribute(<span class="string">&quot;userList&quot;</span>,userList);</span><br><span class="line">        List&lt;Role&gt; roleList = <span class="literal">null</span>;</span><br><span class="line">        <span class="type">IRoleService</span> <span class="variable">roleService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RoleServiceImpl</span>();</span><br><span class="line">        roleList = roleService.getRoleList();</span><br><span class="line">        req.setAttribute(<span class="string">&quot;roleList&quot;</span>,roleList);</span><br><span class="line">        req.setAttribute(<span class="string">&quot;queryUserName&quot;</span>,queryUserName);</span><br><span class="line">        req.setAttribute(<span class="string">&quot;queryUserRole&quot;</span>,queryUserRole);</span><br><span class="line">        req.setAttribute(<span class="string">&quot;totalPageCount&quot;</span>,totalPageCount);</span><br><span class="line">        req.setAttribute(<span class="string">&quot;totalCount&quot;</span>,totalCount);</span><br><span class="line">        req.setAttribute(<span class="string">&quot;currentPageNo&quot;</span>,currentPageNo);</span><br><span class="line">        req.getRequestDispatcher(<span class="string">&quot;userlist.jsp&quot;</span>).forward(req,resp);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;add()-------&quot;</span>);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">userCode</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;userCode&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">userName</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;userName&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">userPassword</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;userPassword&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">ruserPassword</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;ruserPassword&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">gender</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;gender&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">birthday</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;birthday&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">phone</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;phone&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">address</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;address&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">userRole</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;userRole&quot;</span>);</span><br><span class="line">        user1.setUserCode(userCode);</span><br><span class="line">        user1.setUserName(userName);</span><br><span class="line">        user1.setUserPassword(userPassword);</span><br><span class="line">        user1.setGender(Integer.valueOf(gender));</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            user1.setBirthday(<span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd&quot;</span>).parse(birthday));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        user1.setPhone(phone);</span><br><span class="line">        user1.setAddress(address);</span><br><span class="line">        user1.setUserRole(Integer.valueOf(userRole));</span><br><span class="line">        user1.setCreationDate(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        user1.setCreatedBy(((User)req.getSession().getAttribute(Constants.USER_SESSION)).getId());</span><br><span class="line">        <span class="type">IUserService</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">        flag = userService.addUser(user1);</span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            resp.sendRedirect(req.getContextPath()+<span class="string">&quot;/jsp/user.do?method=query&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;useradd.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.destroy();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="15-总结"><a href="#15-总结" class="headerlink" title="15. 总结"></a>15. 总结</h2><p>对于计算机网络和JSP的原理进行了了解</p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>注解与反射</title>
    <url>/2022/05/09/%E6%B3%A8%E8%A7%A3%E4%B8%8E%E5%8F%8D%E5%B0%84/</url>
    <content><![CDATA[<blockquote>
<center>寄蜉蝣于天地，渺沧海之一粟</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<blockquote>
<p>反射就是把java类中的各种成分映射成一个个的Java对象</p>
</blockquote>
<h2 id="1-注解"><a href="#1-注解" class="headerlink" title="1. 注解"></a>1. 注解</h2><blockquote>
<p>可以被程序读取的注释</p>
</blockquote>
<h3 id="1-1-内置注解"><a href="#1-1-内置注解" class="headerlink" title="1.1 内置注解"></a>1.1 内置注解</h3><ul>
<li>栗子：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.test;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试学习什么是注解</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;all&quot;)</span> <span class="comment">//抑制编译警告信息,不建议</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test01</span> <span class="keyword">extends</span> <span class="title class_">Object</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">//重写的注解</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Test01&#123;&#125;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Deprecated</span> <span class="comment">//不推荐使用的注解</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;djsnfj&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">List</span> <span class="variable">list</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        test();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-2-元注解-meta-annotation"><a href="#1-2-元注解-meta-annotation" class="headerlink" title="1.2 元注解(meta-annotation)"></a>1.2 元注解(meta-annotation)</h3><blockquote>
<p>使用@interface自定义注解时，自动继承了java.lang.annotation接口，注解元素必须要有值</p>
</blockquote>
<ul>
<li>栗子：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.test;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试学习什么是注解</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;all&quot;)</span> <span class="comment">//抑制编译警告信息,不建议</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test01</span> <span class="keyword">extends</span> <span class="title class_">Object</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">//重写的注解</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Test01&#123;&#125;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Deprecated</span> <span class="comment">//不推荐使用的注解</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test0</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;djsnfj&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//注解可以显示赋值，没有默认值，必须赋值</span></span><br><span class="line">    <span class="meta">@MyAnnotation1()</span></span><br><span class="line">    <span class="meta">@MyAnnotation2(&quot;dh&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">List</span> <span class="variable">list</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        test0();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义一个注解 meta-annotation</span></span><br><span class="line"><span class="comment">//Documented表示是否将我们的注释生成在JavaDoc中</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="comment">//Inherited表示子类可以继承父类的注解</span></span><br><span class="line"><span class="meta">@Inherited</span></span><br><span class="line"><span class="comment">//Retention表示我们注解什么时候有效 RUNTIME &gt; CLASS &gt; SOURCE</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="comment">//Target表示我们可以注释哪些地方</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.CONSTRUCTOR, ElementType.FIELD, ElementType.LOCAL_VARIABLE, ElementType.METHOD, ElementType.PACKAGE, ElementType.PARAMETER, ElementType.TYPE&#125;)</span></span><br><span class="line"><span class="meta">@interface</span> MyAnnotation1 &#123;</span><br><span class="line">    <span class="comment">//注解的参数</span></span><br><span class="line">    String <span class="title function_">name</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">age</span><span class="params">()</span> <span class="keyword">default</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">id</span><span class="params">()</span> <span class="keyword">default</span> -<span class="number">1</span>;</span><br><span class="line">    String[] schools() <span class="keyword">default</span> &#123;<span class="string">&quot;什么大学&quot;</span>,<span class="string">&quot;hello大学&quot;</span>&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//Documented表示是否将我们的注释生成在JavaDoc中</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="comment">//Inherited表示子类可以继承父类的注解</span></span><br><span class="line"><span class="meta">@Inherited</span></span><br><span class="line"><span class="comment">//Retention表示我们注解什么时候有效 RUNTIME &gt; CLASS &gt; SOURCE</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="comment">//Target表示我们可以注释哪些地方</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.CONSTRUCTOR, ElementType.FIELD, ElementType.LOCAL_VARIABLE, ElementType.METHOD, ElementType.PACKAGE, ElementType.PARAMETER, ElementType.TYPE&#125;)</span></span><br><span class="line"><span class="meta">@interface</span> MyAnnotation2 &#123;</span><br><span class="line">        <span class="comment">/*String name();*/</span></span><br><span class="line">    <span class="comment">//只有一个注解的参数建议用value</span></span><br><span class="line">    String <span class="title function_">value</span><span class="params">()</span>;</span><br><span class="line">&#125;		</span><br></pre></td></tr></table></figure>

<h3 id="1-3-反射操作注解"><a href="#1-3-反射操作注解" class="headerlink" title="1.3 反射操作注解"></a>1.3 反射操作注解</h3><ul>
<li>栗子</li>
<li>自定义注解一</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.annotation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Target(ElementType.TYPE)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> TableORM &#123;</span><br><span class="line">    String <span class="title function_">value</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>自定义注解二</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.annotation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Target(ElementType.FIELD)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Field &#123;</span><br><span class="line">    String <span class="title function_">columnName</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    String <span class="title function_">type</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">length</span><span class="params">()</span> <span class="keyword">default</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>反射操作注解</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xxy.annotation.TableORM;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Annotation;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过反射获取注解</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test08</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchFieldException &#123;</span><br><span class="line">        <span class="type">Class</span> <span class="variable">c1</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;com.xxy.entity.User&quot;</span>);</span><br><span class="line">        Annotation[] annotations = c1.getAnnotations();</span><br><span class="line">        <span class="keyword">for</span> (Annotation annotation : annotations) &#123;</span><br><span class="line">            System.out.println(annotation);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取注解value的值</span></span><br><span class="line">        <span class="type">TableORM</span> <span class="variable">annotation</span> <span class="operator">=</span> (TableORM) c1.getAnnotation(TableORM.class);</span><br><span class="line">        <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> annotation.value();</span><br><span class="line">        System.out.println(value);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取类指定注解</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">name</span> <span class="operator">=</span> c1.getDeclaredField(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        com.xxy.annotation.<span class="type">Field</span> <span class="variable">annotation1</span> <span class="operator">=</span> name.getAnnotation(com.xxy.annotation.Field.class);</span><br><span class="line">        System.out.println(annotation1.columnName());</span><br><span class="line">        System.out.println(annotation1.type());</span><br><span class="line">        System.out.println(annotation1.length());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="2-反射机制"><a href="#2-反射机制" class="headerlink" title="2. 反射机制"></a>2. 反射机制</h2><blockquote>
<p>Class类是反射机制的根源，可以通过Object类中所提供的方法获取一个Class实例，</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[实例化对象] --&gt; B(getClass方法) --&gt; C(得到完整的包类的名称)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>动态语言</li>
</ul>
<blockquote>
<p>在运行时可以改变结构的语言，例如JavaScript，PHP，Python</p>
</blockquote>
<ul>
<li>静态语言</li>
</ul>
<blockquote>
<p>运行时不可以改变结构，例如Java【准动态语言，可以通过反射改变结构】，C，C++</p>
</blockquote>
<h2 id="3-Class类对象实例化"><a href="#3-Class类对象实例化" class="headerlink" title="3. Class类对象实例化"></a>3. Class类对象实例化</h2><blockquote>
<p>在运行期间，一个类，只有一个Class对象产生</p>
</blockquote>
<ul>
<li><p>通过Class.forName()方法【最常见】</p>
</li>
<li><p>通过Object的getClass()方法</p>
</li>
<li><p>通过“类.class”的形式</p>
</li>
<li><p>栗子</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xxy.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        System.out.println(user);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//方式一：通过对象.getClass获得</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c1</span> <span class="operator">=</span> user.getClass();</span><br><span class="line">        System.out.println(c1.hashCode());</span><br><span class="line">        <span class="comment">//方式二：通过反射forName获取类的class对象</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c2</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;com.xxy.entity.User&quot;</span>);</span><br><span class="line">        System.out.println(c2.hashCode());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//方式三：通过类名.class获得</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c3</span> <span class="operator">=</span> User.class;</span><br><span class="line">        System.out.println(c3.hashCode());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//基本内置类型的包装类都有一个Type属性</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">type</span> <span class="operator">=</span> Integer.TYPE;</span><br><span class="line">        System.out.println(type);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得父类类型</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">superclass</span> <span class="operator">=</span> c2.getSuperclass();</span><br><span class="line">        System.out.println(superclass);</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c4</span> <span class="operator">=</span> Object.class;  <span class="comment">//类</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c5</span> <span class="operator">=</span> Comparable.class;<span class="comment">//接口</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c6</span> <span class="operator">=</span> String[].class;<span class="comment">//一维数组</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c7</span> <span class="operator">=</span> <span class="type">int</span>[][].class;<span class="comment">//二维数组</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c8</span> <span class="operator">=</span> Override.class;<span class="comment">//注解</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c9</span> <span class="operator">=</span> ElementType.class;<span class="comment">//枚举</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c10</span> <span class="operator">=</span> Integer.class;<span class="comment">//基本数据类型</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c11</span> <span class="operator">=</span> <span class="keyword">void</span>.class;<span class="comment">//空类型</span></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c12</span> <span class="operator">=</span> Class.class;<span class="comment">//Class</span></span><br><span class="line"></span><br><span class="line">        System.out.println(c4 );</span><br><span class="line">        System.out.println(c5 );</span><br><span class="line">        System.out.println(c6 );</span><br><span class="line">        System.out.println(c7 );</span><br><span class="line">        System.out.println(c8 );</span><br><span class="line">        System.out.println(c9 );</span><br><span class="line">        System.out.println(c10);</span><br><span class="line">        System.out.println(c11);</span><br><span class="line">        System.out.println(c12);</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="4-对象实例化"><a href="#4-对象实例化" class="headerlink" title="4. 对象实例化"></a>4. 对象实例化</h2><blockquote>
<p>创建一个类的实例时（new,反射，浅克隆，反序列化(深克隆)）</p>
</blockquote>
<h3 id="4-1-创建运行时类的对象"><a href="#4-1-创建运行时类的对象" class="headerlink" title="4.1 创建运行时类的对象"></a>4.1 创建运行时类的对象</h3><ul>
<li>栗子：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取类的信息</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test05</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchFieldException, NoSuchMethodException &#123;</span><br><span class="line">        <span class="type">Class</span> <span class="variable">c1</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;com.xxy.entity.User&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得类名</span></span><br><span class="line">        System.out.println(c1.getName());<span class="comment">//获取包名+类名</span></span><br><span class="line">        System.out.println(c1.getSimpleName());<span class="comment">//获取包名</span></span><br><span class="line">        System.out.println(<span class="string">&quot;-------------------&quot;</span>);</span><br><span class="line">        <span class="comment">//获得类的属性,私有不能找到</span></span><br><span class="line">        Field[] fields = c1.getFields();</span><br><span class="line">        <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">            System.out.println(field);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//可以找到私有属性的值</span></span><br><span class="line">        Field[] declaredFields = c1.getDeclaredFields();</span><br><span class="line">        <span class="keyword">for</span> (Field declaredField : declaredFields) &#123;</span><br><span class="line">            System.out.println(declaredField);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取指定属性的值</span></span><br><span class="line">        <span class="type">Field</span> <span class="variable">name</span> <span class="operator">=</span> c1.getDeclaredField(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        System.out.println(name);</span><br><span class="line">        System.out.println(<span class="string">&quot;-------------------&quot;</span>);</span><br><span class="line">        <span class="comment">//获取类的public方法</span></span><br><span class="line">        Method[] methods = c1.getMethods();</span><br><span class="line">        <span class="keyword">for</span> (Method method : methods) &#123;</span><br><span class="line">            System.out.println(method);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取类的所有方法</span></span><br><span class="line">        Method[] declaredMethods = c1.getDeclaredMethods();</span><br><span class="line">        <span class="keyword">for</span> (Method declaredMethod : declaredMethods) &#123;</span><br><span class="line">            System.out.println(declaredMethod);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取指定方法,需要考虑重载</span></span><br><span class="line">        <span class="type">Method</span> <span class="variable">getAge</span> <span class="operator">=</span> c1.getMethod(<span class="string">&quot;getAge&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">setAge</span> <span class="operator">=</span> c1.getMethod(<span class="string">&quot;setAge&quot;</span>, <span class="type">int</span>.class);</span><br><span class="line">        System.out.println(setAge);</span><br><span class="line">        System.out.println(getAge);</span><br><span class="line">        System.out.println(<span class="string">&quot;-------------------&quot;</span>);</span><br><span class="line">        <span class="comment">//获取指定构造器</span></span><br><span class="line">        Constructor[] constructors = c1.getConstructors();</span><br><span class="line">        <span class="keyword">for</span> (Constructor constructor : constructors) &#123;</span><br><span class="line">            System.out.println(constructor);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Constructor[] declaredConstructors = c1.getDeclaredConstructors();</span><br><span class="line">        <span class="keyword">for</span> (Constructor declaredConstructor : declaredConstructors) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;#&quot;</span> + declaredConstructor);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取指定构造器</span></span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">declaredConstructor</span> <span class="operator">=</span> c1.getDeclaredConstructor(<span class="type">int</span>.class, String.class, <span class="type">int</span>.class);</span><br><span class="line">        System.out.println(<span class="string">&quot;指定：&quot;</span> + declaredConstructor);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="4-2-通过反射动态创建对象"><a href="#4-2-通过反射动态创建对象" class="headerlink" title="4.2 通过反射动态创建对象"></a>4.2 通过反射动态创建对象</h3><ul>
<li>栗子</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xxy.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test06</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, IllegalAccessException, InstantiationException, NoSuchMethodException, InvocationTargetException, NoSuchFieldException &#123;</span><br><span class="line">        <span class="type">Class</span> <span class="variable">c1</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;com.xxy.entity.User&quot;</span>);</span><br><span class="line">        <span class="comment">//无参构造</span></span><br><span class="line">      <span class="comment">/*  User user = (User) c1.newInstance();</span></span><br><span class="line"><span class="comment">        System.out.println(user);*/</span></span><br><span class="line">        <span class="comment">//有参构造</span></span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">declaredConstructor</span> <span class="operator">=</span> c1.getDeclaredConstructor(<span class="type">int</span>.class, String.class, <span class="type">int</span>.class);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user1</span> <span class="operator">=</span> (User) declaredConstructor.newInstance(<span class="number">11</span>, <span class="string">&quot;djhf&quot;</span>, <span class="number">54</span>);</span><br><span class="line">        System.out.println(user1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//通过反射调用普通方法</span></span><br><span class="line">        <span class="type">Method</span> <span class="variable">setAge</span> <span class="operator">=</span> c1.getDeclaredMethod(<span class="string">&quot;setAge&quot;</span>, <span class="type">int</span>.class);</span><br><span class="line">        <span class="comment">//invoke 激活方法的值</span></span><br><span class="line">        setAge.invoke(user1,<span class="number">77</span>);</span><br><span class="line">        System.out.println(user1.getAge());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//通过反射操作属性</span></span><br><span class="line">        System.out.println(<span class="string">&quot;________________&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">name</span> <span class="operator">=</span> c1.getDeclaredField(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="comment">//关闭访问权限，设置可访问</span></span><br><span class="line">        name.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        name.set(user1,<span class="string">&quot;aaa&quot;</span>);</span><br><span class="line">        System.out.println(user1.getName());</span><br><span class="line">        System.out.println(user1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="4-3-性能问题"><a href="#4-3-性能问题" class="headerlink" title="4.3 性能问题"></a>4.3 性能问题</h3><blockquote>
<p>普通方法（new） &gt; 设置可访问  &gt; 不设置可访问</p>
<p>类.class &gt; Class.forName(“”)  &gt; getClass()</p>
</blockquote>
<h3 id="4-4-反射获取泛型"><a href="#4-4-反射获取泛型" class="headerlink" title="4.4 反射获取泛型"></a>4.4 反射获取泛型</h3><ul>
<li>栗子</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xxy.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.ParameterizedType;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Type;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过反射获取泛型</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test07</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test01</span><span class="params">(Map&lt;String, User&gt; map, List&lt;User&gt; list)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test01&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String,User&gt; <span class="title function_">test02</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test02&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchMethodException &#123;</span><br><span class="line">        <span class="type">Method</span> <span class="variable">test01</span> <span class="operator">=</span> Test07.class.getMethod(<span class="string">&quot;test01&quot;</span>, Map.class, List.class);</span><br><span class="line">        Type[] genericParameterTypes = test01.getGenericParameterTypes();</span><br><span class="line">        <span class="keyword">for</span> (Type genericParameterType : genericParameterTypes) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;#&quot;</span> + genericParameterType);</span><br><span class="line">            <span class="keyword">if</span> (genericParameterType <span class="keyword">instanceof</span> ParameterizedType) &#123;<span class="comment">//如果是参数化类型，获取真实的参数类型</span></span><br><span class="line">                Type[] actualTypeArguments = ((ParameterizedType) genericParameterType).getActualTypeArguments();</span><br><span class="line">                <span class="keyword">for</span> (Type actualTypeArgument : actualTypeArguments) &#123;</span><br><span class="line">                    System.out.println(actualTypeArgument);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="5-ClassLoader类加载器"><a href="#5-ClassLoader类加载器" class="headerlink" title="5. ClassLoader类加载器"></a>5. ClassLoader类加载器</h2><h3 id="5-1-类的加载过程"><a href="#5-1-类的加载过程" class="headerlink" title="5.1 类的加载过程"></a>5.1 类的加载过程</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[类的加载Load] --&gt;|class字节码内容加载到内存中,生成java.lang.Class对象| B(类的连接Link) --&gt;|验证,准备,解析| C(类的初始化Initialize) --&gt;|执行类构造器clinit,初始化父类,正确加载线程安全锁和同步| D[默认磁盘加载]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>栗子</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        System.out.println(A.m);</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 1. 加载到内存，会产生一个类对应class对象</span></span><br><span class="line"><span class="comment">         * 2. 连接，连接后m=0</span></span><br><span class="line"><span class="comment">         * 3. 初始化</span></span><br><span class="line"><span class="comment">         * &lt;clinti&gt;()  &#123;</span></span><br><span class="line"><span class="comment">         *   System.out.println(&quot;A类静态代码初始化&quot;);</span></span><br><span class="line"><span class="comment">         *          m = 200;</span></span><br><span class="line"><span class="comment">         *          m = 100;</span></span><br><span class="line"><span class="comment">         * &#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;A类静态代码初始化&quot;</span>);</span><br><span class="line">         m = <span class="number">200</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 方法区里面，</span></span><br><span class="line"><span class="comment">     * m=200</span></span><br><span class="line"><span class="comment">     * m=100</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">A</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;A类的无参构造&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="5-2-类初始化"><a href="#5-2-类初始化" class="headerlink" title="5.2 类初始化"></a>5.2 类初始化</h3><ul>
<li>类的主动引用<ul>
<li>先初始化main()方法所在的类</li>
<li>new一个类的对象</li>
<li>调用静态成员（除了final常量）和静态方法</li>
<li>使用java.lang.reflect包的方法对类进行反射调用</li>
<li>初始化一个类时，如果父类没有被初始化，则会先初始化父类</li>
</ul>
</li>
<li>类的被动引用<ul>
<li>当访问一个静态域时，只有真正声明这个域的类才会被初始化</li>
<li>通过数组定义类引用，不会触发此类的初始化</li>
<li>引用常量不会触发此类的初始化（常量池）</li>
</ul>
</li>
</ul>
<h3 id="5-3-类加载器的作用"><a href="#5-3-类加载器的作用" class="headerlink" title="5.3 类加载器的作用"></a>5.3 类加载器的作用</h3><ul>
<li>BootStrap【根加载器，系统类加载器】</li>
</ul>
<blockquote>
<p>由C++语言编写，主要目的是加载Java底层系统提供的核心类库</p>
</blockquote>
<ul>
<li>ExtensionsClassloader【平台类加载器】</li>
</ul>
<blockquote>
<p>进行模块加载</p>
</blockquote>
<ul>
<li>APPClassloader【应用程序类加载器】</li>
</ul>
<blockquote>
<p>加载CLASSPATH所指定的类文件或者JAR文件</p>
</blockquote>
<ul>
<li><p>自定义加载器【远程服务加载、数据库加载】</p>
</li>
<li><p>栗子</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test04</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException &#123;</span><br><span class="line">        <span class="comment">//获取系统类加载器</span></span><br><span class="line">        <span class="type">ClassLoader</span> <span class="variable">systemClassLoader</span> <span class="operator">=</span> ClassLoader.getSystemClassLoader();</span><br><span class="line">        System.out.println(systemClassLoader);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取系统加载器的父类加载器--&gt;扩展类加载器</span></span><br><span class="line">        <span class="type">ClassLoader</span> <span class="variable">parent</span> <span class="operator">=</span> systemClassLoader.getParent();</span><br><span class="line">        System.out.println(parent);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取扩展类加载器的父类加载器--&gt;根加载器</span></span><br><span class="line">        <span class="type">ClassLoader</span> <span class="variable">parent1</span> <span class="operator">=</span> parent.getParent();</span><br><span class="line">        System.out.println(parent1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//测试当前的类是哪个加载器加载的</span></span><br><span class="line">        <span class="type">ClassLoader</span> <span class="variable">classLoader</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;com.xxy.test.Test04&quot;</span>).getClassLoader();</span><br><span class="line">        System.out.println(classLoader);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//测试jdk内置的类是谁加载的</span></span><br><span class="line">        <span class="type">ClassLoader</span> <span class="variable">classLoader1</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.lang.Object&quot;</span>).getClassLoader();</span><br><span class="line">        System.out.println(classLoader1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取系统类加载器可以加载的路径</span></span><br><span class="line">        System.out.println(System.getProperty(<span class="string">&quot;java.class.path&quot;</span>));</span><br><span class="line">        <span class="comment">//双亲委派机制：向上找包，找不到就用自己的包，安全性</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * D:\install\java\jdk\jre\lib\charsets.jar;</span></span><br><span class="line"><span class="comment">         * D:\install\java\jdk\jre\lib\deploy.jar;</span></span><br><span class="line"><span class="comment">         * D:\install\java\jdk\jre\lib\ext\access-bridge-64.jar;</span></span><br><span class="line"><span class="comment">         * D:\install\java\jdk\jre\lib\ext\cldrdata.jar;</span></span><br><span class="line"><span class="comment">         * D:\install\java\jdk\jre\lib\ext\dnsns.jar;</span></span><br><span class="line"><span class="comment">         * D:\install\java\jdk\jre\lib\ext\jaccess.jar;</span></span><br><span class="line"><span class="comment">         * D:\install\java\jdk\jre\lib\ext\jfxrt.jar;</span></span><br><span class="line"><span class="comment">         * D:\install\java\jdk\jre\lib\ext\localedata.jar;</span></span><br><span class="line"><span class="comment">         * D:\install\java\jdk\jre\lib\ext\nashorn.jar;</span></span><br><span class="line"><span class="comment">         * D:\install\java\jdk\jre\lib\ext\sunec.jar;</span></span><br><span class="line"><span class="comment">         * D:\install\java\jdk\jre\lib\ext\sunjce_provider.jar;</span></span><br><span class="line"><span class="comment">         * D:\install\java\jdk\jre\lib\ext\sunmscapi.jar;</span></span><br><span class="line"><span class="comment">         * D:\install\java\jdk\jre\lib\ext\sunpkcs11.jar;</span></span><br><span class="line"><span class="comment">         * D:\install\java\jdk\jre\lib\ext\zipfs.jar;</span></span><br><span class="line"><span class="comment">         * D:\install\java\jdk\jre\lib\javaws.jar;</span></span><br><span class="line"><span class="comment">         * D:\install\java\jdk\jre\lib\jce.jar;</span></span><br><span class="line"><span class="comment">         * D:\install\java\jdk\jre\lib\jfr.jar;</span></span><br><span class="line"><span class="comment">         * D:\install\java\jdk\jre\lib\jfxswt.jar;</span></span><br><span class="line"><span class="comment">         * D:\install\java\jdk\jre\lib\jsse.jar;</span></span><br><span class="line"><span class="comment">         * D:\install\java\jdk\jre\lib\management-agent.jar;</span></span><br><span class="line"><span class="comment">         * D:\install\java\jdk\jre\lib\plugin.jar;</span></span><br><span class="line"><span class="comment">         * D:\install\java\jdk\jre\lib\resources.jar;</span></span><br><span class="line"><span class="comment">         * D:\install\java\jdk\jre\lib\rt.jar;</span></span><br><span class="line"><span class="comment">         * D:\JavaWork\reflex\out\production\reflex;</span></span><br><span class="line"><span class="comment">         * D:\install\IDEA\IntelliJ IDEA 2019.1\lib\idea_rt.jar</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="6-总结"><a href="#6-总结" class="headerlink" title="6. 总结"></a>6. 总结</h2><p>本次总结了注解和反射的基础，里面如果有错误或者建议，欢迎评论区指出。</p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>多线程基础</title>
    <url>/2022/05/09/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<blockquote>
<center>藏好自己，做好清理</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<blockquote>
<p>实际上是多个CPU，即多核，如果一个CPU情况下，其实是一个时刻处理一个线程，一段时间内处理多个线程</p>
</blockquote>
<h2 id="1-进程与线程"><a href="#1-进程与线程" class="headerlink" title="1. 进程与线程"></a>1. 进程与线程</h2><blockquote>
<p>进程是程序的一次动态执行过程，它经历了从代码加载（产生）、执行（发展）到执行完毕（消亡）的一个完整过程。每个进程都能循环获得自己的CPU时间片，CPU执行速度非常快，所以好像同时运行一样。</p>
</blockquote>
<p>1.1 打开WPS是打开一个程序，也相当于启动了一个进程，WPS的拼音检查就是一个线程，可以有很多的线程在进程上,PID的P就是Process【进程】</p>
<p>1.2 在一个进程中，自己没有创建线程，后台也会有多个线程，如main()【主线程】，gc线程【垃圾回收线程】</p>
<p>1.3 单线程：run（）方法先执行完再返回到主方法</p>
<p>1.4 多线程：start（）方法和主方法一起并发执行（时间段）;在时刻上还是执行其中一个</p>
<h2 id="2-多线程实现"><a href="#2-多线程实现" class="headerlink" title="2. 多线程实现"></a>2. 多线程实现</h2><p>2.1 继承Thread类（java.lang.Thread）</p>
<ul>
<li>栗子1：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//创建线程方式一：继承Thread类，重写run方法，调用start开启线程</span></span><br><span class="line"><span class="keyword">package</span> com.xxy.thread;</span><br><span class="line"><span class="comment">//创建线程方式一：继承Thread类，重写run方法，调用start开启线程</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//run方法线程体</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我在看代码&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//main方法线程，主线程</span></span><br><span class="line">       <span class="type">TestThread</span> <span class="variable">testThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestThread</span>();</span><br><span class="line">        <span class="comment">//调用start（）开启线程</span></span><br><span class="line">        testThread.start();</span><br><span class="line">       <span class="comment">//testThread.run();</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我在学习多线程&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>栗子2：下载多张图片</li>
</ul>
<p><a href="http://commons.apache.org/proper/commons-io/download_io.cgi">下载Apache Commons IO</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.thread;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现多线程下载图片</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestThreadDownload</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TestThreadDownload</span><span class="params">(String url,String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.url = url;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//下载图片执行体</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">WebDownloader</span> <span class="variable">webDownloader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WebDownloader</span>();</span><br><span class="line">        webDownloader.downloader(url,name);</span><br><span class="line">        System.out.println(<span class="string">&quot;下载了文件名为：&quot;</span> + name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">TestThreadDownload</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestThreadDownload</span>(<span class="string">&quot;https://img-home.csdnimg.cn/images/20210624094420.png&quot;</span>,<span class="string">&quot;1.png&quot;</span>);</span><br><span class="line">        <span class="type">TestThreadDownload</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestThreadDownload</span>(<span class="string">&quot;https://img-bss.csdn.net/1623287748640.png&quot;</span>,<span class="string">&quot;2.png&quot;</span>);</span><br><span class="line">        <span class="type">TestThreadDownload</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestThreadDownload</span>(<span class="string">&quot;https://img-home.csdnimg.cn/images/20210426034059.png&quot;</span>,<span class="string">&quot;3.png&quot;</span>);</span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">        t3.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">WebDownloader</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">downloader</span><span class="params">(String url,String name)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            FileUtils.copyURLToFile(<span class="keyword">new</span> <span class="title class_">URL</span>(url),<span class="keyword">new</span> <span class="title class_">File</span>(name));</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(<span class="string">&quot;IO异常，downloader方法出现问题&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<ul>
<li>为什么线程启动必须调用start()方法执行而不是直接调用run()方法</li>
</ul>
<p>start()方法源码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.threadStatus != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalThreadStateException</span>();<span class="comment">//运行时异常</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.group.add(<span class="built_in">this</span>);</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">var1</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.start0();<span class="comment">//方法上使用了native关键字（java本地接口调用）调用本机操作系统的函数功能完成特殊操作</span></span><br><span class="line">                var1 = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!var1) &#123;</span><br><span class="line">                        <span class="built_in">this</span>.group.threadStartFailed(<span class="built_in">this</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Throwable var8) &#123;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">start0</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>为了java的可移植性，只在意调用操作系统的函数功能来实现start0()方法</p>
</blockquote>
<ul>
<li>缺点</li>
</ul>
<blockquote>
<p>单继承局限</p>
</blockquote>
<p>2.2  实现Runnable接口</p>
<blockquote>
<p>避免了单继承的局限性</p>
</blockquote>
<ul>
<li>Runnable接口源码</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class="line"><span class="comment">// (powered by Fernflower decompiler)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> java.lang;</span><br><span class="line"></span><br><span class="line"><span class="meta">@FunctionalInterface</span> <span class="comment">//Jdk1.8引入Lambda表达式变为函数式接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>栗子1:</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.thread;</span><br><span class="line"><span class="comment">//创建线程方法2：实现Runnable接口，重写run方法，执行线程时需要丢入Runnable接口实现类，调用strat方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestThread2</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//run方法线程体</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我在看代码&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//main方法线程，主线程</span></span><br><span class="line"></span><br><span class="line">        <span class="type">TestThread2</span> <span class="variable">testThread2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestThread2</span>();</span><br><span class="line"><span class="comment">//创建一个线程对象，通过线程对象来开启我们的线程,代理</span></span><br><span class="line">        <span class="comment">//Thread thread = new Thread(testThread2);</span></span><br><span class="line">        <span class="comment">//thread.start();</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用start（）开启线程</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(testThread2).start();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我在学习多线程&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>栗子2：lambda表达式，jdk1.8新特性</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.thread;</span><br><span class="line"><span class="comment">//创建线程方法2：实现Runnable接口，重写run方法，执行线程时需要丢入Runnable接口实现类，调用strat方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestThread3</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//main方法线程，主线程</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用start（）开启线程 ，lambda表达式</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;我在看代码&quot;</span> + i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我在学习多线程&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>栗子3：多线程下载图片</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xxy.thread.TestThreadDownload;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现多线程下载图片</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestRunableDownload</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TestRunableDownload</span><span class="params">(String url,String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.url = url;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//下载图片执行体</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">WebDownloader</span> <span class="variable">webDownloader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WebDownloader</span>();</span><br><span class="line">        webDownloader.downloader(url,name);</span><br><span class="line">        System.out.println(<span class="string">&quot;下载了文件名为：&quot;</span> + name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">TestThreadDownload</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestThreadDownload</span>(<span class="string">&quot;https://img-home.csdnimg.cn/images/20210624094420.png&quot;</span>,<span class="string">&quot;1.png&quot;</span>);</span><br><span class="line">        <span class="type">TestThreadDownload</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestThreadDownload</span>(<span class="string">&quot;https://img-bss.csdn.net/1623287748640.png&quot;</span>,<span class="string">&quot;2.png&quot;</span>);</span><br><span class="line">        <span class="type">TestThreadDownload</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestThreadDownload</span>(<span class="string">&quot;https://img-home.csdnimg.cn/images/20210426034059.png&quot;</span>,<span class="string">&quot;3.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(t1).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(t2).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(t3).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">WebDownloader</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">downloader</span><span class="params">(String url,String name)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            FileUtils.copyURLToFile(<span class="keyword">new</span> <span class="title class_">URL</span>(url),<span class="keyword">new</span> <span class="title class_">File</span>(name));</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(<span class="string">&quot;IO异常，downloader方法出现问题&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>栗子4:并发问题</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.thread;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//卖车票</span></span><br><span class="line"><span class="comment">//发现问题：并发，数据乱</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestThread4</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">tickNums</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (tickNums &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">200</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;--&gt;拿到了第&quot;</span> + (tickNums--) + <span class="string">&quot;票&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">TestThread4</span> <span class="variable">ticket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestThread4</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(ticket,<span class="string">&quot;小明&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(ticket,<span class="string">&quot;老师&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(ticket,<span class="string">&quot;小李&quot;</span>).start();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>栗子5：龟兔赛跑</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.thread;</span><br><span class="line"><span class="comment">//模拟龟兔赛跑</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestRace</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String winner;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">            <span class="comment">//模拟兔子休息</span></span><br><span class="line">            <span class="keyword">if</span> (Thread.currentThread().getName().equals(<span class="string">&quot;兔子&quot;</span>) &amp;&amp; i % <span class="number">20</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">10</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//判断比赛是否结束</span></span><br><span class="line">            <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> gameOver(i);</span><br><span class="line">            <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;--&gt;跑了&quot;</span> + i + <span class="string">&quot;步&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断是否完成比赛</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">gameOver</span><span class="params">(<span class="type">int</span> steps)</span> &#123;</span><br><span class="line">        <span class="comment">//判断是否有胜利者</span></span><br><span class="line">        <span class="keyword">if</span> (winner != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (steps &gt;= <span class="number">100</span>) &#123;</span><br><span class="line">                winner = Thread.currentThread().getName();</span><br><span class="line">                System.out.println(<span class="string">&quot;胜利者是&quot;</span> + winner);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">TestRace</span> <span class="variable">testRace</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestRace</span>();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(testRace,<span class="string">&quot;兔子&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(testRace,<span class="string">&quot;乌龟&quot;</span>).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>2.3 实现Callable接口</p>
<blockquote>
<p>可以有返回值，有call()方法，需要抛出异常</p>
</blockquote>
<ul>
<li>Callable接口源码</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class="line"><span class="comment">// (powered by Fernflower decompiler)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> java.util.concurrent;</span><br><span class="line"></span><br><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Callable</span>&lt;V&gt; &#123;</span><br><span class="line">    V <span class="title function_">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>栗子：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.thread;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//创建方式三：实现Callable接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestCallable</span> <span class="keyword">implements</span> <span class="title class_">Callable</span>&lt;Boolean&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TestCallable</span><span class="params">(String url,String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.url = url;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//下载图片执行体</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Boolean <span class="title function_">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">WebDownloader1</span> <span class="variable">webDownloader1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WebDownloader1</span>();</span><br><span class="line">        webDownloader1.downloader(url,name);</span><br><span class="line">        System.out.println(<span class="string">&quot;下载了文件名为：&quot;</span> + name);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ExecutionException, InterruptedException &#123;</span><br><span class="line">        <span class="type">TestCallable</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestCallable</span>(<span class="string">&quot;https://img-home.csdnimg.cn/images/20210624094420.png&quot;</span>,<span class="string">&quot;4.png&quot;</span>);</span><br><span class="line">        <span class="type">TestCallable</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestCallable</span>(<span class="string">&quot;https://img-bss.csdn.net/1623287748640.png&quot;</span>,<span class="string">&quot;5.png&quot;</span>);</span><br><span class="line">        <span class="type">TestCallable</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestCallable</span>(<span class="string">&quot;https://img-home.csdnimg.cn/images/20210426034059.png&quot;</span>,<span class="string">&quot;6.png&quot;</span>);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//创建执行服务</span></span><br><span class="line">        <span class="type">ExecutorService</span> <span class="variable">service</span> <span class="operator">=</span> Executors.newFixedThreadPool(<span class="number">3</span>);</span><br><span class="line">        <span class="comment">//提交执行</span></span><br><span class="line">        Future&lt;Boolean&gt; r1 = service.submit(t1);</span><br><span class="line">        Future&lt;Boolean&gt; r2 = service.submit(t2);</span><br><span class="line">        Future&lt;Boolean&gt; r3 = service.submit(t3);</span><br><span class="line">        <span class="comment">//获取结果</span></span><br><span class="line">        <span class="type">Boolean</span> <span class="variable">rs1</span> <span class="operator">=</span> r1.get();</span><br><span class="line">        <span class="type">Boolean</span> <span class="variable">rs2</span> <span class="operator">=</span> r2.get();</span><br><span class="line">        <span class="type">Boolean</span> <span class="variable">rs3</span> <span class="operator">=</span> r3.get();</span><br><span class="line">        <span class="comment">//关闭服务</span></span><br><span class="line">        service.shutdownNow();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">WebDownloader1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">downloader</span><span class="params">(String url, String name)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            FileUtils.copyURLToFile(<span class="keyword">new</span> <span class="title class_">URL</span>(url), <span class="keyword">new</span> <span class="title class_">File</span>(name));</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(<span class="string">&quot;IO异常，downloader方法出现问题&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="3-多线程操作方法"><a href="#3-多线程操作方法" class="headerlink" title="3. 多线程操作方法"></a>3. 多线程操作方法</h2><p>3.1 多线程运行状态</p>
<blockquote>
<p>注意：线程开启不一定立即执行，有可能为就绪状态，由cpu调度执行</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[new创建] --&gt;|start方法| B(线程锁)</span><br><span class="line">	B --&gt; C(就绪状态)</span><br><span class="line">	C --&gt;|CPU调度| D(运行状态)</span><br><span class="line">	D --&gt;|礼让yield| D</span><br><span class="line">	D --&gt;|等待wait| I(等待状态)</span><br><span class="line">	I --&gt;|唤醒notify| C</span><br><span class="line">	I --&gt;|销毁stop0| H[终止]</span><br><span class="line">	D --&gt;|暂停方法suspend0| F(挂起状态)</span><br><span class="line">	F --&gt;|销毁stop0| H[终止]</span><br><span class="line">	F --&gt;|恢复执行resume0| C</span><br><span class="line">	D --&gt;|产生阻塞事件,sleep| E(阻塞状态)</span><br><span class="line">	E --&gt;|解除阻塞join| C</span><br><span class="line">	E --&gt;|销毁stop0| H[终止]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>栗子</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.thread;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestThreadState</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(()-&gt;&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;////&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//观察状态</span></span><br><span class="line">        Thread.<span class="type">State</span> <span class="variable">state</span> <span class="operator">=</span> thread.getState();</span><br><span class="line">        System.out.println(state);<span class="comment">//NEW</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//观察启动后</span></span><br><span class="line">        thread.start();</span><br><span class="line">        state = thread.getState();</span><br><span class="line">        System.out.println(state);<span class="comment">//RUN</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (state != Thread.State.TERMINATED)&#123;<span class="comment">//只要线程不终止一直输出</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            state = thread.getState();</span><br><span class="line">            System.out.println(state);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>3.2 操作方法</p>
<center>线程的命名和取得</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public Thread(Runnable var1, String var2)</td>
<td>构造</td>
<td>实例化线程对象，接收Runnable接口子类对象，同时设置线程名字</td>
</tr>
<tr>
<td>public final synchronized void setName(String var1)</td>
<td>普通</td>
<td>设置线程名字</td>
</tr>
<tr>
<td>public final String getName()</td>
<td>普通</td>
<td>取得线程名字</td>
</tr>
<tr>
<td>public static native Thread currentThread()</td>
<td>普通</td>
<td>获取当前线程对象</td>
</tr>
</tbody></table>
<h2 id="4-线程休眠（sleep-）"><a href="#4-线程休眠（sleep-）" class="headerlink" title="4. 线程休眠（sleep()）"></a>4. 线程休眠（sleep()）</h2><blockquote>
<p>每一个对象都有一个锁，sleep不会释放锁</p>
</blockquote>
<center>线程休眠sleep方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public static native void sleep(long var0) throws InterruptedException</td>
<td>普通</td>
<td>设置线程休眠的毫秒数，时间一到自动唤醒</td>
</tr>
<tr>
<td>public static void sleep(long var0, int var2) throws InterruptedException</td>
<td>普通</td>
<td>设置线程休眠的毫秒数与纳秒数，时间一到自动唤醒</td>
</tr>
</tbody></table>
<h2 id="5-线程中断（interrupt-）"><a href="#5-线程中断（interrupt-）" class="headerlink" title="5. 线程中断（interrupt()）"></a>5. 线程中断（interrupt()）</h2><blockquote>
<p>一般不会使用此方法中断线程</p>
</blockquote>
<center>线程中断的操作方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public boolean isInterrupted()</td>
<td>普通</td>
<td>判断线程是否被中断</td>
</tr>
<tr>
<td>public void interrupt()</td>
<td>普通</td>
<td>中断线程执行，别用这个方式</td>
</tr>
<tr>
<td>public final native boolean isAlive()</td>
<td>普通</td>
<td>测试线程是否处于活动状态</td>
</tr>
</tbody></table>
<h2 id="6-线程强制执行-join"><a href="#6-线程强制执行-join" class="headerlink" title="6. 线程强制执行(join())"></a>6. 线程强制执行(join())</h2><center>线程强制执行的操作方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public final void join() throws InterruptedException</td>
<td>普通</td>
<td>可以强制执行，等它执行后其他线程再执行</td>
</tr>
</tbody></table>
<ul>
<li>栗子</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.thread;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//测试join，想象为插队</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestThreadJoin</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;线程VIP来了&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="type">TestThreadJoin</span> <span class="variable">testThreadJoin</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestThreadJoin</span>();</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(testThreadJoin);</span><br><span class="line">        thread.start();</span><br><span class="line">        <span class="comment">//主线程</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">5</span>)&#123;</span><br><span class="line">                thread.join();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;main&quot;</span>  + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="7-线程礼让-yield"><a href="#7-线程礼让-yield" class="headerlink" title="7. 线程礼让(yield())"></a>7. 线程礼让(yield())</h2><blockquote>
<p>让cpu重新调度，不一定礼让成功</p>
</blockquote>
<center>线程礼让的方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public static native void yield()</td>
<td>普通</td>
<td>线程礼让</td>
</tr>
</tbody></table>
<ul>
<li>栗子</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.thread;</span><br><span class="line"><span class="comment">//测试线程礼让</span></span><br><span class="line"><span class="comment">//礼让不一定成功，看cpu重新调度心情，</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestThreadYied</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">MyYied</span> <span class="variable">myYied</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyYied</span>();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(myYied,<span class="string">&quot;a&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(myYied,<span class="string">&quot;b&quot;</span>).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyYied</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;线程开始执行&quot;</span>);</span><br><span class="line">        Thread.yield();<span class="comment">//礼让</span></span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;线程停止执行&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="8-线程优先级（setPriority-）"><a href="#8-线程优先级（setPriority-）" class="headerlink" title="8. 线程优先级（setPriority()）"></a>8. 线程优先级（setPriority()）</h2><blockquote>
<p>优先级低意味着获得CPU调度的概率低，并不是不会调用，有可能优先级低在优先级高的前面调用</p>
</blockquote>
<center>线程优先级的方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public static final int MIN_PRIORITY &#x3D; 1</td>
<td>常量</td>
<td>最高优先级，数值为10</td>
</tr>
<tr>
<td>public static final int NORM_PRIORITY &#x3D; 5</td>
<td>常量</td>
<td>中等优先级，数值为5</td>
</tr>
<tr>
<td>public static final int MAX_PRIORITY &#x3D; 10</td>
<td>常量</td>
<td>最低优先级，数值为1</td>
</tr>
<tr>
<td>public final void setPriority(int var1)</td>
<td>普通</td>
<td>设置线程优先级</td>
</tr>
<tr>
<td>public final int getPriority()</td>
<td>普通</td>
<td>取得线程优先级</td>
</tr>
</tbody></table>
<ul>
<li>栗子</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.thread;</span><br><span class="line"><span class="comment">//测试线程优先级,优先级高的不是一定先执行</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestPriority</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;--&gt;&quot;</span> + Thread.currentThread().getPriority());</span><br><span class="line">        <span class="type">MyPriority</span> <span class="variable">myPriority</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyPriority</span>();</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(myPriority);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(myPriority);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(myPriority);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(myPriority);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t5</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(myPriority);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t6</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(myPriority);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置优先级，在启动</span></span><br><span class="line">        t1.start();</span><br><span class="line"></span><br><span class="line">        t2.setPriority(<span class="number">1</span>);</span><br><span class="line">        t2.start();</span><br><span class="line"></span><br><span class="line">        t3.setPriority(<span class="number">4</span>);</span><br><span class="line">        t3.start();</span><br><span class="line"></span><br><span class="line">        t4.setPriority(Thread.MAX_PRIORITY);<span class="comment">//10</span></span><br><span class="line">        t4.start();</span><br><span class="line"><span class="comment">//报错</span></span><br><span class="line">       <span class="comment">/* t5.setPriority(-1);</span></span><br><span class="line"><span class="comment">        t5.start();*/</span></span><br><span class="line"></span><br><span class="line">        t6.setPriority(<span class="number">8</span>);</span><br><span class="line">        t6.start();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyPriority</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;--&gt;&quot;</span> + Thread.currentThread().getPriority());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="9-同步与死锁-synchronized、lock"><a href="#9-同步与死锁-synchronized、lock" class="headerlink" title="9. 同步与死锁(synchronized、lock)"></a>9. 同步与死锁(synchronized、lock)</h2><p>9.1 同步</p>
<blockquote>
<p>多个线程操作同一个资源，队列+锁来实现</p>
</blockquote>
<blockquote>
<p>每个线程在自己的工作内存交互，内存控制不当会造成数据不一致</p>
</blockquote>
<p>9.2 同步不安全栗子</p>
<p>9.3 synchronized锁（本质还是队列+隐式锁）</p>
<blockquote>
<p>出了作用域自动释放</p>
</blockquote>
<ul>
<li><p>锁方法</p>
</li>
<li><p>栗子1：</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.syc;</span><br><span class="line"><span class="comment">//不安全买票</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UnsafeBuyTicket</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">BuyTicket</span> <span class="variable">buyTicket</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BuyTicket</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(buyTicket,<span class="string">&quot;我&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(buyTicket,<span class="string">&quot;你&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(buyTicket,<span class="string">&quot;他&quot;</span>).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BuyTicket</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line"><span class="comment">//票</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">tickeNums</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//买票</span></span><br><span class="line">        <span class="keyword">while</span> (flag) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            buy();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">buy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//判断是否有票</span></span><br><span class="line">        <span class="keyword">if</span> (tickeNums &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//模拟延迟</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">100</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//买票</span></span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;--&gt; 拿到&quot;</span> + (tickeNums--));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>锁代码块</li>
<li>栗子1：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.syc;</span><br><span class="line"><span class="comment">//不安全的取钱</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UnsafeBank</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Account</span> <span class="variable">account</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Account</span>(<span class="number">100</span>,<span class="string">&quot;结婚基金&quot;</span>);</span><br><span class="line">        <span class="type">Drawing</span> <span class="variable">you</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Drawing</span>(account,<span class="number">50</span>,<span class="string">&quot;你&quot;</span>);</span><br><span class="line">        <span class="type">Drawing</span> <span class="variable">yourWife</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Drawing</span>(account,<span class="number">100</span>,<span class="string">&quot;你的妻子&quot;</span>);</span><br><span class="line">        you.start();</span><br><span class="line">        yourWife.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//账户</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Account</span> &#123;</span><br><span class="line">    String name; <span class="comment">//m名字</span></span><br><span class="line">    <span class="type">int</span> money;<span class="comment">//金额</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Account</span><span class="params">(<span class="type">int</span> money,String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.money = money;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//银行：模拟取款</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Drawing</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line">    Account account;</span><br><span class="line">    <span class="type">int</span> drawingMoney;</span><br><span class="line">    <span class="type">int</span> nowMoney;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Drawing</span><span class="params">( Account account,<span class="type">int</span> drawingMoney,String name)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name);</span><br><span class="line">        <span class="built_in">this</span>.account = account;</span><br><span class="line">        <span class="built_in">this</span>.drawingMoney = drawingMoney;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//取钱</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">//锁的对象就是增删改</span></span><br><span class="line">        <span class="keyword">synchronized</span> (account) &#123;</span><br><span class="line">            <span class="comment">//判断有没有钱</span></span><br><span class="line">            <span class="keyword">if</span> (account.money - drawingMoney &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(Thread.currentThread().getName() + <span class="string">&quot;余额不足&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//sleep可以放大问题的发生性</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//卡内余额</span></span><br><span class="line">            account.money  = account.money - drawingMoney;</span><br><span class="line">            <span class="comment">//你手里的钱</span></span><br><span class="line">            nowMoney = nowMoney + drawingMoney;</span><br><span class="line"></span><br><span class="line">            System.out.println(account.name + <span class="string">&quot;的余额为：&quot;</span> + account.money);</span><br><span class="line">            <span class="comment">//Thread.currentThread().getName() == this,getName()</span></span><br><span class="line">            System.out.println(<span class="built_in">this</span>.getName() + <span class="string">&quot;手里的钱&quot;</span> + nowMoney);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>栗子二：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.syc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">//线程不安全的集合</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UnsafeUnit</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//不安全的原因：有两个或者一个操作了同一个位置</span></span><br><span class="line">        List&lt;String&gt; list  = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">                <span class="keyword">synchronized</span> (list) &#123;</span><br><span class="line">                    list.add(Thread.currentThread().getName());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(list.size());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>栗子3;JUC安全类型集合</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.syc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CopyOnWriteArrayList;</span><br><span class="line"><span class="comment">//测试JUC安全类型的集合</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestJUC</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        CopyOnWriteArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">CopyOnWriteArrayList</span>&lt;String&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">                list.add(Thread.currentThread().getName());</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(list.size());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>缺陷：将一个大的方法声明为synchronized，将会极大影响性能</p>
</blockquote>
<p>9.4 死锁</p>
<blockquote>
<p>两个或多个线程各自等待对方的资源或释放资源，都处于等待的情况</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.syc;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DeadLock</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Makeup</span> <span class="variable">m1</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Makeup</span>(<span class="number">0</span>,<span class="string">&quot;li&quot;</span>);</span><br><span class="line">        <span class="type">Makeup</span> <span class="variable">m2</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Makeup</span>(<span class="number">1</span>,<span class="string">&quot;lhh&quot;</span>);</span><br><span class="line">        m1.start();</span><br><span class="line">        m2.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//口红</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Lipstick</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//镜子</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Mirror</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//化妆</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Makeup</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line">    <span class="comment">//保证需要的资源只有一份</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">Lipstick</span> <span class="variable">lipstick</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Lipstick</span>();</span><br><span class="line">    <span class="keyword">static</span> <span class="type">Mirror</span> <span class="variable">mirror</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Mirror</span>();</span><br><span class="line">    <span class="type">int</span> choice;<span class="comment">//选择</span></span><br><span class="line">    String girlName;<span class="comment">//女孩名字</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Makeup</span><span class="params">(<span class="type">int</span> choice,String girlName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.choice = choice;</span><br><span class="line">        <span class="built_in">this</span>.girlName = girlName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//化妆</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            makeup();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//化妆，互相等待对方的资源</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">makeup</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="keyword">if</span> (choice == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (lipstick) &#123;</span><br><span class="line">                System.out.println( <span class="built_in">this</span>.girlName + <span class="string">&quot;获取口红的锁&quot;</span>);</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                <span class="comment">//一秒后获取镜子</span></span><br><span class="line">                <span class="keyword">synchronized</span> (mirror) &#123;</span><br><span class="line">                    System.out.println(<span class="built_in">this</span>.girlName + <span class="string">&quot;获取镜子的锁&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="comment">/*    //一秒后获取镜子,解决方法：破坏请求与保持条件</span></span><br><span class="line"><span class="comment">            synchronized (mirror) &#123;</span></span><br><span class="line"><span class="comment">                System.out.println(this.girlName + &quot;获取镜子的锁&quot;);</span></span><br><span class="line"><span class="comment">            &#125;*/</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">synchronized</span> (mirror) &#123;</span><br><span class="line">                System.out.println(<span class="built_in">this</span>.girlName + <span class="string">&quot;获取镜子的锁&quot;</span>);</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                <span class="comment">//一秒后获取口红</span></span><br><span class="line">                <span class="keyword">synchronized</span> (lipstick) &#123;</span><br><span class="line">                    System.out.println( <span class="built_in">this</span>.girlName + <span class="string">&quot;获取口红的锁&quot;</span>);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">         <span class="comment">/*   //一秒后获取口红，解决方法：</span></span><br><span class="line"><span class="comment">            synchronized (lipstick) &#123;</span></span><br><span class="line"><span class="comment">                System.out.println( this.girlName + &quot;获取口红的锁&quot;);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            &#125;*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>显示定义同步锁(Lock)</li>
</ul>
<blockquote>
<p>java.util.concurrent.lock接口控制多个线程对共享资源进行访问</p>
<p>只有代码块锁，性能比隐式锁更好，需要自己释放锁</p>
</blockquote>
<ul>
<li>栗子</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.syc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestLock</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">TestLock2</span> <span class="variable">testLock2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestLock2</span>();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(testLock2).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(testLock2).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(testLock2).start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span>  <span class="title class_">TestLock2</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">tickNums</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="comment">//定义Lock锁</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">ReentrantLock</span> <span class="variable">lock</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReentrantLock</span>();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            lock.lock();<span class="comment">//加锁</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (tickNums &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                    System.out.println(tickNums--);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                <span class="comment">//解锁</span></span><br><span class="line">                lock.unlock();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="10-停止线程"><a href="#10-停止线程" class="headerlink" title="10. 停止线程"></a>10. 停止线程</h2><blockquote>
<p>stop()、suspend()、resume()在jdk1.2已经不再使用，wait(),notify()属于Object类，不属于Thread类，推荐线程自己停止下来，或者标志位</p>
</blockquote>
<center>Thread类停止线程操作方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>private native void stop0(Object var1)</td>
<td>普通</td>
<td>停止多线程</td>
</tr>
<tr>
<td>private native void suspend0()</td>
<td>普通</td>
<td>挂起线程、暂停执行</td>
</tr>
<tr>
<td>private native void resume0()</td>
<td>普通</td>
<td>恢复挂起的线程执行</td>
</tr>
</tbody></table>
<center>Object类停止线程</center>

<blockquote>
<p>注意：都是Object类停止或唤醒线程，只能在同步方法或者同步代码块中使用，否则抛出异常</p>
</blockquote>
<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public final void wait() throws InterruptedException</td>
<td>普通</td>
<td>线程的等待</td>
</tr>
<tr>
<td>public final native void wait(long var1) throws InterruptedException</td>
<td>普通</td>
<td>设置线程等待的毫秒数</td>
</tr>
<tr>
<td>public final void wait(long var1, int var3) throws InterruptedException</td>
<td>普通</td>
<td>设置线程等待的毫秒数和纳秒数</td>
</tr>
<tr>
<td>public final native void notify()</td>
<td>普通</td>
<td>唤醒第一个等待的线程</td>
</tr>
<tr>
<td>public final native void notifyAll()</td>
<td>普通</td>
<td>唤醒所有等待的线程</td>
</tr>
</tbody></table>
<ul>
<li>栗子：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.thread;</span><br><span class="line"><span class="comment">//测试stop</span></span><br><span class="line"><span class="comment">//建议线程正常停止 --&gt; 利用次数，不建议死循环</span></span><br><span class="line"><span class="comment">//建议使用标志位 --&gt; 设置一个标志位</span></span><br><span class="line"><span class="comment">//不要使用stop或destroy等过时或者jdk不建议使用的方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestThreadStop</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">    <span class="comment">//1.设置一个标志位</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (flag)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;运行线程&quot;</span> + i++);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//2.设置一个公开的方法停止线程，转换标志位</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.flag = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">TestThreadStop</span> <span class="variable">testThreadStop</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestThreadStop</span>();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(testThreadStop).start();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;main&quot;</span>  + i);</span><br><span class="line">            <span class="keyword">if</span>( i == <span class="number">9</span>)&#123;</span><br><span class="line">                testThreadStop.stop();</span><br><span class="line">                System.out.println(<span class="string">&quot;线程停止了&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h2 id="11-后台守护线程（daemon）"><a href="#11-后台守护线程（daemon）" class="headerlink" title="11. 后台守护线程（daemon）"></a>11. 后台守护线程（daemon）</h2><blockquote>
<p>守护用户进程,例如GC进程,记录日志</p>
</blockquote>
<center>守护进程的操作方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public final void setDaemon(boolean var1)</td>
<td>普通</td>
<td>设置为守护进程</td>
</tr>
<tr>
<td>public final boolean isDaemon()</td>
<td>普通</td>
<td>判断是否为守护进程</td>
</tr>
</tbody></table>
<ul>
<li>栗子</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.thread;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestDaemon</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">God</span> <span class="variable">god</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">God</span>();</span><br><span class="line">        <span class="type">You</span> <span class="variable">you</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">You</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(god);</span><br><span class="line">        thread.setDaemon(<span class="literal">true</span>);<span class="comment">//false默认是用户进程</span></span><br><span class="line">        thread.start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(you).start();<span class="comment">//用户进程启动</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//上帝</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">God</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//当用户进程结束后，守护进程会随后结束</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;自己保护自己吧&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//你</span></span><br><span class="line"><span class="keyword">class</span>  <span class="title class_">You</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">36</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;一生都开心的活着&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;good bye world！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="12-volatile关键字"><a href="#12-volatile关键字" class="headerlink" title="12. volatile关键字"></a>12. volatile关键字</h2><blockquote>
<p>volatile关键字不是描述同步的操作，而是可以更快捷的进行原始变量的访问，避免了副本创建和数据同步处理，事务的原子性用的比较多</p>
</blockquote>
<h2 id="13-静态代理"><a href="#13-静态代理" class="headerlink" title="13. 静态代理"></a>13. 静态代理</h2><ul>
<li>栗子1：</li>
<li>Marry接口</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Marry</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">HappyMarry</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>You类</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">You</span> <span class="keyword">implements</span> <span class="title class_">Marry</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">HappyMarry</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;你要结婚了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>代理对象</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WoddingCompany</span> <span class="keyword">implements</span> <span class="title class_">Marry</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Marry target;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">WoddingCompany</span><span class="params">(Marry target)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.target = target;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">HappyMarry</span><span class="params">()</span> &#123;</span><br><span class="line">        before();</span><br><span class="line">        <span class="built_in">this</span>.target.HappyMarry();</span><br><span class="line">        after();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">after</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;结婚之后，收尾款&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;结婚之前，布置现场&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>主方法</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.test;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StaticProxy</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">You</span> <span class="variable">you</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">You</span>();</span><br><span class="line">        <span class="type">WoddingCompany</span> <span class="variable">woddingCompany</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WoddingCompany</span>(you);</span><br><span class="line">        woddingCompany.HappyMarry();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="14-Lambda表达式（jdk1-8新特性之一）"><a href="#14-Lambda表达式（jdk1-8新特性之一）" class="headerlink" title="14. Lambda表达式（jdk1.8新特性之一）"></a>14. Lambda表达式（jdk1.8新特性之一）</h2><p>14.1 函数式接口</p>
<blockquote>
<p>定义：任何一个接口只包含唯一的抽象方法，可以有多个非抽象方法，叫函数式接口，lambda就是匿名内部类</p>
</blockquote>
<ul>
<li><p>栗子1：</p>
</li>
<li><p>函数式接口</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.lambda;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ILike</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">lambda</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>实现类</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.lambda;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Like</span> <span class="keyword">implements</span> <span class="title class_">ILike</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">lambda</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我喜欢 Lambda1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>lambda和主方法</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.lambda;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestLambda</span> &#123;</span><br><span class="line">    <span class="comment">//1. 静态内部类</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Like2</span> <span class="keyword">implements</span> <span class="title class_">ILike</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">lambda</span><span class="params">()</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;你猜我喜不喜欢？2&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">ILike</span> <span class="variable">iLike</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Like</span>();</span><br><span class="line">        iLike.lambda();</span><br><span class="line"></span><br><span class="line">        iLike  = <span class="keyword">new</span> <span class="title class_">Like2</span>();</span><br><span class="line">        iLike.lambda();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2. 局部内部类</span></span><br><span class="line">        <span class="keyword">class</span> <span class="title class_">Like3</span> <span class="keyword">implements</span> <span class="title class_">ILike</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">lambda</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;我不猜3&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        iLike = <span class="keyword">new</span> <span class="title class_">Like3</span>();</span><br><span class="line">        iLike.lambda();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3. 匿名内部类,没有类的名字，必须借助接口或者父类</span></span><br><span class="line">        iLike = <span class="keyword">new</span> <span class="title class_">ILike</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">lambda</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;我猜4&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        iLike.lambda();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4. lambda简化</span></span><br><span class="line">        iLike = (() -&gt; &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我喜欢吗5&quot;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        iLike.lambda();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="15-生产消费者问题"><a href="#15-生产消费者问题" class="headerlink" title="15. 生产消费者问题"></a>15. 生产消费者问题</h2><ul>
<li>管程法：利用缓冲区</li>
<li>信号灯法：标志位解决</li>
</ul>
<h2 id="16-线程池"><a href="#16-线程池" class="headerlink" title="16. 线程池"></a>16. 线程池</h2><blockquote>
<p>避免频繁销毁和创建</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ThreadPoolExecutor;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试线程池</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestPool</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1. 创建服务，创建线程池</span></span><br><span class="line">    <span class="type">ExecutorService</span> <span class="variable">service</span> <span class="operator">=</span> Executors.newFixedThreadPool(<span class="number">10</span>);</span><br><span class="line">    <span class="comment">//执行</span></span><br><span class="line">    service.execute(<span class="keyword">new</span> <span class="title class_">MyPool1</span>());</span><br><span class="line">    service.execute(<span class="keyword">new</span> <span class="title class_">MyPool1</span>());</span><br><span class="line">    <span class="comment">// 2. 关闭连接</span></span><br><span class="line">        service.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyPool1</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">            System.out.println(Thread.currentThread().getName());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="17-总结"><a href="#17-总结" class="headerlink" title="17. 总结"></a>17. 总结</h2><p>总结多线程的基础，还没有线程池的内容。如果有错误和建议，欢迎评论指出。</p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>类集框架（集合）</title>
    <url>/2022/05/09/%E7%B1%BB%E9%9B%86%E6%A1%86%E6%9E%B6%EF%BC%88%E9%9B%86%E5%90%88%EF%BC%89/</url>
    <content><![CDATA[<blockquote>
<center>苟有恒，何必三更眠五更起；最无益，莫过一日曝十日寒</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<h2 id="1-Collection集合接口"><a href="#1-Collection集合接口" class="headerlink" title="1. Collection集合接口"></a>1. Collection集合接口</h2><blockquote>
<p>一般不会直接使用此接口</p>
</blockquote>
<center>Collection集合接口的方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public boolean add(E e)</td>
<td>普通</td>
<td>向集合保存数据</td>
</tr>
<tr>
<td>public boolean addAll(Collection&lt;? extend E&gt;c)</td>
<td>普通</td>
<td>追加一组数据</td>
</tr>
<tr>
<td>public void clear()</td>
<td>普通</td>
<td>清空集合，让根节点为空，同时执行GC处理</td>
</tr>
<tr>
<td>public boolean contains(Object o)</td>
<td>普通</td>
<td>查询数据是否存在，需要equals()方法支持</td>
</tr>
<tr>
<td>public boolean remove(Object o)</td>
<td>普通</td>
<td>数据删除，需要equals()方法支持</td>
</tr>
<tr>
<td>public int size()</td>
<td>普通</td>
<td>获取数据长度</td>
</tr>
<tr>
<td>public Object[] toArray()</td>
<td>普通</td>
<td>将集合变为对象数组返回</td>
</tr>
<tr>
<td>public Iterator<E> iterator()</td>
<td>普通</td>
<td>将集合变为Iterator接口</td>
</tr>
<tr>
<td>public boolean isEmpty()</td>
<td>普通</td>
<td>判断集合是否为空</td>
</tr>
</tbody></table>
<h2 id="2-List"><a href="#2-List" class="headerlink" title="2. List"></a>2. List</h2><blockquote>
<p>允许保存重复元素数据,是Collection集合接口的子接口,插入顺序排序</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">List</span>&lt;E&gt; <span class="keyword">extends</span> <span class="title class_">Collection</span>&lt;E&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<center>List集合接口扩充的方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public E get(int index)</td>
<td>普通</td>
<td>取得指定索引位置上的数据</td>
</tr>
<tr>
<td>public E set(int index,E element)</td>
<td>普通</td>
<td>修改指定索引位置上的数据</td>
</tr>
<tr>
<td>public ListIterator<E> listIterator()</td>
<td>普通</td>
<td>为ListIterator接口实例化</td>
</tr>
<tr>
<td>public static <E> List<E> of （E…elements）</td>
<td>普通</td>
<td>将数据转为List集合</td>
</tr>
<tr>
<td>public default void forEach(Consumer&lt;? super T&gt; action)</td>
<td>普通</td>
<td>使用forEach结合消费型接口输出</td>
</tr>
</tbody></table>
<ul>
<li><p><input checked="" disabled="" type="checkbox"> 
<strong>ArrayList</strong> 接口实现类</p>
<blockquote>
<p>实现了List接口，继承了AbstractList抽象类， 数组， 随机访问， 没有同步， 线程不安全，查</p>
</blockquote>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayList</span>&lt;E&gt; <span class="keyword">extends</span> <span class="title class_">AbstractList</span>&lt;E&gt; <span class="keyword">implements</span> <span class="title class_">List</span>&lt;E&gt;,RandomAccess,Cloneable,Serializable &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p><input checked="" disabled="" type="checkbox"> 
<strong>LinkedList</strong> 接口实现类</p>
<blockquote>
<p>实现了List接口，继承了AbstractSequentialList抽象类,链表结构， 插入删除， 没有同步， 线程不安全</p>
</blockquote>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LinkedList</span>&lt;E&gt; <span class="keyword">extends</span> <span class="title class_">AbstractSequentialList</span>&lt;E&gt; <span class="keyword">implements</span> <span class="title class_">List</span>&lt;E&gt;,Deque&lt;E&gt;,Cloneable,Serializable &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p><input disabled="" type="checkbox"> 
<strong>Vector</strong> 接口实现类 </p>
<blockquote>
<p>实现了List接口，继承了AbstractList抽象类,数组，synchronized 同步， 线程安全,是早期集合,查询</p>
</blockquote>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Vector</span>&lt;E&gt; <span class="keyword">extends</span> <span class="title class_">AbstractList</span>&lt;E&gt; <span class="keyword">implements</span> <span class="title class_">List</span>&lt;E&gt;,RandomAccess,Cloneable,Serializable &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><input checked="" disabled="" type="checkbox"> Stack栈</li>
</ul>
<blockquote>
<p>栈是有序的数据结构，采用先进后出FILO存储模式，当栈中没有数据保存时，出栈操作会出现空栈异常（EmptyStackException）</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Stack</span>&lt;E&gt; <span class="keyword">extends</span> <span class="title class_">Vectors</span>&lt;E&gt;&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<center>Stack栈扩充的方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public boolean empty()</td>
<td>常量</td>
<td>测试栈是否为空</td>
</tr>
<tr>
<td>public E peek()</td>
<td>常量</td>
<td>查看栈顶，但不删除</td>
</tr>
<tr>
<td>public E pop()</td>
<td>常量</td>
<td>出栈，同时删除</td>
</tr>
<tr>
<td>public E push(E item)</td>
<td>普通</td>
<td>入栈</td>
</tr>
<tr>
<td>public int search(Object o)</td>
<td>普通</td>
<td>在栈中查找</td>
</tr>
</tbody></table>
<h2 id="3-Set"><a href="#3-Set" class="headerlink" title="3. Set"></a>3. Set</h2><blockquote>
<p>不允许保存重复数据,使用hash()算法函数生成一个int类型hashCode散列值，然后和所存储的hashCode进行比较，不能根据索引获取元素（不确定）</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Set</span>&lt;E&gt; <span class="keyword">extends</span> <span class="title class_">Collections</span>&lt;E&gt; &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p><input checked="" disabled="" type="checkbox"> 
<strong>HashSet</strong> </p>
<blockquote>
<p>使用hash表（数组）存储元素，元素无顺序，线程不安全</p>
</blockquote>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HashSet</span>&lt;E&gt; <span class="keyword">extends</span> <span class="title class_">AbstractSet</span>&lt;E&gt; <span class="keyword">implements</span> <span class="title class_">Set</span>&lt;E&gt;,Cloneable,Serializable &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p><input checked="" disabled="" type="checkbox"> 
<strong>LinkedHashSet</strong> </p>
<blockquote>
<p>链表维护元素的插入次序，哈希表维护元素唯一性</p>
</blockquote>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
<strong>TreeSet</strong></p>
<blockquote>
<p>底层实现为二叉树，元素排好序，不允许放入null值</p>
</blockquote>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TreeSet</span>&lt;E&gt; <span class="keyword">extends</span> <span class="title class_">AbstractSet</span>&lt;E&gt; <span class="keyword">implements</span> <span class="title class_">NavigableSet</span>&lt;E&gt;,Cloneable,Serializable &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-Map"><a href="#4-Map" class="headerlink" title="4. Map"></a>4. Map</h2><blockquote>
<p>接口 键值对的集合 （双列集合），<strong>不是继承Collection接口</strong></p>
</blockquote>
<center>Map集合接口的方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>Object put（Object key,Object value)</td>
<td>普通</td>
<td>将指定key-value添加到（或修改）当前map对象中</td>
</tr>
<tr>
<td>void putAll(Map m)</td>
<td>普通</td>
<td>将m中的所有key-value对存放到当前map中</td>
</tr>
<tr>
<td>Object remove（Object key）</td>
<td>普通</td>
<td>移除指定key的key-value对，并返回value</td>
</tr>
<tr>
<td>void clear()</td>
<td>普通</td>
<td>清空当前map中的所有数据</td>
</tr>
<tr>
<td>Object get（Object key）</td>
<td>普通</td>
<td>数据删除，需要equals()方法支持</td>
</tr>
<tr>
<td>boolean containsKey(Object key）</td>
<td>普通</td>
<td>获取数据长度</td>
</tr>
<tr>
<td>boolean containsValue(Object value)</td>
<td>普通</td>
<td>将集合变为对象数组返回</td>
</tr>
<tr>
<td>int size（）</td>
<td>普通</td>
<td>将集合变为Iterator接口</td>
</tr>
<tr>
<td>boolean isEmpty()</td>
<td>普通</td>
<td>判断集合是否为空</td>
</tr>
</tbody></table>
<ul>
<li><p><input checked="" disabled="" type="checkbox"> 
<strong>Hashtable</strong> 接口实现类</p>
<blockquote>
<p>同步， 线程安全</p>
</blockquote>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hashtable</span>&lt;K,V&gt; <span class="keyword">extends</span> <span class="title class_">Dictionary</span>&lt;K,V&gt; <span class="keyword">implements</span> <span class="title class_">Map</span>&lt;K,V&gt;,Cloneable,Serializable &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<ul>
<li><p><input checked="" disabled="" type="checkbox"> 
<strong>HashMap</strong> 接口实现类 </p>
<blockquote>
<p>没有同步， 线程不安全</p>
</blockquote>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HashMap</span>&lt;K,V&gt; <span class="keyword">extends</span> <span class="title class_">AbstractMap</span>&lt;K,V&gt; <span class="keyword">implements</span> <span class="title class_">Map</span>&lt;K,V&gt;,Cloneable,Serializable &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p><input checked="" disabled="" type="checkbox"> 
<strong>LinkedHashMap</strong> </p>
<blockquote>
<p>双向链表和哈希表实现</p>
</blockquote>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LinkedHashMap</span>&lt;K,V&gt; <span class="keyword">extends</span> <span class="title class_">HashMap</span>&lt;K,V&gt; <span class="keyword">implements</span> <span class="title class_">Map</span>&lt;K,V&gt; &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p><input checked="" disabled="" type="checkbox"> 
<strong>WeakHashMap</strong></p>
<blockquote>
<p>强引用，GC回收弱引用</p>
</blockquote>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
<strong>TreeMap</strong> </p>
<blockquote>
<p>红黑树对所有的key进行排序</p>
</blockquote>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TreeMap</span>&lt;K,V&gt; <span class="keyword">extends</span> <span class="title class_">AbstractMap</span>&lt;K,V&gt; <span class="keyword">implements</span> <span class="title class_">NavigableMap</span>&lt;K,V&gt;,Cloneable,Serializable &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><input checked="" disabled="" type="checkbox"> <strong>IdentifyHashMap</strong></li>
</ul>
<h2 id="5-Iterator"><a href="#5-Iterator" class="headerlink" title="5. Iterator"></a>5. Iterator</h2><blockquote>
<p>集合的输出四种方式：Iterator,ListIterator,Enumeration,foreach，Itertor是专门的迭代输出接口</p>
</blockquote>
<center>Iterator接口常用的方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public boolean hasNext()</td>
<td>普通</td>
<td>判断是否有下一个值</td>
</tr>
<tr>
<td>public E next()</td>
<td>普通</td>
<td>取出当前元素</td>
</tr>
<tr>
<td>public default void remove()</td>
<td>普通</td>
<td>移除当前元素</td>
</tr>
</tbody></table>
<h2 id="6-Enumeration"><a href="#6-Enumeration" class="headerlink" title="6. Enumeration"></a>6. Enumeration</h2><center>Enumeration接口常用的方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public boolean hasMoreElements()</td>
<td>普通</td>
<td>判断是否有下一个元素</td>
</tr>
<tr>
<td>public E nextElement()</td>
<td>普通</td>
<td>取出当前元素</td>
</tr>
</tbody></table>
<h2 id="7-ListIterator"><a href="#7-ListIterator" class="headerlink" title="7. ListIterator"></a>7. ListIterator</h2><center>ListIterator接口常用的方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public boolean hasPrevious()</td>
<td>普通</td>
<td>判断是否有前一个元素</td>
</tr>
<tr>
<td>public E previous()</td>
<td>普通</td>
<td>取出前一个元素</td>
</tr>
</tbody></table>
<h2 id="8-Queue"><a href="#8-Queue" class="headerlink" title="8. Queue"></a>8. Queue</h2><blockquote>
<p>队列是一种先进先出FIFO的线性数据结构</p>
</blockquote>
<center>Queue接口常用的方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public boolean add(E e)</td>
<td>普通</td>
<td>向队列尾部添加数据，数据添加成功返回true，如果队列已满，则抛出一个IIIegaIStateEepeplian异常</td>
</tr>
<tr>
<td>public boolean offer(E e)</td>
<td>普通</td>
<td>添加一个元素并返回true,如果队列已满，则返回false</td>
</tr>
<tr>
<td>public E remove()</td>
<td>普通</td>
<td>移除并返回队列头部的元素，如果队列为空，则抛出一个NoSuchElementException</td>
</tr>
<tr>
<td>public E peek()</td>
<td>普通</td>
<td>返回队列头部的元素，如果队列为空，则返回null</td>
</tr>
<tr>
<td>public E poll()</td>
<td>普通</td>
<td>移除并返问队列头部的元素，如果队列为空，则返回null</td>
</tr>
</tbody></table>
<h2 id="9-总结"><a href="#9-总结" class="headerlink" title="9.总结"></a>9.总结</h2><p>还有许多的类集框架没有写出来，欢迎大家总结。</p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>网络编程</title>
    <url>/2022/05/09/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<blockquote>
<center>终日思不如须臾所学也</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<h2 id="1-计算机网络"><a href="#1-计算机网络" class="headerlink" title="1. 计算机网络"></a>1. 计算机网络</h2><blockquote>
<p>计算机网络是指将<strong>地理位置</strong>不同的具有独立功能的多台计算机及其外部设备，通过通信线路连接起来，在<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/3997">网络操作系统</a>，<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E8%BD%AF%E4%BB%B6/6579078">网络管理软件</a>及<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/4438611">网络通信协议</a>的管理和协调下，目的是为了实现<a href="https://baike.baidu.com/item/%E8%B5%84%E6%BA%90%E5%85%B1%E4%BA%AB/233480">资源共享</a>和信息传递的计算机系统。</p>
</blockquote>
<p>1.1 需要准备</p>
<ul>
<li><p>通信双方地址和端口号：IP地址：端口号</p>
</li>
<li><p>规则：Java Web :网页编程 （B&#x2F;S）网络编程:TCP&#x2F;IP （C&#x2F;S）</p>
</li>
<li><p>协议：TCP&#x2F;IP OSI七层模型</p>
<p><img src="https://xxy8.github.io/images/wlbc1.png" alt="对应的协议"></p>
<p><img src="https://xxy8.github.io/images/wlbc2.png" alt="对应的设备"></p>
</li>
</ul>
<p>1.2 IP地址（InetAddress）</p>
<ul>
<li>唯一定位一台网络上计算机</li>
<li>127.0.0.1：本机 localhost</li>
<li>分类：IPV4 IPV6，公网，私网（局域网）</li>
<li>域名：记忆IP问题</li>
</ul>
<p>1.3 端口</p>
<ul>
<li><p>不同的进程有不同的端口号，用来区分软件；</p>
</li>
<li><p>被规定0-65535</p>
</li>
<li><p>TCP,UDP:65535*2 tcp:80 udp:80,但单个协议端口不能重复</p>
</li>
<li><p>分类：</p>
<blockquote>
<p>公有端口：0-1023</p>
</blockquote>
<ul>
<li>HTTP : 80</li>
<li>HTTPS:443</li>
<li>FTP:21</li>
<li>Telnet:23</li>
</ul>
<blockquote>
<p>程序注册端口：1024-49151，分配用户或者程序</p>
</blockquote>
<ul>
<li>Tomcat：8080</li>
<li>MySQL：3306</li>
<li>Redis：6379</li>
<li>Oracle:1521</li>
<li>动态，私有端口：49152-65535</li>
</ul>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看所有端口</span></span><br><span class="line">netstat -ano</span><br><span class="line"><span class="comment">#查看指定端口</span></span><br><span class="line">netstat -ano|findstr <span class="string">&quot;5040&quot;</span></span><br><span class="line"><span class="comment">#查找指定端口进程</span></span><br><span class="line">tasklist|findstr <span class="string">&quot;4444&quot;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>使用<kbd>Ctrl</kbd>+<kbd>Shfit</kbd>+<kbd>ESC</kbd>打开任务管理器</li>
</ul>
<p>1.4 通信协议</p>
<ul>
<li>网络通信协议：速率，传输码率，代码结构，传输控制…</li>
<li>TCP:用户传输协议：打电话，客户端、服务端，传输完成，释放连接，效率低；<ul>
<li>三次挥手，四次握手</li>
</ul>
</li>
<li>UDP：用户数据报协议：发短信，不连接，不稳定，导弹，DDOS（饱和攻击）</li>
</ul>
<h2 id="2-TCP"><a href="#2-TCP" class="headerlink" title="2. TCP"></a>2. TCP</h2><center>ServerSocket类常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public ServerSocket(int var1) throws IOException</td>
<td>构造</td>
<td>开辟一个指定的端口监听，一般使用5000以上</td>
</tr>
<tr>
<td>public Socket accept() throws IOException</td>
<td>普通</td>
<td>服务器端接收客户端请求，通过Socket返回</td>
</tr>
<tr>
<td>public void close() throws IOException</td>
<td>普通</td>
<td>关闭服务器端</td>
</tr>
</tbody></table>
<center>Socket类常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public Socket(String var1, int var2) throws UnknownHostException, IOException</td>
<td>构造</td>
<td>指定要连接的主机和端口</td>
</tr>
<tr>
<td>public OutputStream getOutputStream() throws IOException</td>
<td>普通</td>
<td>取得指定客户端的输出对象，使用的时候肯定使用PrintStream装饰操作</td>
</tr>
<tr>
<td>public InputStream getInputStream() throws IOException</td>
<td>普通</td>
<td>从指定客户端读取对象，使用Scanner操作</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>2.1 客户端</p>
<blockquote>
<p>自定义叫C（customize），浏览器叫B</p>
</blockquote>
<ul>
<li><p>连接服务器</p>
</li>
<li><p>发送消息</p>
</li>
<li><p>Echo程序模型栗子：</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">import</span> java.net.UnknownHostException;</span><br><span class="line"></span><br><span class="line"><span class="comment">//客户端</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TcpClientDemo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">os</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1. 知道服务器的地址IP</span></span><br><span class="line">            <span class="type">InetAddress</span> <span class="variable">serverIp</span> <span class="operator">=</span> InetAddress.getByName(<span class="string">&quot;127.0.0.1&quot;</span>);</span><br><span class="line">            <span class="comment">//2.端口号</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">port</span> <span class="operator">=</span> <span class="number">9999</span>;</span><br><span class="line">            <span class="comment">//3.创建一个socket连接</span></span><br><span class="line">             socket = <span class="keyword">new</span> <span class="title class_">Socket</span>(serverIp,port);</span><br><span class="line">            <span class="comment">//4. 发送消息IO</span></span><br><span class="line">             os = socket.getOutputStream();</span><br><span class="line">            os.write(<span class="string">&quot;hello&quot;</span>.getBytes());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (socket != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    socket.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (os != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    os.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>2.2 服务端</p>
<blockquote>
<p>自定义叫S，Tomocat叫S</p>
</blockquote>
<ul>
<li><p>建立服务端口（进程）</p>
</li>
<li><p>等待用户的连接（accept）</p>
</li>
<li><p>接受用户的信息</p>
</li>
<li><p>栗子</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="comment">//服务端</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TcpServerDemo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">ServerSocket</span> <span class="variable">serverSocket</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">baos</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1. 服务器地址</span></span><br><span class="line">             serverSocket = <span class="keyword">new</span> <span class="title class_">ServerSocket</span>(<span class="number">9999</span>);</span><br><span class="line">             <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">                 <span class="comment">//2. 与客户端进行连接</span></span><br><span class="line">                 socket = serverSocket.accept();</span><br><span class="line">                 <span class="comment">//3.读取客户端的消息</span></span><br><span class="line">                 is = socket.getInputStream();</span><br><span class="line">           <span class="comment">/* byte[] buffer = new byte[1024];</span></span><br><span class="line"><span class="comment">            int len;</span></span><br><span class="line"><span class="comment">            while ((len = is.read(buffer)) != -1) &#123;</span></span><br><span class="line"><span class="comment">                 msg = new String(buffer,0,len);</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            System.out.println(msg);*/</span></span><br><span class="line">                 <span class="comment">//管道流</span></span><br><span class="line">                 baos = <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">                 <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                 <span class="type">int</span> len;</span><br><span class="line">                 <span class="keyword">while</span> ((len = is.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                     baos.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">                 &#125;</span><br><span class="line">                 System.out.println(baos.toString());</span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (baos != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    baos.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (is != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    is.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">           <span class="keyword">if</span> (socket != <span class="literal">null</span>) &#123;</span><br><span class="line">               <span class="keyword">try</span> &#123;</span><br><span class="line">                   socket.close();</span><br><span class="line">               &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                   e.printStackTrace();</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">            <span class="keyword">if</span> (serverSocket != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    serverSocket.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="3-文件上传"><a href="#3-文件上传" class="headerlink" title="3. 文件上传"></a>3. 文件上传</h2><ul>
<li>栗子：</li>
<li>客户端：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.test1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">import</span> java.net.UnknownHostException;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TcpClientDemo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//1.创建一个Socket连接</span></span><br><span class="line">        <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Socket</span>(InetAddress.getByName(<span class="string">&quot;127.0.0.1&quot;</span>),<span class="number">9000</span>);</span><br><span class="line">        <span class="comment">//2. 创建一个输出流</span></span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">os</span>  <span class="operator">=</span> socket.getOutputStream();</span><br><span class="line">        <span class="comment">//3. 读取文件</span></span><br><span class="line">       <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span>  <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;hello.jpg&quot;</span>));</span><br><span class="line">       <span class="comment">//4. 写出文件</span></span><br><span class="line">        <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span> len;</span><br><span class="line">        <span class="keyword">while</span> ((len = fis.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">            os.write(buffer,<span class="number">0</span>,len);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//通知服务器，我已经传输完了</span></span><br><span class="line">        socket.shutdownOutput();</span><br><span class="line">        <span class="comment">//5.确定服务器接收完毕，才能断开连接</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span>  <span class="operator">=</span> socket.getInputStream();</span><br><span class="line">        <span class="comment">//6. String byte[]</span></span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">baos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">byte</span>[] buffer1 = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span> len1;</span><br><span class="line">        <span class="keyword">while</span> ((len1 = is.read(buffer1)) != -<span class="number">1</span>) &#123;</span><br><span class="line">            baos.write(buffer1,<span class="number">0</span>,len1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//5.关闭资源</span></span><br><span class="line">        baos.close();</span><br><span class="line">        is.close();</span><br><span class="line">        os.close();</span><br><span class="line">        fis.close();</span><br><span class="line">        socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>服务端：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.test1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TcpServerDemo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//1.创建服务</span></span><br><span class="line">        <span class="type">ServerSocket</span> <span class="variable">serverSocket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServerSocket</span>(<span class="number">9000</span>);</span><br><span class="line">        <span class="comment">//2. 监听客户端的连接,阻塞式监听，一直等待客户端连接</span></span><br><span class="line">        <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> serverSocket.accept();</span><br><span class="line">        <span class="comment">//3. 获取输入流</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span>  <span class="operator">=</span> socket.getInputStream();</span><br><span class="line">        <span class="comment">//4. 文件输出</span></span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;receive.jpg&quot;</span>));</span><br><span class="line">        <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span> len;</span><br><span class="line">        <span class="keyword">while</span> ((len = is.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">            fos.write(buffer,<span class="number">0</span>,len);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//5.通知客户端接收完毕了</span></span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">os</span>  <span class="operator">=</span> socket.getOutputStream();</span><br><span class="line">        os.write(<span class="string">&quot;我接受完毕了，可以断开了&quot;</span>.getBytes());</span><br><span class="line">        <span class="comment">//6. 关闭资源</span></span><br><span class="line">        os.close();</span><br><span class="line">        fos.close();</span><br><span class="line">        is.close();</span><br><span class="line">        socket.close();</span><br><span class="line">        serverSocket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="4-Tomcat"><a href="#4-Tomcat" class="headerlink" title="4. Tomcat"></a>4. Tomcat</h2><p>服务端</p>
<ul>
<li>自定义【S】</li>
<li>Tomcat【S】</li>
</ul>
<p>客户端</p>
<ul>
<li>自定义【C】</li>
<li>浏览器【B】</li>
</ul>
<h2 id="5-UDP"><a href="#5-UDP" class="headerlink" title="5.UDP"></a>5.UDP</h2><center>DatagramPacket常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public DatagramPacket(byte[] var1, int var2)</td>
<td>构造</td>
<td>实例化DatagramPacket对象时指定接收数据长度</td>
</tr>
<tr>
<td>public DatagramPacket(byte[] var1, int var2, int var3, InetAddress var4, int var5)</td>
<td>构造</td>
<td>实例化DatagramPacket对象时指定接收数据长度、数据的长度、目标地址及端口</td>
</tr>
<tr>
<td>public synchronized byte[] getData()</td>
<td>普通</td>
<td>返回接受的数据</td>
</tr>
<tr>
<td>public synchronized int getLength()</td>
<td>普通</td>
<td>返回要发送或接收数据的长度</td>
</tr>
</tbody></table>
<center>DatagramSocket的常用方法</center>

<table>
<thead>
<tr>
<th>方法</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>public DatagramSocket(int var1) throws SocketException</td>
<td>构造</td>
<td>实例化DatagramSocket对象，并指定监听的端口</td>
</tr>
<tr>
<td>ublic void send(DatagramPacket var1) throws IOException</td>
<td>普通</td>
<td>发送数据报</td>
</tr>
<tr>
<td>public synchronized void receive(DatagramPacket var1) throws IOException</td>
<td>普通</td>
<td>接收数据报</td>
</tr>
</tbody></table>
<ul>
<li>栗子</li>
<li>客户端</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.test3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">//不需要连接服务器</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UdpClientDemo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//1.建立一个Socket</span></span><br><span class="line">        <span class="type">DatagramSocket</span> <span class="variable">socket</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramSocket</span>();</span><br><span class="line">        <span class="comment">//2. 建个包</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> <span class="string">&quot;你好啊&quot;</span>;</span><br><span class="line">        <span class="type">InetAddress</span> <span class="variable">localhost</span>  <span class="operator">=</span> InetAddress.getByName(<span class="string">&quot;localhost&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">port</span> <span class="operator">=</span> <span class="number">9000</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//数据，数据的长度，发给谁</span></span><br><span class="line">        <span class="type">DatagramPacket</span> <span class="variable">packet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(msg.getBytes(),<span class="number">0</span>,msg.getBytes().length,localhost,port);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//发送包</span></span><br><span class="line">        socket.send(packet);</span><br><span class="line"></span><br><span class="line">        socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>服务端</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.test3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.SocketException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UdpServerDemo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//开放端口</span></span><br><span class="line">        <span class="type">DatagramSocket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramSocket</span>(<span class="number">9000</span>);</span><br><span class="line">        <span class="comment">//接收数据包</span></span><br><span class="line">        <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">DatagramPacket</span> <span class="variable">packet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(buffer,<span class="number">0</span>,buffer.length);</span><br><span class="line">        <span class="comment">//阻塞接收</span></span><br><span class="line">        socket.receive(packet);</span><br><span class="line">        System.out.println(packet.getAddress().getHostAddress());</span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">String</span>(packet.getData(),<span class="number">0</span>,packet.getLength()));</span><br><span class="line"></span><br><span class="line">        socket.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="6-循环发送消息"><a href="#6-循环发送消息" class="headerlink" title="6. 循环发送消息"></a>6. 循环发送消息</h2><ul>
<li>栗子</li>
<li>发送端</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.chat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.SocketException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UdpSenderDemo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">DatagramSocket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramSocket</span>(<span class="number">9000</span>);</span><br><span class="line">        <span class="comment">//准备数据，控制台输入输出</span></span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">reader</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> reader.readLine();</span><br><span class="line">            <span class="type">byte</span>[] datas = data.getBytes();</span><br><span class="line">            <span class="type">DatagramPacket</span> <span class="variable">packet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(datas, <span class="number">0</span>, datas.length, <span class="keyword">new</span> <span class="title class_">InetSocketAddress</span>(<span class="string">&quot;localhost&quot;</span>, <span class="number">9001</span>));</span><br><span class="line"></span><br><span class="line">            socket.send(packet);</span><br><span class="line">            <span class="keyword">if</span> (data.equals(<span class="string">&quot;bye&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        socket.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>接收端</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.chat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.SocketException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UdpReceiveDemo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">DatagramSocket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramSocket</span>(<span class="number">9001</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="comment">//准备接受包裹</span></span><br><span class="line">            <span class="type">byte</span>[] container = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="type">DatagramPacket</span> <span class="variable">packet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(container, <span class="number">0</span>, container.length);</span><br><span class="line">            <span class="comment">//阻塞式接收包裹</span></span><br><span class="line">            socket.receive(packet);</span><br><span class="line">            <span class="comment">//断开连接--byebye</span></span><br><span class="line">            <span class="type">byte</span>[] data = packet.getData();</span><br><span class="line">            <span class="type">String</span> <span class="variable">receiveData</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(data, <span class="number">0</span>, data.length);</span><br><span class="line">            System.out.println(receiveData);</span><br><span class="line">            <span class="keyword">if</span> (receiveData.trim().equals(<span class="string">&quot;bye&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="7-在线聊天"><a href="#7-在线聊天" class="headerlink" title="7. 在线聊天"></a>7. 在线聊天</h2><ul>
<li><p>栗子</p>
</li>
<li><p>发送端</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.chat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.SocketException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TalkSend</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">    <span class="type">DatagramSocket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> fromPort;</span><br><span class="line">    <span class="keyword">private</span> String toIP;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> toPort;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TalkSend</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TalkSend</span><span class="params">(<span class="type">int</span> fromPort, String toIP, <span class="type">int</span> toPort)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.fromPort = fromPort;</span><br><span class="line">        <span class="built_in">this</span>.toIP = toIP;</span><br><span class="line">        <span class="built_in">this</span>.toPort = toPort;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            socket = <span class="keyword">new</span> <span class="title class_">DatagramSocket</span>(fromPort);</span><br><span class="line">            reader = <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> reader.readLine();</span><br><span class="line">                <span class="type">byte</span>[] datas = data.getBytes();</span><br><span class="line">                <span class="type">DatagramPacket</span> <span class="variable">packet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(datas, <span class="number">0</span>, datas.length, <span class="keyword">new</span> <span class="title class_">InetSocketAddress</span>(<span class="string">&quot;localhost&quot;</span>, <span class="number">9001</span>));</span><br><span class="line"></span><br><span class="line">                socket.send(packet);</span><br><span class="line">                <span class="keyword">if</span> (data.equals(<span class="string">&quot;bye&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>接收端</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.chat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.SocketException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TalkReceive</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">    <span class="type">DatagramSocket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> port;</span><br><span class="line">    <span class="keyword">private</span> String msgFrom;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TalkReceive</span><span class="params">(<span class="type">int</span> port,String msgFrom)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.port = port;</span><br><span class="line">        <span class="built_in">this</span>.msgFrom = msgFrom;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            socket = <span class="keyword">new</span> <span class="title class_">DatagramSocket</span>(port);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SocketException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//准备接受包裹</span></span><br><span class="line">                <span class="type">byte</span>[] container = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="type">DatagramPacket</span> <span class="variable">packet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(container, <span class="number">0</span>, container.length);</span><br><span class="line">                <span class="comment">//阻塞式接收包裹</span></span><br><span class="line">                socket.receive(packet);</span><br><span class="line">                <span class="comment">//断开连接--byebye</span></span><br><span class="line">                <span class="type">byte</span>[] data = packet.getData();</span><br><span class="line">                <span class="type">String</span> <span class="variable">receiveData</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(data, <span class="number">0</span>, data.length);</span><br><span class="line">                System.out.println(msgFrom + <span class="string">&quot;:&quot;</span> + receiveData);</span><br><span class="line">                <span class="keyword">if</span> (receiveData.trim().equals(<span class="string">&quot;bye&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>老师线程1</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.chat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TalkTeacher</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">TalkSend</span>(<span class="number">9003</span>,<span class="string">&quot;localhost&quot;</span>,<span class="number">9002</span>)).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">TalkReceive</span>(<span class="number">9001</span>,<span class="string">&quot;学生&quot;</span>)).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>学生线程</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.chat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TalkStudent</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">TalkSend</span>(<span class="number">9000</span>,<span class="string">&quot;localhost&quot;</span>,<span class="number">9001</span>)).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">TalkReceive</span>(<span class="number">9002</span>,<span class="string">&quot;老师&quot;</span>)).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="8-URL（统一资源定位符）"><a href="#8-URL（统一资源定位符）" class="headerlink" title="8. URL（统一资源定位符）"></a>8. URL（统一资源定位符）</h2><blockquote>
<p>协议：（DNS域名解析）ip地址：端口&#x2F;项目名&#x2F;资源</p>
</blockquote>
<ul>
<li>下载</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.test4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UrlDown</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//1.下载地址</span></span><br><span class="line">        <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="comment">//2.连接到这个资源 HTTP</span></span><br><span class="line">        <span class="type">HttpURLConnection</span> <span class="variable">urlConnection</span> <span class="operator">=</span> (HttpURLConnection) url.openConnection();</span><br><span class="line"></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> urlConnection.getInputStream();</span><br><span class="line">        <span class="comment">//资源名字</span></span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span> len;</span><br><span class="line">        <span class="keyword">while</span> ((len = inputStream.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">            fos.write(buffer,<span class="number">0</span>,len);<span class="comment">//写出这个数据</span></span><br><span class="line">        &#125;</span><br><span class="line">        fos.close();</span><br><span class="line">        inputStream.close();</span><br><span class="line">        urlConnection.disconnect();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="9-总结"><a href="#9-总结" class="headerlink" title="9. 总结"></a>9. 总结</h2><p>网络编程和IO流一般都在一起，重点是熟悉，如果还有其他的内容欢迎大家补充。</p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>工作面试问题</title>
    <url>/2022/05/09/%E5%B7%A5%E4%BD%9C%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<blockquote>
<center>其观于人,不知其非笑之为非笑也</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<h2 id="1-第一次面试"><a href="#1-第一次面试" class="headerlink" title="1. 第一次面试"></a>1. 第一次面试</h2><ol>
<li>自我介绍</li>
</ol>
<ul>
<li>社招</li>
</ul>
<blockquote>
<p>面试官，您好，我叫xxy，现在有了一年半的工作经验，首先，我会java基础，javaWeb，MySQL，SQL Server和SSM框架，然后自学了vue和springBoot框架，离开上一家公司是因为我想在技术上得到更多的锻炼，接着参与过一个业绩评比管理系统的开发，这个系统主要用了MySQL+SSM+BootStrap技术，我在其中主要是负责一些功能的后端开发，我还比较喜欢通过博客来整理自己所学过的知识。我一直都想加入贵公司，觉得贵公司的文化和技术氛围非常优秀，期待能与您共事。</p>
</blockquote>
<ul>
<li>校招</li>
</ul>
<blockquote>
<p>面试官，您好，我叫xxy，现在是大四的一名学生，首先，我在校期间，学习了java基础，javaWeb，MySQL，SQL Server和SSM框架，然后自学了vue和springBoot框架，接着参与过一个业绩评比管理系统的开发，这个系统主要用了MySQL+SSM+BootStrap技术，我在其中主要是负责一些功能的后端开发，我还比较喜欢通过博客来整理自己所学过的知识。我一直都想加入贵公司，觉得贵公司的文化和技术氛围非常优秀，期待能与您共事。</p>
</blockquote>
<ol start="2">
<li>map.containsKey、map.containsValue和 list.contains的区别</li>
</ol>
<blockquote>
<p>List集合的contains()方法用于判断集合中包不包含某个元素,返回值是boolean。 Map集合的containsKey()和containsValue()方法和上面的相同。</p>
</blockquote>
<ol start="3">
<li>对技术有什么要求</li>
</ol>
<blockquote>
<p>学习一些前延的技术</p>
</blockquote>
<ol start="3">
<li>平时学习去哪里</li>
</ol>
<blockquote>
<p>图书馆，以及跑步</p>
</blockquote>
<ol start="4">
<li>static静态变量</li>
</ol>
<blockquote>
<p>和类一起加载的全局变量</p>
</blockquote>
<ol start="5">
<li><p>Java的特新</p>
</li>
<li><p>怎么输出一个Map集合</p>
</li>
</ol>
<blockquote>
<p>用迭代器</p>
</blockquote>
]]></content>
      <tags>
        <tag>工作</tag>
      </tags>
  </entry>
  <entry>
    <title>乐理基础</title>
    <url>/2022/05/09/%E4%B9%90%E7%90%86%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<blockquote>
<center>高山流水</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<h2 id="1-简谱"><a href="#1-简谱" class="headerlink" title="1. 简谱"></a>1. 简谱</h2><table>
<thead>
<tr>
<th>简谱</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
</tr>
</thead>
<tbody><tr>
<td>唱名</td>
<td>do</td>
<td>re</td>
<td>mi</td>
<td>fa</td>
<td>so</td>
<td>la</td>
<td>si</td>
</tr>
<tr>
<td>音名</td>
<td>C</td>
<td>D</td>
<td>E</td>
<td>F</td>
<td>G</td>
<td>A</td>
<td>B</td>
</tr>
</tbody></table>
<blockquote>
<p>音名永远不会变，唱名可能会改变，好比名字和读音</p>
</blockquote>
<ul>
<li><p>记录音的高低：用数字上面或者下面加点 ，上表高音或者倍高音，没有表示中音</p>
</li>
<li><p>记录音的长短：一个圆，四等分</p>
<table>
<thead>
<tr>
<th>音符</th>
<th>全音符</th>
<th>二分音符</th>
<th>四分音符</th>
<th>八分音符</th>
<th>十六音符</th>
<th>三十二音符</th>
</tr>
</thead>
<tbody><tr>
<td>符号</td>
<td>X - - -</td>
<td>X -</td>
<td>X</td>
<td><u>X</u></td>
<td>X&#x3D;</td>
<td><u>X&#x3D;</u></td>
</tr>
<tr>
<td>拍</td>
<td>4</td>
<td>2</td>
<td>1</td>
<td>1&#x2F;2</td>
<td>1&#x2F;4</td>
<td>1&#x2F;8</td>
</tr>
<tr>
<td>圆</td>
<td>4&#x2F;4</td>
<td>1&#x2F;2</td>
<td>1&#x2F;4</td>
<td>1&#x2F;8</td>
<td>1&#x2F;16</td>
<td>1&#x2F;32</td>
</tr>
<tr>
<td><strong>休止符</strong></td>
<td>全休止符</td>
<td>二分休止符</td>
<td>四分休止符</td>
<td>八分休止符</td>
<td>十六分休止符</td>
<td>三十二分休止符</td>
</tr>
<tr>
<td>符号</td>
<td>0 0 0 0</td>
<td>0 0</td>
<td>0</td>
<td><u>0</u></td>
<td>0&#x3D;</td>
<td><u>0&#x3D;</u></td>
</tr>
<tr>
<td>附点音符</td>
<td>X - - - - - -</td>
<td>X - -</td>
<td>X .</td>
<td><u>X</u>.</td>
<td>X&#x3D; .</td>
<td><u>X&#x3D;</u> .</td>
</tr>
</tbody></table>
<blockquote>
<p>复附点音符，继续增加前面的附点时值的一半</p>
</blockquote>
</li>
<li><p>连音符号 </p>
</li>
<li><p>切分音 *</p>
</li>
<li><p>强弱拍，小节，小节线，终止线</p>
</li>
</ul>
<blockquote>
<p>小节线后永远是强拍，小节线前永远是弱拍</p>
</blockquote>
<ul>
<li><p>拍号 2&#x2F;4 3&#x2F;8</p>
</li>
<li><p>反复记号</p>
</li>
</ul>
<p> <img src="https://xxy8.github.io/images/music1.png" alt="反复记号"></p>
<ul>
<li>装饰音 倚音</li>
</ul>
<h2 id="2-音程（两个乐音之间的音高关系）"><a href="#2-音程（两个乐音之间的音高关系）" class="headerlink" title="2. 音程（两个乐音之间的音高关系）"></a>2. 音程（两个乐音之间的音高关系）</h2><ul>
<li><p>旋律音程（先后发音）</p>
</li>
<li><p>和声音程（同时发音）</p>
</li>
<li><p>度：是在乐音体系中衡量两个音之间距离的单位</p>
</li>
<li><p>度数：音程中两个音之间包含的音级的数目</p>
<blockquote>
<p>1-3 叫三度，2-4 包含2，3，4也叫三度</p>
</blockquote>
</li>
<li><p>单音程：八度以内的音程</p>
</li>
<li><p>复音程：八度以上的音程</p>
</li>
<li><p>音数：音程中两个音之间包含的全音和半音的数目</p>
</li>
<li><p>音程分类</p>
</li>
<li><p><img src="https://xxy8.github.io/images/music2.png" alt="在这里插入图片描述"><br><img src="https://xxy8.github.io/images/music3.png" alt="在这里插入图片描述"></p>
</li>
</ul>
<blockquote>
<p>2367没有纯</p>
<p>1458没大小</p>
<p>大对小，纯对纯，增对减</p>
<p>全全半全全全半</p>
</blockquote>
<h2 id="3-变化音程"><a href="#3-变化音程" class="headerlink" title="3. 变化音程"></a>3. 变化音程</h2><ul>
<li>升记号(#) ：升记号表示将基本音级升高半音，如#3 ，#D；</li>
<li>降记号(b)：降记号表示将基本音级降低半音，如b5,bE;</li>
<li>重升记号(x) ：重升记号表示将基本音级升高一个全音，如x4,xA;</li>
<li>重降记号(bb) ：重降记号表示将基本音级降低一个全音，如bb7，bbB；</li>
<li>还原记号（互去掉上下两横）:还原记号表示将已升高或降低的音还原，即恢复成基本音级</li>
<li>纯音扩大1&#x2F;2就是增音程</li>
<li><img src="https://xxy8.github.io/images/music4.png" alt="在这里插入图片描述"></li>
</ul>
<h2 id="4-三和弦-有三，七，九"><a href="#4-三和弦-有三，七，九" class="headerlink" title="4. 三和弦(有三，七，九)"></a>4. 三和弦(有三，七，九)</h2><ul>
<li>大三和弦：大三度 + 小三度 CM(1-3-5) C(1 3 5) F(4 6 i) G(5 7 2);</li>
<li>小三和弦：小三度 + 大三度AM(6-i-3) Dm(2 4 6) Em(3 5 7) Am(6 i 3)</li>
<li>增三和弦：大三度 + 大三度 Caug (1 3 #5)</li>
<li>减三和弦：小三度 + 小三度 Cdim (1 b3 b5)</li>
</ul>
<h2 id="5-七和弦"><a href="#5-七和弦" class="headerlink" title="5. 七和弦"></a>5. 七和弦</h2><ul>
<li>大大七和弦 CM7 Cmaj7(1 3 5 7) FM7  Fmaj7(4 6 i 3)</li>
<li>大小七和弦（属七和弦） C7(1 3 5 6 b7) G7(5 7 2 4)</li>
<li>小大七和弦 DmM7(2 4 6 #i) Am7(6 i 3 #5)</li>
<li>小小七和弦 Dm7（2 4 6 i)  Em7(3 5 7 i) Am7(6 i 3 5)</li>
<li>减小七和弦 Bdim7(7 2 4 6)</li>
<li>减减七和弦 Bm-5(7 2 4 b6)</li>
</ul>
<h2 id="6-九和弦"><a href="#6-九和弦" class="headerlink" title="6. 九和弦"></a>6. 九和弦</h2><ul>
<li>C9（层九和弦)</li>
<li>Cadd9(1 3 5 +2)</li>
<li>Csus2(1 2 5)</li>
<li>转位</li>
</ul>
<h2 id="7-调"><a href="#7-调" class="headerlink" title="7. 调"></a>7. 调</h2><ul>
<li><p>调式（看第六个和第七个）</p>
</li>
<li><p>大调式 </p>
<ul>
<li>自然大调 1 2 3 4 5 6 7 i</li>
<li>和声大调 1 2 3  4  5 b6 7 i</li>
<li>旋律大调 1 2 3 4 5 b6 b7 i</li>
</ul>
</li>
<li><p>小调式</p>
<ul>
<li>自然小调 6 7 i 2 3 4 5 6</li>
<li>和声小调6 7 i 2 3 4 #5 6</li>
<li>旋律小调6 7 i 2 3 #4 #5 6</li>
</ul>
</li>
</ul>
<h2 id="8-训练方式"><a href="#8-训练方式" class="headerlink" title="8. 训练方式"></a>8. 训练方式</h2><ul>
<li>听音模唱</li>
<li>音阶</li>
<li>撞音</li>
<li>音程</li>
<li>和弦构唱</li>
</ul>
<h2 id="9-歌曲转调和弦"><a href="#9-歌曲转调和弦" class="headerlink" title="9. 歌曲转调和弦"></a>9. 歌曲转调和弦</h2><p><img src="https://xxy8.github.io/images/music5.png" alt="在这里插入图片描述"></p>
<blockquote>
<p>往后推</p>
</blockquote>
<h2 id="10-简谱与五线谱互译"><a href="#10-简谱与五线谱互译" class="headerlink" title="10. 简谱与五线谱互译"></a>10. 简谱与五线谱互译</h2><ul>
<li>一个# G调</li>
<li>两个# D</li>
<li>三个# A</li>
<li>四个# E</li>
</ul>
<h2 id="11-绝对音高和固定音高《音色》和相对音高"><a href="#11-绝对音高和固定音高《音色》和相对音高" class="headerlink" title="11. 绝对音高和固定音高《音色》和相对音高"></a>11. 绝对音高和固定音高《音色》和相对音高</h2><h2 id="12-分火腿法"><a href="#12-分火腿法" class="headerlink" title="12. 分火腿法"></a>12. 分火腿法</h2><p>VVVV X - - -</p>
<h2 id="13-总结"><a href="#13-总结" class="headerlink" title="13. 总结"></a>13. 总结</h2><p>学习了最基础的乐理，对以后美音体玄文能够有较大的提高</p>
]]></content>
      <tags>
        <tag>音乐</tag>
        <tag>探索</tag>
      </tags>
  </entry>
  <entry>
    <title>物理学</title>
    <url>/2022/05/09/%E7%89%A9%E7%90%86%E5%AD%A6/</url>
    <content><![CDATA[<blockquote>
<center>黄粱一梦，斗转星移</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<blockquote>
<p>研究自然的科学实验（<strong>预防靶子定律</strong>）从原子到元素到细胞到宇宙,也就是微观+宏观+宇观</p>
</blockquote>
<h2 id="1-思想"><a href="#1-思想" class="headerlink" title="1. 思想"></a>1. 思想</h2><ul>
<li><p>主要是形而上学的思想，用片面、静止来看待问题，抓主要矛盾，忽略次要矛盾，一个小方面不等于次要矛盾</p>
<ul>
<li><p>归纳推理：（靶子定律）是不符合逻辑的推理，从一般到一般</p>
</li>
<li><p>演绎推理：一个大前提，保证正确，然后推理出其他逻辑</p>
</li>
<li><p>类比推理</p>
</li>
</ul>
</li>
</ul>
<h2 id="2-历史"><a href="#2-历史" class="headerlink" title="2. 历史"></a>2. 历史</h2><ul>
<li><p>经典机械观：运动|动力|矢量|曲线运动|微积分|动量|力不确定变为相互作用|温度|热|势能|动能|热能|机械能|…</p>
<blockquote>
<p>注意：摩擦力破坏机械能守恒，机械能不一定守恒，能量，动量，角动量，电荷在当前才是守恒</p>
</blockquote>
<ul>
<li>物理学家：…&gt;牛顿（三大定律）&gt;开普勒(三大定律)&gt;伽利略&gt;布朗&gt;焦耳&gt;…</li>
</ul>
</li>
<li><p>电磁量子观： 电|电势|电荷|磁|光|颜色|连续|波粒二象性|分子|原子|质子|电子|中子|离子|光子|夸克|量子|统计学|场|以太（传统的以太并不存在）|相对论|宇称|维度|超弦(还未被证实)|…</p>
<ul>
<li>物理学家：…&gt;奥斯特&gt;牛顿&gt;惠更斯&gt;  玻尔&gt;德布罗意&gt;薛定谔&gt;海森伯&gt;狄喇克&gt;玻恩 &gt;法拉第（Faraday）&gt;麦克斯韦（Maxwell）&gt;赫兹（Hertz）&gt;爱因斯坦&gt;…</li>
</ul>
</li>
</ul>
<h2 id="3-机械观（宏观已知论）"><a href="#3-机械观（宏观已知论）" class="headerlink" title="3. 机械观（宏观已知论）"></a>3. 机械观（<strong>宏观已知论</strong>）</h2><ul>
<li><p>运动与力（四大相互作用：强相互作用（微观）、弱相互作用（微观）、万有引力相互作用（宏观），电磁相互作用（宏观和微观））</p>
<table>
<thead>
<tr>
<th>基本作用力</th>
<th>对象</th>
<th>强度</th>
<th>范围</th>
<th>交换粒子</th>
</tr>
</thead>
<tbody><tr>
<td>引力相互作用</td>
<td>万物</td>
<td>10^(-40)</td>
<td>无穷</td>
<td>G（引力子)</td>
</tr>
<tr>
<td>电磁相互作用</td>
<td>带电粒子间</td>
<td>10^(-2)</td>
<td>无穷</td>
<td>r（光子）</td>
</tr>
<tr>
<td>强相互作用</td>
<td>强子，原子核</td>
<td>1</td>
<td>10^(-15)米，很短</td>
<td>g(胶子)</td>
</tr>
<tr>
<td>弱相互作用</td>
<td>轻子（电子）</td>
<td>10^(-5)</td>
<td>10^(-18)米</td>
<td>W^(+-),Z^0</td>
</tr>
</tbody></table>
</li>
</ul>
<blockquote>
<p>不用力而用相互作用是把宏观和微观相统一，相互作用需要惯性系</p>
</blockquote>
<ul>
<li>质心运动定理</li>
</ul>
<blockquote>
<p>由质点系动量定理表示各质点的位置</p>
</blockquote>
<ul>
<li><p>牛顿三大定律：1. 匀速或者静止，2. F&#x3D;ma，3. 作用力与反作用力</p>
</li>
<li><p>摩檫力：本质还是电磁相互作用，</p>
</li>
</ul>
<blockquote>
<p>F&#x3D;摩擦因子*mg *cos a</p>
</blockquote>
<ul>
<li><p>惯性系：一个不断做匀速直线运动的参考系，<strong>但目前没有找到</strong>，用误差近似，牛顿力学基于惯性系发展的</p>
</li>
<li><p>矢量：方向和大小</p>
</li>
<li><p>开普勒三大定律：1.沿着椭圆运动，太阳位于焦点   2. 相同时间，面积S1 &#x3D; 面积S2   3. T^2&#x2F;r^3</p>
</li>
<li><p>万有引力(没有发现万有斥力)</p>
</li>
</ul>
<blockquote>
<p>F &#x3D; -Gm1m2&#x2F;r^2</p>
</blockquote>
<ul>
<li>动量（微积分，定积分）</li>
</ul>
<blockquote>
<p>F &#x3D; ma &#x3D; mdv&#x2F;dt–&gt;F*dt &#x3D; d(mv)–&gt;P &#x3D; mv矢量</p>
</blockquote>
<ul>
<li>热力学</li>
</ul>
<blockquote>
<p>热传导：对流，热传导，热辐射，理想气体状态方程：</p>
<p><img src="https://xxy8.github.io/images/wl1.png"></p>
<p>热力学定律仅仅适用于地球</p>
</blockquote>
<ul>
<li>动能（由牛顿第二定律演变而来，不涉及时间和加速度）</li>
</ul>
<blockquote>
<p>功：力做的效果W &#x3D; F（L2-L1）*cos a </p>
<p>动能F &#x3D; ma &#x3D; mdv&#x2F;dt,W &#x3D; F（L2-L1）*cos a &#x3D;mdv（L2-L1）&#x2F;dt &#x3D; 1&#x2F;2mv^2(标量，动能)</p>
</blockquote>
<h2 id="4-电磁量子观"><a href="#4-电磁量子观" class="headerlink" title="4.电磁量子观"></a>4.电磁量子观</h2><ul>
<li>电磁光统一(麦克斯韦方程组)</li>
</ul>
<p><img src="https://xxy8.github.io/images/wl2.png"></p>
<ul>
<li><p>麦克斯韦方程组微分形式<br><img src="https://xxy8.github.io/images/wl3.png"></p>
</li>
<li><p>磁</p>
<ul>
<li><p>洛伦兹力</p>
<p><img src="https://xxy8.github.io/images/wl4.png"></p>
</li>
<li><p>磁介质：顺磁、逆磁、铁磁(Fe2O3)</p>
</li>
<li><p>电池（正极，负极，电解质溶液）</p>
<ul>
<li><p>一次性电池：</p>
</li>
<li><p>锌锰电池（干电池，防止放出H2，涂了Hg）Zn(负极)\ ZnCl2,NH4Cl  \ MnO2（正极）</p>
</li>
<li><p>碱式锌锰电池(5号电池) Zn \ KOH \ MnO2</p>
</li>
<li><p>锌银电池（纽扣式电池）Zn \ KOH \ Ag2O</p>
</li>
<li><p>二次电池（可充电电池，充电电池必须很慢）：</p>
</li>
<li><p>铅蓄电池(电动车电池)：Pb\ H2SO4 \PbO2</p>
</li>
<li><p>铬镍电池：Cd\KOH\NiOOH</p>
</li>
<li><p>氢镍电池（宇航员）:：吸氢材料</p>
</li>
<li><p>锂电池</p>
</li>
<li><p>燃料电池（氢氧电池）：H2\选择膜\O2</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>颜色</p>
<ul>
<li><p>世界上的东西是没有颜色的，可见光的反射</p>
</li>
<li><p>霓外紫内红 ，虹外红内紫</p>
</li>
<li><p>紫外线和辐射是衣服挡不住的，本质是电磁波短波，和光的波的长度不同而已</p>
</li>
</ul>
</li>
<li><p>波粒二象性</p>
<ul>
<li>波的干涉，两个波相互碰撞，会发生叠加和湮灭两种结果</li>
<li>波的衍射，有一个东西挡着，然后后面出现波的结论</li>
<li>猜想：电磁波能否改变波长，将不可见电磁变为可见光，是否存在超磁和次磁，和声音一样，还是波长不一样，就是电磁波；</li>
<li>元素周期表的能量是从低到高再到低，Fe是最高，所以可以聚变和裂变</li>
</ul>
</li>
<li><p>量子力学（统计概率云，普朗克常量）</p>
</li>
<li><p>薛定谔方程</p>
<p>一维薛定谔方程</p>
<p><img src="https://xxy8.github.io/images/wl5.png" alt="一维薛定谔方程"></p>
<p>三维薛定谔方程</p>
<p><img src="https://xxy8.github.io/images/wl6.png" alt="三维薛定谔方程"></p>
<p>定态薛定谔方程</p>
<p><img src="https://xxy8.github.io/images/wl7.png" alt="定态薛定谔方程"></p>
</li>
<li><p>约瑟夫森效应</p>
<blockquote>
<p>f &#x3D; （2eV）&#x2F;h</p>
</blockquote>
</li>
<li><p>海森堡测不准原理<br>△q△p≥ħ&#x2F;2（ħ&#x3D;h&#x2F;2π）<br><img src="https://xxy8.github.io/images/wl8.png"></p>
</li>
<li><p>量子力学做成的科技：激光、 超导、晶体管</p>
</li>
<li><p>狭义相对论（惯性系,距离和时间在不同的参照系是不同的）</p>
<ul>
<li>狭义相对论原理：真空光速不变原理\相对性原理</li>
<li>狭义相对论结论：<ul>
<li>同时具有相对性</li>
<li>时间延缓</li>
<li>长度收缩</li>
<li>相对论的速度叠加关系</li>
<li>质能关系公式：物质与能量相互等价：（E &#x3D; m c^2）</li>
</ul>
</li>
</ul>
</li>
<li><p>广义相对论（惯性系＋非惯性系）</p>
<blockquote>
<p>M引&#x2F;M惯＝m引&#x2F;m惯</p>
</blockquote>
</li>
<li><p>广义相对论原理</p>
<ul>
<li><p>广义协变原理</p>
<blockquote>
<p>自然规律对于任何参照系都应该具有相同的数学形式</p>
</blockquote>
</li>
<li><p>等效原理</p>
<blockquote>
<p>匀加速参照系可与均匀引力场中静止的参照系等效</p>
</blockquote>
</li>
</ul>
</li>
<li><p>广义相对论的主要结论</p>
<ul>
<li><p>引力大的地方时间过得缓慢</p>
</li>
<li><p>引力导致空间弯曲</p>
</li>
</ul>
</li>
<li><p>广义相对论的一些预言</p>
<ul>
<li><p>恒星光的引力偏转</p>
</li>
<li><p>雷达回波延迟</p>
</li>
<li><p>水星近日点的进动</p>
</li>
</ul>
</li>
<li><p>爱因斯坦场方程</p>
<p><img src="https://xxy8.github.io/images/wl9.png"></p>
<p>含宇宙常数项的场方程(广义相对论)</p>
<p><img src="https://xxy8.github.io/images/wl10.png"></p>
<blockquote>
<p>宇宙常数项的场方方程是以宇宙已经平衡了为基准</p>
</blockquote>
</li>
<li><p>超弦理论目标：</p>
<ul>
<li><p>协调相对论和量子论</p>
</li>
<li><p>实现四种基本相互作用的统一</p>
</li>
<li><p>统一描述微观与宇宙观</p>
</li>
</ul>
</li>
<li><p>未来发展方向：</p>
<ul>
<li><p>新能源</p>
</li>
<li><p>量子计算机</p>
</li>
<li><p>超弦理论（大一统）</p>
</li>
</ul>
</li>
</ul>
<h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5. 总结"></a>5. 总结</h2><p>这个世界没有自己想的那么简单，也没有非常复杂，自然规律（物理，不是物理学）在不断探索中。</p>
]]></content>
      <tags>
        <tag>物理</tag>
        <tag>探索</tag>
      </tags>
  </entry>
  <entry>
    <title>Git</title>
    <url>/2023/03/17/Git/</url>
    <content><![CDATA[<blockquote>
<center>行万里路，破万卷书</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<p><a href="https://git-scm.com/">Git官网</a></p>
<p><a href="https://registry.npmmirror.com/binary.html">ali下载</a></p>
<h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1.概述"></a>1.概述</h2><ol>
<li>定义</li>
</ol>
<blockquote>
<p>开源的分布式版本控制系统</p>
</blockquote>
<ol start="2">
<li>常见版本控制器</li>
</ol>
<ul>
<li><p>Git</p>
</li>
<li><p>SVN(SubVersion)</p>
</li>
<li><p>CVS（Concurrent Versions System）</p>
</li>
<li><p>VSS（Micorosoft Visual SourceSafe）</p>
</li>
<li><p>TFS（Team Foundation Server）</p>
</li>
<li><p>Visual Studio Online</p>
</li>
</ul>
<ol start="3">
<li>版本控制产品</li>
</ol>
<ul>
<li>Perforce</li>
<li>Rational ClearCase</li>
<li>RCS（GNU Revision Control System）</li>
<li>Serena Dimention</li>
<li>SVK</li>
<li>BitKeeper</li>
<li>Monotone</li>
<li>Bazaar</li>
<li>Mercurial</li>
<li>SourceGear Vault</li>
</ul>
<ol start="4">
<li>历史</li>
</ol>
<ul>
<li>Linux和Git之父李纳斯·托沃兹（Linus Benedic Torvalds）1969，芬兰</li>
<li>2002 年破解研究 BitKeeper</li>
<li>2005 年,收回了 Linux 内核社区免费使用 BitKeeper 的权力,开发出自己的版本系统,就是后来的Git</li>
</ul>
<h2 id="2-分类"><a href="#2-分类" class="headerlink" title="2.分类"></a>2.分类</h2><ol>
<li>本地版本控制</li>
</ol>
<blockquote>
<p>记录文件每次的更新，可以对每个版本做一个快照，或是记录补丁文件，适合个人用，如RCS。</p>
</blockquote>
<ol start="2">
<li>集中版本控制 SVN</li>
</ol>
<blockquote>
<p>所有的版本数据都保存在中央服务器上，协同开发者从服务器上同步更新或上传自己的修改,如SVN、CVS、VSS，不连网的话，用户就看不到历史版本，也无法切换版本验证问题</p>
</blockquote>
<ol start="3">
<li>分布式版本控制 Git</li>
</ol>
<blockquote>
<p>每个人都拥有全部的代码！安全隐患，工作的时候不需要联网了，因为版本都在自己电脑上</p>
</blockquote>
<h2 id="3-命令"><a href="#3-命令" class="headerlink" title="3.命令"></a>3.命令</h2><ol>
<li>目录操作</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文件夹【目录】操作</span></span><br><span class="line"><span class="comment"># 创建文件夹,新建一个目录,[-m]【权限】、[-p]【递归创建】</span></span><br><span class="line"><span class="built_in">mkdir</span> [-mp] [目录名]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除一个文件夹，删除目录 [-r]【递归】 、[-f]【强制】、[-i]【互动】</span></span><br><span class="line"><span class="built_in">rm</span> [-rif] [目录名]</span><br><span class="line"><span class="comment"># 删除一个空的目录 [-p] 【向上递归】</span></span><br><span class="line"><span class="built_in">rmdir</span> [-p] [目录名]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重命名一个目录  [-f]【强制】、[-i]【互动】、[-u]【较新升级】</span></span><br><span class="line"><span class="built_in">mv</span> [-fiu] [目录1] [目录2] </span><br><span class="line"><span class="comment"># 移动文件夹【剪切】</span></span><br><span class="line"><span class="built_in">mv</span> [目录1&lt;相对路径&gt;] [目录2&lt;绝对路径&gt;]</span><br><span class="line"><span class="comment"># 改变目录</span></span><br><span class="line"><span class="built_in">cd</span> [目录]</span><br><span class="line"><span class="comment"># 退回上一目录,直接cd是进入默认目录</span></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"><span class="comment"># 复制目录 [-a]【-pdr】、[-d]【若是link，则复制link】、[-f]【强制】、[-i]【互动】、[-l]【复制为硬连接】</span></span><br><span class="line"><span class="comment"># [-p]【连文件一起复制，备份】、[-r]【递归】、[-s]【复制为软连接，快捷方式】、[-u]【较新升级】</span></span><br><span class="line"><span class="built_in">cp</span> [-adfilprsu] [来源档(<span class="built_in">source</span>)] [目标档(destination)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索目录，例如 find . -name &quot;*.txt&quot;</span></span><br><span class="line">find [路径] [表达式] [名字]</span><br><span class="line"><span class="comment"># 显示当前目录所在位置,[-p]【真实路径，不是link】</span></span><br><span class="line"><span class="built_in">pwd</span> [-p] </span><br><span class="line"><span class="comment"># 查看当前目录的文件和目录，ll更详细 [-a]【查看所有包括隐藏】、[-l]【列表查询】</span></span><br><span class="line"><span class="built_in">ls</span> [-aAdfFhilnrRSt]</span><br><span class="line">ll</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>文件操作</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文件操作</span></span><br><span class="line"><span class="comment"># 新建一个文件[-a]【改变读取时间记录】、[-c]【目的档案不存在就不建立】、[-f]【不使用，为了兼容】、[-m]【改变修改时间记录】</span></span><br><span class="line"><span class="built_in">touch</span> [-acfm][-d&lt;日期时间&gt;][-r&lt;参考文件或目录&gt;] [-t&lt;日期时间&gt;][--<span class="built_in">help</span>][--version][文件]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除一个文件，[-r]【递归】 、[-f]【强制】、[-i]【互动】</span></span><br><span class="line"><span class="built_in">rm</span> [-fir] [文件名]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重命名【去掉目录】，或者移动一个文件</span></span><br><span class="line"><span class="built_in">mv</span> [文件名1] [目录&lt;绝对路径&gt;] [文件名2]</span><br><span class="line"><span class="comment"># 编辑文件，命令模式-iao键-输入模式-Esc键-底线命令模式-:wq-保存退出-cat 文件名-查看</span></span><br><span class="line">vim [文件名]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看文件内容 [-A]【相当於-vET，列出特殊字符】、[-b]【列出行号】、[-E]【显示断行$】、[-n]【列出行号，包括空白行】、[-T]【[tab] 按键以 ^I 显示】、[-v]【列出看不出的特殊字符】</span></span><br><span class="line"><span class="built_in">cat</span> [-AbEnTv] [文件名]</span><br><span class="line"><span class="comment"># 倒序查看文件内容</span></span><br><span class="line"><span class="built_in">tac</span> [文件名]</span><br><span class="line"><span class="comment"># 显示行号查看文件 [-b]【a：空行也列出行号，t：空行不列出行号】、[-n]【ln：行号在最左方，rn:右方显示，且不加 0,rz:右方显示，且加 0】</span></span><br><span class="line"><span class="comment"># [-w]【行号栏位的占用的位数】</span></span><br><span class="line"><span class="built_in">nl</span> [-bnm] [文件名]</span><br><span class="line"><span class="comment"># 一页一页翻动</span></span><br><span class="line">more [文件名]</span><br><span class="line">less [文件名]</span><br><span class="line"><span class="comment"># 取出文件前面几行</span></span><br><span class="line"><span class="built_in">head</span> [-n number] [文件名]</span><br><span class="line"><span class="comment"># 取出后面几行</span></span><br><span class="line"><span class="built_in">tail</span> [-n number] [文件名]</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>配置</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看系统config</span></span><br><span class="line">git config --system --list</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看当前用户（global）配置</span></span><br><span class="line">git config --global  --list</span><br><span class="line"></span><br><span class="line"><span class="comment">#名称</span></span><br><span class="line">git config --global user.name <span class="string">&quot;xxy&quot;</span> </span><br><span class="line"><span class="comment">#邮箱</span></span><br><span class="line">git config --global user.email 11111@qq.com  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看历史</span></span><br><span class="line"><span class="built_in">history</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出</span></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure>

<h2 id="4-工作原理"><a href="#4-工作原理" class="headerlink" title="4. 工作原理"></a>4. 工作原理</h2><ol>
<li>工作区域</li>
</ol>
<ul>
<li><p><strong>Workspace：工作区</strong>，就是你平时存放项目代码的地方</p>
</li>
<li><p><strong>Index &#x2F; Stage：暂存区</strong>，用于临时存放你的改动，事实上它只是一个文件，保存即将提交到文件列表信息</p>
</li>
<li><p><strong>Repository：仓库区（或本地仓库）</strong>，就是安全存放数据的位置，这里面有你提交到所有版本的数据。其中HEAD指向最新放入仓库的版本</p>
</li>
<li><p><strong>Remote：远程仓库，托管代码的服务器</strong>，可以简单的认为是你项目组中的一台电脑用于远程数据交换</p>
</li>
</ul>
<ol start="2">
<li>工作命令</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建一个版本库</span></span><br><span class="line">git init</span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line">git <span class="built_in">clone</span> [url]</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看指定文件状态</span></span><br><span class="line">git status [filename]</span><br><span class="line"> </span><br><span class="line"><span class="comment">#查看所有文件状态</span></span><br><span class="line">git status</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 添加所有文件到暂存区</span></span><br><span class="line">git add .  </span><br><span class="line"></span><br><span class="line"><span class="comment"># &quot;消息内容&quot;提交暂存区中的内容到本地仓库 -m 提交信息</span></span><br><span class="line">git commit -m</span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地仓库提交到远程仓库</span></span><br><span class="line">git push</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入 C:\Users\Administrator\.ssh 目录</span></span><br><span class="line"><span class="comment"># 生成公钥</span></span><br><span class="line">ssh-keygen</span><br><span class="line"></span><br><span class="line"><span class="comment">#为注释</span></span><br><span class="line">*.txt        <span class="comment">#忽略所有 .txt结尾的文件,这样的话上传就不会被选中！</span></span><br><span class="line">!lib.txt     <span class="comment">#但lib.txt除外</span></span><br><span class="line">/temp        <span class="comment">#仅忽略项目根目录下的TODO文件,不包括其它目录temp</span></span><br><span class="line">build/       <span class="comment">#忽略build/目录下的所有文件</span></span><br><span class="line">doc/*.txt    <span class="comment">#会忽略 doc/notes.txt 但不包括 doc/server/arch.txt</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>git管理文件状态</li>
</ol>
<ul>
<li>未跟踪（Untracked）</li>
</ul>
<blockquote>
<p>未跟踪, 此文件在文件夹中, 但并没有加入到git库, 不参与版本控制. 通过git add 状态变为Staged.</p>
</blockquote>
<ul>
<li>未修改(Unmodify)</li>
</ul>
<blockquote>
<p>文件已经入库, 未修改, 即版本库中的文件快照内容与文件夹中完全一致. 这种类型的文件有两种去处, 如果它被修改, 而变为Modified. 如果使用git rm移出版本库, 则成为Untracked文件</p>
</blockquote>
<ul>
<li>已修改（modified）</li>
</ul>
<blockquote>
<p>文件已修改, 仅仅是修改, 并没有进行其他的操作. 这个文件也有两个去处, 通过git add可进入暂存staged状态, 使用git  checkout 则丢弃修改过, 返回到unmodify状态, 这个git checkout即从库中取出文件, 覆盖当前修改 !</p>
</blockquote>
<ul>
<li>已暂存（staged）</li>
</ul>
<blockquote>
<p>暂存状态. 执行git commit则将修改同步到库中, 这时库中的文件和本地文件又变为一致, 文件为Unmodify状态. 执行git reset HEAD filename取消暂存, 文件状态为Modified</p>
</blockquote>
<ul>
<li>已提交(committed)</li>
</ul>
<ol start="4">
<li>忽略文件</li>
</ol>
<ul>
<li>在主目录下建立”.gitignore”文件，此文件有如下规则：</li>
<li>忽略文件中的空行或以井号（#）开始的行将会被忽略。</li>
<li>可以使用Linux通配符。例如：星号（*）代表任意多个字符，问号（？）代表一个字符，方括号（[abc]）代表可选字符范围，大括号（{string1,string2,…}）代表可选的字符串等。</li>
<li>如果名称的最前面有一个感叹号（!），表示例外规则，将不被忽略。</li>
<li>如果名称的最前面是一个路径分隔符（&#x2F;），表示要忽略的文件在此目录下，而子目录中的文件不忽略。</li>
<li>如果名称的最后面是一个路径分隔符（&#x2F;），表示要忽略的是此目录下该名称的子目录，而非文件（默认文件或目录都忽略）。</li>
</ul>
<h2 id="5-Git分支"><a href="#5-Git分支" class="headerlink" title="5. Git分支"></a>5. Git分支</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 列出所有本地分支</span></span><br><span class="line">git branch</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 列出所有远程分支</span></span><br><span class="line">git branch -r</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 新建一个分支，但依然停留在当前分支</span></span><br><span class="line">git branch [branch-name]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 新建一个分支，并切换到该分支</span></span><br><span class="line">git checkout -b [branch]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 合并指定分支到当前分支,需要处理冲突</span></span><br><span class="line">$ git merge [branch]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 删除分支</span></span><br><span class="line">$ git branch -d [branch-name]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 删除远程分支</span></span><br><span class="line">$ git push origin --delete [branch-name]</span><br><span class="line">$ git branch -dr [remote/branch]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="6-总结"><a href="#6-总结" class="headerlink" title="6. 总结"></a>6. 总结</h2><p>这次系统的复习了Git的使用方法，对以后工作会有很大的帮助。</p>
]]></content>
      <tags>
        <tag>工具</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Golang基础</title>
    <url>/2023/03/17/Golang/</url>
    <content><![CDATA[<blockquote>
<center>不求外物，不惧内心，不避因果</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<h2 id="1-简述"><a href="#1-简述" class="headerlink" title="1. 简述"></a>1. 简述</h2><h3 id="1-1-背景"><a href="#1-1-背景" class="headerlink" title="1.1 背景"></a>1.1 背景</h3><ul>
<li><p>Go语言自己的早期源码使用C语言和汇编语言写成</p>
</li>
<li><p>Go的三个作者分别是：Rob Pike（罗伯.派克），Ken Thompson（肯.汤普森）和Robert Griesemer（罗伯特.格利茨默） </p>
</li>
<li><p>2009年11月 GO语言第一个版本发布。2012年3月 第一个正式版本Go1.0发布</p>
</li>
<li><p>到go1.8时，相同业务场景下的GC时延已经可以从go1.1的数秒，控制在1ms以内。GC问题的解决，可以说GO语言在服务端开发方面，几乎抹平了所有的弱点</p>
</li>
<li><p>一家叫做 Docker 的公司。就是使用 Go 进行项目开发，并促进了计算机领域的容器行业，进而出现了像 Kubernetes 这样的项目</p>
</li>
</ul>
<h3 id="1-2-定义"><a href="#1-2-定义" class="headerlink" title="1.2 定义"></a>1.2 定义</h3><blockquote>
<p>将简单、实用体现得淋漓尽致的一种编程语言</p>
</blockquote>
<h3 id="1-3-GO项目"><a href="#1-3-GO项目" class="headerlink" title="1.3 GO项目"></a>1.3 GO项目</h3><ul>
<li><a href="https://github.com/docker/docker">Docker</a></li>
</ul>
<blockquote>
<p>Docker 是一种操作系统层面的虚拟化技术，可以在操作系统和应用程序之间进行隔离，也可以称之为容器。Docker  可以在一台物理服务器上快速运行一个或多个实例。例如，启动一个 CentOS  操作系统，并在其内部命令行执行指令后结束，整个过程就像自己在操作系统一样高效。</p>
</blockquote>
<ul>
<li><a href="https://github.com/golang/go">Go语言</a></li>
</ul>
<blockquote>
<p>Go语言自己的早期源码使用C语言和汇编语言写成。从 Go 1.5 版本后，完全使用Go语言自身进行编写。Go语言的源码对了解Go语言的底层调度有极大的参考意义，建议希望对Go语言有深入了解的读者读一读。</p>
</blockquote>
<ul>
<li><a href="https://github.com/kubernetes/kubernetes">Kubernetes</a></li>
</ul>
<blockquote>
<p>Google 公司开发的构建于 Docker 之上的容器调度服务，用户可以通过 Kubernetes 集群进行云端容器集群管理。系统会自动选取合适的工作节点来执行具体的容器集群调度处理工作。其核心概念是 Container Pod（容器仓）</p>
</blockquote>
<ul>
<li><a href="https://github.com/coreos/etcd">etcd</a></li>
</ul>
<blockquote>
<p>一款分布式、可靠的 KV 存储系统，可以快速进行云配置。由 CoreOS 开发并维护键值存储系统，它使用Go语言编写，并通过 Raft 一致性算法处理日志复制以保证强一致性</p>
</blockquote>
<ul>
<li><a href="https://github.com/astaxie/beego">beego</a></li>
</ul>
<blockquote>
<p>beego 是一个类似 Python 的 Tornado 框架，采用了 RESTFul 的设计思路，使用Go语言编写的一个极轻量级、高可伸缩性和高性能的 Web 应用框架</p>
</blockquote>
<ul>
<li><a href="https://github.com/go-martini/martini">martini</a></li>
</ul>
<blockquote>
<p>一款快速构建模块化的 Web 应用的Go语言框架</p>
</blockquote>
<ul>
<li><a href="https://github.com/CodisLabs/codis">codis</a></li>
</ul>
<blockquote>
<p>国产的优秀分布式 Redis 解决方案。可以将 codis 理解成为 Web 服务领域的 Nginx，它实现了对 Redis 的反向代理和负载均衡。</p>
</blockquote>
<ul>
<li><a href="https://github.com/derekparker/delve">delve</a></li>
</ul>
<blockquote>
<p>Go语言强大的调试器，被很多集成环境和编辑器整合。</p>
</blockquote>
<h3 id="1-4-用处"><a href="#1-4-用处" class="headerlink" title="1.4 用处"></a>1.4 用处</h3><ul>
<li>区块链</li>
<li>云平台</li>
<li>嵌入式</li>
<li>网络编程</li>
<li>服务器编程</li>
</ul>
<h3 id="1-5-编程库"><a href="#1-5-编程库" class="headerlink" title="1.5 编程库"></a>1.5 编程库</h3><table>
<thead>
<tr>
<th>Go语言标准库包名</th>
<th>功  能</th>
</tr>
</thead>
<tbody><tr>
<td>bufio</td>
<td>带缓冲的 I&#x2F;O 操作</td>
</tr>
<tr>
<td>bytes</td>
<td>实现字节操作</td>
</tr>
<tr>
<td>container</td>
<td>封装堆、列表和环形列表等容器</td>
</tr>
<tr>
<td>crypto</td>
<td>加密算法</td>
</tr>
<tr>
<td>database</td>
<td>数据库驱动和接口</td>
</tr>
<tr>
<td>debug</td>
<td>各种调试文件格式访问及调试功能</td>
</tr>
<tr>
<td>encoding</td>
<td>常见算法如 JSON、XML、Base64 等</td>
</tr>
<tr>
<td>flag</td>
<td>命令行解析</td>
</tr>
<tr>
<td>fmt</td>
<td>格式化操作</td>
</tr>
<tr>
<td>go</td>
<td>Go语言的词法、语法树、类型等。可通过这个包进行代码信息提取和修改</td>
</tr>
<tr>
<td>html</td>
<td>HTML 转义及模板系统</td>
</tr>
<tr>
<td>image</td>
<td>常见图形格式的访问及生成</td>
</tr>
<tr>
<td>io</td>
<td>实现 I&#x2F;O 原始访问接口及访问封装</td>
</tr>
<tr>
<td>math</td>
<td>数学库</td>
</tr>
<tr>
<td>net</td>
<td>网络库，支持 Socket、HTTP、邮件、RPC、SMTP 等</td>
</tr>
<tr>
<td>os</td>
<td>操作系统平台不依赖平台操作封装</td>
</tr>
<tr>
<td>path</td>
<td>兼容各操作系统的路径操作实用函数</td>
</tr>
<tr>
<td>plugin</td>
<td>Go 1.7 加入的插件系统。支持将代码编译为插件，按需加载</td>
</tr>
<tr>
<td>reflect</td>
<td>语言反射支持。可以动态获得代码中的类型信息，获取和修改变量的值</td>
</tr>
<tr>
<td>regexp</td>
<td>正则表达式封装</td>
</tr>
<tr>
<td>runtime</td>
<td>运行时接口</td>
</tr>
<tr>
<td>sort</td>
<td>排序接口</td>
</tr>
<tr>
<td>strings</td>
<td>字符串转换、解析及实用函数</td>
</tr>
<tr>
<td>time</td>
<td>时间接口</td>
</tr>
<tr>
<td>text</td>
<td>文本模板及 Token 词法器</td>
</tr>
</tbody></table>
<h2 id="2-下载和环境"><a href="#2-下载和环境" class="headerlink" title="2. 下载和环境"></a>2. 下载和环境</h2><blockquote>
<p>尽量使用压缩包安装方式，注意GoWorks工作目录下三个包 bin src pkg</p>
</blockquote>
<h3 id="2-1-下载go"><a href="#2-1-下载go" class="headerlink" title="2.1 下载go"></a>2.1 下载go</h3><ul>
<li><a href="https://studygolang.com/dl">go中文网下载</a></li>
<li><a href="https://golang.google.cn/dl/">go官网下载</a></li>
<li>配置环境变量</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装目录</span></span><br><span class="line">GOROOT D:\install\go </span><br><span class="line"><span class="comment"># 工作目录</span></span><br><span class="line">GOPATH D:\GoWorks</span><br><span class="line"><span class="comment"># 运行go.exe目录</span></span><br><span class="line">PATH %GOROOT%\bin</span><br><span class="line">Path %GOPATH%\bin</span><br></pre></td></tr></table></figure>

<ul>
<li>进行检测是否成功</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">go <span class="built_in">env</span></span><br><span class="line">go version</span><br><span class="line">go build</span><br></pre></td></tr></table></figure>

<ul>
<li><p><a href="https://betheme.net/news/txtlist_i88756v.html?action=onClick">其他博主go压缩包安装和配置环境</a></p>
</li>
<li><p>开发工具：idea、vscode、Go Reviverevive、Goland</p>
</li>
<li><p>vscode需要安装go工具包，在工作&#x2F;bin目录下，运行F5</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>程序名</th>
<th>程序用途</th>
</tr>
</thead>
<tbody><tr>
<td>dlv.exe</td>
<td>go 语言调试工具</td>
</tr>
<tr>
<td>gocode.exe</td>
<td>go语言代码检查，自动补全</td>
</tr>
<tr>
<td>godef.exe</td>
<td>go语言代码定义和引用的跳转</td>
</tr>
<tr>
<td>golint.exe</td>
<td>go语言代码规范检查</td>
</tr>
<tr>
<td>go-outline.exe</td>
<td>用于在Go源文件中提取JSON形式声明的简单工具</td>
</tr>
<tr>
<td>gopkgs.exe</td>
<td>快速列出可用包的工具</td>
</tr>
<tr>
<td>gorename.exe</td>
<td>在Go源代码中执行标识符的精确类型安全重命名</td>
</tr>
<tr>
<td>goreturns.exe</td>
<td>类似fmt和import的工具，使用零值填充Go返回语句以匹配func返回类型</td>
</tr>
<tr>
<td>go-symbols.exe</td>
<td>从go源码树中提取JSON形式的包符号的工具</td>
</tr>
<tr>
<td>gotour.exe</td>
<td>go语言指南网页版</td>
</tr>
<tr>
<td>guru.exe</td>
<td>go语言源代码有关工具，如代码高亮等</td>
</tr>
</tbody></table>
<h2 id="3-Go基础"><a href="#3-Go基础" class="headerlink" title="3. Go基础"></a>3. Go基础</h2><h3 id="3-1-hello-go"><a href="#3-1-hello-go" class="headerlink" title="3.1 hello.go"></a>3.1 hello.go</h3><blockquote>
<p>在Go语言里，<strong>命名为main</strong>的包具有特殊的含义。Go语言的编译程序会试图把这种名字的包<strong>编译为二进制可执行文件</strong>。所有用Go语言编译的可执行程序<strong>都必须有一个</strong>名叫main的包，一个可执行程序 <strong>有且仅有一个</strong> main包</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	fmt.Println(<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">go run  hello.go</span><br></pre></td></tr></table></figure>

<blockquote>
<p>当编译器发现某个包的名字为main时，它一定也会发现名为main()的函数，否则不会创建可执行文件。main()函数是程序的入口，所以，如果没有这个函数，程序就没有办法开始执行。程序编译时，会使用声明main包的代码所在的目录的目录名作为二进制可执行文件的文件名。</p>
</blockquote>
<h3 id="3-2-Go注释"><a href="#3-2-Go注释" class="headerlink" title="3.2 Go注释"></a>3.2 Go注释</h3><blockquote>
<p>方便其他人理解代码</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//我是单行注释</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">我是多行注释</span></span><br><span class="line"><span class="comment">我是多行注释</span></span><br><span class="line"><span class="comment">我是多行注释</span></span><br><span class="line"><span class="comment">我是多行注释</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h3 id="3-3-变量"><a href="#3-3-变量" class="headerlink" title="3.3 变量"></a>3.3 变量</h3><blockquote>
<p>能够指向内存地址的可以变化的值，Go语言是<strong>静态类型</strong>语言</p>
</blockquote>
<ol>
<li>变量的定义（声明）</li>
</ol>
<ul>
<li>格式</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> [name变量名] [<span class="keyword">type</span>变量类型]</span><br></pre></td></tr></table></figure>

<ul>
<li>eg</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">	<span class="keyword">var</span> (</span><br><span class="line">		name   <span class="type">string</span></span><br><span class="line">		age    <span class="type">int</span></span><br><span class="line">		money  <span class="type">float64</span></span><br><span class="line">		isLike <span class="type">bool</span></span><br><span class="line">	)</span><br><span class="line">	fmt.Println(name, age,money, isLike )</span><br><span class="line"><span class="comment">// 空格 0 0 false</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    整形和浮点型变量的默认值为0和0.0</span></span><br><span class="line"><span class="comment">    字符串变量的默认值为空字符串</span></span><br><span class="line"><span class="comment">    布尔型变量默认为false</span></span><br><span class="line"><span class="comment">    切片、函数、指针变量的默认为nil</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>初始化</li>
</ol>
<ul>
<li>格式</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//变量声明</span></span><br><span class="line">[name变量名] = [value变量值]</span><br></pre></td></tr></table></figure>

<ul>
<li>eg</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">name = <span class="string">&quot;dd&quot;</span></span><br><span class="line">age = <span class="number">12</span></span><br><span class="line">money = <span class="number">12.45</span></span><br><span class="line">isLike = <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>声明并初始化</li>
</ol>
<blockquote>
<p>由于使用了 :&#x3D; ，而不是赋值的 &#x3D; ，因此推导声明写法的左值<strong>必须是没有被定义</strong>过的，若定义过，将会发生编译错误</p>
</blockquote>
<ul>
<li>格式</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">[name未声明变量名] := [value变量值]</span><br></pre></td></tr></table></figure>

<ul>
<li>eg</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">	name := <span class="string">&quot;dd&quot;</span></span><br><span class="line">	age := <span class="number">12</span></span><br><span class="line">	money := <span class="number">12.45</span></span><br><span class="line">	isLike := <span class="literal">true</span></span><br><span class="line"><span class="comment">//值改变，内存地址不变</span></span><br><span class="line">	name = <span class="string">&quot;tt&quot;</span></span><br><span class="line"><span class="comment">//交换，int会去掉float64小数部分</span></span><br><span class="line">age, money = <span class="type">int</span>(money), <span class="type">float64</span>(age)</span><br><span class="line">	fmt.Println(name, age, money, isLike)</span><br><span class="line">	fmt.Printf(<span class="string">&quot;%T,%T,%T,%T&quot;</span>, name, age, money, isLike)</span><br><span class="line">	fmt.Printf(<span class="string">&quot;%p,%p,%p,%p&quot;</span>, &amp;name, &amp;age, &amp;money, &amp;isLike)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">dd 12 12.45 true</span></span><br><span class="line"><span class="comment">string,int,float64,bool</span></span><br><span class="line"><span class="comment">0xc000050270,0xc000018098,0xc0000180b0,0xc0000180b8</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>匿名变量</li>
</ol>
<blockquote>
<p>匿名变量的特点是一个下划线 “_”,但任何赋给这个标识符的值都将被抛弃,可以<strong>极大地增强代码的灵活性</strong>,匿名变量<strong>不占用内存空间</strong>，不会分配内存。</p>
</blockquote>
<ul>
<li>格式</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">_ := [<span class="function"><span class="keyword">func</span>/<span class="title">value</span>]</span></span><br></pre></td></tr></table></figure>

<ul>
<li>eg</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test</span><span class="params">()</span></span> (<span class="type">int</span>, <span class="type">int</span>) &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">100</span>, <span class="number">200</span></span><br><span class="line">&#125;	</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    a,_ := test()</span><br><span class="line">    _,b := test()</span><br><span class="line">    fmt.<span class="built_in">println</span>(a,b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>变量作用域</li>
</ol>
<blockquote>
<p><strong>一个变量（常量、类型或函数）在程序中都有一定的作用范围，称之为作用域</strong>，遵循就近原则</p>
</blockquote>
<ul>
<li>局部变量</li>
</ul>
<blockquote>
<p>在函数体内声明的变量称之为局部变量，它们的作用域只在函数体内，函数的参数和返回值变量都属于局部变量</p>
</blockquote>
<ul>
<li>全局变量</li>
</ul>
<blockquote>
<p>在函数体外声明的变量称之为全局变量，只需要在一个源文件中定义，就可以在所有源文件中使用，当然，不包含这个全局变量的源文件需要使用 import 关键字 引入<br>全局变量必须以 var 关键字开头，如果想要在外部包中使用全局变量的首字母必须大写</p>
</blockquote>
<ul>
<li>注意</li>
</ul>
<blockquote>
<p>Go语言程序中<strong>全局变量与局部变量名称可以相同</strong>，但是<strong>函数体内的局部变量</strong>会被优先考虑！</p>
</blockquote>
<h3 id="3-4-常量"><a href="#3-4-常量" class="headerlink" title="3.4 常量"></a>3.4 常量</h3><blockquote>
<p>是一个简单值得标识符，在程序运行时，不会被修改的量</p>
</blockquote>
<ol>
<li>普通常量</li>
</ol>
<ul>
<li>格式</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> [name常量名] [<span class="keyword">type</span>] = [value]</span><br></pre></td></tr></table></figure>

<ul>
<li>eg</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> url <span class="type">string</span> = <span class="string">&quot;ssss.xx&quot;</span></span><br><span class="line"><span class="keyword">const</span> t, b, c = <span class="string">&quot;s&quot;</span>, <span class="number">3.12</span>, <span class="literal">true</span></span><br><span class="line">fmt.Println(t, b, c)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>特殊常量iota</li>
</ol>
<blockquote>
<p>未赋值的常量向前面的常量寻找</p>
</blockquote>
<ul>
<li>格式</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> [name常量名] [<span class="keyword">type</span>] = <span class="literal">iota</span>        </span><br></pre></td></tr></table></figure>

<ul>
<li>eg</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> (</span><br><span class="line">     a = <span class="literal">iota</span>        <span class="comment">//iota==0</span></span><br><span class="line">     b               <span class="comment">//iota==1</span></span><br><span class="line">     c               <span class="comment">//iota==2</span></span><br><span class="line">     d = <span class="string">&quot;kuangshen&quot;</span> <span class="comment">//iota==3</span></span><br><span class="line">     e = <span class="literal">iota</span>        <span class="comment">//iota==4</span></span><br><span class="line">     f = <span class="number">100</span>         <span class="comment">//iota==5</span></span><br><span class="line">     g               <span class="comment">//iota==6</span></span><br><span class="line">     h = <span class="literal">iota</span>      <span class="comment">//iota==7</span></span><br><span class="line">  )</span><br></pre></td></tr></table></figure>

<h3 id="3-5-数据类型"><a href="#3-5-数据类型" class="headerlink" title="3.5 数据类型"></a>3.5 数据类型</h3><ol>
<li>布尔型</li>
</ol>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> isFlang <span class="type">bool</span> <span class="comment">//默认false</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>数字型</li>
</ol>
<ul>
<li>整数型</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> age <span class="type">int</span><span class="comment">//默认0</span></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>序号</th>
<th>类型和描述</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td><strong>uint8</strong>无符号8位整型(O到255)</td>
</tr>
<tr>
<td>2</td>
<td><strong>uint16</strong>无符号16位整型(O到65535)</td>
</tr>
<tr>
<td>3</td>
<td><strong>uint32</strong>无符号32位整型(O到4294967295)</td>
</tr>
<tr>
<td>4</td>
<td><strong>uint64</strong>无符号64位整型(0到18446744073709551615)</td>
</tr>
<tr>
<td>5</td>
<td><strong>int8</strong>有符号8位整型(-128到127)</td>
</tr>
<tr>
<td>6</td>
<td><strong>int16</strong>有符号16位整型(-32768到32767)</td>
</tr>
<tr>
<td>7</td>
<td><strong>int32</strong>有符号32位整型(-2147483648到2147483647)</td>
</tr>
<tr>
<td>8</td>
<td><strong>int64</strong>有符号64位整型(-9223372036854775808到 9223372036854775807)</td>
</tr>
</tbody></table>
<ul>
<li>浮点型</li>
</ul>
<blockquote>
<p>float32 不要进行运算，会精度损失</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> money <span class="type">float64</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%.3f&quot;</span>, money)<span class="comment">//这里打印浮点数类型为%.3f四舍五入，默认是6位小数打印</span></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>序号</th>
<th>类型和描述</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>float32 IEEE-754 32位浮点型数</td>
</tr>
<tr>
<td>2</td>
<td>float64 lEEE-75464位浮点型数</td>
</tr>
<tr>
<td>3</td>
<td>complex64 32位实数和虚数</td>
</tr>
<tr>
<td>4</td>
<td>complex128 64位实数和虚数</td>
</tr>
</tbody></table>
<ul>
<li>其他别名</li>
</ul>
<table>
<thead>
<tr>
<th>序号</th>
<th>类型和描述</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td><strong>byte</strong>类似于uint8</td>
</tr>
<tr>
<td>2</td>
<td><strong>rune</strong>类似于int32</td>
</tr>
<tr>
<td>3</td>
<td><strong>uInt</strong>32或64位</td>
</tr>
<tr>
<td>4</td>
<td><strong>int</strong>与uint一样大小</td>
</tr>
<tr>
<td>5</td>
<td><strong>uintprt</strong>无符号整形，用于存放一个指针</td>
</tr>
</tbody></table>
<ol start="3">
<li>字符</li>
</ol>
<blockquote>
<p>单引号</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//英文编码表 ASCII字符表</span></span><br><span class="line"><span class="comment">//汉字编码表 ：GBK</span></span><br><span class="line"><span class="comment">//全世界编码表：Unicode</span></span><br><span class="line">	v1 := <span class="string">&#x27;在&#x27;</span></span><br><span class="line">	fmt.Printf(<span class="string">&quot;%T,%d&quot;</span>, v1, v1)</span><br><span class="line"><span class="comment">//int32,22312</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>字符串</li>
</ol>
<blockquote>
<p>双引号</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">	v2 := <span class="string">&quot;在&quot;</span></span><br><span class="line">	fmt.Printf(<span class="string">&quot;%T,%s&quot;</span>, v2, v2)</span><br><span class="line"><span class="comment">//string,在</span></span><br></pre></td></tr></table></figure>

<ul>
<li>字符串连接和转义</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">fmt.Printf(<span class="string">&quot;%T,%s&quot;</span>, v2, v2+<span class="string">&quot;gg\&quot;ff&quot;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="3-6-数据类型转换"><a href="#3-6-数据类型转换" class="headerlink" title="3.6 数据类型转换"></a>3.6 数据类型转换</h3><blockquote>
<p>数据类型转换都为显示，<strong>Go语言不存在隐式类型转换</strong>,每个分配的内存不同，bool类型和整数类型不能相互转换</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">c := <span class="type">float64</span>(a)</span><br></pre></td></tr></table></figure>

<h3 id="3-7-运算符"><a href="#3-7-运算符" class="headerlink" title="3.7 运算符"></a>3.7 运算符</h3><ol>
<li>算术运算符</li>
</ol>
<table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
<th>实例</th>
</tr>
</thead>
<tbody><tr>
<td>+</td>
<td>相加</td>
<td>A+B输出结果30</td>
</tr>
<tr>
<td>-</td>
<td>相减</td>
<td>A-B输出结果-10</td>
</tr>
<tr>
<td>*</td>
<td>相乘</td>
<td>A*B输出结果为200</td>
</tr>
<tr>
<td>&#x2F;</td>
<td>相除</td>
<td>B&#x2F;A输出结果为2</td>
</tr>
<tr>
<td>%</td>
<td>求余</td>
<td>B%A输出结果为0</td>
</tr>
<tr>
<td>++</td>
<td>自增</td>
<td>A++输出结果11</td>
</tr>
<tr>
<td>–</td>
<td>自减</td>
<td>A–输出结果为9</td>
</tr>
</tbody></table>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">v1 := 10</span><br><span class="line">v2 := 3</span><br><span class="line">fmt.Println(v1 / v2)</span><br><span class="line">fmt.Println(v1 % v2)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>关系运算符</li>
</ol>
<table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
<th>实例</th>
</tr>
</thead>
<tbody><tr>
<td>&#x3D;&#x3D;</td>
<td>检查两个值是否相等，如果相等返回True否则返回false</td>
<td>A&#x3D;&#x3D;B 为false</td>
</tr>
<tr>
<td>！&#x3D;</td>
<td>检查两个值是否不相等，如果不相等返回True否则返回false</td>
<td>A！&#x3D;B为true</td>
</tr>
<tr>
<td>&gt;</td>
<td>检查左边值是否大于右边值，如果是返回True否则返回false</td>
<td>A&gt;B 为false</td>
</tr>
<tr>
<td>&lt;</td>
<td>检查左边值是否小于右边值，如果是返回True否则返回false</td>
<td>A&lt;B为True</td>
</tr>
<tr>
<td>&gt;&#x3D;</td>
<td>检查左边值是否大于等于右边值，如果是返回True否则返回false</td>
<td>A&gt;&#x3D;B 为false</td>
</tr>
<tr>
<td>&lt;&#x3D;</td>
<td>检查左边值是否小于等于右边值，如果是返回True否则返回false</td>
<td>A&lt;&#x3D;B 为true</td>
</tr>
</tbody></table>
<ol start="3">
<li>逻辑运算符</li>
</ol>
<table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
<th>实例</th>
</tr>
</thead>
<tbody><tr>
<td>&amp;&amp;</td>
<td>逻辑AND运算符，如果两边的操作数都是True，则条件True，否则为False。</td>
<td>A&amp;&amp;B 为false</td>
</tr>
<tr>
<td>||</td>
<td>逻辑OR运算符，如果两边的操作数有一个True，则条件True，否则为False。</td>
<td>A||B为true</td>
</tr>
<tr>
<td>！</td>
<td>逻辑NOT运算符，如果条件为True，则逻辑NOT条件False，否则为True。</td>
<td>！（A&amp;&amp;B ）为true</td>
</tr>
</tbody></table>
<ol start="4">
<li>位运算符</li>
</ol>
<blockquote>
<p>加密、解密、底层</p>
</blockquote>
<table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
<th>实例</th>
</tr>
</thead>
<tbody><tr>
<td>&amp;</td>
<td>按位与运算符”&amp;”是双目运算符。都是1结果为1，否则是0</td>
<td>(A&amp;B)结果为12,二进制为0000 1100</td>
</tr>
<tr>
<td>|</td>
<td>按位或运算符”|”是双目运算符。只要有一个1就为1，都是0结果为0，否则是1</td>
<td>(A |B)结果为61，二进制0011 1101</td>
</tr>
<tr>
<td>^</td>
<td>按位异或运算符”A”是双目运算符。不同则为1，相同为0</td>
<td>(A^B)结果为49,二进制为0011 0001</td>
</tr>
<tr>
<td>&amp;^</td>
<td>位清空，a &amp;^b，对于b上的每个数值，如果为0，则取a对应位上的数值，如果为1，则取0.</td>
<td>(A&amp;^B)结果为48,二进制为0011 0000</td>
</tr>
<tr>
<td>&lt;&lt;</td>
<td>左移运算符”&lt;&lt;”是双目运算符。左移n位就是乘以2的n次方。其功能把”&lt;&lt;”左边的运算数的各二进位全部左移若干位，由”&lt;&lt;”右边的数指定移动的位数，高位丢弃，低位补O。</td>
<td>A&lt;&lt;2结果为240，二进制为1111 0000</td>
</tr>
<tr>
<td>&gt;&gt;</td>
<td>右移运算符”&gt;&gt;”是双目运算符。右移n位就是除以2的n次方。其功能是把”&gt;&gt;”左边的运算数的各二进位全部右移若干位，”&gt;&gt;”右边的数指定移动的位数。</td>
<td>A&gt;&gt;2结果为15，二进制为0000 1111</td>
</tr>
</tbody></table>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">	v1 := <span class="number">10</span></span><br><span class="line">	v2 := <span class="number">3</span></span><br><span class="line">	fmt.Printf(<span class="string">&quot;%b\n&quot;</span>, v1)</span><br><span class="line">	fmt.Printf(<span class="string">&quot;%b\n&quot;</span>, v2)</span><br><span class="line">	v3 := v1 &amp; v2</span><br><span class="line">	fmt.Printf(<span class="string">&quot;%b\n&quot;</span>, v3)</span><br><span class="line">	v4 := v1 | v2</span><br><span class="line">	fmt.Printf(<span class="string">&quot;%b\n&quot;</span>, v4)</span><br><span class="line">	v5 := v1 ^ v2</span><br><span class="line">	fmt.Printf(<span class="string">&quot;%b\n&quot;</span>, v5)</span><br><span class="line">	v6 := v1 &lt;&lt; <span class="number">2</span></span><br><span class="line">	fmt.Printf(<span class="string">&quot;%b\n&quot;</span>, v6)</span><br><span class="line">	v7 := v2 &gt;&gt; <span class="number">2</span></span><br><span class="line">	fmt.Printf(<span class="string">&quot;%b\n&quot;</span>, v7)</span><br><span class="line"><span class="number">1010</span></span><br><span class="line"><span class="number">11</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">1011</span></span><br><span class="line"><span class="number">1001</span></span><br><span class="line"><span class="number">101000</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li>赋值运算符</li>
</ol>
<table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
<th>实例</th>
</tr>
</thead>
<tbody><tr>
<td>&#x3D;</td>
<td>简单的赋值运算符，将一个表达式的值赋给一个左值</td>
<td>C &#x3D;A+B将A＋B表达式结果赋值给C</td>
</tr>
<tr>
<td>+&#x3D;</td>
<td>相加后再赋值</td>
<td>C +&#x3D;A等于C&#x3D;C+A</td>
</tr>
<tr>
<td>-&#x3D;</td>
<td>相减后再赋值</td>
<td>C -&#x3D;A等于C&#x3D;C-A</td>
</tr>
<tr>
<td>*&#x3D;</td>
<td>相乘后再赋值</td>
<td>C *&#x3D;A等于C&#x3D;C *A</td>
</tr>
<tr>
<td>&#x2F;&#x3D;</td>
<td>相除后再赋值</td>
<td>C&#x2F;&#x3D;A等于C&#x3D;C&#x2F; A</td>
</tr>
<tr>
<td>%&#x3D;</td>
<td>求余后再赋值</td>
<td>C%&#x3D;A等于C&#x3D;C%A</td>
</tr>
<tr>
<td>&lt;&lt;&#x3D;</td>
<td>左移后赋值</td>
<td>C&lt;&lt;&#x3D;2等于C&#x3D;C&lt;&lt;2</td>
</tr>
<tr>
<td>&gt;&gt;&#x3D;</td>
<td>右移后赋值</td>
<td>C&gt;&gt;&#x3D;2等于C&#x3D;c&gt;&gt;2</td>
</tr>
<tr>
<td>&amp;&#x3D;</td>
<td>按位与后赋值</td>
<td>C&amp;&#x3D;2等于C&#x3D;C&amp;2</td>
</tr>
<tr>
<td>^&#x3D;</td>
<td>按位异或后赋值</td>
<td>C&#x3D;2等于C&#x3D;C2</td>
</tr>
<tr>
<td>!&#x3D;</td>
<td>按位或后赋值</td>
<td>C|&#x3D;2等于C&#x3D;C|&#x3D;2</td>
</tr>
</tbody></table>
<ol start="6">
<li>其他运算符</li>
</ol>
<table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
<th>实例</th>
</tr>
</thead>
<tbody><tr>
<td>&amp;</td>
<td>返回变量存储地址</td>
<td>&amp;a;将给出变量的实际地址</td>
</tr>
<tr>
<td>*</td>
<td>指针变量</td>
<td>*a；是一个指针变量</td>
</tr>
</tbody></table>
<h3 id="3-8-输入输出"><a href="#3-8-输入输出" class="headerlink" title="3.8 输入输出"></a>3.8 输入输出</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">	<span class="keyword">var</span> x <span class="type">int</span></span><br><span class="line">	<span class="keyword">var</span> y <span class="type">float64</span></span><br><span class="line"><span class="comment">//Print</span></span><br><span class="line"><span class="comment">//Printf 格式化</span></span><br><span class="line"><span class="comment">//Println 换行</span></span><br><span class="line">	fmt.Println(<span class="string">&quot;请输入&quot;</span>)</span><br><span class="line"></span><br><span class="line">	fmt.Scanln(&amp;x, &amp;y)</span><br><span class="line">	fmt.Println(x, y)</span><br></pre></td></tr></table></figure>

<h3 id="3-9-编码规范"><a href="#3-9-编码规范" class="headerlink" title="3.9 编码规范"></a>3.9 编码规范</h3><ul>
<li><p>当命名(包括常量、变量、类型、函数名、结构字段等等)以一个大写字母开头，如:Group1，那么使用这种形式的标识符的对象就可以被外部包的代码所使用(客户端程序需要先导入这个包)，这被称为导出（像面向对象语言中的public) ;</p>
</li>
<li><p>命名如果以小写字母开头，则对包外是不可见的，但是他们在整个包的内部是可见并且可用的(像面向对象语言中的private )</p>
</li>
<li><p>保持package的名字和目录名保持一致，尽量采取有意义的包名，简短，有意义，尽量和标准库不要冲突。包名应该为小写单词，不要使用下划线或者混合大小写。</p>
</li>
<li><p>尽量采取有意义的文件名，简短，有意义，应该为小写单词，使用下划线分隔各个单词(蛇形命名)。</p>
</li>
</ul>
<h3 id="3-10-流程控制"><a href="#3-10-流程控制" class="headerlink" title="3.10 流程控制"></a>3.10 流程控制</h3><ol>
<li>顺序结构</li>
</ol>
<blockquote>
<p>:从上到下，逐行执行。默认的逻辑</p>
</blockquote>
<ol start="2">
<li>选择结构</li>
</ol>
<ul>
<li>if</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">a := <span class="number">2</span></span><br><span class="line"><span class="keyword">if</span> a &gt; <span class="number">12</span> &#123;</span><br><span class="line">	fmt.Print(<span class="string">&quot;大于12&quot;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">	fmt.Print(<span class="string">&quot;《&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>switch</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">a := <span class="number">2</span></span><br><span class="line"><span class="keyword">switch</span> a &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">-1</span>, <span class="number">0</span>:</span><br><span class="line">	fmt.Print(<span class="string">&quot;0或小于0&quot;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">	fmt.Print(<span class="string">&quot;1&quot;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">	fmt.Print(<span class="string">&quot;2&quot;</span>)</span><br><span class="line">	<span class="keyword">fallthrough</span> <span class="comment">//贯穿，会继续执行下一个，结束用break</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">	fmt.Print(<span class="string">&quot;大于2&quot;</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>select</li>
</ul>
<ol start="3">
<li>循环结构</li>
</ol>
<ul>
<li>for</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++ &#123;</span><br><span class="line">	<span class="keyword">for</span> j := <span class="number">1</span>; j &lt;= i; j++ &#123;</span><br><span class="line">		fmt.Printf(<span class="string">&quot;%d*%d=%d\t&quot;</span>, j, i, i*j)</span><br><span class="line">	&#125;</span><br><span class="line">	fmt.Println()</span><br><span class="line">&#125;</span><br><span class="line">str := <span class="string">&quot;xx xy&quot;</span></span><br><span class="line"><span class="comment">//第二种循环输出字符串</span></span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> str &#123;</span><br><span class="line">	fmt.Print(i)</span><br><span class="line">	fmt.Printf(<span class="string">&quot;%c&quot;</span>, v)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>break与continue</li>
</ol>
<blockquote>
<p>break 跳出，continue结束当前继续</p>
</blockquote>
<h3 id="3-11-string"><a href="#3-11-string" class="headerlink" title="3.11 string"></a>3.11 string</h3><blockquote>
<p>string字符串里面字符是不能修改的，Go中的字符串是一个字节的切片，可以通过将其内容封装在””中来创建字符串，Go中的字符串Unicode兼容的，并且是UTF-8编码，字符串是一些字节的集合</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">str := <span class="string">&quot;xx xy&quot;</span></span><br><span class="line"><span class="comment">//获取字符串长度</span></span><br><span class="line">fmt.Println(<span class="built_in">len</span>(str))</span><br><span class="line"><span class="comment">//获取指定字符</span></span><br><span class="line">fmt.Println(str[<span class="number">0</span>])</span><br><span class="line">fmt.Printf(<span class="string">&quot;%c\n&quot;</span>, str[<span class="number">4</span>])</span><br><span class="line"><span class="comment">//循环输出</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(str); i++ &#123;</span><br><span class="line">	fmt.Printf(<span class="string">&quot;%c\n&quot;</span>, str[i])</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//第二种循环输出</span></span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> str &#123;</span><br><span class="line">	fmt.Print(i)</span><br><span class="line">	fmt.Printf(<span class="string">&quot;%c&quot;</span>, v)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-12-函数"><a href="#3-12-函数" class="headerlink" title="3.12 函数"></a>3.12 函数</h3><ol>
<li>定义</li>
</ol>
<blockquote>
<p>函数的名称，返回类型和参数的代码块</p>
</blockquote>
<ul>
<li>格式</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> [函数名]<span class="params">(函数参数...)</span></span>(函数返回值) &#123;</span><br><span class="line">    函数体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>可变参数函数</li>
</ol>
<blockquote>
<p>如果一个函数的参数时可变参数，同时还有其他的参数，可变参数要放在列表的最后,一个函数的参数列表最多只能有一个可变参数</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">myfunc</span><span class="params">(nums ...<span class="type">int</span>)</span></span> &#123;</span><br><span class="line">	sum := <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(nums); i++ &#123;</span><br><span class="line">		sum += nums[i]</span><br><span class="line">	&#125;</span><br><span class="line">	fmt.Println(sum)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>参数传递</li>
</ol>
<ul>
<li>值传递[深克隆]：数值，布尔，数组，字符串</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">	arr := [<span class="number">4</span>]<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line">	zhi(arr)</span><br><span class="line">fmt.Println(<span class="string">&quot;修改后&quot;</span>, arr)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">zhi</span><span class="params">(arr1 [4]<span class="type">int</span>)</span></span> &#123;</span><br><span class="line">	fmt.Println(arr1)</span><br><span class="line">	arr1[<span class="number">0</span>] = <span class="number">0</span></span><br><span class="line">	fmt.Println(<span class="string">&quot;修改后&quot;</span>, arr1)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//arr数组不会改变，只是深克隆了arr，改变的数据属于arr1数组</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">修改前 [1 2 3 4]</span></span><br><span class="line"><span class="comment">修改后 [0 2 3 4]</span></span><br><span class="line"><span class="comment">调用后 [1 2 3 4]</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<ul>
<li>引用传递【不会拷贝,传送是地址】：slice，map，chan</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">	s1 := []<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line">	qiepian(s1)</span><br><span class="line">	fmt.Println(<span class="string">&quot;调用切片后&quot;</span>, s1)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">qiepian</span><span class="params">(s2 []<span class="type">int</span>)</span></span> &#123;</span><br><span class="line">	fmt.Println(<span class="string">&quot;切片修改前&quot;</span>, s2)</span><br><span class="line">	s2[<span class="number">0</span>] = <span class="number">0</span></span><br><span class="line">	fmt.Println(<span class="string">&quot;切片修改后&quot;</span>, s2)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">切片修改前 [1 2 3 4]</span></span><br><span class="line"><span class="comment">切片修改后 [0 2 3 4]</span></span><br><span class="line"><span class="comment">调用切片后 [0 2 3 4]</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>递归函数</li>
</ol>
<blockquote>
<p>十分耗费内存，不建议使用</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">	sum := digui(<span class="number">5</span>)</span><br><span class="line">	fmt.Println(sum)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">digui</span><span class="params">(n <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> n == <span class="number">1</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> digui(n<span class="number">-1</span>) + n</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>defer函数</li>
</ol>
<blockquote>
<p>推迟、延迟最后执行,先进后出，类似于栈，参数按照顺序传送进去，延迟执行</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">   f(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">   f(<span class="string">&quot;2&quot;</span>)</span><br><span class="line">   <span class="keyword">defer</span> f(<span class="string">&quot;3&quot;</span>)</span><br><span class="line">   f(<span class="string">&quot;4&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f</span><span class="params">(s <span class="type">string</span>)</span></span> &#123;</span><br><span class="line">   fmt.Println(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>函数数据类型（引用数据类型）</li>
</ol>
<blockquote>
<p>函数在Go语言中是复合类型，可以看做是一种特殊的变量。函数名()︰调用返回结果, 函数名:指向函数体的内存地址，一种特殊类型的指针变量</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">func本身就是一个数据类型</span></span><br><span class="line"><span class="comment">1、创建一个函数</span></span><br><span class="line"><span class="comment">2、在mian方法定义相同类型的函数</span></span><br><span class="line"><span class="comment">3、将定义后的函数赋值个另一个函数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">//2、在mian方法定义相同类型的函数</span></span><br><span class="line">	<span class="keyword">var</span> fg <span class="function"><span class="keyword">func</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span></span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//3、将定义后的函数赋值个另一个函数</span></span><br><span class="line">	fg = ff</span><br><span class="line">	fg(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1、创建一个函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ff</span><span class="params">(a, b <span class="type">int</span>)</span></span> &#123;</span><br><span class="line">	fmt.Println(a, b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="7">
<li>匿名函数</li>
</ol>
<blockquote>
<p>Go语言是支持函数式编程:<br>1、将匿名函数作为另外一个函数的参数，回调函数<br>2、将匿名函数作为另外一个函数的返回值，可以形成闭包结构</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span><span class="params">(a, b <span class="type">int</span>)</span></span> &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;我是带参匿名函数f&quot;</span>)</span><br><span class="line">	&#125;(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">f5 := <span class="function"><span class="keyword">func</span><span class="params">(a, b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> a + b</span><br><span class="line">	&#125;(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">	fmt.Println(<span class="string">&quot;带参且有返回值匿名函数:&quot;</span>, f5)</span><br></pre></td></tr></table></figure>

<ol start="8">
<li>回调函数</li>
</ol>
<blockquote>
<p>将函数作为参数传入另外函数</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	r1 := add(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">	fmt.Println(r1)</span><br><span class="line"></span><br><span class="line">	<span class="comment">//3、调用高阶函数时，传入其他方法的函数</span></span><br><span class="line">	r3 := oper(<span class="number">3</span>, <span class="number">4</span>, add)</span><br><span class="line">	fmt.Println(r3)</span><br><span class="line">	r4 := oper(<span class="number">8</span>, <span class="number">4</span>, sub)</span><br><span class="line">	fmt.Println(r4)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//1、创建一个高阶函数oper，传如一个函数类型的参数且有返回值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">oper</span><span class="params">(a, b <span class="type">int</span>, fun <span class="keyword">func</span>(<span class="type">int</span>, <span class="type">int</span>)</span></span> <span class="type">int</span>) <span class="type">int</span> &#123;</span><br><span class="line">	r2 := fun(a, b)</span><br><span class="line">	<span class="keyword">return</span> r2</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2、创建其他方法的函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(a, b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> a + b</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2、创建其他方法的函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sub</span><span class="params">(a, b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> a - b</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="9">
<li>闭包</li>
</ol>
<blockquote>
<p>个外层函数中，有内层函数，该内层函数中，会操作外层函数的局部变量并且该外层函数的返回值就是这个内层函数。<br>这个内层函数和外层函数的局部变量,统称为闭包结构。<br>局部变量的生命周期就会发生改变，正常的局部变量会随着函数的调用而创建，随着函数的结束而销毁但是闭包结构中的外层函数的局部变量并不会随着外层函数的结束而销毁，因为内层函数还在继续使用。</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">//定义一个变量 接受返回值(函数)</span></span><br><span class="line">	r1 := increment()</span><br><span class="line">	fmt.Println(r1)</span><br><span class="line"></span><br><span class="line">	v1 := r1()</span><br><span class="line">	fmt.Println(v1)</span><br><span class="line">	<span class="comment">//不断调用自增+1</span></span><br><span class="line">	v2 := r1()</span><br><span class="line">	fmt.Println(v2)</span><br><span class="line">	<span class="comment">//不断调用自增+1</span></span><br><span class="line">	fmt.Println(r1())</span><br><span class="line">	fmt.Println(r1())</span><br><span class="line">	fmt.Println(r1())</span><br><span class="line">	fmt.Println(r1())</span><br><span class="line">	fmt.Println(<span class="string">&quot;====================&quot;</span>)</span><br><span class="line">	<span class="comment">//	==========================================================</span></span><br><span class="line">	r2 := increment()</span><br><span class="line">	v3 := r2()</span><br><span class="line">	fmt.Println(v3)</span><br><span class="line">	fmt.Println(r2())</span><br><span class="line">	fmt.Println(r2())</span><br><span class="line">	fmt.Println(r2())</span><br><span class="line">	fmt.Println(r1())</span><br><span class="line">	fmt.Println(r2())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回一个函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">increment</span><span class="params">()</span></span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> <span class="type">int</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//局部变量</span></span><br><span class="line">	i := <span class="number">0</span></span><br><span class="line">	<span class="comment">//定义一个匿名函数 给变量自增并返回</span></span><br><span class="line">	fun := <span class="function"><span class="keyword">func</span><span class="params">()</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="comment">//内层函数，没有执行</span></span><br><span class="line">		i++</span><br><span class="line">		<span class="keyword">return</span> i</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> fun</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出结果：</span></span><br><span class="line"><span class="comment">0xd5ea00</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">4</span></span><br><span class="line"><span class="comment">5</span></span><br><span class="line"><span class="comment">6</span></span><br><span class="line"><span class="comment">====================</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">4</span></span><br><span class="line"><span class="comment">7</span></span><br><span class="line"><span class="comment">5</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h3 id="3-13-泛型"><a href="#3-13-泛型" class="headerlink" title="3.13 泛型"></a>3.13 泛型</h3><blockquote>
<p>Go的1.18版本包括了参数类型参数的实现，也就是俗称的泛型,不限制传进去的参数类型Type,减少重复逻辑</p>
</blockquote>
<ol>
<li>发现问题</li>
</ol>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">printIntSlice</span><span class="params">(arr <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">	<span class="comment">//类型断言</span></span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> arr.([]<span class="type">int</span>) &#123;</span><br><span class="line">		fmt.Println(v)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">printStringSlice</span><span class="params">(arr <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> arr.([]<span class="type">string</span>) &#123;</span><br><span class="line">		fmt.Println(v)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//这样很不方便</span></span><br><span class="line">s1 := []<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line">s2 := []<span class="type">string</span>&#123;<span class="string">&quot;ni&quot;</span>, <span class="string">&quot;hao&quot;</span>, <span class="string">&quot;ma&quot;</span>&#125;</span><br><span class="line">printIntSlice(s1)</span><br><span class="line">printStringSlice(s2)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>改变代码</li>
</ol>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">fanxing1(s1)</span><br><span class="line">fanxing1(s2)</span><br><span class="line"><span class="comment">//泛型 任意类型any，比较类型comparable,也可以string|int</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fanxing1</span>[<span class="title">T</span> <span class="title">any</span>]<span class="params">(arr []T, args ...T)</span></span> &#123;</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> arr &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;泛型&quot;</span>, v)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>泛型类型</li>
</ol>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> slice[T <span class="type">int</span>|<span class="type">float32</span>|<span class="type">float64</span>][]T</span><br><span class="line"><span class="keyword">var</span> a Slice[<span class="type">int</span>] = []<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>&#125;</span><br><span class="line"><span class="keyword">type</span> Mymap[Key <span class="type">string</span> | <span class="type">int</span>, value <span class="type">float32</span> | <span class="type">float64</span>] <span class="keyword">map</span>[Key]value</span><br><span class="line">   <span class="keyword">var</span> m1 Mymap[<span class="type">string</span>, <span class="type">float64</span>] = <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">float64</span>&#123;</span><br><span class="line">      <span class="string">&quot;Go&quot;</span>:   <span class="number">9.0</span>,</span><br><span class="line">      <span class="string">&quot;Java&quot;</span>: <span class="number">8.0</span>,</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Map 中的KEY和VALUE是类型形参<br>int|string 是KEY的类型约束, float32 | float64是VALUE的类型约束<br>KEY int|string, VALUE float32| float64整个一串文本因为定义了所有形参所以被称为类型形参列表Map[KEY,VALUE]是泛型类型，类型的名字就叫Map[KEY,VALUE]<br>var a MyMap[string,float64]&#x3D; xx 中的string和float64是类型实参，用于分别替换KEY和VALUE，实例化出了具体的类型MyMap[string, float64]</p>
</blockquote>
<ol start="4">
<li>泛型函数</li>
</ol>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1、定义泛型切片</span></span><br><span class="line"><span class="keyword">type</span> MySlice[T <span class="type">int</span> | <span class="type">float64</span>] []T</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2、定义泛型函数 传参类型为泛型</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s MySlice[T])</span></span> Sum() T &#123;</span><br><span class="line">   <span class="keyword">var</span> sum T</span><br><span class="line">   <span class="keyword">for</span> _, v := <span class="keyword">range</span> s &#123;</span><br><span class="line">      sum += v</span><br><span class="line">      fmt.Println(s)</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>自定义泛型类型</li>
</ol>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1、定义接口，约束类型为int</span></span><br><span class="line"><span class="keyword">type</span> Myint <span class="keyword">interface</span> &#123;</span><br><span class="line">   <span class="type">int</span> | <span class="type">int16</span> | <span class="type">int32</span> | <span class="type">int64</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2、自定义约束</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetNum</span>[<span class="title">T</span> <span class="title">Myint</span>]<span class="params">(a, b T)</span></span> T &#123; </span><br><span class="line">   <span class="keyword">if</span> a &gt; b &#123;</span><br><span class="line">      <span class="keyword">return</span> a</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> b</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3、方法实现</span></span><br><span class="line">   fmt.Println(GetNum(<span class="number">1</span>, <span class="number">2</span>))</span><br></pre></td></tr></table></figure>



<h2 id="4-GO-Web开发"><a href="#4-GO-Web开发" class="headerlink" title="4. GO Web开发"></a>4. GO Web开发</h2><h3 id="4-1-web开发框架"><a href="#4-1-web开发框架" class="headerlink" title="4.1 web开发框架"></a>4.1 web开发框架</h3><ul>
<li>Beego</li>
<li>Gin</li>
<li>Echo</li>
<li>Iris</li>
</ul>
<h3 id="4-2-Gin开发"><a href="#4-2-Gin开发" class="headerlink" title="4.2 Gin开发"></a>4.2 Gin开发</h3><blockquote>
<p>Gin 是一个用 Go (Golang) 编写的 HTTP Web 框架。 它具有类似 Martini 的 API，但性能比 Martini 快 40 倍。</p>
</blockquote>
<ul>
<li><a href="https://gin-gonic.com/zh-cn/docs/">gin官网</a></li>
</ul>
<ol>
<li>下载gin框架</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 得到go.mod文件</span></span><br><span class="line">go mod init go.mod</span><br><span class="line">go get -u github.com/gin-gonic/gin</span><br><span class="line"><span class="comment"># 最新可以使用go install</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>进行开发</li>
</ol>
<ul>
<li>前端</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../static/css/1.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;script src=&quot;/static/js/1.js&quot;&gt; --&gt;</span></span><br><span class="line">        首页</span><br><span class="line">        &#123;&#123; .message &#125;&#125;</span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/user/add&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;userName&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>后端</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;encoding/json&quot;</span></span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">	<span class="string">&quot;net/http&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">//获取访问地址</span></span><br><span class="line">	ginServer := gin.Default()</span><br><span class="line">	<span class="comment">//加载静态页面</span></span><br><span class="line">	ginServer.LoadHTMLGlob(<span class="string">&quot;templates/*&quot;</span>)</span><br><span class="line">	<span class="comment">//获取静态</span></span><br><span class="line">	ginServer.Static(<span class="string">&quot;/static&quot;</span>, <span class="string">&quot;./static&quot;</span>)</span><br><span class="line">	<span class="comment">//响应给前端</span></span><br><span class="line">	ginServer.GET(<span class="string">&quot;/index&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">		<span class="comment">// c.JSON(200, gin.H&#123;</span></span><br><span class="line">		<span class="comment">// 	&quot;message&quot;: &quot;hello&quot;,</span></span><br><span class="line">		<span class="comment">// &#125;)</span></span><br><span class="line">		c.HTML(http.StatusOK, <span class="string">&quot;index.html&quot;</span>, gin.H&#123;</span><br><span class="line">			<span class="string">&quot;message&quot;</span>: <span class="string">&quot;hello&quot;</span>,</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;)</span><br><span class="line">	<span class="comment">//获取请求参数</span></span><br><span class="line">	ginServer.GET(<span class="string">&quot;/user/info&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(ctx *gin.Context)</span></span> &#123;</span><br><span class="line">		userId := ctx.Query(<span class="string">&quot;userId&quot;</span>)</span><br><span class="line">		userName := ctx.Query(<span class="string">&quot;userName&quot;</span>)</span><br><span class="line">		ctx.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line">			<span class="string">&quot;userId&quot;</span>:   userId,</span><br><span class="line">			<span class="string">&quot;userName&quot;</span>: userName,</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;)</span><br><span class="line">	<span class="comment">//restful</span></span><br><span class="line">	ginServer.GET(<span class="string">&quot;/user/info/:userId/:userName&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(ctx *gin.Context)</span></span> &#123;</span><br><span class="line">		userId := ctx.Param(<span class="string">&quot;userId&quot;</span>)</span><br><span class="line">		userName := ctx.Param(<span class="string">&quot;userName&quot;</span>)</span><br><span class="line">		ctx.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line">			<span class="string">&quot;userId&quot;</span>:   userId,</span><br><span class="line">			<span class="string">&quot;userName&quot;</span>: userName,</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;)</span><br><span class="line">	<span class="comment">//后端传递接口json</span></span><br><span class="line">	ginServer.GET(<span class="string">&quot;/json&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(ctx *gin.Context)</span></span> &#123;</span><br><span class="line">		jsonStr := []<span class="type">byte</span>(<span class="string">&quot;&#123;\&quot;name\&quot;:\&quot;张三\&quot;,\&quot;age\&quot;:18,\&quot;high\&quot;:true,\&quot;sex\&quot;:\&quot;男\&quot;,\&quot;class\&quot;:&#123;\&quot;name\&quot;:\&quot;1班\&quot;,\&quot;level\&quot;:3&#125;&#125;&quot;</span>)</span><br><span class="line">		fmt.Println(jsonStr)</span><br><span class="line">		<span class="keyword">var</span> m <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">		err := json.Unmarshal(jsonStr, &amp;m)</span><br><span class="line">		<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">			fmt.Println(err)</span><br><span class="line">		&#125;</span><br><span class="line">		ctx.JSON(http.StatusOK, m)</span><br><span class="line"></span><br><span class="line">	&#125;)</span><br><span class="line">	<span class="comment">//输出 : &#123;&quot;lang&quot;:&quot;GO\u8bed\u8a00&quot;,&quot;tag&quot;:&quot;\u003cbr\u003e&quot;&#125;</span></span><br><span class="line">	ginServer.GET(<span class="string">&quot;/asciiJSON&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(ctx *gin.Context)</span></span> &#123;</span><br><span class="line">		data := <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line">			<span class="string">&quot;lang&quot;</span>: <span class="string">&quot;GO语言&quot;</span>,</span><br><span class="line">			<span class="string">&quot;tag&quot;</span>:  <span class="string">&quot;&lt;br&gt;&quot;</span>,</span><br><span class="line">		&#125;</span><br><span class="line">		ctx.AsciiJSON(http.StatusOK, data)</span><br><span class="line">	&#125;)</span><br><span class="line">	<span class="comment">//获取前端表单</span></span><br><span class="line">	ginServer.POST(<span class="string">&quot;/user/add&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(ctx *gin.Context)</span></span> &#123;</span><br><span class="line">		userName := ctx.PostForm(<span class="string">&quot;userName&quot;</span>)</span><br><span class="line">		password := ctx.PostForm(<span class="string">&quot;password&quot;</span>)</span><br><span class="line">		ctx.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line">			<span class="string">&quot;msg&quot;</span>:      <span class="string">&quot;OK&quot;</span>,</span><br><span class="line">			<span class="string">&quot;userName&quot;</span>: userName,</span><br><span class="line">			<span class="string">&quot;password&quot;</span>: password,</span><br><span class="line">		&#125;)</span><br><span class="line"></span><br><span class="line">	&#125;)</span><br><span class="line">	<span class="comment">//路由</span></span><br><span class="line">	ginServer.GET(<span class="string">&quot;/router&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(ctx *gin.Context)</span></span> &#123;</span><br><span class="line">		ctx.Redirect(http.StatusMovedPermanently, <span class="string">&quot;https://www.bilibili.com&quot;</span>)</span><br><span class="line">	&#125;)</span><br><span class="line"></span><br><span class="line">	<span class="comment">//设置访问端口</span></span><br><span class="line">	ginServer.Run(<span class="string">&quot;:8080&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="4-3-xorm开发"><a href="#4-3-xorm开发" class="headerlink" title="4.3 xorm开发"></a>4.3 xorm开发</h3><ul>
<li><a href="https://github.com/go-xorm/xorm/blob/master/README_CN.md">xorm官网文档</a></li>
<li><a href="http://www.topgoer.com/">GO学习网站</a></li>
<li><a href="https://xorm.io/zh/">xorm文档</a></li>
</ul>
<ol>
<li>简述</li>
</ol>
<blockquote>
<p>xorm是一个Go语言的ORM库</p>
</blockquote>
<ol start="2">
<li>开发环境</li>
</ol>
<ul>
<li>初始化</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">go mod init go.mod</span><br><span class="line">go get -u github.com/go-xorm/xorm</span><br><span class="line">go get -u github.com/go-sql-driver/mysql</span><br><span class="line"><span class="comment"># 引用项目需要的依赖增加到go.mod文件。</span></span><br><span class="line"><span class="comment"># 去掉go.mod文件中项目不需要的依赖。</span></span><br><span class="line">go mod tidy</span><br></pre></td></tr></table></figure>

<ul>
<li>xorm开发</li>
</ul>
<blockquote>
<p>import 下划线（如：_ “<a href="https://so.csdn.net/so/search?q=github&spm=1001.2101.3001.7020">github</a>.com&#x2F;go-sql-driver&#x2F;mysql”）的作用：当导入一个包时，该包下的文件里所有 init() 函数 都会被执行</p>
<p>import 和引用的包名之间加点（.）操作的含义就是这个包导入之后在调用这个包的函数时，可以省略前缀的包名 import . “fmt”</p>
<p>别名操作顾名思义可以把包命名成另一个用起来容易记忆的名字import f “fmt”</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">	<span class="string">&quot;time&quot;</span></span><br><span class="line"></span><br><span class="line">	_ <span class="string">&quot;github.com/go-sql-driver/mysql&quot;</span></span><br><span class="line">	<span class="string">&quot;xorm.io/xorm&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> (</span><br><span class="line">		userName  <span class="type">string</span> = <span class="string">&quot;root&quot;</span></span><br><span class="line">		password  <span class="type">string</span> = <span class="string">&quot;root&quot;</span></span><br><span class="line">		ipAddress <span class="type">string</span> = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">		port      <span class="type">int</span>    = <span class="number">3306</span></span><br><span class="line">		dbName    <span class="type">string</span> = <span class="string">&quot;temp1&quot;</span></span><br><span class="line">		charset   <span class="type">string</span> = <span class="string">&quot;utf8mb4&quot;</span></span><br><span class="line">	)</span><br><span class="line">	<span class="comment">//构建数据库连接信息</span></span><br><span class="line">	dataSourceName := fmt.Sprintf(<span class="string">&quot;%s:%s@tcp(%s:%d)/%s?charset=%s&quot;</span>, userName, password, ipAddress, port, dbName, charset)</span><br><span class="line">	engine, err := xorm.NewEngine(<span class="string">&quot;mysql&quot;</span>, dataSourceName)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;数据库连接失败&quot;</span>, err)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">type</span> TempUser <span class="keyword">struct</span> &#123;</span><br><span class="line">		Id      <span class="type">int64</span></span><br><span class="line">		Name    <span class="type">string</span></span><br><span class="line">		Salt    <span class="type">string</span></span><br><span class="line">		Age     <span class="type">int</span></span><br><span class="line">		Passwd  <span class="type">string</span>    <span class="string">`xorm:&quot;varchar(200)&quot;`</span></span><br><span class="line">		Created time.Time <span class="string">`xorm:&quot;created&quot;`</span></span><br><span class="line">		Updated time.Time <span class="string">`xorm:&quot;updated&quot;`</span></span><br><span class="line">	&#125;</span><br><span class="line">	err1 := engine.Sync2(<span class="built_in">new</span>(TempUser))</span><br><span class="line">	<span class="keyword">if</span> err1 != <span class="literal">nil</span> &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;同步失败&quot;</span>, err1)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//插入开始</span></span><br><span class="line">	<span class="comment">// user := TempUser&#123;Id: 100, Name: &quot;xxy&quot;, Salt: &quot;11&quot;, Age: 25, Passwd: &quot;123&quot;&#125;</span></span><br><span class="line">	<span class="comment">// var users []TempUser</span></span><br><span class="line">	<span class="comment">// users = append(users, TempUser&#123;Id: 1001, Name: &quot;xxy&quot;, Salt: &quot;11&quot;, Age: 25, Passwd: &quot;123&quot;&#125;)</span></span><br><span class="line">	<span class="comment">// users = append(users, TempUser&#123;Id: 1002, Name: &quot;xxy&quot;, Salt: &quot;11&quot;, Age: 25, Passwd: &quot;123&quot;&#125;)</span></span><br><span class="line">	<span class="comment">// users = append(users, TempUser&#123;Id: 1003, Name: &quot;xxy&quot;, Salt: &quot;11&quot;, Age: 25, Passwd: &quot;123&quot;&#125;)</span></span><br><span class="line">	<span class="comment">// affected, _ := engine.Insert(&amp;users)</span></span><br><span class="line">	<span class="comment">// fmt.Println(affected)</span></span><br><span class="line">	<span class="comment">// if affected &gt;= 1 &#123;</span></span><br><span class="line">	<span class="comment">// 	fmt.Println(&quot;插入成功&quot;)</span></span><br><span class="line">	<span class="comment">// &#125; else &#123;</span></span><br><span class="line">	<span class="comment">// 	fmt.Println(&quot;插入失败&quot;)</span></span><br><span class="line">	<span class="comment">// &#125;</span></span><br><span class="line">	<span class="comment">//插入结束</span></span><br><span class="line">	<span class="comment">//更新开始</span></span><br><span class="line">	<span class="comment">// var ids = []int64&#123;100, 1001&#125;</span></span><br><span class="line">	<span class="comment">// user := TempUser&#123;Name: &quot;zzxxy&quot;, Salt: &quot;10&quot;, Age: 24, Passwd: &quot;123&quot;&#125;</span></span><br><span class="line">	<span class="comment">// n, _ := engine.ID(100).Update(&amp;user)</span></span><br><span class="line">	<span class="comment">// n, err2 := engine.In(&quot;Id&quot;, ids).Update(&amp;user)</span></span><br><span class="line">	<span class="comment">// if err2 != nil &#123;</span></span><br><span class="line">	<span class="comment">// 	fmt.Println(&quot;更新失败&quot;, err2)</span></span><br><span class="line">	<span class="comment">// &#125;</span></span><br><span class="line">	<span class="comment">// fmt.Println(n)</span></span><br><span class="line">	<span class="comment">//更新结束</span></span><br><span class="line">	<span class="comment">//删除开始</span></span><br><span class="line">	<span class="comment">// user := TempUser&#123;Name: &quot;zzxxy&quot;, Salt: &quot;10&quot;, Age: 24, Passwd: &quot;123&quot;&#125;</span></span><br><span class="line">	<span class="comment">// n, _ := engine.ID(10).Delete(&amp;user)</span></span><br><span class="line">	<span class="comment">// if n &gt;= 1 &#123;</span></span><br><span class="line">	<span class="comment">// 	fmt.Printf(&quot;删除%d条数据&quot;, n)</span></span><br><span class="line">	<span class="comment">// &#125;</span></span><br><span class="line">	<span class="comment">//删除结束</span></span><br><span class="line">	<span class="comment">//查询开始</span></span><br><span class="line">	<span class="comment">//Query</span></span><br><span class="line">	<span class="comment">// results, _ := engine.Query(&quot;select * from temp_user LIMIT 0, 200&quot;)</span></span><br><span class="line">	<span class="comment">// results1, _ := engine.Where(&quot;salt = 10&quot;).Query(&quot;select * from temp_user&quot;)</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// results2, _ := engine.QueryString(&quot;select * from temp_user LIMIT 0, 200&quot;)</span></span><br><span class="line">	<span class="comment">// results3, _ := engine.Where(&quot;salt = 10&quot;).QueryString(&quot;select * from temp_user&quot;)</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// results4, _ := engine.QueryInterface(&quot;select * from temp_user LIMIT 0, 200&quot;)</span></span><br><span class="line">	<span class="comment">// results5, _ := engine.Where(&quot;salt = 11&quot;).QueryInterface(&quot;select * from temp_user&quot;)</span></span><br><span class="line">	<span class="comment">// fmt.Println(&quot;Query----------&quot;)</span></span><br><span class="line">	<span class="comment">// fmt.Println(results)</span></span><br><span class="line">	<span class="comment">// fmt.Println(&quot;Query条件----------&quot;)</span></span><br><span class="line">	<span class="comment">// fmt.Println(results1)</span></span><br><span class="line">	<span class="comment">// fmt.Println(&quot;QueryString----------&quot;)</span></span><br><span class="line">	<span class="comment">// fmt.Println(results2)</span></span><br><span class="line">	<span class="comment">// fmt.Println(&quot;QueryString条件----------&quot;)</span></span><br><span class="line">	<span class="comment">// fmt.Println(results3)</span></span><br><span class="line">	<span class="comment">// fmt.Println(&quot;QueryInterface----------&quot;)</span></span><br><span class="line">	<span class="comment">// fmt.Println(results4)</span></span><br><span class="line">	<span class="comment">// fmt.Println(&quot;QueryInterface条件----------&quot;)</span></span><br><span class="line">	<span class="comment">// fmt.Println(results5)</span></span><br><span class="line">	<span class="comment">//Get查询单条记录</span></span><br><span class="line">	<span class="comment">// user := TempUser&#123;Name: &quot;xxy&quot;&#125;</span></span><br><span class="line">	<span class="comment">// engine.Where(&quot;name = ?&quot;, user.Name).Desc(&quot;id&quot;).Get(&amp;user)</span></span><br><span class="line">	<span class="comment">// fmt.Println(user)</span></span><br><span class="line">	<span class="comment">//Get获取指定字段</span></span><br><span class="line">	<span class="comment">// var name string</span></span><br><span class="line">	<span class="comment">// engine.Table(&amp;user).Where(&quot;id = ?&quot;, 100).Cols(&quot;name&quot;).Get(&amp;name)</span></span><br><span class="line">	<span class="comment">// fmt.Println(name)</span></span><br><span class="line">	<span class="comment">//Find找寻多条记录，当然可以使用Join和extends来组合使用</span></span><br><span class="line">	<span class="comment">// var users []TempUser</span></span><br><span class="line">	<span class="comment">// engine.Where(&quot;age=?&quot;, 25).And(&quot;passwd=?&quot;, 123).Limit(10, 0).Find(&amp;users)</span></span><br><span class="line">	<span class="comment">// fmt.Println(users)</span></span><br><span class="line">	<span class="comment">//获取记录条数</span></span><br><span class="line">	<span class="comment">// counts, _ := engine.Count(&amp;user)</span></span><br><span class="line">	<span class="comment">// fmt.Println(counts)</span></span><br><span class="line">	<span class="comment">//Iterate或Rows遍历数据</span></span><br><span class="line">	<span class="comment">// engine.Iterate(&amp;TempUser&#123;Passwd: &quot;123&quot;&#125;, func(idx int, bean interface&#123;&#125;) error &#123;</span></span><br><span class="line">	<span class="comment">// 	user := bean.(*TempUser)</span></span><br><span class="line">	<span class="comment">// 	fmt.Println(user)</span></span><br><span class="line">	<span class="comment">// 	return nil</span></span><br><span class="line">	<span class="comment">// &#125;)</span></span><br><span class="line">	<span class="comment">//Rows遍历数据</span></span><br><span class="line">	<span class="comment">// rows, _ := engine.Rows(&amp;TempUser&#123;Passwd: &quot;123&quot;&#125;)</span></span><br><span class="line">	<span class="comment">// defer rows.Close()</span></span><br><span class="line">	<span class="comment">// userBean := new(TempUser)</span></span><br><span class="line">	<span class="comment">// for rows.Next() &#123;</span></span><br><span class="line">	<span class="comment">// 	rows.Scan(userBean)</span></span><br><span class="line">	<span class="comment">// 	fmt.Println(userBean)</span></span><br><span class="line">	<span class="comment">// &#125;</span></span><br><span class="line">	<span class="comment">//查询结束</span></span><br><span class="line">	<span class="comment">//执行SQL开始</span></span><br><span class="line">	<span class="comment">// affected, err2 := engine.Exec(&quot;update temp_user set Age = ? where Name = ?&quot;, 24, &quot;xxy&quot;)</span></span><br><span class="line">	<span class="comment">// if err2 != nil &#123;</span></span><br><span class="line">	<span class="comment">// 	fmt.Println(&quot;更新失败&quot;)</span></span><br><span class="line">	<span class="comment">// &#125;</span></span><br><span class="line">	<span class="comment">// fmt.Println(&quot;更新成功&quot;, affected)</span></span><br><span class="line">	<span class="comment">//执行SQL结束</span></span><br><span class="line">	<span class="comment">//事务开始</span></span><br><span class="line">	session := engine.NewSession()</span><br><span class="line">	<span class="keyword">defer</span> session.Close()</span><br><span class="line">	session.Begin()</span><br><span class="line">	<span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">		err := <span class="built_in">recover</span>()</span><br><span class="line">		<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">			fmt.Println(err)</span><br><span class="line">			fmt.Println(<span class="string">&quot;rollback&quot;</span>)</span><br><span class="line">			session.Rollback()</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			session.Commit()</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;()</span><br><span class="line">	<span class="comment">//增加</span></span><br><span class="line">	user1 := TempUser&#123;Id: <span class="number">111</span>, Name: <span class="string">&quot;xxy&quot;</span>, Salt: <span class="string">&quot;11&quot;</span>, Age: <span class="number">25</span>, Passwd: <span class="string">&quot;123&quot;</span>&#125;</span><br><span class="line">	<span class="keyword">if</span> _, err := session.Insert(&amp;user1); err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="built_in">panic</span>(err)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//修改</span></span><br><span class="line">	user2 := TempUser&#123;Id: <span class="number">111</span>, Name: <span class="string">&quot;xxyz&quot;</span>, Salt: <span class="string">&quot;112&quot;</span>, Age: <span class="number">25</span>, Passwd: <span class="string">&quot;123&quot;</span>&#125;</span><br><span class="line">	<span class="keyword">if</span> _, err := session.Where(<span class="string">&quot;id=?&quot;</span>, user2.Id).Update(&amp;user2); err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="built_in">panic</span>(err)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//删除</span></span><br><span class="line">	<span class="keyword">if</span> _, err := session.Exec(<span class="string">&quot;delete from temp_user where id = 100&quot;</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="built_in">panic</span>(err)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//事务结束</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-4-gRPC"><a href="#4-4-gRPC" class="headerlink" title="4.4 gRPC"></a>4.4 gRPC</h3><ul>
<li><a href="https://grpc.io/">gRPC官网</a></li>
<li><a href="http://doc.oschina.net/grpc">gRPC中文文档</a></li>
</ul>
<ol>
<li>简述</li>
</ol>
<blockquote>
<p>一个高性能、开源的通用RPC框架</p>
</blockquote>
<ol start="2">
<li>优点</li>
</ol>
<ul>
<li>更高效的进程通信：使用基于protocol buffer在Http2 中以二进制协议通信，而不是JSON、XML文本格式,序列化和反序列化</li>
<li>简单定义的服务接口、易扩展</li>
<li>强类型、跨语言</li>
<li>一元RPC、服务端流、客户端流、双工流</li>
</ul>
<ol start="3">
<li>下载和环境配置</li>
</ol>
<ul>
<li><a href="https://github.com/protocolbuffers/protobuf/releases/tag/v22.2">Protocol Buffers下载</a></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置系统环境Path</span></span><br><span class="line">D:\install\protoc-22.2-win64\bin</span><br><span class="line"><span class="comment"># 测试是否成功</span></span><br><span class="line">protoc </span><br></pre></td></tr></table></figure>

<blockquote>
<p>Protocol Buffers一种数据描述语言编译器，不依赖于语言和平台并且可扩展性极强,广泛用于各种结构化信息存储和交换</p>
</blockquote>
<ul>
<li>安装grpc核心库</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化</span></span><br><span class="line">go mod init go.mod </span><br><span class="line"><span class="comment"># 新版grpc核心库</span></span><br><span class="line">go get -u google.golang.org/grpc</span><br><span class="line"><span class="comment"># 旧版grpc核心库</span></span><br><span class="line">go install github.com/golang/protobuf/protoc-gen-go</span><br></pre></td></tr></table></figure>

<ul>
<li>安装go的protoc代码生成工具库</li>
</ul>
<blockquote>
<p>已经下载的可以使用go install，没有下载用go get</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">go install google.golang.org/protobuf/cmd/protoc-gen-go@latest</span><br><span class="line">go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest</span><br><span class="line"><span class="comment"># go.mod模板需要</span></span><br><span class="line">go get google.golang.org/protobuf/cmd/protoc-gen-go</span><br><span class="line">go get google.golang.org/grpc/cmd/protoc-gen-go-grpc</span><br></pre></td></tr></table></figure>

<blockquote>
<p>完成后可以查看自己gowork目录下bin有没有exe文件</p>
</blockquote>
<ol start="4">
<li>编写proto文件</li>
</ol>
<figure class="highlight protobuf"><table><tr><td class="code"><pre><span class="line"><span class="comment">//这是说明我们使用的是proto3语法</span></span><br><span class="line">syntax=<span class="string">&quot;proto3&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这部分的内容是关于最后生成的go文件是处在哪个目录哪个包中，代表在当前目录生成，service代表了生成的go文件的包名是service</span></span><br><span class="line"><span class="keyword">option</span> go_package =<span class="string">&quot;.;server&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//然后我们需要定义一个服务，在这个服务中需要有一个方法，这个方法可以接受客户端的参数，再返回服务端的响应</span></span><br><span class="line"><span class="comment">//其实很容易可以看出，我们定义了一个Server，称为SayHello，这个服只有一个rpc方法，名为SayHello。</span></span><br><span class="line"><span class="comment">//这个方法会发送一个HelloRequest，然后返回一个HelloResponse。</span></span><br><span class="line"><span class="keyword">service </span><span class="title class_">SayHello</span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">rpc</span> SayHello(HelloRequest) <span class="keyword">returns</span> (HelloResponse)</span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//message关键字，其实你可以理解为Golang中的结构体。</span></span><br><span class="line"><span class="comment">//这里比较特别的是变量后面的“赋值”。注意，这里并不是赋值，而是定义这个变量在这个message中的位置。</span></span><br><span class="line"><span class="keyword">message </span><span class="title class_">HelloRequest</span>&#123;</span><br><span class="line">  <span class="type">string</span> requestName = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">message </span><span class="title class_">HelloResponse</span>&#123;</span><br><span class="line">  <span class="type">string</span> responseMsg = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>在&#x2F;proto目录下执行,会在&#x2F;proto生成go文件</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># --go_out不是命令，加配置环境path %GOPATH%\bin</span></span><br><span class="line">protoc --go_out=. hello.proto</span><br><span class="line">protoc --go-grpc_out=. hello.proto</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>proto文件介绍</li>
</ol>
<ul>
<li>message</li>
</ul>
<blockquote>
<p>message:protobuf 中定义一个消息类型式是通过关键字message字段指定的。消息就是需要传输数据格式定义。message 关键字类似于C++中的class，JAVA中的class，go中的struct。在消息中承载的数据分别对应于每一个字段，其中每个字段都有一个名字和一种类型,一个proto文件中可以定义多个消息类型</p>
</blockquote>
<ul>
<li>字段规则</li>
</ul>
<blockquote>
<p>optional:消息体中的可选字段，protobuf3没有了required，optional等说明关键字，都默认为optional,</p>
<p>repeate:消息体中可重复字段，重复的值的顺序会被保留着go中重复的回被定义为切片</p>
</blockquote>
<ul>
<li>消息号</li>
</ul>
<blockquote>
<p>在消息体的定义中，每个字段都必须要有一个唯一的标识号，标识号是[1,2^29-1]范围内的一个整数。</p>
</blockquote>
<ul>
<li>嵌套信息</li>
</ul>
<figure class="highlight protobuf"><table><tr><td class="code"><pre><span class="line"><span class="keyword">message </span><span class="title class_">PersonInfo</span>&#123;</span><br><span class="line">     <span class="keyword">message </span><span class="title class_">Person</span>&#123;</span><br><span class="line">     <span class="type">string</span> name = <span class="number">1</span>;</span><br><span class="line">     <span class="type">int32</span> height = <span class="number">2</span>;</span><br><span class="line">     <span class="keyword">repeated</span> <span class="type">int32</span> weight = <span class="number">3</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">repeated</span> Person info = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//引用</span></span><br><span class="line"><span class="keyword">message </span><span class="title class_">PersonMessage</span>&#123;</span><br><span class="line">   PersonInfo.Person info = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>服务定义</li>
</ul>
<blockquote>
<p>如果想要将消息类型用在PRC系统中，可以在&#x3D;&#x3D;.proto文件中定义一个RPC服务接口&#x3D;&#x3D;，protocol buffer编译器将会根据所选择的不同语言生成服务接口代码及存根</p>
</blockquote>
<figure class="highlight protobuf"><table><tr><td class="code"><pre><span class="line"><span class="keyword">service </span><span class="title class_">SayHello</span>&#123;</span><br><span class="line">  # <span class="function"><span class="keyword">rpc</span> 服务函数名(参数) 返回 (返回参数)</span></span><br><span class="line"><span class="function">  <span class="keyword">rpc</span> SayHello(HelloRequest) <span class="keyword">returns</span> (HelloResponse)</span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="7">
<li>服务端编写</li>
</ol>
<ul>
<li>创建gRPC Server 对象，你可以理解为它是Server端的抽象对象</li>
<li>将server(其包含需要被调用的服务端接口)注册到gRPC Server的内部注册中心，这样可以在接受到请求时，通过内部的服务发现，发现该服务端接口并转接进行逻辑处理</li>
<li>创建Listen，监听TCP端口</li>
<li>gRPC Server 开始 lis.Accept，知道Stop</li>
</ul>
<blockquote>
<p>无法导入</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">go mod tidy</span><br></pre></td></tr></table></figure>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;context&quot;</span></span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">	<span class="string">&quot;net&quot;</span></span><br><span class="line"></span><br><span class="line">	pb <span class="string">&quot;go.mod/grpcdemo/hello-server/proto&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="string">&quot;google.golang.org/grpc&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// hello</span></span><br><span class="line"><span class="keyword">type</span> server <span class="keyword">struct</span> &#123;</span><br><span class="line">	pb.UnimplementedSayHelloServer</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *server)</span></span> SayHello(ctx context.Context, req *pb.HelloRequest) (*pb.HelloResponse, <span class="type">error</span>) &#123;</span><br><span class="line">	fmt.Printf(<span class="string">&quot;hello&quot;</span> + req.RequestName)</span><br><span class="line">	<span class="keyword">return</span> &amp;pb.HelloResponse&#123;ResponseMsg: <span class="string">&quot;hello&quot;</span> + req.RequestName&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">//开启端口</span></span><br><span class="line">	Listen, _ := net.Listen(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;:9090&quot;</span>)</span><br><span class="line">	<span class="comment">//创建grpc服务,注册,提供接口</span></span><br><span class="line">	grpcServer := grpc.NewServer()</span><br><span class="line">	pb.RegisterSayHelloServer(grpcServer, &amp;server&#123;&#125;)</span><br><span class="line">	<span class="comment">//监听,启动服务</span></span><br><span class="line">	err := grpcServer.Server(Listen)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		fmt.Printf(<span class="string">&quot;启动失败: %v&quot;</span>, err)</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="8">
<li>客户端编写</li>
</ol>
<ul>
<li>创建与给定目标（服务端）的连接交互</li>
<li>创建server的客户端对象</li>
<li>发送RPC请求，等待同步响应，得到回调后返回响应结果</li>
<li>输出响应结果</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;context&quot;</span></span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="string">&quot;log&quot;</span></span><br><span class="line"></span><br><span class="line">	pb <span class="string">&quot;go.mod/grpcdemo/hello-client/proto&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="string">&quot;google.golang.org/grpc&quot;</span></span><br><span class="line">	<span class="string">&quot;google.golang.org/grpc/credentials/insecure&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">//连接</span></span><br><span class="line">	conn, err := grpc.Dial(<span class="string">&quot;127.0.0.1:9090&quot;</span>, grpc.WithTransportCredentials(insecure.NewCredentials()))</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Fatalf(<span class="string">&quot;不能连接:%v&quot;</span>, err)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//关闭</span></span><br><span class="line">	<span class="keyword">defer</span> conn.Close()</span><br><span class="line">	<span class="comment">//建立连接</span></span><br><span class="line">	client := pb.NewSayHelloClient(conn)</span><br><span class="line">	<span class="comment">//进行请求</span></span><br><span class="line">	resp, err := client.SayHello(context.Background(), &amp;pb.HelloRequest&#123;RequestName: <span class="string">&quot; xxy&quot;</span>&#125;)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Fatalf(<span class="string">&quot;不能请求:%v&quot;</span>, err)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//获得内容输出打印</span></span><br><span class="line">	fmt.Println(resp.GetResponseMsg())</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="9">
<li>认证-安全</li>
</ol>
<blockquote>
<p><strong>gRPC 通常默认是使用 protobuf 来作为传输协议</strong>，grpc将各种认证方式浓缩统一到一个凭证上，可以单独使用一种凭证，也可以多种凭证组合，提供统一的API认证方式</p>
</blockquote>
<ul>
<li>方式<ul>
<li>SSL&#x2F;TLS 认证方式（采用 http2 协议）</li>
<li>基于 Token 的认证方式（基于安全连接）</li>
<li>不采用任何措施的连接，这是不安全的连接（默认采用 http1）</li>
<li>自定义的身份认证</li>
</ul>
</li>
</ul>
<ol start="10">
<li>SSL&#x2F;TLS认证方式</li>
</ol>
<ul>
<li><p><a href="https://www.openssl.org/source/">SSL&#x2F;TLS官网下载</a></p>
</li>
<li><p><a href="https://slproweb.com/products/Win32OpenSSL.html">便捷版安装包</a></p>
</li>
<li><p>证书参数</p>
<ul>
<li>key：服务器上的私钥文件，用于对发送给客户端数据的加密，以及对从客户端接收到的数据解密</li>
<li>csr：证书签名请求文件，用于提交给证书颁发机构(CA) 对证书签名</li>
<li>crt：由证书颁发机构(CA) 签名后的证书，或者是开发者自签名的证书，包含证书持有人的信息，持有人的公钥，以及签名者的签名等信息</li>
<li>pem: 是基于Base64编码的证书格式，扩展名包括PEM、CRT和CER</li>
</ul>
</li>
<li><p>生成参数</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1、生成私钥</span></span><br><span class="line">openssl genrsa -out server.key 2048</span><br><span class="line"><span class="comment"># 2、生成证书 全部回车即可，可以不填</span></span><br><span class="line">openssl req -new -x509 -key server.key -out server.crt -days 3600</span><br><span class="line"><span class="comment"># 国家名称</span></span><br><span class="line">Country Name (2 letter code) [AU]:</span><br><span class="line"><span class="comment"># 省名称</span></span><br><span class="line">State or Province Name (full name) [Some-State]:</span><br><span class="line"><span class="comment"># 城市名称</span></span><br><span class="line">Locality Name (eg, city) []:</span><br><span class="line"><span class="comment"># 公司组织名称</span></span><br><span class="line">Organization Name (eg, company) [Internet Widgits Pty Ltd]:</span><br><span class="line"><span class="comment"># 部门名称</span></span><br><span class="line">Organizational Unit Name (eg, section) []:</span><br><span class="line"><span class="comment"># 服务器or网站名称</span></span><br><span class="line">Common Name (e.g. server FQDN or YOUR name) []:</span><br><span class="line"><span class="comment"># 邮件</span></span><br><span class="line">Email Address []:</span><br><span class="line"><span class="comment"># 3、生成 csr</span></span><br><span class="line">openssl req -new -key server.key -out server.csr</span><br></pre></td></tr></table></figure>

<ul>
<li>更改openssl.cnf</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 更改openssl.cnf </span></span><br><span class="line"><span class="comment">#1) 复制一份你安装的openssl的bin目录里面的openssl.cnf文件到你项目所在的目录</span></span><br><span class="line"><span class="comment">#2) 找到 [ CA_default ] 打开 copy_extensions = copy (就是把前面的#去掉)</span></span><br><span class="line"><span class="comment">#3）找到 [ req ] 打开 req_extensions = v3_req # The extensions to add to a certificate request</span></span><br><span class="line"><span class="comment">#4) 找到 [ v3_req ] 添加 subjectAltName = @alt_names</span></span><br><span class="line"><span class="comment">#5) 添加新的标签[ alt_name ] 和标签字段</span></span><br><span class="line"><span class="comment">#指定特定的网站才能访问</span></span><br><span class="line">DNS.1 = *.newbie.com</span><br></pre></td></tr></table></figure>

<ul>
<li>生成证书</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#生成证书私钥test.key</span></span><br><span class="line">openssl genpkey -algorithm RSA -out test.key</span><br><span class="line"></span><br><span class="line"><span class="comment">#通过私钥test.key生成证书请求文件test.csr (注意cfg和cnf)</span></span><br><span class="line">openssl req -new -nodes -key test.key -out test.csr -days 3650 -subj <span class="string">&quot;/C=cn/OU=myorg/O=mycomp/CN=myname&quot;</span> -config ./openssl.cnf -extensions v3_req</span><br><span class="line"><span class="comment">#test.csr是上面生成的证书请求文件。ca.crt/server.key是CA证书文件和key，用来对test.csr进行签名认证。这两个文件在第一部分生成。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#生成SAN证书 pem</span></span><br><span class="line">openssl x509 -req -days 365 -<span class="keyword">in</span> test.csr -out test.pem -CA server.crt -CAkey server.key -CAcreateserial -extfile ./openssl.cnf -extensions v3_req</span><br></pre></td></tr></table></figure>

<ul>
<li>Server端</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;context&quot;</span></span><br><span class="line">	<span class="string">&quot;google.golang.org/grpc&quot;</span></span><br><span class="line">	<span class="string">&quot;google.golang.org/grpc/credentials&quot;</span></span><br><span class="line">	<span class="string">&quot;log&quot;</span></span><br><span class="line">	<span class="string">&quot;net&quot;</span></span><br><span class="line">	pb <span class="string">&quot;xxb-grpc-study/hello-server/proto&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">//hello server 服务器端</span></span><br><span class="line"><span class="keyword">type</span> server <span class="keyword">struct</span> &#123;</span><br><span class="line">	pb.UnimplementedSayHelloServer</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法重写</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *server)</span></span> SayHello(ctx context.Context, req *pb.HelloRequest) (*pb.HelloResponse, <span class="type">error</span>) &#123;</span><br><span class="line">	<span class="keyword">return</span> &amp;pb.HelloResponse&#123;ResponseMsg: <span class="string">&quot;hello&quot;</span> + req.RequestName&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">//从提供的根证书颁发机构证书文件构建TLS凭据，两个参数分别是自签名证书和私钥文件 改</span></span><br><span class="line">	creds, _ := credentials.NewServerTLSFromFile(<span class="string">&quot;D:\\Go_Dev\\src\\xxb-grpc-study\\key\\test.pem&quot;</span>, <span class="string">&quot;D:\\Go_Dev\\src\\xxb-grpc-study\\key\\test.key&quot;</span>)</span><br><span class="line">	<span class="comment">//开启端口</span></span><br><span class="line">	listen, _ := net.Listen(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;:9090&quot;</span>)</span><br><span class="line">	<span class="comment">//创建grpc服务 改</span></span><br><span class="line">	grpcServer := grpc.NewServer(grpc.Creds(creds))</span><br><span class="line">	<span class="comment">//在grpc服务端中去注册我们自己编写的服务,注册一定是引用注册</span></span><br><span class="line">	pb.RegisterSayHelloServer(grpcServer, &amp;server&#123;&#125;)</span><br><span class="line">	<span class="comment">//启动服务</span></span><br><span class="line">	err := grpcServer.Serve(listen)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Println(<span class="string">&quot;启动失败~&quot;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>Client端</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;context&quot;</span></span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">	<span class="string">&quot;google.golang.org/grpc&quot;</span></span><br><span class="line">	<span class="string">&quot;google.golang.org/grpc/credentials&quot;</span></span><br><span class="line">	<span class="string">&quot;log&quot;</span></span><br><span class="line">	pb <span class="string">&quot;xxb-grpc-study/hello-client/proto&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">//改</span></span><br><span class="line">	creds, _ := credentials.NewClientTLSFromFile(<span class="string">&quot;D:\\Go_Dev\\src\\xxb-grpc-study\\key\\test.pem&quot;</span>, <span class="string">&quot;*.newbie.com&quot;</span>)</span><br><span class="line"></span><br><span class="line">	<span class="comment">//WithTransportCredentials返回一个DialOption，用于配置连接级别的安全凭证(例如，TLS/SSL)。这不能与WithCredentialsBundle一起使用。改</span></span><br><span class="line">	conn, err := grpc.Dial(<span class="string">&quot;127.0.0.1:9090&quot;</span>, grpc.WithTransportCredentials(creds))</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Fatalf(<span class="string">&quot;Did not connect:%v&quot;</span>, err)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">defer</span> conn.Close()</span><br><span class="line">	<span class="comment">//建立连接</span></span><br><span class="line">	client := pb.NewSayHelloClient(conn)</span><br><span class="line">	<span class="comment">//rpc方法调用</span></span><br><span class="line">	resp, _ := client.SayHello(context.Background(), &amp;pb.HelloRequest&#123;RequestName: <span class="string">&quot; newbie&quot;</span>&#125;)</span><br><span class="line">	fmt.Println(resp.GetResponseMsg())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="11">
<li>Token认证</li>
</ol>
<ul>
<li>Server端</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;context&quot;</span></span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">	<span class="string">&quot;google.golang.org/grpc&quot;</span></span><br><span class="line">	<span class="string">&quot;google.golang.org/grpc/credentials/insecure&quot;</span></span><br><span class="line">	<span class="string">&quot;log&quot;</span></span><br><span class="line">	pb <span class="string">&quot;xxb-grpc-study/hello-client/proto&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> ClientTokenAuth <span class="keyword">struct</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c ClientTokenAuth)</span></span> GetRequestMetadata(ctx context.Context, uri ...<span class="type">string</span>) (<span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span>, <span class="type">error</span>) &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span>&#123;</span><br><span class="line">		<span class="string">&quot;appId&quot;</span>:  <span class="string">&quot;newbie&quot;</span>,</span><br><span class="line">		<span class="string">&quot;appKey&quot;</span>: <span class="string">&quot;123123&quot;</span>,</span><br><span class="line">	&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c ClientTokenAuth)</span></span> RequireTransportSecurity() <span class="type">bool</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">//creds, _ := credentials.NewClientTLSFromFile(&quot;D:\\Go_Dev\\src\\xxb-grpc-study\\key\\test.pem&quot;, &quot;*.newbie.com&quot;)</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//WithTransportCredentials返回一个DialOption，用于配置连接级别的安全凭证(例如，TLS/SSL)。这不能与WithCredentialsBundle一起使用。</span></span><br><span class="line">	<span class="keyword">var</span> opts []grpc.DialOption</span><br><span class="line">	opts = <span class="built_in">append</span>(opts, grpc.WithTransportCredentials(insecure.NewCredentials()))</span><br><span class="line">	opts = <span class="built_in">append</span>(opts, grpc.WithPerRPCCredentials(<span class="built_in">new</span>(ClientTokenAuth)))</span><br><span class="line"></span><br><span class="line">	conn, err := grpc.Dial(<span class="string">&quot;127.0.0.1:9090&quot;</span>, opts...)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Fatalf(<span class="string">&quot;Did not connect:%v&quot;</span>, err)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">defer</span> conn.Close()</span><br><span class="line">	<span class="comment">//建立连接</span></span><br><span class="line">	client := pb.NewSayHelloClient(conn)</span><br><span class="line">	<span class="comment">//rpc方法调用</span></span><br><span class="line">	resp, _ := client.SayHello(context.Background(), &amp;pb.HelloRequest&#123;RequestName: <span class="string">&quot; newbie&quot;</span>&#125;)</span><br><span class="line">	fmt.Println(resp.GetResponseMsg())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>client端</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;context&quot;</span></span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">	<span class="string">&quot;google.golang.org/grpc&quot;</span></span><br><span class="line">	<span class="string">&quot;google.golang.org/grpc/credentials/insecure&quot;</span></span><br><span class="line">	<span class="string">&quot;log&quot;</span></span><br><span class="line">	pb <span class="string">&quot;xxb-grpc-study/hello-client/proto&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> ClientTokenAuth <span class="keyword">struct</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c ClientTokenAuth)</span></span> GetRequestMetadata(ctx context.Context, uri ...<span class="type">string</span>) (<span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span>, <span class="type">error</span>) &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span>&#123;</span><br><span class="line">		<span class="string">&quot;appId&quot;</span>:  <span class="string">&quot;newbie&quot;</span>,</span><br><span class="line">		<span class="string">&quot;appKey&quot;</span>: <span class="string">&quot;123123&quot;</span>,</span><br><span class="line">	&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c ClientTokenAuth)</span></span> RequireTransportSecurity() <span class="type">bool</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">//creds, _ := credentials.NewClientTLSFromFile(&quot;D:\\Go_Dev\\src\\xxb-grpc-study\\key\\test.pem&quot;, &quot;*.newbie.com&quot;)</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//WithTransportCredentials返回一个DialOption，用于配置连接级别的安全凭证(例如，TLS/SSL)。这不能与WithCredentialsBundle一起使用。</span></span><br><span class="line">	<span class="keyword">var</span> opts []grpc.DialOption</span><br><span class="line">	opts = <span class="built_in">append</span>(opts, grpc.WithTransportCredentials(insecure.NewCredentials()))</span><br><span class="line">	opts = <span class="built_in">append</span>(opts, grpc.WithPerRPCCredentials(<span class="built_in">new</span>(ClientTokenAuth)))</span><br><span class="line"></span><br><span class="line">	conn, err := grpc.Dial(<span class="string">&quot;127.0.0.1:9090&quot;</span>, opts...)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Fatalf(<span class="string">&quot;Did not connect:%v&quot;</span>, err)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">defer</span> conn.Close()</span><br><span class="line">	<span class="comment">//建立连接</span></span><br><span class="line">	client := pb.NewSayHelloClient(conn)</span><br><span class="line">	<span class="comment">//rpc方法调用</span></span><br><span class="line">	resp, _ := client.SayHello(context.Background(), &amp;pb.HelloRequest&#123;RequestName: <span class="string">&quot; newbie&quot;</span>&#125;)</span><br><span class="line">	fmt.Println(resp.GetResponseMsg())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5. 总结"></a>5. 总结</h2><blockquote>
<p>了解最基础的Go语言，语言只是工具，思想永远最重要</p>
</blockquote>
]]></content>
      <tags>
        <tag>后端</tag>
        <tag>go</tag>
      </tags>
  </entry>
  <entry>
    <title>Mybatis</title>
    <url>/2023/03/17/Mybatis/</url>
    <content><![CDATA[<blockquote>
<center>不与夏虫语冰，不与井蛙语海，不与凡夫语道</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1 简介"></a>1 简介</h2><ul>
<li><a href="https://mybatis.org/">官方网站</a></li>
</ul>
<h3 id="1-1-定义"><a href="#1-1-定义" class="headerlink" title="1.1 定义"></a>1.1 定义</h3><blockquote>
<p>MyBatis 是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。MyBatis 免除了几乎所有的 JDBC 代码以及设置参数和获取结果集的工作。MyBatis        可以通过简单的 XML 或注解来配置和映射原始类型、接口和 Java POJO（Plain Old        Java Objects，普通老式 Java 对象）为数据库中的记录。</p>
</blockquote>
<h4 id="1-1-1-背景"><a href="#1-1-1-背景" class="headerlink" title="1.1.1 背景"></a>1.1.1 背景</h4><blockquote>
<p>MyBatis本是apache的一个开源项目iBatis，2010年这个项目由apache software foundation迁移到了google code,并且改名为MyBatis。2013年11月迁移到Github</p>
</blockquote>
<h4 id="1-1-2-为什么使用"><a href="#1-1-2-为什么使用" class="headerlink" title="1.1.2 为什么使用"></a>1.1.2 为什么使用</h4><ul>
<li>框架，自动化</li>
<li>方便存入数据库</li>
<li>技术没有高低之分</li>
<li>用的人多，有生态</li>
<li>优点</li>
</ul>
<blockquote>
<p>简单易学、灵活、解除sql与程序代码的耦合、提供映射标签、提供对象关系映射标签、提供xml标签</p>
</blockquote>
<h4 id="1-1-3-获取方式"><a href="#1-1-3-获取方式" class="headerlink" title="1.1.3 获取方式"></a>1.1.3 获取方式</h4><ul>
<li><a href="https://github.com/search?q=mybatis">Github</a></li>
<li><a href="https://mvnrepository.com/">maven仓库</a></li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="1-2-持久化"><a href="#1-2-持久化" class="headerlink" title="1.2 持久化"></a>1.2 持久化</h3><blockquote>
<p>数据持久化就是将内存中的数据模型转换为存储模型,以及将存储模型转换为内存中的数据模型的统称. 数据模型可以是任何数据结构或对象模型,存储模型可以是关系模型、XML、二进制流等。cmp和Hibernate只是对象模型到关系模型之间转换的不同实现。</p>
</blockquote>
<h4 id="1-2-1-优点"><a href="#1-2-1-优点" class="headerlink" title="1.2.1 优点"></a>1.2.1 优点</h4><ul>
<li>程序代码重用性强</li>
<li>业务逻辑代码可读性强</li>
<li>持久化技术可以自动优化，数据持久化对象的基本操作有：保存、更新、删除、查询等。</li>
</ul>
<h3 id="1-3-持久层"><a href="#1-3-持久层" class="headerlink" title="1.3 持久层"></a>1.3 持久层</h3><blockquote>
<p>数据持久层位于领域层和基础架构层之间。由于对象范例和关系范例这两大领域之间存在“阻抗不匹配”，所以把数据持久层单独作为J2EE体系的一个层提出来的原因就是能够在对象－关系数据库之间提供一个成功的企业级映射解决方案，尽最大可能弥补这两种范例之间的差异。</p>
</blockquote>
<ul>
<li>数据持久化的代码块</li>
<li>通用的持久化</li>
</ul>
<h2 id="2-第一个Mybatis"><a href="#2-第一个Mybatis" class="headerlink" title="2  第一个Mybatis"></a>2  第一个Mybatis</h2><blockquote>
<p>搭建环境-导入包-编写代码-测试</p>
</blockquote>
<h3 id="2-1-创建一个数据库的表"><a href="#2-1-创建一个数据库的表" class="headerlink" title="2.1 创建一个数据库的表"></a>2.1 创建一个数据库的表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create database xhr;</span><br><span class="line">use xhr;</span><br><span class="line">create table if not exists t_admin(</span><br><span class="line">	user_id int(6) not null auto_increment COMMENT &#x27;用户ID&#x27;,</span><br><span class="line">	dept_id int(3) comment &#x27;部门ID&#x27;,</span><br><span class="line">	login_name varchar(50) DEFAULT &#x27;&#x27; comment &#x27;登录账号&#x27;,</span><br><span class="line">	user_name varchar(50) DEFAULT &#x27;&#x27; comment &#x27;用户名&#x27;,</span><br><span class="line">	email varchar(50) DEFAULT &#x27;&#x27; comment &#x27;用户邮箱&#x27;,</span><br><span class="line">	phone varchar(30) DEFAULT &#x27;&#x27; comment &#x27;用户手机号码&#x27;,</span><br><span class="line">	password varchar(50) DEFAULT &#x27;1&#x27; comment &#x27;用户密码&#x27;,</span><br><span class="line">	user_type varchar(2) DEFAULT &#x27;N&#x27; comment &#x27;类型&#x27;,</span><br><span class="line">	user_state int(1) DEFAULT 0 comment &#x27;帐号状态&#x27;,</span><br><span class="line">	create_by varchar(50) DEFAULT &#x27;&#x27; comment &#x27;创建者&#x27;,</span><br><span class="line">	create_time timestamp DEFAULT CURRENT_TIMESTAMP comment &#x27;创建时间&#x27;,</span><br><span class="line">	update_by varchar(50) DEFAULT &#x27;&#x27; comment &#x27;更新者&#x27;,</span><br><span class="line">	update_time timestamp default CURRENT_TIMESTAMP comment &#x27;更新时间&#x27;,</span><br><span class="line">	primary key(user_id)</span><br><span class="line">)ENGINE = INNODB AUTO_INCREMENT=000001 default charset=utf8mb4;</span><br></pre></td></tr></table></figure>

<h3 id="2-2-新建项目"><a href="#2-2-新建项目" class="headerlink" title="2.2 新建项目"></a>2.2 新建项目</h3><h3 id="2-2-1-步骤"><a href="#2-2-1-步骤" class="headerlink" title="2.2.1 步骤"></a>2.2.1 步骤</h3><ul>
<li>普通的Maven项目</li>
<li>删除src</li>
<li>导入maven依赖</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    父工程--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.xxy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mybatis.version</span>&gt;</span>3.2.6<span class="tag">&lt;/<span class="name">mybatis.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mysql.version</span>&gt;</span>5.1.30<span class="tag">&lt;/<span class="name">mysql.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">junit.version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">junit.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--导入依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mysql驱动--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mybatis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--junit--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;junit.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>创建一个模块</li>
<li>编写mybatis配置文件</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://127.0.0.1:3306/temp1?useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=utf8&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>创建entity</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.entity;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(String id,String name,<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(String id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>创建mapper</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.xxy.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询搜所有用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;User&gt; <span class="title function_">selectAllUser</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;cn.xxy.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectAllUser&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">    select * from user</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>测试</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.mappertest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.xxy.entity.User;</span><br><span class="line"><span class="keyword">import</span> cn.xxy.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> cn.xxy.utils.MybatisUtil;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">usertest</span> &#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUser</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//获取sqlsession</span></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> MybatisUtil.getSqlSession();</span><br><span class="line">        <span class="comment">//方式一：getMapper</span></span><br><span class="line"><span class="comment">/*        UserMapper userMapper = sqlSession.getMapper(UserMapper.class);</span></span><br><span class="line"><span class="comment">        List&lt;User&gt; userList = userMapper.selectAllUser();</span></span><br><span class="line"><span class="comment">        for (User user : userList) &#123;</span></span><br><span class="line"><span class="comment">            System.out.println(user.toString());</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line"><span class="comment">//方式二：</span></span><br><span class="line">        List&lt;User&gt; userList = sqlSession.selectList(<span class="string">&quot;cn.xxy.mapper.UserMapper.selectAllUser&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">            System.out.println(user.toString());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//关闭sqlsession</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li><p>可能出现的问题</p>
</li>
<li><p>资源访问不到</p>
</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 如果不添加此节点mybatis的mapper.xml文件都会被漏掉。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>mapper配置文件初始化失败</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">看返回类型    </span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectAllUser&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;cn.xxy.entity.User&quot;</span>&gt;</span></span><br><span class="line">    select * from user</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="3-CRUD"><a href="#3-CRUD" class="headerlink" title="3 CRUD"></a>3 CRUD</h2><h3 id="3-1-namespace【命名空间】"><a href="#3-1-namespace【命名空间】" class="headerlink" title="3.1 namespace【命名空间】"></a>3.1 namespace【命名空间】</h3><blockquote>
<p>命名空间要与mapper包名的接口名字一样</p>
</blockquote>
<h3 id="3-2-增删改"><a href="#3-2-增删改" class="headerlink" title="3.2 增删改"></a>3.2 增删改</h3><blockquote>
<p>需要提交事务</p>
</blockquote>
<ul>
<li>mapper</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">insertUser</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span> String id, <span class="meta">@Param(&quot;name&quot;)</span> String name, <span class="meta">@Param(&quot;age&quot;)</span> <span class="type">int</span> age)</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>mapper.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;cn.xxy.entity.User&quot;</span>&gt;</span></span><br><span class="line">        insert into user(id,name,age) values(#&#123;id&#125;,#&#123;name&#125;,#&#123;age&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>测试</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUserInsert</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//获取sqlsession</span></span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> MybatisUtil.getSqlSession();</span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//方式一：getMapper</span></span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        result = userMapper.insertUser(<span class="string">&quot;10&quot;</span>,<span class="string">&quot;梨花&quot;</span>,<span class="number">12</span>);</span><br><span class="line">        <span class="keyword">if</span> (result &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;插入成功&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//提交事务</span></span><br><span class="line">        sqlSession.commit();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="comment">//关闭sqlsession</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>可能出现问题</li>
<li>数据库列的编码与类编码不同</li>
</ul>
<blockquote>
<p>修改数据库列的编码utfmb4,不要使用utf8这个是没用的</p>
</blockquote>
<ul>
<li>提交事务</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//提交事务</span></span><br><span class="line"> sqlSession.commit();</span><br><span class="line"><span class="comment">//自动提交事务</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从 SqlSessionFactory 中获取 SqlSession</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> SqlSession</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title function_">getSqlSession</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>



<h3 id="3-3-传递参数"><a href="#3-3-传递参数" class="headerlink" title="3.3  传递参数"></a>3.3  传递参数</h3><ul>
<li>只有一个基本类型，可以直接在sql取到</li>
<li>对象传递参数</li>
<li>map传递【实际开发除了特殊情况，其他时候不推荐】</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">parameterType=&quot;map&quot;</span><br></pre></td></tr></table></figure>

<h3 id="3-4-模糊查询"><a href="#3-4-模糊查询" class="headerlink" title="3.4 模糊查询"></a>3.4 模糊查询</h3><ul>
<li>mapper</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;User&gt; <span class="title function_">selectUserByName</span><span class="params">(String name)</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectUserByName&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;String&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;cn.xxy.entity.User&quot;</span>&gt;</span></span><br><span class="line">  select * from user where name like concat(&#x27;%&#x27;,#&#123;name,jdbcType=VARCHAR&#125;,&#x27;%&#x27;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>测试</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectUserByName</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//获取sqlsession</span></span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> MybatisUtil.getSqlSession();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//方式一：getMapper</span></span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        List&lt;User&gt; userList = userMapper.selectUserByName(<span class="string">&quot;J&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">            System.out.println(user.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="comment">//关闭sqlsession</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-5-属性名和字段名不一致问题"><a href="#3-5-属性名和字段名不一致问题" class="headerlink" title="3.5 属性名和字段名不一致问题"></a>3.5 属性名和字段名不一致问题</h3><ul>
<li>方式一：数据库操作语句起别名 as</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectUserByName&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;String&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;cn.xxy.entity.User&quot;</span>&gt;</span></span><br><span class="line">    select id,name,age as age from user where name like concat(&#x27;%&#x27;,#&#123;name,jdbcType=VARCHAR&#125;,&#x27;%&#x27;)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>方式二：resultType用的是简称类名，需要结果集映射</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">   <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;BaseResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;cn.xxy.entity.User&quot;</span> &gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;age&quot;</span> <span class="attr">property</span>=<span class="string">&quot;age&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectAllLeave&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BaseResultMap&quot;</span> &gt;</span></span><br><span class="line">       select</span><br><span class="line">       leave_id, tl.user_id as user_id, tl.dept_id as dept_id, leave_start, leave_end, leave_reasons, leave_phone, leave_state, tu.user_name as user_name, td.dept_name as dept_name, leave_reviewer, tl.create_by as create_by , tl.create_time as create_time</span><br><span class="line">       from t_leave tl</span><br><span class="line">       inner join t_user tu</span><br><span class="line">       on tl.user_id = tu.user_id</span><br><span class="line">       left join t_dept td</span><br><span class="line">       on tl.dept_id = td.dept_id</span><br><span class="line">       order by create_time desc</span><br><span class="line"> <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="4-配置"><a href="#4-配置" class="headerlink" title="4. 配置"></a>4. 配置</h2><h3 id="4-1-配置文件顶层结构"><a href="#4-1-配置文件顶层结构" class="headerlink" title="4.1 配置文件顶层结构"></a>4.1 配置文件顶层结构</h3><figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">configuration（配置）</span><br><span class="line"></span><br><span class="line">    properties（属性）</span><br><span class="line">    settings（设置）</span><br><span class="line">    typeAliases（类型别名）</span><br><span class="line">    typeHandlers（类型处理器）</span><br><span class="line">    objectFactory（对象工厂）</span><br><span class="line">    plugins（插件）</span><br><span class="line">    environments（环境配置）</span><br><span class="line">        environment（环境变量）</span><br><span class="line">            transactionManager（事务管理器）</span><br><span class="line">            dataSource（数据源）</span><br><span class="line">    databaseIdProvider（数据库厂商标识）</span><br><span class="line">    mappers（映射器）</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="4-2-环境变量【environments】"><a href="#4-2-环境变量【environments】" class="headerlink" title="4.2 环境变量【environments】"></a>4.2 环境变量【environments】</h3><blockquote>
<p>MyBatis 可以配置成适应多种环境，不过要记住：尽管可以配置多个环境，但每个 SqlSessionFactory          实例只能选择一种环境。</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;db.properties&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;MANAGED &quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--连接数据库 dbcp c3p0 druid--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span> <span class="comment">&lt;!--type=&quot;[UNPOOLED|POOLED|JNDI]&quot;--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://127.0.0.1:3306/temp1?useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=utf8&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;cn/xxy/mapper/UserMapper.xml&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-3-属性【properties】"><a href="#4-3-属性【properties】" class="headerlink" title="4.3 属性【properties】"></a>4.3 属性【properties】</h3><blockquote>
<p>引用外部文件，其中可以增加属性配置。相同优先使用外部配置文件</p>
</blockquote>
<h3 id="4-4-别名【typeAliases】"><a href="#4-4-别名【typeAliases】" class="headerlink" title="4.4 别名【typeAliases】"></a>4.4 别名【typeAliases】</h3><ul>
<li>自定义</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">&quot;Author&quot;</span> <span class="attr">type</span>=<span class="string">&quot;domain.blog.Author&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">&quot;Blog&quot;</span> <span class="attr">type</span>=<span class="string">&quot;domain.blog.Blog&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">&quot;Comment&quot;</span> <span class="attr">type</span>=<span class="string">&quot;domain.blog.Comment&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">&quot;Post&quot;</span> <span class="attr">type</span>=<span class="string">&quot;domain.blog.Post&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">&quot;Section&quot;</span> <span class="attr">type</span>=<span class="string">&quot;domain.blog.Section&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">&quot;Tag&quot;</span> <span class="attr">type</span>=<span class="string">&quot;domain.blog.Tag&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>扫描包,如何要扫描又要自定义可以使用注解</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;domain.blog&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Alias(&quot;author&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Author</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-5-设置"><a href="#4-5-设置" class="headerlink" title="4.5 设置"></a>4.5 设置</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    全局性地开启或关闭所有映射器配置文件中已配置的任何缓存。</span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;cacheEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">    延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。 特定关联关系中可通过设置 fetchType 属性来覆盖该项的开关状态</span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;lazyLoadingEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;multipleResultSetsEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;useColumnLabel&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;useGeneratedKeys&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">         	指定 MyBatis 应如何自动映射列到字段或属性。 NONE 表示关闭自动映射；PARTIAL 只会自动映射没有定义嵌套结果映射的字段。 FULL 会自动映射任何复杂的结果集（无论是否嵌套）。</span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;autoMappingBehavior&quot;</span> <span class="attr">value</span>=<span class="string">&quot;PARTIAL&quot;</span>/&gt;</span></span><br><span class="line"> 日志</span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;autoMappingUnknownColumnBehavior&quot;</span> <span class="attr">value</span>=<span class="string">&quot;WARNING&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;defaultExecutorType&quot;</span> <span class="attr">value</span>=<span class="string">&quot;SIMPLE&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;defaultStatementTimeout&quot;</span> <span class="attr">value</span>=<span class="string">&quot;25&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;defaultFetchSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;100&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;safeRowBoundsEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">    驼峰命名</span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;mapUnderscoreToCamelCase&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;localCacheScope&quot;</span> <span class="attr">value</span>=<span class="string">&quot;SESSION&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;jdbcTypeForNull&quot;</span> <span class="attr">value</span>=<span class="string">&quot;OTHER&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;lazyLoadTriggerMethods&quot;</span> <span class="attr">value</span>=<span class="string">&quot;equals,clone,hashCode,toString&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-6-映射器【mappers】"><a href="#4-6-映射器【mappers】" class="headerlink" title="4.6 映射器【mappers】"></a>4.6 映射器【mappers】</h3><ul>
<li>方式一：使用相对于类路径的资源引用 【推荐】</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;cn/xxy/mapper/UserMapper.xml&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>方式二：使用完全限定资源定位符（URL）【不建议】</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">url</span>=<span class="string">&quot;file:///var/mappers/AuthorMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">url</span>=<span class="string">&quot;file:///var/mappers/BlogMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">url</span>=<span class="string">&quot;file:///var/mappers/PostMapper.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>方式三：使用映射器接口实现类的完全限定类名</li>
</ul>
<blockquote>
<p>接口和他的Mapper配置文件必须同名</p>
<p>接口和他的Mapper配置文件必须在同一个包下</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.builder.AuthorMapper&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.builder.BlogMapper&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.builder.PostMapper&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>方式四：将包内的映射器接口实现全部注册为映射器【包扫描】</li>
</ul>
<blockquote>
<p>接口和他的Mapper配置文件必须同名</p>
</blockquote>
<blockquote>
<p>接口和他的Mapper配置文件必须在同一个包下</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;org.mybatis.builder&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-7-其他配置"><a href="#4-7-其他配置" class="headerlink" title="4.7 其他配置"></a>4.7 其他配置</h3><ul>
<li><p>类型处理器（typeHandlers）</p>
</li>
<li><p>objectFactory（对象工厂）</p>
</li>
<li><p>plugins（插件）</p>
<ul>
<li>MyBatis Plus</li>
<li>MyBatis Generator Core</li>
</ul>
</li>
</ul>
<h3 id="4-8-生命周期"><a href="#4-8-生命周期" class="headerlink" title="4.8 生命周期"></a>4.8 生命周期</h3><blockquote>
<p>生命周期和作用域错误使用会导致严重的并发问题</p>
</blockquote>
<ul>
<li><h4 id="SqlSessionFactoryBuilder"><a href="#SqlSessionFactoryBuilder" class="headerlink" title="SqlSessionFactoryBuilder"></a>SqlSessionFactoryBuilder</h4></li>
</ul>
<blockquote>
<p>这个类可以被实例化、使用和丢弃，一旦创建了 SqlSessionFactory，就不再需要它了【局部变量】</p>
</blockquote>
<ul>
<li><h4 id="SqlSessionFactory"><a href="#SqlSessionFactory" class="headerlink" title="SqlSessionFactory"></a>SqlSessionFactory</h4></li>
</ul>
<blockquote>
<p>SqlSessionFactory 一旦被创建就应该在应用的运行期间一直存在【相当于数据库连接池，全局变量】，因此 SqlSessionFactory 的最佳作用域是应用作用域。最简单使用单例模式或者静态单例模式</p>
</blockquote>
<ul>
<li><h4 id="SqlSession"><a href="#SqlSession" class="headerlink" title="SqlSession"></a>SqlSession</h4></li>
</ul>
<blockquote>
<p>每个线程都应该有它自己的 SqlSession 实例。SqlSession          的实例不是线程安全的，因此是不能被共享的，所以它的最佳的作用域是请求或方法作用域。绝对不能将 SqlSession 实例的引用放在一个类的静态域，甚至一个类的实例变量也不行。</p>
</blockquote>
<h3 id="4-9-结果映射"><a href="#4-9-结果映射" class="headerlink" title="4.9 结果映射"></a>4.9 结果映射</h3><blockquote>
<p>ResultMap 的设计思想是，对简单的语句做到零配置，对于复杂一点的语句，只需要描述语句之间的关系就行了。        </p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 非常复杂的语句 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectBlogDetails&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;detailedBlogResultMap&quot;</span>&gt;</span></span><br><span class="line">  select</span><br><span class="line">       B.id as blog_id,</span><br><span class="line">       B.title as blog_title,</span><br><span class="line">       B.author_id as blog_author_id,</span><br><span class="line">       A.id as author_id,</span><br><span class="line">       A.username as author_username,</span><br><span class="line">       A.password as author_password,</span><br><span class="line">       A.email as author_email,</span><br><span class="line">       A.bio as author_bio,</span><br><span class="line">       A.favourite_section as author_favourite_section,</span><br><span class="line">       P.id as post_id,</span><br><span class="line">       P.blog_id as post_blog_id,</span><br><span class="line">       P.author_id as post_author_id,</span><br><span class="line">       P.created_on as post_created_on,</span><br><span class="line">       P.section as post_section,</span><br><span class="line">       P.subject as post_subject,</span><br><span class="line">       P.draft as draft,</span><br><span class="line">       P.body as post_body,</span><br><span class="line">       C.id as comment_id,</span><br><span class="line">       C.post_id as comment_post_id,</span><br><span class="line">       C.name as comment_name,</span><br><span class="line">       C.comment as comment_text,</span><br><span class="line">       T.id as tag_id,</span><br><span class="line">       T.name as tag_name</span><br><span class="line">  from Blog B</span><br><span class="line">       left outer join Author A on B.author_id = A.id</span><br><span class="line">       left outer join Post P on B.id = P.blog_id</span><br><span class="line">       left outer join Comment C on P.id = C.post_id</span><br><span class="line">       left outer join Post_Tag PT on PT.post_id = P.id</span><br><span class="line">       left outer join Tag T on PT.tag_id = T.id</span><br><span class="line">  where B.id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 非常复杂的结果映射 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;detailedBlogResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Blog&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">constructor</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">idArg</span> <span class="attr">column</span>=<span class="string">&quot;blog_id&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;int&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">constructor</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;title&quot;</span> <span class="attr">column</span>=<span class="string">&quot;blog_title&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;author&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Author&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;author_id&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span> <span class="attr">column</span>=<span class="string">&quot;author_username&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span> <span class="attr">column</span>=<span class="string">&quot;author_password&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;email&quot;</span> <span class="attr">column</span>=<span class="string">&quot;author_email&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;bio&quot;</span> <span class="attr">column</span>=<span class="string">&quot;author_bio&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;favouriteSection&quot;</span> <span class="attr">column</span>=<span class="string">&quot;author_favourite_section&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;posts&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;Post&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;post_id&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;subject&quot;</span> <span class="attr">column</span>=<span class="string">&quot;post_subject&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;author&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Author&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;comments&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;Comment&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;comment_id&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;tags&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;Tag&quot;</span> &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tag_id&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">discriminator</span> <span class="attr">javaType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">column</span>=<span class="string">&quot;draft&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">case</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;DraftPost&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">discriminator</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>constructor</p>
<p>- 用于在实例化类时，注入结果到构造方法中            </p>
<ul>
<li><code>idArg</code> - ID 参数；标记出作为 ID 的结果可以帮助提高整体性能</li>
<li><code>arg</code> - 将被注入到构造方法的一个普通结果</li>
</ul>
</li>
<li><p><code>id</code> – 一个 ID 结果；标记出作为 ID 的结果可以帮助提高整体性能</p>
</li>
<li><p><code>result</code> – 注入到字段或 JavaBean 属性的普通结果</p>
</li>
<li><p>association</p>
<p>– 一个复杂类型的关联；许多结果将包装成这种类型            </p>
<ul>
<li>嵌套结果映射 – 关联可以是 <code>resultMap</code> 元素，或是对其它结果映射的引用</li>
</ul>
</li>
<li><p>collection</p>
<p>– 一个复杂类型的集合            </p>
<ul>
<li>嵌套结果映射 – 集合可以是 <code>resultMap</code> 元素，或是对其它结果映射的引用</li>
</ul>
</li>
<li><p>discriminator</p>
<p>– 使用结果值来决定使用哪个 </p>
<p>resultMap</p>
<ul>
<li><p>case</p>
<p>– 基于某些值的结果映射                </p>
<ul>
<li>嵌套结果映射 – <code>case</code> 也是一个结果映射，因此具有相同的结构和元素；或者引用其它的结果映射</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="5-日志"><a href="#5-日志" class="headerlink" title="5. 日志"></a>5. 日志</h2><h3 id="5-1-日志工厂"><a href="#5-1-日志工厂" class="headerlink" title="5.1 日志工厂"></a>5.1 日志工厂</h3><blockquote>
<p>出错，日志是最好的助手</p>
</blockquote>
<ul>
<li><p>以前：sout、debug</p>
</li>
<li><p>日志工厂</p>
<blockquote>
<p>SLF4J | LOG4J | LOG4J2 | JDK_LOGGING | COMMONS_LOGGING | STDOUT_LOGGING | NO_LOGGING</p>
</blockquote>
</li>
</ul>
<h3 id="5-2-日志设置"><a href="#5-2-日志设置" class="headerlink" title="5.2 日志设置"></a>5.2 日志设置</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;STDOUT_LOGGING&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="5-3-log4j【有漏洞了解使用方式即可】"><a href="#5-3-log4j【有漏洞了解使用方式即可】" class="headerlink" title="5.3 log4j【有漏洞了解使用方式即可】"></a>5.3 log4j【有漏洞了解使用方式即可】</h3><blockquote>
<p>可以通过一个配置文件来灵活地进行配置，而不需要修改应用的代码。</p>
</blockquote>
<ul>
<li>pom.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/log4j/log4j --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>log4j.properties</li>
</ul>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">log4j.rootLogger</span>=<span class="string">INFO,Console,File  </span></span><br><span class="line"><span class="comment">#定义日志输出目的地为控制台  </span></span><br><span class="line"><span class="attr">log4j.appender.Console</span>=<span class="string">org.apache.log4j.ConsoleAppender  </span></span><br><span class="line"><span class="attr">log4j.appender.Console.Target</span>=<span class="string">System.out  </span></span><br><span class="line"><span class="comment">#可以灵活地指定日志输出格式，下面一行是指定具体的格式  </span></span><br><span class="line"><span class="attr">log4j.appender.Console.layout</span> = <span class="string">org.apache.log4j.PatternLayout  </span></span><br><span class="line"><span class="attr">log4j.appender.Console.layout.ConversionPattern</span>=<span class="string">[%c] - %m%n  </span></span><br><span class="line"><span class="comment">  </span></span><br><span class="line"><span class="comment">#文件大小到达指定尺寸的时候产生一个新的文件  </span></span><br><span class="line"><span class="attr">log4j.appender.File</span> = <span class="string">org.apache.log4j.RollingFileAppender  </span></span><br><span class="line"><span class="comment">#指定输出目录  </span></span><br><span class="line"><span class="attr">log4j.appender.File.File</span> = <span class="string">logs/mybatis.log  </span></span><br><span class="line"><span class="comment">#定义文件最大大小  </span></span><br><span class="line"><span class="attr">log4j.appender.File.MaxFileSize</span> = <span class="string">10MB  </span></span><br><span class="line"><span class="comment"># 输出所以日志，如果换成DEBUG表示输出DEBUG以上级别日志  </span></span><br><span class="line"><span class="attr">log4j.appender.File.Threshold</span> = <span class="string">ALL  </span></span><br><span class="line"><span class="attr">log4j.appender.File.layout</span> = <span class="string">org.apache.log4j.PatternLayout  </span></span><br><span class="line"><span class="attr">log4j.appender.File.layout.ConversionPattern</span> =<span class="string">[%p] [%d&#123;yyyy-MM-dd HH\:mm\:ss&#125;][%c]%m%n  </span></span><br></pre></td></tr></table></figure>

<h2 id="6-分页"><a href="#6-分页" class="headerlink" title="6. 分页"></a>6. 分页</h2><blockquote>
<p>减少数据库查询压力</p>
</blockquote>
<ul>
<li><p>使用limit，默认为0，-1这个数字bug已经修复</p>
</li>
<li><p>使用rowbounds，开发中不建议使用</p>
</li>
<li><p>使用插件<a href="https://pagehelper.github.io/">mybatis-helper</a></p>
</li>
</ul>
<blockquote>
<p>使用 MyBatis提供的插件接口，实现自定义插件，在插件的拦截方法内拦截待执行的 SQL，然后重写 SQL，根据 dialect 方言，添加对应的物理分页语句和物理分页参数。</p>
</blockquote>
<ul>
<li>使用拦截器</li>
</ul>
<h2 id="7-注解"><a href="#7-注解" class="headerlink" title="7. 注解"></a>7. 注解</h2><blockquote>
<p>底层主要是动态代理，本质是反射</p>
</blockquote>
<h3 id="7-1-面向接口开发【解耦】"><a href="#7-1-面向接口开发【解耦】" class="headerlink" title="7.1 面向接口开发【解耦】"></a>7.1 面向接口开发【解耦】</h3><blockquote>
<p>面向对象，以对象为单位，考虑它的属性和方法</p>
<p>面向过程，考虑具体的流程为一个单位</p>
<p>面向接口和上面两种不是一个问题，更体现为系统整体的架构</p>
</blockquote>
<h3 id="7-2-测试"><a href="#7-2-测试" class="headerlink" title="7.2 测试"></a>7.2 测试</h3><ul>
<li>接口</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Select(&quot;select * from user&quot;)</span></span><br><span class="line">List&lt;User&gt; <span class="title function_">selectAllUser1</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>绑定接口【很重要】</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;mapper resource=&quot;cn/xxy/mapper/UserMapper.xml&quot; /&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;cn.xxy.mapper.UserMapper&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>测试</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectAllUser1</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//获取sqlsession</span></span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> MybatisUtil.getSqlSession();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//方式一：getMapper</span></span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        List&lt;User&gt; userList = userMapper.selectAllUser1();</span><br><span class="line">        <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">            System.out.println(user.toString());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="comment">//关闭sqlsession</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="7-3-Param"><a href="#7-3-Param" class="headerlink" title="7.3 @Param"></a>7.3 @Param</h3><ul>
<li>有多个参数需要加上，一个建议加上，@Param(“age”)SQL引用的就是注解括号里的名字</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">insertUser</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span> String id,  String name, <span class="meta">@Param(&quot;age&quot;)</span> <span class="type">int</span> age)</span>;</span><br></pre></td></tr></table></figure>

<h3 id="7-4-Lombok"><a href="#7-4-Lombok" class="headerlink" title="7.4 Lombok"></a>7.4 Lombok</h3><blockquote>
<p>适合就行</p>
</blockquote>
<ul>
<li>Idea库安装插件</li>
<li>导入依赖</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>加注解</li>
</ul>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">@Data</span><br></pre></td></tr></table></figure>

<h2 id="8-映射"><a href="#8-映射" class="headerlink" title="8. 映射"></a>8. 映射</h2><h3 id="8-1-测试"><a href="#8-1-测试" class="headerlink" title="8.1 测试"></a>8.1 测试</h3><p>8.1.1 新建实体类与数据库一致</p>
<p>8.1.2 建立Mapper接口和映射文件.xml文件</p>
<p>8.1.3 在核心配置文件绑定注册Mapper接口或文件【方式很多】</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;cn/xxy/mapper/UserMapper.xml&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        注解使用class--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;mapper class=&quot;cn.xxy.mapper.UserMapper&quot; /&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;cn.xxy.mapper.TeacherMapper&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>8.1.4 测试查询是否成功</p>
<h3 id="8-2-多对一映射"><a href="#8-2-多对一映射" class="headerlink" title="8.2 多对一映射"></a>8.2 多对一映射</h3><h4 id="8-2-1-按照查询嵌套查询【核心代码像子查询】"><a href="#8-2-1-按照查询嵌套查询【核心代码像子查询】" class="headerlink" title="8.2.1 按照查询嵌套查询【核心代码像子查询】"></a>8.2.1 按照查询嵌套查询【核心代码像子查询】</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;BaseResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;cn.xxy.entity.Student&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;student_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;studentId&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;student_name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;studentName&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;student_password&quot;</span> <span class="attr">property</span>=<span class="string">&quot;studentPassword&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;student_gender&quot;</span> <span class="attr">property</span>=<span class="string">&quot;studentGender&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;student_brithday&quot;</span> <span class="attr">property</span>=<span class="string">&quot;studentBrithday&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;student_address&quot;</span> <span class="attr">property</span>=<span class="string">&quot;studentAddress&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;teacher_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;teacherId&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;StudentAndTeacher&quot;</span> <span class="attr">type</span>=<span class="string">&quot;cn.xxy.entity.Student&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;student_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;studentId&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;student_name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;studentName&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;student_password&quot;</span> <span class="attr">property</span>=<span class="string">&quot;studentPassword&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;student_gender&quot;</span> <span class="attr">property</span>=<span class="string">&quot;studentGender&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;student_brithday&quot;</span> <span class="attr">property</span>=<span class="string">&quot;studentBrithday&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;student_address&quot;</span> <span class="attr">property</span>=<span class="string">&quot;studentAddress&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 复杂的对象单独处理，对象association，集合collection--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;teacher&quot;</span> <span class="attr">column</span>=<span class="string">&quot;teacher_id&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Teacher&quot;</span> <span class="attr">select</span>=<span class="string">&quot;selectTeacherByTeacherId&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectStudentAndTeacher&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;StudentAndTeacher&quot;</span>&gt;</span></span><br><span class="line">    select * from tb_student</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectTeacherByTeacherId&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;String&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;cn.xxy.entity.Teacher&quot;</span>&gt;</span></span><br><span class="line">    select * from t_teacher tt where tt.teacher_id = #&#123;teacher_id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="8-2-2-按照查询嵌套查询【核心代码-联表查询】"><a href="#8-2-2-按照查询嵌套查询【核心代码-联表查询】" class="headerlink" title="8.2.2 按照查询嵌套查询【核心代码 联表查询】"></a>8.2.2 按照查询嵌套查询【核心代码 联表查询】</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectStudentAndTeacher2&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;StudentAndTeacher2&quot;</span>&gt;</span></span><br><span class="line">       select ts.student_id as student_id, ts.student_name as  student_name,ts.student_password as student_password,ts.student_gender as student_gender ,ts.student_brithday as student_brithday ,ts.student_address as student_address,tt.teacher_name as teacher_name,tt.teacher_id as teacher_id</span><br><span class="line">       from tb_student ts</span><br><span class="line">       inner join t_teacher tt</span><br><span class="line">       where ts.teacher_id = tt.teacher_id</span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;StudentAndTeacher2&quot;</span> <span class="attr">type</span>=<span class="string">&quot;cn.xxy.entity.Student&quot;</span> &gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;student_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;studentId&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;student_name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;studentName&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;student_password&quot;</span> <span class="attr">property</span>=<span class="string">&quot;studentPassword&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;student_gender&quot;</span> <span class="attr">property</span>=<span class="string">&quot;studentGender&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;student_brithday&quot;</span> <span class="attr">property</span>=<span class="string">&quot;studentBrithday&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;student_address&quot;</span> <span class="attr">property</span>=<span class="string">&quot;studentAddress&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 复杂的对象单独处理，对象association，集合collection--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;teacher&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;cn.xxy.entity.Teacher&quot;</span> &gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;teacher_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;teacherId&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;teacherName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;teacher_name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="8-3-一对多映射"><a href="#8-3-一对多映射" class="headerlink" title="8.3 一对多映射"></a>8.3 一对多映射</h3><h4 id="8-3-1-按照结果嵌套处理"><a href="#8-3-1-按照结果嵌套处理" class="headerlink" title="8.3.1 按照结果嵌套处理"></a>8.3.1 按照结果嵌套处理</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--按照结果嵌套查询--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectStudentByTeacherId&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;String&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;StudentByTeacherId&quot;</span>&gt;</span></span><br><span class="line">    select ts.student_id as student_id, ts.student_name as  student_name,ts.student_password as student_password,ts.student_gender as student_gender ,ts.student_brithday as student_brithday ,ts.student_address as student_address,tt.teacher_name as teacher_name,tt.teacher_id as teacher_id</span><br><span class="line">    from tb_student ts</span><br><span class="line">    inner join t_teacher tt</span><br><span class="line">    where ts.teacher_id = tt.teacher_id and tt.teacher_id = #&#123;teacherId&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;StudentByTeacherId&quot;</span> <span class="attr">type</span>=<span class="string">&quot;cn.xxy.entity.Teacher1&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;teacher_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;teacherId&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;teacher_name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;teacherName&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;studentList&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;cn.xxy.entity.Student1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;student_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;studentId&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;student_name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;studentName&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;student_password&quot;</span> <span class="attr">property</span>=<span class="string">&quot;studentPassword&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;student_gender&quot;</span> <span class="attr">property</span>=<span class="string">&quot;studentGender&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;student_brithday&quot;</span> <span class="attr">property</span>=<span class="string">&quot;studentBrithday&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;student_address&quot;</span> <span class="attr">property</span>=<span class="string">&quot;studentAddress&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="8-3-2-按照查询嵌套处理"><a href="#8-3-2-按照查询嵌套处理" class="headerlink" title="8.3.2 按照查询嵌套处理"></a>8.3.2 按照查询嵌套处理</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectTeachers&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;TeacherStudent2&quot;</span>&gt;</span></span><br><span class="line">    select * from t_teacher tt where tt.teacher_id = #&#123;teacherId&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;TeacherStudent2&quot;</span> <span class="attr">type</span>=<span class="string">&quot;cn.xxy.entity.Teacher1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;studentList&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;ArrayList&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;cn.xxy.entity.Student1&quot;</span> <span class="attr">select</span>=<span class="string">&quot;selectStudentsByTeacherId2&quot;</span> <span class="attr">column</span>=<span class="string">&quot;teacher_id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectStudentsByTeacherId2&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;cn.xxy.entity.Student1&quot;</span>&gt;</span></span><br><span class="line">    select * from tb_student ts where ts.teacher_id = #&#123;teacherId&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="9-动态SQL"><a href="#9-动态SQL" class="headerlink" title="9. 动态SQL"></a>9. 动态SQL</h2><blockquote>
<p>动态SQL就是能够根据不同的条件生成不同的SQL语句,本质还是SQL语句</p>
</blockquote>
<ul>
<li>if</li>
<li>choose (when, otherwise)</li>
<li>trim (where, set)</li>
<li>foreach</li>
</ul>
<h3 id="9-1-if【会把if全部执行】"><a href="#9-1-if【会把if全部执行】" class="headerlink" title="9.1 if【会把if全部执行】"></a>9.1 if【会把if全部执行】</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectStudentByIf&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;cn.xxy.entity.Student&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BaseResultMap&quot;</span>&gt;</span></span><br><span class="line">    select * from tb_student ts</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;teacherId != null&quot;</span>&gt;</span></span><br><span class="line">            teacher_id like #&#123;teacherId&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;studentName != null&quot;</span>&gt;</span></span><br><span class="line">            and student_name like #&#123;studentName&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>测试</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectStudentByIf</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> MybatisUtil.getSqlSession();</span><br><span class="line">       <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">       student.setTeacherId(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">       student.setStudentName(<span class="string">&quot;tt&quot;</span>);</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="type">StudentMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(StudentMapper.class);</span><br><span class="line">           List&lt;Student&gt; students = mapper.selectStudentByIf(student);</span><br><span class="line">           <span class="keyword">for</span> (Student studentList : students) &#123;</span><br><span class="line">               System.out.println(studentList);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">           sqlSession.close();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h3 id="9-2-choose-when-otherwise-【会到第一条真的语句，后面不再执行】"><a href="#9-2-choose-when-otherwise-【会到第一条真的语句，后面不再执行】" class="headerlink" title="9.2 choose (when, otherwise)【会到第一条真的语句，后面不再执行】"></a>9.2 choose (when, otherwise)【会到第一条真的语句，后面不再执行】</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectStudentByChoose&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;cn.xxy.entity.Student&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BaseResultMap&quot;</span>&gt;</span></span><br><span class="line">        select * from tb_student ts</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;teacherId != null&quot;</span>&gt;</span></span><br><span class="line">                    teacher_id like #&#123;teacherId&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;studentName != null&quot;</span>&gt;</span></span><br><span class="line">                     and student_name like #&#123;studentName&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">                    and teacher_id = &#x27;1&#x27;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="9-3-trim-where-set-【去前缀例如逗号，and，or这些】"><a href="#9-3-trim-where-set-【去前缀例如逗号，and，or这些】" class="headerlink" title="9.3 trim (where, set)【去前缀例如逗号，and，or这些】"></a>9.3 trim (where, set)【去前缀例如逗号，and，or这些】</h3><blockquote>
<p>使用 trim标签可以完成where标签相同的功能,</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;WHERE&quot;</span> <span class="attr">prefixOverrides</span>=<span class="string">&quot;AND&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;teacherId != null&quot;</span>&gt;</span></span><br><span class="line">                teacher_id like #&#123;teacherId&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;studentName != null&quot;</span>&gt;</span></span><br><span class="line">                and student_name like #&#123;studentName&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;SET&quot;</span> <span class="attr">suffixOverrides</span>=<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="9-4-foreach"><a href="#9-4-foreach" class="headerlink" title="9.4 foreach"></a>9.4 foreach</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectPostIn&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;domain.blog.Post&quot;</span>&gt;</span></span><br><span class="line">  SELECT *</span><br><span class="line">  FROM POST P</span><br><span class="line">  WHERE ID in</span><br><span class="line">  <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">item</span>=<span class="string">&quot;item&quot;</span> <span class="attr">index</span>=<span class="string">&quot;index&quot;</span> <span class="attr">collection</span>=<span class="string">&quot;list&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span>&gt;</span></span><br><span class="line">        #&#123;item&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="9-5-SQL片段【相同的SQL语句】"><a href="#9-5-SQL片段【相同的SQL语句】" class="headerlink" title="9.5 SQL片段【相同的SQL语句】"></a>9.5 SQL片段【相同的SQL语句】</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;selectif&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;teacherId != null&quot;</span>&gt;</span></span><br><span class="line">        teacher_id like #&#123;teacherId&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;studentName != null&quot;</span>&gt;</span></span><br><span class="line">        and student_name like #&#123;studentName&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectStudentByIf&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;cn.xxy.entity.Student&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BaseResultMap&quot;</span>&gt;</span></span><br><span class="line">    select * from tb_student ts</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;selectif&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>注意：</li>
<li>最好基于单表</li>
<li>SQL片段不要存在where标签</li>
</ul>
<h2 id="10-缓存"><a href="#10-缓存" class="headerlink" title="10. 缓存"></a>10. 缓存</h2><blockquote>
<p>解决高并发系统的性能</p>
</blockquote>
<h3 id="10-1-一级缓存"><a href="#10-1-一级缓存" class="headerlink" title="10.1 一级缓存"></a>10.1 一级缓存</h3><blockquote>
<p>也叫本地缓存：SqlSession，默认开启，只在一次SqlSession中有效</p>
</blockquote>
<h3 id="10-2-缓存失效的情况"><a href="#10-2-缓存失效的情况" class="headerlink" title="10.2 缓存失效的情况"></a>10.2 缓存失效的情况</h3><ul>
<li>查询不同的数据</li>
<li>增删改会改变原来的数据，所以必定会刷新缓存</li>
<li>查询不同的Mapper.xml</li>
<li>手动清理缓存</li>
</ul>
<h3 id="10-3-二级缓存"><a href="#10-3-二级缓存" class="headerlink" title="10.3 二级缓存"></a>10.3 二级缓存</h3><blockquote>
<p>也叫全局缓存，一级缓存作用域太低，一个名称空间【namespace】对应一个二级缓存,二级缓存是事务性的。这意味着，当 SqlSession 完成并提交时，或是完成并回滚，但没有执行          flushCache&#x3D;true 的 insert&#x2F;delete&#x2F;update 语句时，缓存会获得更新。</p>
</blockquote>
<ul>
<li>开启全局缓存</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">  全局性地开启或关闭所有映射器配置文件中已配置的任何缓存。</span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;cacheEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>在想要二级缓存的Mapper.xml中开启</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cache</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<p>或</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cache</span></span></span><br><span class="line"><span class="tag">  <span class="attr">eviction</span>=<span class="string">&quot;FIFO&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">flushInterval</span>=<span class="string">&quot;60000&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">size</span>=<span class="string">&quot;512&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">readOnly</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<p>​          可用的清除策略有：        </p>
<ul>
<li><p><code>LRU</code> – 最近最少使用：移除最长时间不被使用的对象。          </p>
</li>
<li><p><code>FIFO</code> – 先进先出：按对象进入缓存的顺序来移除它们。          </p>
</li>
<li><p><code>SOFT</code> – 软引用：基于垃圾回收器状态和软引用规则移除对象。          </p>
</li>
<li><p><code>WEAK</code> – 弱引用：更积极地基于垃圾收集器状态和弱引用规则移除对象。</p>
</li>
</ul>
<p>默认的清除策略是 LRU。</p>
<ul>
<li>小结</li>
</ul>
<ol>
<li>实体类需要序列化，否则会抛出没有序列化异常</li>
<li>只要开启二级缓存，在同一个Mapper下就有效</li>
<li>所有的数据都先放在一级缓存中</li>
<li>只有当前会话提交或者关闭，才会提交到二级缓存中</li>
<li>用户进来系统先查二级缓存，然后一级缓存，最后数据库</li>
</ol>
<h3 id="10-4-自定义缓存"><a href="#10-4-自定义缓存" class="headerlink" title="10.4 自定义缓存"></a>10.4 自定义缓存</h3><blockquote>
<p>Ehcache是一种广泛使用的开源Java分布式缓存。一般是使用Redis</p>
</blockquote>
<h2 id="11-总结"><a href="#11-总结" class="headerlink" title="11. 总结"></a>11. 总结</h2><p>对于Mybatis进行了系统的学习，接下来会对源码进行学习</p>
]]></content>
      <tags>
        <tag>数据库</tag>
        <tag>mybatis</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx</title>
    <url>/2023/03/17/Nginx/</url>
    <content><![CDATA[<blockquote>
<center>官达者才未必当其位，誉美者实未必副其名</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<p><a href="https://nginx.org/">Nginx官网</a></p>
<h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h2><ol>
<li>定义</li>
</ol>
<blockquote>
<p>Nginx (engine x) 是一个高性能的HTTP和反向代理web服务器   ，同时也提供了IMAP&#x2F;POP3&#x2F;SMTP服务。</p>
</blockquote>
<ol start="2">
<li>背景</li>
</ol>
<ul>
<li>Nginx是由伊戈尔·赛索耶夫为俄罗斯访问量第二的Rambler.ru站点（俄文：Рамблер）开发的，公开版本1.19.6发布于2020年12月15日</li>
<li>Nginx 的源代码使用 2-clause BSD-like license。</li>
</ul>
<ol start="3">
<li>反向代理</li>
</ol>
<blockquote>
<p>代理服务端，正向代理是代理客户端</p>
</blockquote>
<ol start="4">
<li>特点</li>
</ol>
<ul>
<li>内存少</li>
<li>并发大</li>
</ul>
<ol start="5">
<li>作用</li>
</ol>
<ul>
<li>Http代理，反向代理：作为web服务器最常用的功能之一，尤其是反向代理。</li>
<li>负载均衡：内置策略（轮询，加权轮询，Ip hash。）和扩展策略。</li>
<li>动静分离，配置前端静态资源文件映射</li>
</ul>
<h2 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h2><ol>
<li>windows安装</li>
</ol>
<blockquote>
<p><a href="https://nginx.org/">Nginx官网</a>下载解压即可</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改了 Nginx 的配置文件后</span></span><br><span class="line">nginx -s reload</span><br><span class="line"><span class="comment"># 快速停止 </span></span><br><span class="line">nginx -s top</span><br><span class="line"><span class="comment"># 有序的停止</span></span><br><span class="line">nginx -s quit</span><br><span class="line"><span class="comment"># taskkill 干掉进程</span></span><br><span class="line">taskkill /f /t /im nginx.exe</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>Linux安装</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># gcc环境</span></span><br><span class="line">yum install gcc-c++</span><br><span class="line"><span class="comment"># PCRE pcre-devel Perl库安装</span></span><br><span class="line">yum install -y pcre pcre-devel</span><br><span class="line"><span class="comment"># zlib 安装</span></span><br><span class="line">yum install -y zlib zlib-devel</span><br><span class="line"><span class="comment"># OpenSSL 全套接字层密码库安装支持https</span></span><br><span class="line">yum install -y openssl openssl-devel</span><br><span class="line"><span class="comment"># 下载安装包解压</span></span><br><span class="line">tar -zxvf nginx-1.18.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> nginx-1.18.0</span><br><span class="line"><span class="comment"># 编译安装</span></span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="comment"># 查找安装路径</span></span><br><span class="line"> whereis nginx</span><br></pre></td></tr></table></figure>

<ul>
<li>常见命令</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/nginx/sbin/</span><br><span class="line">./nginx  启动</span><br><span class="line">./nginx -s stop  停止</span><br><span class="line">./nginx -s quit  安全退出</span><br><span class="line">./nginx -s reload  重新加载配置文件</span><br><span class="line">ps aux|grep nginx  查看nginx进程</span><br></pre></td></tr></table></figure>

<ul>
<li>连接不上</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 开启</span></span><br><span class="line">service firewalld start</span><br><span class="line"><span class="comment"># 重启</span></span><br><span class="line">service firewalld restart</span><br><span class="line"><span class="comment"># 关闭</span></span><br><span class="line">service firewalld stop</span><br><span class="line"><span class="comment"># 查看防火墙规则</span></span><br><span class="line">firewall-cmd --list-all</span><br><span class="line"><span class="comment"># 查询端口是否开放</span></span><br><span class="line">firewall-cmd --query-port=8080/tcp</span><br><span class="line"><span class="comment"># 开放80端口</span></span><br><span class="line">firewall-cmd --permanent --add-port=80/tcp</span><br><span class="line"><span class="comment"># 移除端口</span></span><br><span class="line">firewall-cmd --permanent --remove-port=8080/tcp</span><br><span class="line"> </span><br><span class="line"><span class="comment">#重启防火墙(修改配置后要重启防火墙)</span></span><br><span class="line">firewall-cmd --reload</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 参数解释</span></span><br><span class="line">1、firwall-cmd：是Linux提供的操作firewall的一个工具；</span><br><span class="line">2、--permanent：表示设置为持久；</span><br><span class="line">3、--add-port：标识添加的端口；</span><br></pre></td></tr></table></figure>

<h2 id="3-配置文件"><a href="#3-配置文件" class="headerlink" title="3. 配置文件"></a>3. 配置文件</h2><ol>
<li>解释</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">########### 每个指令必须有分号结束。#################</span></span><br><span class="line"><span class="comment">#user administrator administrators;  #配置用户或者组，默认为nobody nobody。</span></span><br><span class="line"><span class="comment">#worker_processes 2;  #允许生成的进程数，默认为1</span></span><br><span class="line"><span class="comment">#pid /nginx/pid/nginx.pid;   #指定nginx进程运行文件存放地址</span></span><br><span class="line">error_log <span class="built_in">log</span>/error.log debug;  <span class="comment">#制定日志路径，级别。这个设置可以放入全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg</span></span><br><span class="line">events &#123;</span><br><span class="line">    accept_mutex on;   <span class="comment">#设置网路连接序列化，防止惊群现象发生，默认为on</span></span><br><span class="line">    multi_accept on;  <span class="comment">#设置一个进程是否同时接受多个网络连接，默认为off</span></span><br><span class="line">    <span class="comment">#use epoll;      #事件驱动模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport</span></span><br><span class="line">    worker_connections  1024;    <span class="comment">#最大连接数，默认为512</span></span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;   <span class="comment">#文件扩展名与文件类型映射表</span></span><br><span class="line">    default_type  application/octet-stream; <span class="comment">#默认文件类型，默认为text/plain</span></span><br><span class="line">    <span class="comment">#access_log off; #取消服务日志    </span></span><br><span class="line">    log_format myFormat <span class="string">&#x27;$remote_addr–$remote_user [$time_local] $request $status $body_bytes_sent $http_referer $http_user_agent $http_x_forwarded_for&#x27;</span>; <span class="comment">#自定义格式</span></span><br><span class="line">    access_log <span class="built_in">log</span>/access.log myFormat;  <span class="comment">#combined为日志格式的默认值</span></span><br><span class="line">    sendfile on;   <span class="comment">#允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。</span></span><br><span class="line">    sendfile_max_chunk 100k;  <span class="comment">#每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限。</span></span><br><span class="line">    keepalive_timeout 65;  <span class="comment">#连接超时时间，默认为75s，可以在http，server，location块。</span></span><br><span class="line"> </span><br><span class="line">    upstream xxy &#123;   </span><br><span class="line">      server 127.0.0.1:8080;</span><br><span class="line">      server 192.168.10.121:8081 backup;  <span class="comment">#热备</span></span><br><span class="line">    &#125;</span><br><span class="line">    error_page 404 https://www.baidu.com; <span class="comment">#错误页</span></span><br><span class="line">    server &#123;</span><br><span class="line">        keepalive_requests 120; <span class="comment">#单连接请求上限次数。</span></span><br><span class="line">        listen       4545;   <span class="comment">#监听端口</span></span><br><span class="line">        server_name  127.0.0.1;   <span class="comment">#监听地址       </span></span><br><span class="line">        location  ~*^.+$ &#123;       <span class="comment">#请求的url过滤，正则匹配，~为区分大小写，~*为不区分大小写。</span></span><br><span class="line">           <span class="comment">#root path;  #根目录</span></span><br><span class="line">           <span class="comment">#index vv.txt;  #设置默认页</span></span><br><span class="line">           proxy_pass  http://xxy;  <span class="comment">#请求转向mysvr 定义的服务器列表</span></span><br><span class="line">           deny 127.0.0.1;  <span class="comment">#拒绝的ip</span></span><br><span class="line">           allow 172.18.5.54; <span class="comment">#允许的ip           </span></span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>重要</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upstream xxy &#123;   </span><br><span class="line">     server 127.0.0.1:8080;</span><br><span class="line">     server 192.168.10.121:8081 backup;  #热备</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   server &#123;</span><br><span class="line">   ..</span><br><span class="line">   proxy_pass  http://xxy;  #请求转向mysvr 定义的服务器列表</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>实际项目开发</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="comment">#user  nobody;</span></span><br><span class="line">worker_processes  1;</span><br><span class="line"> </span><br><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">stream &#123;</span><br><span class="line">    upstream pg-server&#123;</span><br><span class="line">        server 47.99.104.62:5432;</span><br><span class="line">	&#125;</span><br><span class="line">	server &#123;</span><br><span class="line">		listen 5433;</span><br><span class="line">		proxy_pass pg-server;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    client_max_body_size  100m;</span><br><span class="line">    access_log  off;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    keepalive_timeout  100;</span><br><span class="line">	fastcgi_connect_timeout 75;</span><br><span class="line">    fastcgi_read_timeout 600;</span><br><span class="line">    fastcgi_send_timeout 600;</span><br><span class="line">	gzip  on;  </span><br><span class="line">	gzip_min_length 1k;  </span><br><span class="line">	gzip_comp_level 4; </span><br><span class="line">	gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;  </span><br><span class="line">	gzip_disable <span class="string">&quot;MSIE [1-6]\.&quot;</span>; </span><br><span class="line">	gzip_vary on; </span><br><span class="line"> </span><br><span class="line">	map <span class="variable">$http_upgrade</span> <span class="variable">$connection_upgrade</span> &#123;</span><br><span class="line">		default upgrade;</span><br><span class="line">		<span class="string">&#x27;&#x27;</span> close;</span><br><span class="line">	&#125;</span><br><span class="line"> </span><br><span class="line">	upstream msc &#123;</span><br><span class="line">        server  47.99.104.62:18010;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">	upstream nacos-server &#123;</span><br><span class="line">        server  47.99.104.62:8848;</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">	upstream graphs &#123;</span><br><span class="line">        server 47.99.104.62:8000;</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">	upstream websocket-server &#123;</span><br><span class="line">        server 47.99.104.62:2014;</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">	server &#123;</span><br><span class="line">		listen       18001;</span><br><span class="line">		location / &#123;</span><br><span class="line">			proxy_pass http://nacos-server;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"> </span><br><span class="line">	server &#123;</span><br><span class="line">		listen       80 default;</span><br><span class="line">		server_name  localhost;</span><br><span class="line">		<span class="comment">#ssl on;</span></span><br><span class="line">		</span><br><span class="line">		<span class="comment">#root ../webapps;</span></span><br><span class="line">		<span class="comment">#location / &#123;</span></span><br><span class="line">		<span class="comment">#	rewrite ^/$ /fusionsite-are-basic-web last;</span></span><br><span class="line">		<span class="comment">#	add_header &#x27;Cache-Control&#x27; &#x27;no-cache&#x27;;</span></span><br><span class="line">		<span class="comment">#&#125;</span></span><br><span class="line">		</span><br><span class="line">		root ../../Oceansite/webapps/oceansite-basic-web;</span><br><span class="line">		location = / &#123;</span><br><span class="line">			<span class="comment">#root	../../Oceansite/webapps/oceansite-basic-web;</span></span><br><span class="line">			<span class="comment">#index  index.html index.htm;</span></span><br><span class="line">			rewrite ^/$ /index last;			</span><br><span class="line">		&#125;</span><br><span class="line">		location /index &#123;</span><br><span class="line">			<span class="built_in">alias</span>	../../Oceansite/webapps/oceansite-basic-web;			</span><br><span class="line">		&#125;</span><br><span class="line">		location /login &#123;</span><br><span class="line">			<span class="built_in">alias</span>	../../Oceansite/webapps/oceansite-basic-web;			</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		location /system/menu &#123;</span><br><span class="line">			<span class="built_in">alias</span>	../../Oceansite/webapps/oceansite-basic-web/;			</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		location /RTData/navigation &#123;</span><br><span class="line">			<span class="built_in">alias</span>	../../Oceansite/webapps/oceansite-basic-web/;			</span><br><span class="line">		&#125;</span><br><span class="line">		location /RTData/flowChart &#123;</span><br><span class="line">			<span class="built_in">alias</span>	../../Oceansite/webapps/oceansite-basic-web/;			</span><br><span class="line">		&#125;</span><br><span class="line">		location /RTData/47.99.104.62/oceansite-conduction-web &#123;</span><br><span class="line">			<span class="built_in">alias</span>	../../Oceansite/webapps/oceansite-basic-web/;			</span><br><span class="line">		&#125;</span><br><span class="line">		location /RTData/47.99.104.62/oceansite-video-monitor-web &#123;</span><br><span class="line">			<span class="built_in">alias</span>	../../Oceansite/webapps/oceansite-basic-web/;			</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		location /47.99.104.62/oceansite-ship-record-web &#123;</span><br><span class="line">			<span class="built_in">alias</span>	../../Oceansite/webapps/oceansite-basic-web/;			</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		<span class="comment">#记录簿网页资源</span></span><br><span class="line">		location /oceansite-ship-record-web &#123;</span><br><span class="line">			root	../../Oceansite/webapps;	</span><br><span class="line">			index  index.html index.htm;			</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">#通导系统网页资源</span></span><br><span class="line">		location /oceansite-conduction-web &#123;</span><br><span class="line">			root	../../Oceansite/webapps;	</span><br><span class="line">			index  index.html index.htm;			</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">#视频监控网页资源</span></span><br><span class="line">		location /oceansite-video-monitor-web &#123;</span><br><span class="line">			root	../../Oceansite/webapps;	</span><br><span class="line">			index  index.html index.htm;			</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">#视频监控报警照片和视频</span></span><br><span class="line">		location /alarmimgdata &#123;</span><br><span class="line">			root	../../;			</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">#流程图网页资源</span></span><br><span class="line">		location /flowchart &#123;</span><br><span class="line">			root	../webapps;</span><br><span class="line">			index  index.html index.htm;			</span><br><span class="line">		&#125;</span><br><span class="line">		location /fusionsite-are-basic-web &#123;</span><br><span class="line">			root	../webapps;</span><br><span class="line">			index  index.html index.htm;			</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		location /common &#123;</span><br><span class="line">			root	../webapps;</span><br><span class="line">			index  index.html index.htm;			</span><br><span class="line">		&#125;		</span><br><span class="line">		</span><br><span class="line">		<span class="comment">#OceanSite 数据接口跳转</span></span><br><span class="line">		location /prod-api/ &#123;</span><br><span class="line">			proxy_read_timeout 86400;</span><br><span class="line">		</span><br><span class="line">			proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">			proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">			proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">			</span><br><span class="line">			add_header <span class="string">&#x27;Access-Control-Allow-Credentials&#x27;</span> <span class="string">&#x27;true&#x27;</span> always;</span><br><span class="line">		    add_header <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span> *; </span><br><span class="line">			add_header <span class="string">&#x27;Access-Control-Max-Age&#x27;</span> 1728000;</span><br><span class="line">			add_header <span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span> <span class="string">&#x27;GET,POST,OPTIONS,PUT,DELETE&#x27;</span>;</span><br><span class="line">			add_header <span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span> <span class="string">&#x27;Authorization,Accept,Origin,Keep-Alive,User-Agent,X-Mx-ReqToken,X-Data-Type,X-Auth-Token,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range&#x27;</span>;</span><br><span class="line">			</span><br><span class="line">			proxy_pass http://47.99.104.62:8080/;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		location /msc &#123;</span><br><span class="line">			proxy_pass http://msc;</span><br><span class="line">			proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">            		proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		location /fusionsite-are-h5-flowchart-web/graph &#123;</span><br><span class="line">			root ../webapps;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		location ~* /fusionsite-are-h5-flowchart-web/graph/.*/Resource/.*\.(jpg|png|jpeg|gif)$ &#123;</span><br><span class="line">			rewrite ^/fusionsite-are-h5-flowchart-web/graph/(.*)$ /mare-graph/<span class="variable">$1</span> last;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		location ~* /mare-graph &#123;</span><br><span class="line">			root ../App_Server/fusionsite-are-minio-server/data;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		location /zrender/src/core/util.js &#123;</span><br><span class="line">			root ../webapps/fusionsite-are-h5-flowchart-web/graph;</span><br><span class="line">		&#125;</span><br><span class="line"> </span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		location /graphs/ &#123;</span><br><span class="line">                proxy_pass http://graphs;</span><br><span class="line">                proxy_set_header Host 47.99.104.62:8000;</span><br><span class="line">        &#125;</span><br><span class="line">		</span><br><span class="line">		location /msc/fusionsite-are-basic/minIO/fileUpload &#123;</span><br><span class="line">		    	proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">            		proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">		    	add_header <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span> <span class="string">&quot;<span class="variable">$http_origin</span>&quot;</span> always;</span><br><span class="line">            		add_header <span class="string">&#x27;Access-Control-Allow-Credentials&#x27;</span> <span class="string">&#x27;true&#x27;</span> always;</span><br><span class="line">			add_header <span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span> <span class="string">&#x27;POST&#x27;</span>;</span><br><span class="line">			add_header <span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span> <span class="string">&#x27;lastoperatime,token,DNT,web-token,app-token,Authorization,Accept,Origin,Keep-Alive,User-Agent,X-Mx-ReqToken,X-Data-Type,X-Auth-Token,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range&#x27;</span>;</span><br><span class="line">			proxy_pass http://47.99.104.62:18110/minIO/fileUpload;</span><br><span class="line">		&#125;</span><br><span class="line">		location /msc/fusionsite-are-basic/minIO/file/fileUpload &#123;</span><br><span class="line">		    	proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">            		proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">		    	add_header <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span> <span class="string">&quot;<span class="variable">$http_origin</span>&quot;</span> always;</span><br><span class="line">            		add_header <span class="string">&#x27;Access-Control-Allow-Credentials&#x27;</span> <span class="string">&#x27;true&#x27;</span> always;</span><br><span class="line">			add_header <span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span> <span class="string">&#x27;POST&#x27;</span>;</span><br><span class="line">			add_header <span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span> <span class="string">&#x27;lastoperatime,token,DNT,web-token,app-token,Authorization,Accept,Origin,Keep-Alive,User-Agent,X-Mx-ReqToken,X-Data-Type,X-Auth-Token,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range&#x27;</span>;</span><br><span class="line">			proxy_pass http://47.99.104.62:18110/minIO/file/fileUpload;</span><br><span class="line">		&#125;</span><br><span class="line">		location /msc/fusionsite-are-basic/minIO/fileDownload &#123;</span><br><span class="line">		    	proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">            		proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">		    	add_header <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span> <span class="string">&quot;<span class="variable">$http_origin</span>&quot;</span> always;</span><br><span class="line">            		add_header <span class="string">&#x27;Access-Control-Allow-Credentials&#x27;</span> <span class="string">&#x27;true&#x27;</span> always;</span><br><span class="line">			add_header <span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span> <span class="string">&#x27;POST&#x27;</span>;</span><br><span class="line">			add_header <span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span> <span class="string">&#x27;lastoperatime,token,DNT,web-token,app-token,Authorization,Accept,Origin,Keep-Alive,User-Agent,X-Mx-ReqToken,X-Data-Type,X-Auth-Token,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range&#x27;</span>;</span><br><span class="line">			proxy_pass http://47.99.104.62:18110/minIO/fileDownload;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		error_page 404 /404.html;</span><br><span class="line">			location = /40x.html &#123;</span><br><span class="line">		&#125;</span><br><span class="line"> </span><br><span class="line">		error_page 500 502 503 504 /50x.html;</span><br><span class="line">			location = /50x.html &#123;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;	</span><br><span class="line">	</span><br><span class="line">	server &#123;</span><br><span class="line">		listen       8000;</span><br><span class="line">		server_name  localhost;</span><br><span class="line">		client_max_body_size  100m;</span><br><span class="line">		</span><br><span class="line">		location /</span><br><span class="line">		&#123;</span><br><span class="line">			root  ../webapps/fusionsite-are-h5-flowchart-web/graph;</span><br><span class="line">			index  index.html index.htm;</span><br><span class="line">		&#125;</span><br><span class="line"> </span><br><span class="line">		</span><br><span class="line">		location ~* .*/Resource/.*\.(jpg|png|jpeg|gif)$ &#123;</span><br><span class="line">			rewrite ^.*/Resource/(.*)$  /resources/<span class="variable">$1</span> last;</span><br><span class="line">		&#125;</span><br><span class="line">	</span><br><span class="line">		location ~* .*/Flows/.*\.(jpg|png|jpeg|gif)$ &#123;</span><br><span class="line">			rewrite ^.*/Flows/(.*)$  /resources/<span class="variable">$1</span> last;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		location /resources &#123;</span><br><span class="line">			<span class="built_in">alias</span> ../webapps/fusionsite-are-h5-flowchart-web/resources;</span><br><span class="line">		&#125;</span><br><span class="line"> </span><br><span class="line">		error_page   500 502 503 504  /50x.html;</span><br><span class="line">		location = /50x.html</span><br><span class="line">		&#123;</span><br><span class="line">			root   html;</span><br><span class="line">		&#125;</span><br><span class="line"> </span><br><span class="line">		location /flowchart</span><br><span class="line">		&#123;</span><br><span class="line">			proxy_read_timeout 86400;</span><br><span class="line">			proxy_pass http://websocket-server;</span><br><span class="line">			proxy_http_version 1.1;</span><br><span class="line">			proxy_set_header Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">			proxy_set_header Connection <span class="variable">$connection_upgrade</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		location /graphs/rest &#123;</span><br><span class="line">                rewrite ^/graphs/(.*)$  /<span class="variable">$1</span> last;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">		location /rest</span><br><span class="line">		&#123;</span><br><span class="line">			proxy_pass http://47.99.104.62:8689/rest;</span><br><span class="line">			<span class="comment">#proxy_redirect off;</span></span><br><span class="line">			proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">			proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">			proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">			expires off;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure>

<h2 id="4-总结"><a href="#4-总结" class="headerlink" title="4. 总结"></a>4. 总结</h2><p>知道了Nginx反向代理，对服务器加深了理解</p>
]]></content>
      <tags>
        <tag>nginx</tag>
        <tag>运维</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis</title>
    <url>/2023/03/17/Redis/</url>
    <content><![CDATA[<blockquote>
<center>履霜坚冰至</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<p><a href="https://redis.io/">Redis官网</a></p>
<h2 id="1-NoSQL概述"><a href="#1-NoSQL概述" class="headerlink" title="1. NoSQL概述"></a>1. NoSQL概述</h2><ol>
<li>定义</li>
</ol>
<blockquote>
<p>NoSQL，泛指非关系型的数据库，Not Only Structured Query Language</p>
</blockquote>
<ol start="2">
<li>使用原因</li>
</ol>
<ul>
<li>单机MySQL时代</li>
<li><a href="https://so.csdn.net/so/search?q=Memcached&spm=1001.2101.3001.7020">Memcached</a>(缓存) + Mysql + 垂直拆分（读写分离）</li>
<li>分库分表 + 水平拆分 + Mysql集群</li>
<li>NoSQL+分库分表 + 水平拆分 + Mysql集群</li>
</ul>
<blockquote>
<p>用户的个人信息，社交网络，地理位置。用户自己产生的数据，用户日志等等爆发式增长, 这时候我们就需要使用NoSQL数据库的</p>
</blockquote>
<ol start="3">
<li>分类</li>
</ol>
<table>
<thead>
<tr>
<th><strong>分类</strong></th>
<th><strong>Examples举例</strong></th>
<th>典型应用场景</th>
<th>数据模型</th>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody><tr>
<td><strong>键值（key-value）</strong></td>
<td>Tokyo Cabinet&#x2F;Tyrant， Redis， Voldemort， Oracle BDB</td>
<td>内容缓存，主要用于处理大量数据的高访问负载，也用于一些日志系统等等。</td>
<td>Key 指向 Value 的键值对，通常用hash table来实现</td>
<td>查找速度快</td>
<td>数据无结构化，通常只被当作字符串或者二进制数据</td>
</tr>
<tr>
<td><strong>列存储数据库</strong></td>
<td>Cassandra， HBase， Riak</td>
<td>分布式的文件系统</td>
<td>以列簇式存储，将同一列数据存在一起</td>
<td>查找速度快，可扩展性强，更容易进行分布式扩展</td>
<td>功能相对局限</td>
</tr>
<tr>
<td><strong>文档型数据库</strong></td>
<td>CouchDB， MongoDb</td>
<td>Web应用（与Key-Value类似，Value是结构化的，不同的是数据库能够了解Value的内容）</td>
<td>Key-Value对应的键值对，Value为结构化数据</td>
<td>数据结构要求不严格，表结构可变，不需要像关系型数据库一样需要预先定义表结构</td>
<td>查询性能不高，而且缺乏统一的查询语法。</td>
</tr>
<tr>
<td><strong>图形(Graph)数据库</strong></td>
<td>Neo4J， InfoGrid， Infinite Graph</td>
<td>社交网络，推荐系统等。专注于构建关系图谱</td>
<td>图结构</td>
<td>利用图结构相关算法。比如最短路径寻址，N度关系查找等</td>
<td>很多时候需要对整个图做计算才能得出需要的信息，而且这种结构不太好做分布式的集群方案。</td>
</tr>
</tbody></table>
<ol start="4">
<li>特点</li>
</ol>
<ul>
<li>易扩展</li>
<li>大数据量，高性能（Redis 一秒读取11万，写8万）</li>
<li>灵活的数据模型</li>
<li>高可用</li>
<li>最终一致性CAP定理和BASE理论</li>
</ul>
<ol start="5">
<li>大数据时代3v：主要是描述问题的</li>
</ol>
<ul>
<li>海量Velume</li>
<li>多样Variety</li>
<li>实时Velocity</li>
</ul>
<ol start="6">
<li>大数据时代的3高 ： 主要是对程序的要求</li>
</ol>
<ul>
<li>高并发</li>
<li>高可扩</li>
<li>高性能</li>
</ul>
<h2 id="2-Redis概述"><a href="#2-Redis概述" class="headerlink" title="2. Redis概述"></a>2. Redis概述</h2><ol>
<li>定义</li>
</ol>
<blockquote>
<p>Redis（Remote Dictionary Server )，即远程字典服务。是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、<strong>Key-Value数据库</strong>，并提供多种语言的API。</p>
</blockquote>
<ol start="2">
<li>下载安装</li>
</ol>
<ul>
<li>windows安装</li>
</ul>
<blockquote>
<p>建议在github下载 [redis下载](<a href="https://github.com/dmajkic/redis%EF%BC%89">https://github.com/dmajkic/redis）</a></p>
</blockquote>
<ul>
<li>Linux安装</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -zxvf 压缩包名</span><br><span class="line"><span class="comment"># 环境安装</span></span><br><span class="line">yum install gcc-c++</span><br><span class="line"><span class="comment"># 然后进入redis目录下编译</span></span><br><span class="line">make</span><br><span class="line"><span class="comment"># 然后执行安装</span></span><br><span class="line">make install</span><br><span class="line"><span class="comment"># 1. redis默认安装路径 /usr/local/bin</span></span><br><span class="line"><span class="comment"># 2. 将redis的配置文件复制到 程序安装目录 /usr/local/bin/kconfig下</span></span><br><span class="line"><span class="built_in">mkdir</span> kconfig</span><br><span class="line"><span class="built_in">cp</span> /opt/redis-5.0.8/redis.config kconfig</span><br><span class="line"><span class="comment"># 3. redis默认不是后台启动的，需要修改配置文件！将daemonize no 改为yes</span></span><br><span class="line">vim redis.config</span><br><span class="line">daemonize <span class="built_in">yes</span></span><br><span class="line"><span class="comment"># 4. 通过制定的配置文件启动redis服务</span></span><br><span class="line">redis-server  kconfig/redis.config</span><br><span class="line"><span class="comment"># 5. 使用redis-cli连接指定的端口号测试，Redis的默认端口6379</span></span><br><span class="line">redis-cli -p 6379</span><br><span class="line"><span class="comment"># 6. 查看redis进程是否开启</span></span><br><span class="line">ps -ef|grep redis</span><br><span class="line"><span class="comment"># 7. 关闭Redis服务 </span></span><br><span class="line">shutdown</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="comment"># 8.再次查看进程</span></span><br><span class="line">ps -ef|grep redis</span><br></pre></td></tr></table></figure>

<h2 id="3-Redis性能测试工具"><a href="#3-Redis性能测试工具" class="headerlink" title="3. Redis性能测试工具"></a>3. Redis性能测试工具</h2><ol>
<li>语句</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis-benchmark [option] [option value]</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>序号</th>
<th>选项</th>
<th>描述</th>
<th>默认值</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>-h</td>
<td>指定服务器主机名</td>
<td>127.0.0.1</td>
</tr>
<tr>
<td>2</td>
<td>-p</td>
<td>指定服务器端口</td>
<td>6379</td>
</tr>
<tr>
<td>3</td>
<td><strong>-s</strong></td>
<td>指定服务器 socket</td>
<td></td>
</tr>
<tr>
<td>4</td>
<td><strong>-c</strong></td>
<td>指定并发连接数</td>
<td>50</td>
</tr>
<tr>
<td>5</td>
<td><strong>-n</strong></td>
<td>指定请求数</td>
<td>10000</td>
</tr>
<tr>
<td>6</td>
<td><strong>-d</strong></td>
<td>以字节的形式指定 SET&#x2F;GET 值的数据大小</td>
<td>2</td>
</tr>
<tr>
<td>7</td>
<td><strong>-k</strong></td>
<td>1&#x3D;keep alive 0&#x3D;reconnect</td>
<td>1</td>
</tr>
<tr>
<td>8</td>
<td><strong>-r</strong></td>
<td>SET&#x2F;GET&#x2F;INCR 使用随机 key, SADD 使用随机值</td>
<td></td>
</tr>
<tr>
<td>9</td>
<td><strong>-P</strong></td>
<td>通过管道传输 <numreq> 请求</td>
<td>1</td>
</tr>
<tr>
<td>10</td>
<td><strong>-q</strong></td>
<td>强制退出 redis。仅显示 query&#x2F;sec 值</td>
<td></td>
</tr>
<tr>
<td>11</td>
<td><strong>–csv</strong></td>
<td>以 CSV 格式输出</td>
<td></td>
</tr>
<tr>
<td>12</td>
<td>***-l*（L 的小写字母）**</td>
<td>生成循环，永久执行测试</td>
<td></td>
</tr>
<tr>
<td>13</td>
<td>***-l*（L 的小写字母）**</td>
<td>生成循环，永久执行测试</td>
<td></td>
</tr>
<tr>
<td>14</td>
<td>***-I*（i 的大写字母）**</td>
<td>Idle 模式。仅打开 N 个 idle 连接并等待。</td>
<td></td>
</tr>
</tbody></table>
<h2 id="4-Redis基础配置"><a href="#4-Redis基础配置" class="headerlink" title="4.Redis基础配置"></a>4.Redis基础配置</h2><ol>
<li>数据库</li>
</ol>
<blockquote>
<p>databases 16,默认16【0-15】个数据库，使用是第0个，可以使用select 3进行切换</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; flushdb <span class="comment"># 清空当前数据库</span></span><br><span class="line">127.0.0.1:6379&gt; flushall <span class="comment">#清空所有数据库的键值对。</span></span><br><span class="line">127.0.0.1:6379&gt; config get databases <span class="comment"># 命令行查看数据库数量databases</span></span><br><span class="line">1) <span class="string">&quot;databases&quot;</span></span><br><span class="line">2) <span class="string">&quot;16&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; select 8 <span class="comment"># 切换数据库 DB 8</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379[8]&gt; dbsize <span class="comment"># 查看数据库大小</span></span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不同数据库之间 数据是不能互通的，并且dbsize 是根据库中key的个数。</span></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> name sakura </span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; SELECT 8</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379[8]&gt; get name <span class="comment"># db8中并不能获取db0中的键值对。</span></span><br><span class="line">(nil)</span><br><span class="line">127.0.0.1:6379[8]&gt; DBSIZE</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">127.0.0.1:6379[8]&gt; SELECT 0</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; keys *  <span class="comment">#查看数据库所有key</span></span><br><span class="line">1) <span class="string">&quot;counter:__rand_int__&quot;</span></span><br><span class="line">2) <span class="string">&quot;mylist&quot;</span></span><br><span class="line">3) <span class="string">&quot;name&quot;</span></span><br><span class="line">4) <span class="string">&quot;key:__rand_int__&quot;</span></span><br><span class="line">5) <span class="string">&quot;myset:__rand_int__&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; DBSIZE <span class="comment"># size和key个数相关</span></span><br><span class="line">(<span class="built_in">integer</span>) 5</span><br><span class="line">127.0.0.1:6379&gt; CONFIG GET * <span class="comment"># 获取所有配置项</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>单线程</li>
</ol>
<ul>
<li>基于内存和网络带宽，cpu不是性能瓶颈，使用单线程操作效率是最高的</li>
<li>基于C语言，每秒查询【QPS】达到10W+</li>
</ul>
<ol start="3">
<li><a id="article_top">配置项</a></li>
</ol>
<table>
<thead>
<tr>
<th>序号</th>
<th>参数</th>
<th>默认</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>daemonize</td>
<td>no</td>
<td>Redis默认不是以守护进程的方式运行，可以通过该配置项修改，使用yes启用守护进程</td>
</tr>
<tr>
<td>2</td>
<td>pidfile</td>
<td>&#x2F;var&#x2F;run&#x2F;redis.pid</td>
<td>后台运行或当Redis以守护进程方式运行时，Redis默认会把pid写入&#x2F;var&#x2F;run&#x2F;redis.pid文件，可以通过pidfile指定</td>
</tr>
<tr>
<td>3</td>
<td>port</td>
<td>6379</td>
<td>指定Redis监听端口，默认端口为6379，6379在手机按键上MERZ对应的号码，而MERZ取自意大利歌女Alessia Merz的名字</td>
</tr>
<tr>
<td>4</td>
<td>bind</td>
<td>127.0.0.1</td>
<td>绑定的主机地址</td>
</tr>
<tr>
<td>5</td>
<td>timeout</td>
<td>300</td>
<td>当 客户端闲置多长时间后关闭连接，如果指定为0，表示关闭该功能</td>
</tr>
<tr>
<td>6</td>
<td>loglevel</td>
<td>verbose</td>
<td>指定日志记录级别，Redis总共支持四个级别：debug、verbose、notice、warning</td>
</tr>
<tr>
<td>7</td>
<td>logfile</td>
<td>stdout</td>
<td>日志记录方式，默认为标准输出，如果配置Redis为守护进程方式运行，而这里又配置为日志记录方式为标准输出，则日志将会发送给&#x2F;dev&#x2F;null</td>
</tr>
<tr>
<td>8</td>
<td>databases</td>
<td>16</td>
<td>设置数据库的数量，默认数据库为0，可以使用SELECT <code>&lt;dbid&gt;</code>命令在连接上指定数据库id</td>
</tr>
<tr>
<td>9</td>
<td>save<code>&lt;seconds&gt;</code> <code>&lt;changes&gt;</code></td>
<td>save 900 1<br/>save 300 10<br/>save 60 10000</td>
<td>指定在多长时间内，有多少次更新操作，就将数据同步到数据文件，可以多个条件配合,表示900秒（15分钟）内有1个更改</td>
</tr>
<tr>
<td>10</td>
<td>rdbcompression</td>
<td>yes</td>
<td>指定存储至本地数据库时是否压缩数据，默认为yes，Redis采用LZF压缩，如果为了节省CPU时间，可以关闭该选项，但会导致数据库文件变的巨大</td>
</tr>
<tr>
<td>11</td>
<td>dbfilename</td>
<td>dump.rdb</td>
<td>指定本地数据库文件名</td>
</tr>
<tr>
<td>12</td>
<td>dir</td>
<td>.&#x2F;</td>
<td>指定本地数据库存放目录</td>
</tr>
<tr>
<td>13</td>
<td>slaveof <code>&lt;masterip&gt;</code> <code>&lt;masterport&gt;</code></td>
<td></td>
<td>设置当本机为slav服务时，设置master服务的IP地址及端口，在Redis启动时，它会自动从master进行数据同步</td>
</tr>
<tr>
<td>14</td>
<td>masterauth <code>&lt;mater-password&gt;</code></td>
<td></td>
<td>当master服务设置了密码保护时，slav服务连接master的密码</td>
</tr>
<tr>
<td>15</td>
<td>requirepass</td>
<td>foobared</td>
<td>设置Redis连接密码，如果配置了连接密码，客户端在连接Redis时需要通过AUTH <code>&lt;password&gt;</code>命令提供密码，默认关闭</td>
</tr>
<tr>
<td>16</td>
<td>maxclients</td>
<td>128</td>
<td>设置同一时间最大客户端连接数，默认无限制，Redis可以同时打开的客户端连接数为Redis进程可以打开的最大文件描述符数，如果设置  maxclients 0，表示不作限制。当客户端连接数到达限制时，Redis会关闭新的连接并向客户端返回max number of  clients reached错误信息</td>
</tr>
<tr>
<td>17</td>
<td>maxmemory <code>&lt;bytes&gt;</code></td>
<td></td>
<td>指定Redis最大内存限制，Redis在启动时会把数据加载到内存中，达到最大内存后，Redis会先尝试清除已到期或即将到期的Key，当此方法处理  后，仍然到达最大内存设置，将无法再进行写入操作，但仍然可以进行读取操作。Redis新的vm机制，会把Key存放内存，Value会存放在swap区</td>
</tr>
<tr>
<td>18</td>
<td>appendonly</td>
<td>no</td>
<td>指定是否在每次更新操作后进行日志记录，Redis在默认情况下是异步的把数据写入磁盘，如果不开启，可能会在断电时导致一段时间内的数据丢失。因为 redis本身同步数据文件是按上面save条件来同步的，所以有的数据会在一段时间内只存在于内存中。</td>
</tr>
<tr>
<td>19</td>
<td>appendfilename</td>
<td>appendonly.aof</td>
<td>指定更新日志文件名</td>
</tr>
<tr>
<td>20</td>
<td>appendfsync</td>
<td>everysec</td>
<td>指定更新日志条件，共有3个可选值：     no：表示等操作系统进行数据缓存同步到磁盘（快）     always：表示每次更新操作后手动调用fsync()将数据写到磁盘（慢，安全）     everysec：表示每秒同步一次（折衷，默认值）</td>
</tr>
<tr>
<td>21</td>
<td>vm-enabled</td>
<td>no</td>
<td>指定是否启用虚拟内存机制，默认值为no，简单的介绍一下，VM机制将数据分页存放，由Redis将访问量较少的页即冷数据swap到磁盘上，访问多的页面由磁盘自动换出到内存中</td>
</tr>
<tr>
<td>22</td>
<td>vm-swap-file</td>
<td>&#x2F;tmp&#x2F;redis.swap</td>
<td>虚拟内存文件路径，不可多个Redis实例共享</td>
</tr>
<tr>
<td>23</td>
<td>vm-max-memory</td>
<td>0</td>
<td>将所有大于vm-max-memory的数据存入虚拟内存,无论vm-max-memory设置多小,所有索引数据都是内存存储的(Redis的索引数据 就是keys),也就是说,当vm-max-memory设置为0的时候,其实是所有value都存在于磁盘</td>
</tr>
<tr>
<td>24</td>
<td>vm-page-size</td>
<td>32</td>
<td>edis  swap文件分成了很多的page，一个对象可以保存在多个page上面，但一个page上不能被多个对象共享，vm-page-size是要根据存储的  数据大小来设定的，作者建议如果存储很多小对象，page大小最好设置为32或者64bytes；如果存储很大大对象，则可以使用更大的page，如果不 确定，就使用默认值</td>
</tr>
<tr>
<td>25</td>
<td>vm-pages</td>
<td>134217728</td>
<td>设置swap文件中的page数量，由于页表（一种表示页面空闲或使用的bitmap）是在放在内存中的，，在磁盘上每8个pages将消耗1byte的内存。</td>
</tr>
<tr>
<td>26</td>
<td>vm-max-threads</td>
<td>4</td>
<td>设置访问swap文件的线程数,最好不要超过机器的核数,如果设置为0,那么所有对swap文件的操作都是串行的，可能会造成比较长时间的延迟</td>
</tr>
<tr>
<td>27</td>
<td>glueoutputbuf</td>
<td>yes</td>
<td>设置在向客户端应答时，是否把较小的包合并为一个包发送</td>
</tr>
<tr>
<td>28</td>
<td>hash-max-zipmap-entries 64    hash-max-zipmap-value 512</td>
<td></td>
<td>指定在超过一定的数量或者最大的元素超过某一临界值时，采用一种特殊的哈希算法</td>
</tr>
<tr>
<td>29</td>
<td>activerehashing</td>
<td>yes</td>
<td>指定是否激活重置哈希</td>
</tr>
<tr>
<td>30</td>
<td>include</td>
<td>&#x2F;path&#x2F;to&#x2F;local.conf</td>
<td>指定包含其它的配置文件，可以在同一主机上多个Redis实例之间使用同一份配置文件，而同时各个实例又拥有自己的特定配置文件</td>
</tr>
<tr>
<td>31</td>
<td>protected-model</td>
<td>yes</td>
<td>保护模式</td>
</tr>
</tbody></table>
<h2 id="5-数据类型"><a href="#5-数据类型" class="headerlink" title="5. 数据类型"></a>5. 数据类型</h2><blockquote>
<p>Redis是一个开源（BSD许可），内存存储的数据结构服务器，可用作数据库，高速缓存和消息队列代理。它支持字符串、哈希表、列表、集合、有序集合，位图，hyperloglogs等数据类型。内置复制、Lua脚本、LRU收回、事务以及不同级别磁盘持久化功能，同时通过Redis Sentinel提供高可用，通过Redis Cluster提供自动分区。</p>
</blockquote>
<h3 id="5-1-基本连接命令"><a href="#5-1-基本连接命令" class="headerlink" title="5.1 基本连接命令"></a>5.1 基本连接命令</h3><ul>
<li><a href="https://www.redis.net.cn/order/">查看Redis基本命令</a></li>
</ul>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.redis.net.cn/order/3650.html">Redis Echo 命令</a></td>
<td>打印字符串</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3653.html">Redis Select 命令</a></td>
<td>切换到指定的数据库</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3651.html">Redis Ping 命令</a></td>
<td>查看服务是否运行</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3652.html">Redis Quit 命令</a></td>
<td>关闭当前连接</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3649.html">Redis Auth 命令</a></td>
<td>验证密码是否正确</td>
</tr>
</tbody></table>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; exists name <span class="comment"># 判断是否存在key为name</span></span><br><span class="line">127.0.0.1:6379&gt; move name 1 <span class="comment"># 移动key=name到1号数据库</span></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">type</span> name <span class="comment"># 查看数据类型</span></span><br></pre></td></tr></table></figure>

<h3 id="5-2-Redis-key"><a href="#5-2-Redis-key" class="headerlink" title="5.2 Redis-key"></a>5.2 Redis-key</h3><table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.redis.net.cn/order/3543.html">Redis Type 命令</a></td>
<td>返回 key 所储存的值的类型。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3533.html">Redis PEXPIREAT 命令</a></td>
<td>设置 key 的过期时间亿以毫秒计。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3534.html">Redis PEXPIREAT 命令</a></td>
<td>设置 key 过期时间的时间戳(unix timestamp) 以毫秒计</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3541.html">Redis Rename 命令</a></td>
<td>修改 key 的名称</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3537.html">Redis PERSIST 命令</a></td>
<td>移除 key 的过期时间，key 将持久保持。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3536.html">Redis Move 命令</a></td>
<td>将当前数据库的 key 移动到给定的数据库 db 当中。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3540.html">Redis RANDOMKEY 命令</a></td>
<td>从当前数据库中随机返回一个 key 。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3529.html">Redis Dump 命令</a></td>
<td>序列化给定 key ，并返回被序列化的值。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3539.html">Redis TTL 命令</a></td>
<td>以秒为单位，返回给定 key 的剩余生存时间(TTL, time to live)。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3531.html">Redis Expire 命令</a></td>
<td>seconds 为给定 key 设置过期时间。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3528.html">Redis DEL 命令</a></td>
<td>该命令用于在 key 存在是删除 key。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3538.html">Redis Pttl 命令</a></td>
<td>以毫秒为单位返回 key 的剩余的过期时间。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3542.html">Redis Renamenx 命令</a></td>
<td>仅当 newkey 不存在时，将 key 改名为 newkey 。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3530.html">Redis EXISTS 命令</a></td>
<td>检查给定 key 是否存在。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3532.html">Redis Expireat 命令</a></td>
<td>EXPIREAT 的作用和 EXPIRE 类似，都用于为 key 设置过期时间。 不同在于 EXPIREAT 命令接受的时间参数是 UNIX 时间戳(unix timestamp)。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3535.html">Redis Keys 命令</a></td>
<td>查找所有符合给定模式( pattern)的 key 。</td>
</tr>
</tbody></table>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> name <span class="string">&quot;zz&quot;</span> <span class="comment"># 设置key-value或修改值</span></span><br><span class="line">127.0.0.1:6379&gt; expire name 10 <span class="comment"># 设置key过期时间为10s</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; del key <span class="comment"># 删除键值对</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; Renamenx a a1 <span class="comment"># 修改key</span></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> name <span class="string">&quot;zz&quot;</span> <span class="comment"># 设置key-value或修改值</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; get name <span class="comment"># 获取key为name的值</span></span><br><span class="line">127.0.0.1:6379&gt; ttl name <span class="comment"># 当前key没有设置过期时间，所以会返回-1.当前key有设置过期时间，而且key已经过期，所以会返回-2.当前key有设置过期时间，且key还没有过期，故会返回key的正常剩余时间.</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="5-3-String"><a href="#5-3-String" class="headerlink" title="5.3 String"></a>5.3 String</h3><table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.redis.net.cn/order/3552.html">Redis Setnx 命令</a></td>
<td>只有在 key 不存在时设置 key 的值。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3546.html">Redis Getrange 命令</a></td>
<td>返回 key 中字符串值的子字符</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3555.html">Redis Mset 命令</a></td>
<td>同时设置一个或多个 key-value 对。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3551.html">Redis Setex 命令</a></td>
<td>将值 value 关联到 key ，并将 key 的过期时间设为 seconds (以秒为单位)。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3544.html">Redis SET 命令</a></td>
<td>设置指定 key 的值</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3545.html">Redis Get 命令</a></td>
<td>获取指定 key 的值。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3548.html">Redis Getbit 命令</a></td>
<td>对 key 所储存的字符串值，获取指定偏移量上的位(bit)。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3550.html">Redis Setbit 命令</a></td>
<td>对 key 所储存的字符串值，设置或清除指定偏移量上的位(bit)。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3561.html">Redis Decr 命令</a></td>
<td>将 key 中储存的数字值减一。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3562.html">Redis Decrby 命令</a></td>
<td>key 所储存的值减去给定的减量值（decrement） 。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3554.html">Redis Strlen 命令</a></td>
<td>返回 key 所储存的字符串值的长度。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3556.html">Redis Msetnx 命令</a></td>
<td>同时设置一个或多个 key-value 对，当且仅当所有给定 key 都不存在。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3559.html">Redis Incrby 命令</a></td>
<td>将 key 所储存的值加上给定的增量值（increment） 。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3560.html">Redis Incrbyfloat 命令</a></td>
<td>将 key 所储存的值加上给定的浮点增量值（increment） 。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3553.html">Redis Setrange 命令</a></td>
<td>用 value 参数覆写给定 key 所储存的字符串值，从偏移量 offset 开始。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3557.html">Redis Psetex 命令</a></td>
<td>这个命令和 SETEX 命令相似，但它以毫秒为单位设置 key 的生存时间，而不是像 SETEX 命令那样，以秒为单位。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3563.html">Redis Append 命令</a></td>
<td>如果 key 已经存在并且是一个字符串， APPEND 命令将 value 追加到 key 原来的值的末尾。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3547.html">Redis Getset 命令</a></td>
<td>将给定 key 的值设为 value ，并返回 key 的旧值(old value)。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3549.html">Redis Mget 命令</a></td>
<td>获取所有(一个或多个)给定 key 的值。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3558.html">Redis Incr 命令</a></td>
<td>将 key 中储存的数字值增一。</td>
</tr>
</tbody></table>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; APPEND name1 <span class="string">&quot;ll&quot;</span> <span class="comment"># 追加，不存在key则创建</span></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> views 0</span><br><span class="line">127.0.0.1:6379&gt; msetnx k1 v1 k2 v2 <span class="comment"># 批量设置key和值</span></span><br><span class="line">127.0.0.1:6379&gt; msetnx k1 v1 k2 v2 <span class="comment"># 批量设置key和值,有原子性</span></span><br><span class="line">127.0.0.1:6379&gt; incr views <span class="comment"># 自增1</span></span><br><span class="line">127.0.0.1:6379&gt; decr views <span class="comment"># 自减1</span></span><br><span class="line">127.0.0.1:6379&gt; INCRBY age 5 <span class="comment"># 加步长5</span></span><br><span class="line">127.0.0.1:6379&gt; DECRBY age 10 <span class="comment"># 减步长10</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; del key <span class="comment"># 删除键值对</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; setrange name1 2 ii <span class="comment"># 替换字符串(2,替换字符串的长度)</span></span><br><span class="line">127.0.0.1:6379&gt; setex name 20 <span class="string">&quot;ll&quot;</span> <span class="comment"># set 键值对并设置过期时间（set with expire）</span></span><br><span class="line">127.0.0.1:6379&gt; setnx name1 <span class="string">&quot;kk&quot;</span> <span class="comment">#仅当key不存在时进行set(set if not exist),分布式锁中会经常使用</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; substr name1 0 2 <span class="comment"># 截取字符串[0,2]不赋值</span></span><br><span class="line">127.0.0.1:6379&gt; getrange name1 0 2 <span class="comment"># 截取字符串数组[0,2]闭区间,[0,-1]代表全部</span></span><br><span class="line">127.0.0.1:6379&gt; STRLEN name1 <span class="comment"># 获取key为name1值的长度</span></span><br><span class="line">127.0.0.1:6379&gt; mget k1 k2 <span class="comment"># 批量获取key的值</span></span><br><span class="line">127.0.0.1:6379&gt; getset k1 1 <span class="comment"># 先get后set key的值</span></span><br></pre></td></tr></table></figure>

<h3 id="5-4-List"><a href="#5-4-List" class="headerlink" title="5.4 List"></a>5.4 List</h3><blockquote>
<p>实际上是一个链表，before Node after，left，right都可以插入，可以做消息队列(先进先出 lpush rpop)，栈（先进后出 lpush lpop），一个列表最多可以包含2^ 232 - 1 个元素 (4294967295, 每个列表超过40亿个元素)。</p>
</blockquote>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.redis.net.cn/order/3580.html">Redis Lindex 命令</a></td>
<td>通过索引获取列表中的元素</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3592.html">Redis Rpush 命令</a></td>
<td>在列表中添加一个或多个值</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3586.html">Redis Lrange 命令</a></td>
<td>获取列表指定范围内的元素</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3591.html">Redis Rpoplpush 命令</a></td>
<td>移除列表的最后一个元素，并将该元素添加到另一个列表并返回</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3577.html">Redis Blpop 命令</a></td>
<td>移出并获取列表的第一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3578.html">Redis Brpop 命令</a></td>
<td>移出并获取列表的最后一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3579.html">Redis Brpoplpush 命令</a></td>
<td>从列表中弹出一个值，将弹出的元素插入到另外一个列表中并返回它； 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3587.html">Redis Lrem 命令</a></td>
<td>移除列表元素</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3582.html">Redis Llen 命令</a></td>
<td>获取列表长度</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3589.html">Redis Ltrim 命令</a></td>
<td>对一个列表进行修剪(trim)，就是说，让列表只保留指定区间内的元素，不在指定区间之内的元素都将被删除。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3583.html">Redis Lpop 命令</a></td>
<td>移出并获取列表的第一个元素</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3585.html">Redis Lpushx 命令</a></td>
<td>将一个或多个值插入到已存在的列表头部</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3581.html">Redis Linsert 命令</a></td>
<td>在列表的元素前或者后插入元素</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3590.html">Redis Rpop 命令</a></td>
<td>移除并获取列表最后一个元素</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3588.html">Redis Lset 命令</a></td>
<td>通过索引设置列表元素的值</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3584.html">Redis Lpush 命令</a></td>
<td>将一个或多个值插入到列表头部</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3593.html">Redis Rpushx 命令</a></td>
<td>为已存在的列表添加值</td>
</tr>
</tbody></table>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; lpush list 1 2 3 4 <span class="comment"># 从左边放入list一个或多个值（和栈相似先进后出）</span></span><br><span class="line">127.0.0.1:6379&gt; Rpush list 0 <span class="comment"># 从右边插入（头部）</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; lpop list <span class="comment"># 从左边移除第一个元素并返回 </span></span><br><span class="line">127.0.0.1:6379&gt; rpop list <span class="comment"># 从右边移除第一个元素并返回</span></span><br><span class="line">127.0.0.1:6379&gt; lrem list 1 2 <span class="comment"># 移除list中值为2，数量1个</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; ltrim list 1 3 <span class="comment"># 通过下标截取指定长度并加入list</span></span><br><span class="line">127.0.0.1:6379&gt; rpoplpush list list1 <span class="comment"># list右边最后一个元素放入list1中</span></span><br><span class="line">127.0.0.1:6379&gt; lrange list1 0 -1 <span class="comment"># 改变lsit1中第0个元素，注意序号0不能为空</span></span><br><span class="line">127.0.0.1:6379&gt; linsert list1 before 3 x <span class="comment"># 将x插入list1中第一个值为3的前面</span></span><br><span class="line">127.0.0.1:6379&gt; linsert list1 after 3 y <span class="comment"># 将y插入list1中第一个值为3的后面</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; lrange list 0 3 <span class="comment"># 展示数据[0,3]</span></span><br><span class="line">127.0.0.1:6379&gt; lindex list 1 <span class="comment"># 索引获取List列表</span></span><br><span class="line">127.0.0.1:6379&gt; llen list <span class="comment"># 返回list的长度</span></span><br></pre></td></tr></table></figure>

<h3 id="5-5-set"><a href="#5-5-set" class="headerlink" title="5.5 set"></a>5.5 set</h3><blockquote>
<p>不重复的集子,Redis 中 集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是O(1)。集合中最大的成员数为 2^232 - 1 (4294967295, 每个集合可存储40多亿个成员)。</p>
</blockquote>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.redis.net.cn/order/3606.html">Redis Sunion 命令</a></td>
<td>返回所有给定集合的并集</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3595.html">Redis Scard 命令</a></td>
<td>获取集合的成员数</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3604.html">Redis Srandmember 命令</a></td>
<td>返回集合中一个或多个随机数</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3601.html">Redis Smembers 命令</a></td>
<td>返回集合中的所有成员</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3598.html">Redis Sinter 命令</a></td>
<td>返回给定所有集合的交集</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3605.html">Redis Srem 命令</a></td>
<td>移除集合中一个或多个成员</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3602.html">Redis Smove 命令</a></td>
<td>将 member 元素从 source 集合移动到 destination 集合</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3594.html">Redis Sadd 命令</a></td>
<td>向集合添加一个或多个成员</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3600.html">Redis Sismember 命令</a></td>
<td>判断 member 元素是否是集合 key 的成员</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3597.html">Redis Sdiffstore 命令</a></td>
<td>返回给定所有集合的差集并存储在 destination 中</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3596.html">Redis Sdiff 命令</a></td>
<td>返回给定所有集合的差集</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3608.html">Redis Sscan 命令</a></td>
<td>迭代集合中的元素</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3599.html">Redis Sinterstore 命令</a></td>
<td>返回给定所有集合的交集并存储在 destination 中</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3607.html">Redis Sunionstore 命令</a></td>
<td>所有给定集合的并集存储在 destination 集合中</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3603.html">Redis Spop 命令</a></td>
<td>移除并返回集合中的一个随机元素</td>
</tr>
</tbody></table>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; sadd myset 1 2 3 4 1 <span class="comment"># 增加myset集子，1重复只会有1个</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; srem myset 1 <span class="comment"># 移除myset集合值为1的成员</span></span><br><span class="line">127.0.0.1:6379&gt; spop myset <span class="comment"># 随机删除myset集子中的一个成员</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; smove myset myset1 7 <span class="comment"># 将myset集子值为7移动到myset1中</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; smembers myset <span class="comment"># 查看myset所有值</span></span><br><span class="line">127.0.0.1:6379&gt; Scard myset <span class="comment"># 获取myset中的成员数</span></span><br><span class="line">127.0.0.1:6379&gt; Sinter myset myset1 <span class="comment"># 获取myset集合和myset1的交集</span></span><br><span class="line">127.0.0.1:6379&gt; Sunion myset myset1 <span class="comment"># 返回myset集合和myset1的并集</span></span><br><span class="line">127.0.0.1:6379&gt; sdiff myset myset1 <span class="comment"># myset和myset1差集</span></span><br><span class="line">127.0.0.1:6379&gt; sismember myset 2 <span class="comment"># 判断myset成员是否存在2的值成员</span></span><br><span class="line">127.0.0.1:6379&gt; srandmember myset 2 <span class="comment"># 返回myset集合两个随机成员</span></span><br></pre></td></tr></table></figure>

<h3 id="5-6-Hash"><a href="#5-6-Hash" class="headerlink" title="5.6 Hash"></a>5.6 Hash</h3><blockquote>
<p>Hash是一个string类型的field和value的映射表,Map，相当于key -map，Hash更适合于对象的存储，Sring更加适合字符串</p>
</blockquote>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.redis.net.cn/order/3573.html">Redis Hmset 命令</a></td>
<td>同时将多个 field-value (域-值)对设置到哈希表 key 中。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3572.html">Redis Hmget 命令</a></td>
<td>获取所有给定字段的值</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3574.html">Redis Hset 命令</a></td>
<td>将哈希表 key 中的字段 field 的值设为 value 。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3567.html">Redis Hgetall 命令</a></td>
<td>获取在哈希表中指定 key 的所有字段和值</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3566.html">Redis Hget 命令</a></td>
<td>获取存储在哈希表中指定字段的值&#x2F;td&gt;</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3565.html">Redis Hexists 命令</a></td>
<td>查看哈希表 key 中，指定的字段是否存在。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3568.html">Redis Hincrby 命令</a></td>
<td>为哈希表 key 中的指定字段的整数值加上增量 increment 。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3571.html">Redis Hlen 命令</a></td>
<td>获取哈希表中字段的数量</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3564.html">Redis Hdel 命令</a></td>
<td>删除一个或多个哈希表字段</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3576.html">Redis Hvals 命令</a></td>
<td>获取哈希表中所有值</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3569.html">Redis Hincrbyfloat 命令</a></td>
<td>为哈希表 key 中的指定字段的浮点数值加上增量 increment 。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3570.html">Redis Hkeys 命令</a></td>
<td>获取所有哈希表中的字段</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3575.html">Redis Hsetnx 命令</a></td>
<td>只有在字段 field 不存在时，设置哈希表字段的值。</td>
</tr>
</tbody></table>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hset myhash f1 v1 <span class="comment"># 设置myhash key-value</span></span><br><span class="line">127.0.0.1:6379&gt; hset myhash f1 v1 f2 v2 <span class="comment"># 批量设置myhash key-value</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; hdel myhash f1 <span class="comment"># 删除指定的hash</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; Hincrby myhash f4 2 <span class="comment"># 值+2</span></span><br><span class="line">127.0.0.1:6379&gt; Hincrbyfloat myhash f4 0.1 <span class="comment"># 值+0.1</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; hget myhash f1 <span class="comment"># 获取键值为f1的值</span></span><br><span class="line">127.0.0.1:6379&gt; hmget myhash f1 f2 <span class="comment"># 获取键值为f1 f2的值</span></span><br><span class="line">127.0.0.1:6379&gt; hgetall myhash <span class="comment">#获取所有的key和value值</span></span><br><span class="line">127.0.0.1:6379&gt; hexists myhash f1 <span class="comment"># 判断myhash是否存在f1键</span></span><br><span class="line">127.0.0.1:6379&gt; hlen myhash <span class="comment"># 获取myhash的长度</span></span><br><span class="line">127.0.0.1:6379&gt; hvals myhash <span class="comment"># 获取hash的所有值</span></span><br><span class="line">127.0.0.1:6379&gt; hkeys myhash <span class="comment"># 获取hash的所有键</span></span><br><span class="line">127.0.0.1:6379&gt; hsetnx myhash f3 v3 <span class="comment"># 只有在字段 field 不存在时，设置哈希表字段的值。</span></span><br></pre></td></tr></table></figure>

<h3 id="5-7-Zset"><a href="#5-7-Zset" class="headerlink" title="5.7 Zset"></a>5.7 Zset</h3><blockquote>
<p>在set基础上增加了排序，不同的是每个元素都会关联一个double类型的分数score，score相同：按字典顺序排序，有序集合的成员是唯一的,但分数(score)却可以重复。redis正是通过分数来为集合中的成员进行从小到大的排序。</p>
</blockquote>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.redis.net.cn/order/3625.html">Redis Zrevrank 命令</a></td>
<td>返回有序集合中指定成员的排名，有序集成员按分数值递减(从大到小)排序</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3614.html">Redis Zlexcount 命令</a></td>
<td>在有序集合中计算指定字典区间内成员数量</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3627.html">Redis Zunionstore 命令</a></td>
<td>计算给定的一个或多个有序集的并集，并存储在新的 key 中</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3621.html">Redis Zremrangebyrank 命令</a></td>
<td>移除有序集合中给定的排名区间的所有成员</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3610.html">Redis Zcard 命令</a></td>
<td>获取有序集合的成员数</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3619.html">Redis Zrem 命令</a></td>
<td>移除有序集合中的一个或多个成员</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3613.html">Redis Zinterstore 命令</a></td>
<td>计算给定的一个或多个有序集的交集并将结果集存储在新的有序集合 key 中</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3618.html">Redis Zrank 命令</a></td>
<td>返回有序集合中指定成员的索引</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3612.html">Redis Zincrby 命令</a></td>
<td>有序集合中对指定成员的分数加上增量 increment</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3617.html">Redis Zrangebyscore 命令</a></td>
<td>通过分数返回有序集合指定区间内的成员</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3616.html">Redis Zrangebylex 命令</a></td>
<td>通过字典区间返回有序集合的成员</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3626.html">Redis Zscore 命令</a></td>
<td>返回有序集中，成员的分数值</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3622.html">Redis Zremrangebyscore 命令</a></td>
<td>移除有序集合中给定的分数区间的所有成员</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3628.html">Redis Zscan 命令</a></td>
<td>迭代有序集合中的元素（包括元素成员和元素分值）</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3624.html">Redis Zrevrangebyscore 命令</a></td>
<td>返回有序集中指定分数区间内的成员，分数从高到低排序</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3620.html">Redis Zremrangebylex 命令</a></td>
<td>移除有序集合中给定的字典区间的所有成员</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3623.html">Redis Zrevrange 命令</a></td>
<td>返回有序集中指定区间内的成员，通过索引，分数从高到底</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3615.html">Redis Zrange 命令</a></td>
<td>通过索引区间返回有序集合成指定区间内的成员</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3611.html">Redis Zcount 命令</a></td>
<td>计算在有序集合中指定区间分数的成员数</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3609.html">Redis Zadd 命令</a></td>
<td>向有序集合添加一个或多个成员，或者更新已存在成员的分数</td>
</tr>
</tbody></table>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; zadd myset 1 one 2 two <span class="comment"># 增加两个值，前面的数字代表排序分数</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; zrem myset 2 <span class="comment"># 移除myset值为2的成员</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; zrange myset 0 -1 <span class="comment"># 查询myset集合所有元素</span></span><br><span class="line">127.0.0.1:6379&gt; zrevrange myset 0 -1 <span class="comment"># 从大到小查询</span></span><br><span class="line">127.0.0.1:6379&gt; zrangebyscore myset -inf +inf withscores <span class="comment"># 排序最小到最大并输出分数，-inf这里只能放最小值</span></span><br><span class="line">127.0.0.1:6379&gt; zcard myset <span class="comment"># 获取有序集子的个数</span></span><br><span class="line">127.0.0.1:6379&gt; zcount myset 1 3 <span class="comment"># 获取指定成员的数量</span></span><br></pre></td></tr></table></figure>

<h3 id="5-8-Geospatial-地理位置"><a href="#5-8-Geospatial-地理位置" class="headerlink" title="5.8 Geospatial(地理位置)"></a>5.8 Geospatial(地理位置)</h3><blockquote>
<p>实现原理是zset，可以使用zset命令操作geo，有效的经度从-180度到180度,有效的纬度从-85.05112878度到85.05112878度。当坐标位置超出上述指定范围时，该命令将会返回一个错误。</p>
</blockquote>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.redis.net.cn/order/3687.html">Redis GEOHASH 命令</a></td>
<td>返回一个或多个位置元素的 Geohash 表示</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3688.html">Redis GEOPOS 命令</a></td>
<td>从key里返回所有给定位置元素的位置（经度和纬度）</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3686.html">Redis GEODIST 命令</a></td>
<td>返回两个给定位置之间的距离</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3689.html">Redis GEORADIUS 命令</a></td>
<td>以给定的经纬度为中心， 找出某一半径内的元素</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3685.html">Redis GEOADD 命令</a></td>
<td>将指定的地理空间位置（纬度、经度、名称）添加到指定的key中</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3690.html">Redis GEORADIUSBYMEMBER 命令</a></td>
<td>找出位于指定范围内的元素，中心点是由给定的位置元素决定</td>
</tr>
</tbody></table>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; GEOADD china:city 16.32 30.33 beijing <span class="comment"># 增加城市纬度、经度、名称</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; getpos china:city beijing chongqin <span class="comment"># 获取指定城市</span></span><br><span class="line">127.0.0.1:6379&gt; GEODIST china:city beijing shanghai <span class="comment"># 获取指定城市的距离</span></span><br><span class="line">127.0.0.1:6379&gt; GEORADIUS china:city 110 30 1000km withdist withcoord count 3 <span class="comment">#以指定经纬度和1000km为半径找到城市，距离，经纬度，限制多少个</span></span><br><span class="line">127.0.0.1:6379:&gt; GEORADIUSBYMEMBER china:city shanghai 400 km <span class="comment"># 找出位于指定城市周围的城市</span></span><br><span class="line">127.0.0.1:6379:&gt; geohash china:city shanghai chongqin <span class="comment"># 将二维经纬度转换为11个字符Geohash字符串</span></span><br></pre></td></tr></table></figure>

<h3 id="5-9-Hyperloglog-基数统计"><a href="#5-9-Hyperloglog-基数统计" class="headerlink" title="5.9 Hyperloglog(基数统计)"></a>5.9 Hyperloglog(基数统计)</h3><blockquote>
<p>数据集中不重复的元素的个数，应用场景：网页的访问量（UV），如果允许容错0.81%，那么一定可以使用Hyperloglog</p>
</blockquote>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.redis.net.cn/order/3631.html">Redis Pfmerge 命令</a></td>
<td>将多个 HyperLogLog 合并为一个 HyperLogLog</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3629.html">Redis Pfadd 命令</a></td>
<td>添加指定元素到 HyperLogLog 中。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3630.html">Redis Pfcount 命令</a></td>
<td>返回给定 HyperLogLog 的基数估算值。</td>
</tr>
</tbody></table>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; pfadd mykey a b c d e f g <span class="comment">#增加</span></span><br><span class="line">127.0.0.1:6379&gt; pfcount mykey <span class="comment"># 基数数量 </span></span><br><span class="line">127.0.0.1:6379&gt; pfmerge mykey2 mykey1 mykey <span class="comment"># 合并基数文件</span></span><br></pre></td></tr></table></figure>

<h3 id="5-10-BitMaps-位图"><a href="#5-10-BitMaps-位图" class="headerlink" title="5.10 BitMaps(位图)"></a>5.10 BitMaps(位图)</h3><blockquote>
<p>用位存储，信息状态只有 0 和 1</p>
</blockquote>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://redis.io/docs/data-types/bitmaps/">Redis Setbit 命令</a></td>
<td>对 key 所储存的字符串值，设置或清除指定偏移量上的位(bit)。</td>
</tr>
<tr>
<td><a href="https://redis.io/docs/data-types/bitmaps/">Redis Getbit 命令</a></td>
<td>对 key 所储存的字符串值，获取指定偏移量上的位(bit)。</td>
</tr>
</tbody></table>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; setbit sign 0 1 <span class="comment"># 设置sign的第0位为 1 </span></span><br><span class="line">127.0.0.1:6379&gt; getbit sign 0 <span class="comment"># 获取第0位的数值</span></span><br><span class="line">127.0.0.1:6379&gt; BITCOUNT sign <span class="comment"># 统计sign中为1的位数</span></span><br></pre></td></tr></table></figure>

<h3 id="5-11-服务器命令"><a href="#5-11-服务器命令" class="headerlink" title="5.11 服务器命令"></a>5.11 服务器命令</h3><table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.redis.net.cn/order/3659.html">Redis Client Pause 命令</a></td>
<td>在指定时间内终止运行来自客户端的命令</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3672.html">Redis Debug Object 命令</a></td>
<td>获取 key 的调试信息</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3675.html">Redis Flushdb 命令</a></td>
<td>删除当前数据库的所有key</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3680.html">Redis Save 命令</a></td>
<td>异步保存数据到硬盘</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3683.html">Redis Showlog 命令</a></td>
<td>管理 redis 的慢日志</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3677.html">Redis Lastsave 命令</a></td>
<td>返回最近一次 Redis 成功将数据保存到磁盘上的时间，以 UNIX 时间戳格式表示</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3667.html">Redis Config Get 命令</a></td>
<td>获取指定配置参数的值</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3662.html">Redis Command 命令</a></td>
<td>获取 Redis 命令详情数组</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3682.html">Redis Slaveof 命令</a></td>
<td>将当前服务器转变为指定服务器的从属服务器(slave server)</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3673.html">Redis Debug Segfault 命令</a></td>
<td>让 Redis 服务崩溃</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3674.html">Redis Flushall 命令</a></td>
<td>删除所有数据库的所有key</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3671.html">Redis Dbsize 命令</a></td>
<td>返回当前数据库的 key 的数量</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3654.html">Redis Bgrewriteaof 命令</a></td>
<td>异步执行一个 AOF（AppendOnly File） 文件重写操作</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3661.html">Redis Cluster Slots 命令</a></td>
<td>获取集群节点的映射数组</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3669.html">Redis Config Set 命令</a></td>
<td>修改 redis 配置参数，无需重启</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3666.html">Redis Command Info 命令</a></td>
<td>获取指定 Redis 命令描述的数组</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3681.html">Redis Shutdown 命令</a></td>
<td>异步保存数据到硬盘，并关闭服务器</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3684.html">Redis Sync 命令</a></td>
<td>用于复制功能(replication)的内部命令</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3656.html">Redis Client Kill 命令</a></td>
<td>关闭客户端连接</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3679.html">Redis Role 命令</a></td>
<td>返回主从实例所属的角色</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3678.html">Redis Monitor 命令</a></td>
<td>实时打印出 Redis 服务器接收到的命令，调试用</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3664.html">Redis Command Getkeys 命令</a></td>
<td>获取给定命令的所有键</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3658.html">Redis Client Getname 命令</a></td>
<td>获取连接的名称</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3670.html">Redis Config Resetstat 命令</a></td>
<td>重置 INFO 命令中的某些统计数据</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3663.html">Redis Command Count 命令</a></td>
<td>获取 Redis 命令总数</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3665.html">Redis Time 命令</a></td>
<td>返回当前服务器时间</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3676.html">Redis Info 命令</a></td>
<td>获取 Redis 服务器的各种信息和统计数值</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3668.html">Redis Config rewrite 命令</a></td>
<td>对启动 Redis 服务器时所指定的 redis.conf 配置文件进行改写</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3657.html">Redis Client List 命令</a></td>
<td>获取连接到服务器的客户端连接列表</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3660.html">Redis Client Setname 命令</a></td>
<td>设置当前连接的名称</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3655.html">Redis Bgsave 命令</a></td>
<td>在后台异步保存当前数据库的数据到磁盘</td>
</tr>
</tbody></table>
<h3 id="5-12-Redis脚本命令"><a href="#5-12-Redis脚本命令" class="headerlink" title="5.12 Redis脚本命令"></a>5.12 Redis脚本命令</h3><table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.redis.net.cn/order/3647.html">Redis Script kill 命令</a></td>
<td>杀死当前正在运行的 Lua 脚本。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3648.html">Redis Script Load 命令</a></td>
<td>将脚本 script 添加到脚本缓存中，但并不立即执行这个脚本。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3643.html">Redis Eval 命令</a></td>
<td>执行 Lua 脚本。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3644.html">Redis Evalsha 命令</a></td>
<td>执行 Lua 脚本。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3645.html">Redis Script Exists 命令</a></td>
<td>查看指定的脚本是否已经被保存在缓存当中。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3646.html">Redis Script Flush 命令</a></td>
<td>从脚本缓存中移除所有脚本。</td>
</tr>
</tbody></table>
<h3 id="5-13-Redis-发布订阅命令"><a href="#5-13-Redis-发布订阅命令" class="headerlink" title="5.13 Redis 发布订阅命令"></a>5.13 Redis 发布订阅命令</h3><blockquote>
<p>Redis 发布订阅(pub&#x2F;sub)是一种消息通信模式：发送者(pub)发送消息，订阅者(sub)接收消息</p>
</blockquote>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.redis.net.cn/order/3637.html">Redis Unsubscribe 命令</a></td>
<td>指退订给定的频道。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3636.html">Redis Subscribe 命令</a></td>
<td>订阅给定的一个或多个频道的信息。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3633.html">Redis Pubsub 命令</a></td>
<td>查看订阅与发布系统状态。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3635.html">Redis Punsubscribe 命令</a></td>
<td>退订所有给定模式的频道。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3634.html">Redis Publish 命令</a></td>
<td>将信息发送到指定的频道。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3632.html">Redis Psubscribe 命令</a></td>
<td>订阅一个或多个符合给定模式的频道。</td>
</tr>
</tbody></table>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">------------订阅端----------------------</span><br><span class="line"><span class="comment"># 订阅sakura频道</span></span><br><span class="line">127.0.0.1:6379&gt; SUBSCRIBE xxy </span><br><span class="line">--------------消息发布端-------------------</span><br><span class="line"><span class="comment"># 发布消息到</span></span><br><span class="line">127.0.0.1:6379&gt; PUBLISH xxy <span class="string">&quot;hello world&quot;</span> </span><br><span class="line">-----------------查看活跃的频道------------</span><br><span class="line">127.0.0.1:6379&gt; PUBSUB channels</span><br><span class="line">1) <span class="string">&quot;sakura&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>原理</li>
</ul>
<blockquote>
<p>个 Redis 服务器进程都维持着一个表示服务器状态的 redis.h&#x2F;redisServer 结构， 结构的 pubsub_channels 属性是一个字典， 这个字典就用于保存订阅频道的信息，其中，字典的键为正在被订阅的频道， 而字典的值则是一个链表， 链表中保存了所有订阅这个频道的客户端。客户端订阅，就被链接到对应频道的链表的尾部，退订则就是将客户端节点从链表中移除。</p>
</blockquote>
<h2 id="6-事务"><a href="#6-事务" class="headerlink" title="6. 事务"></a>6. 事务</h2><blockquote>
<p>redis单条命令具有原子性，redis多条命令（事务）不具有原子性，Redis事务没有隔离级别的概念,本质是一组命令被序列化，按照顺序执行</p>
</blockquote>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.redis.net.cn/order/3639.html">Redis Exec 命令</a></td>
<td>执行所有事务块内的命令。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3642.html">Redis Watch 命令</a></td>
<td>监视一个(或多个) key ，如果在事务执行之前这个(或这些) key 被其他命令所改动，那么事务将被打断。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3638.html">Redis Discard 命令</a></td>
<td>取消事务，放弃执行事务块内的所有命令。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3641.html">Redis Unwatch 命令</a></td>
<td>取消 WATCH 命令对所有 key 的监视。</td>
</tr>
<tr>
<td><a href="https://www.redis.net.cn/order/3640.html">Redis Multi 命令</a></td>
<td>标记一个事务块的开始。-</td>
</tr>
</tbody></table>
<ul>
<li>正常</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; multi</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> ke v1</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379&gt; lpush l1 v2</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379&gt; hset h h1 v1</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379&gt; sadd s 12 3</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379&gt; zadd s1 1 f</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">exec</span></span><br><span class="line">1) OK</span><br><span class="line">2) (<span class="built_in">integer</span>) 1</span><br><span class="line">3) (<span class="built_in">integer</span>) 1</span><br><span class="line">4) (<span class="built_in">integer</span>) 2</span><br><span class="line">5) (<span class="built_in">integer</span>) 1</span><br></pre></td></tr></table></figure>

<ul>
<li>丢弃事务</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; multi</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> j 1</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379&gt; discard <span class="comment"># 丢弃事务</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">exec</span></span><br><span class="line">(error) ERR EXEC without MULTI</span><br><span class="line">127.0.0.1:6379&gt; get j</span><br><span class="line">(nil)</span><br></pre></td></tr></table></figure>

<ul>
<li>编程式异常</li>
</ul>
<blockquote>
<p>代码有问题，事务所有命令不会执行</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; multi</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> ke v1</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379&gt; lpush l1 v2</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379&gt; hset h1 v3</span><br><span class="line">(error) ERR wrong number of arguments <span class="keyword">for</span> <span class="string">&#x27;hset&#x27;</span> <span class="built_in">command</span></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">exec</span></span><br><span class="line">(error) EXECABORT Transaction discarded because of previous errors.</span><br></pre></td></tr></table></figure>

<ul>
<li>运行时异常</li>
</ul>
<blockquote>
<p>语法问题抛出异常，1&#x2F;0,其他命令可以正常执行</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> k1 v1</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; multi</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; incr k1</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> k2 v2</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379&gt; get k2</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">exec</span></span><br><span class="line">1) (error) ERR value is not an <span class="built_in">integer</span> or out of range</span><br><span class="line">2) OK</span><br><span class="line">3) <span class="string">&quot;v2&quot;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>监控watch</li>
</ul>
<blockquote>
<p>每次提交执行exec后都会自动释放锁，不管是否成功</p>
</blockquote>
<table>
<thead>
<tr>
<th>序号</th>
<th>锁</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>悲观锁</td>
<td>无论做什么都会加锁</td>
</tr>
<tr>
<td>2</td>
<td>乐观锁</td>
<td>认为什么时候都不会出现问题，所以不会上锁！获取version，更新的时候比较version</td>
</tr>
</tbody></table>
<ul>
<li>正常</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> k1 100</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> k2 0</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; watch k1</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; multi</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; decrby k1 10</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379&gt; incrby k2 10</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">exec</span></span><br><span class="line">1) (<span class="built_in">integer</span>) 90</span><br><span class="line">2) (<span class="built_in">integer</span>) 10</span><br></pre></td></tr></table></figure>

<ul>
<li>多个连接进行修改</li>
</ul>
<blockquote>
<p>解决办法：unwatch解锁获取最新值，然后再加锁进行事务。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; watch money <span class="comment"># money上锁</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; multi</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; DECRBY money 20</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379&gt; INCRBY use 20</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379&gt; 	<span class="comment"># 此时事务并没有执行</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; INCRBY money 500 <span class="comment"># 修改了线程一中监视的money</span></span><br><span class="line">(<span class="built_in">integer</span>) 600</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; EXEC <span class="comment"># 执行之前，另一个线程修改了我们的值，这个时候就会导致事务执行失败</span></span><br><span class="line">(nil) <span class="comment"># 没有结果，说明事务执行失败</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; get money <span class="comment"># 线程2 修改生效</span></span><br><span class="line"><span class="string">&quot;600&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; get use <span class="comment"># 线程1事务执行失败，数值没有被修改</span></span><br><span class="line"><span class="string">&quot;0&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="7-实例"><a href="#7-实例" class="headerlink" title="7. 实例"></a>7. 实例</h2><h3 id="7-1-Jedis"><a href="#7-1-Jedis" class="headerlink" title="7.1 Jedis"></a>7.1 Jedis</h3><blockquote>
<p>SpringBoot 一般已经不使用该技术，因为线程不安全，一般使用lettuce，jedis所有方法和cli操作的命令相同熟悉即可 </p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">		<span class="comment">&lt;!--fastjson1.2.61以下版本有漏洞--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.14<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>		</span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">void</span> <span class="title function_">testJedis</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">Jedis</span> <span class="variable">jedis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Jedis</span>(<span class="string">&quot;127.0.0.1&quot;</span>,<span class="number">6379</span>);</span><br><span class="line">       jedis.auth(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">       <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">       jsonObject.put(<span class="string">&quot;hello&quot;</span>,<span class="string">&quot;xxy&quot;</span>);</span><br><span class="line">       jsonObject.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;k&quot;</span>);</span><br><span class="line">       <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> jsonObject.toJSONString();</span><br><span class="line">       <span class="type">Transaction</span> <span class="variable">multi</span> <span class="operator">=</span> jedis.multi();</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           multi.set(<span class="string">&quot;u1&quot;</span>,s);</span><br><span class="line">           multi.set(<span class="string">&quot;u2&quot;</span>,s);</span><br><span class="line">           multi.exec();</span><br><span class="line">       &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">           multi.discard();</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">           System.out.println(jedis.get(<span class="string">&quot;u1&quot;</span>));</span><br><span class="line">           System.out.println(jedis.get(<span class="string">&quot;u2&quot;</span>));</span><br><span class="line">           jedis.close();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h3 id="7-2-SpringBoot和Redis"><a href="#7-2-SpringBoot和Redis" class="headerlink" title="7.2 SpringBoot和Redis"></a>7.2 SpringBoot和Redis</h3><ol>
<li>概述</li>
</ol>
<ul>
<li>SpringBoot操作数据： Spring-data jpa jdbc mongdb redis</li>
<li>springboot 2.x后 ，原来使用的 Jedis 被 lettuce 替换。</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//LettuceConnectionFactory</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LettuceConnectionFactory</span> <span class="keyword">implements</span> <span class="title class_">InitializingBean</span>, DisposableBean, RedisConnectionFactory, ReactiveRedisConnectionFactory &#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//JedisConnectionFactory</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JedisConnectionFactory</span> <span class="keyword">implements</span> <span class="title class_">InitializingBean</span>, DisposableBean, RedisConnectionFactory &#123;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>   jedis：采用的直连，多个线程操作的话，是不安全的。如果要避免不安全，使用jedis pool连接池！更像BIO模式</p>
<p>   lettuce：采用netty，实例可以在多个线程中共享，不存在线程不安全的情况！可以减少线程数据了，更像NIO模式</p>
</blockquote>
<ol start="2">
<li>Redis在SpringBoot中的自动配置</li>
</ol>
<ul>
<li>找到org.springframework.boot.autoconfigure包下的spring-boot-autoconfigure-2.5.0.jar!\META-INF\spring.factories，搜索redis</li>
<li>存在一个xxxAutoConfiguration和RedisProperties</li>
<li>若要修改配置查看RedisProperties</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@ConfigurationProperties(</span><br><span class="line">    prefix = <span class="string">&quot;spring.redis&quot;</span></span><br><span class="line">)</span><br><span class="line">spring.redis.port=3967</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>测试</li>
</ol>
<ul>
<li>导入依赖</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;!--操作redis--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">	&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">	&lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>配置</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">spring.redis.host=127.0.0.1</span><br><span class="line">spring.redis.password=root</span><br></pre></td></tr></table></figure>

<ul>
<li>自定义序列化模板</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedisConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RedisTemplate&lt;String, Object&gt; <span class="title function_">redisTemplate</span><span class="params">(RedisConnectionFactory redisConnectionFactory)</span> <span class="keyword">throws</span> UnknownHostException &#123;</span><br><span class="line">        RedisTemplate&lt;String, Object&gt; template = <span class="keyword">new</span> <span class="title class_">RedisTemplate</span>();</span><br><span class="line">        template.setConnectionFactory(redisConnectionFactory);</span><br><span class="line"></span><br><span class="line">        Jackson2JsonRedisSerializer&lt;Object&gt; objectJackson2JsonRedisSerializer = <span class="keyword">new</span> <span class="title class_">Jackson2JsonRedisSerializer</span>&lt;Object&gt;(Object.class);</span><br><span class="line">        <span class="type">ObjectMapper</span> <span class="variable">objectMapper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectMapper</span>();</span><br><span class="line">        objectMapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class="line">        objectMapper.activateDefaultTyping(LaissezFaireSubTypeValidator.instance);</span><br><span class="line"></span><br><span class="line">        objectJackson2JsonRedisSerializer.setObjectMapper(objectMapper);</span><br><span class="line">        <span class="type">StringRedisSerializer</span> <span class="variable">stringRedisSerializer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringRedisSerializer</span>();</span><br><span class="line">        template.setKeySerializer(stringRedisSerializer);</span><br><span class="line">        template.setValueSerializer(stringRedisSerializer);</span><br><span class="line">        template.setHashKeySerializer(stringRedisSerializer);</span><br><span class="line">        template.setHashValueSerializer(stringRedisSerializer);</span><br><span class="line">        template.afterPropertiesSet();</span><br><span class="line">        <span class="keyword">return</span> template;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>编写代码</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">testSpringBootRedis</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//        RedisConnection connection = redisTemplate.getConnectionFactory().getConnection();</span></span><br><span class="line">        dog.setDogName(<span class="string">&quot;皇子&quot;</span>);</span><br><span class="line">        dog.setAge(<span class="number">3</span>);</span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> jsonObject.toJSONString(dog);</span><br><span class="line">            redisTemplate.opsForValue().set(<span class="string">&quot;js2&quot;</span>,s);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; </span><br><span class="line">        System.out.println(redisTemplate.opsForValue().get(<span class="string">&quot;js2&quot;</span>));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h3 id="7-3-封装lettuce命令"><a href="#7-3-封装lettuce命令" class="headerlink" title="7.3 封装lettuce命令"></a>7.3 封装lettuce命令</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.DataType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.Cursor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.ScanOptions;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.StringRedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.ZSetOperations.TypedTuple;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Map.Entry;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Redis工具类*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedisUtil</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> StringRedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRedisTemplate</span><span class="params">(StringRedisTemplate redisTemplate)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.redisTemplate = redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> StringRedisTemplate <span class="title function_">getRedisTemplate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** -------------------key相关操作--------------------- */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除key</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        redisTemplate.delete(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量删除key</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> keys</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(Collection&lt;String&gt; keys)</span> &#123;</span><br><span class="line">        redisTemplate.delete(keys);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 序列化key</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">byte</span>[] dump(String key) &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.dump(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否存在key</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Boolean <span class="title function_">hasKey</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.hasKey(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置过期时间</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> timeout</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> unit</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Boolean <span class="title function_">expire</span><span class="params">(String key, <span class="type">long</span> timeout, TimeUnit unit)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.expire(key, timeout, unit);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置过期时间</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Boolean <span class="title function_">expireAt</span><span class="params">(String key, Date date)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.expireAt(key, date);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查找匹配的key</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pattern</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;String&gt; <span class="title function_">keys</span><span class="params">(String pattern)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.keys(pattern);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将当前数据库的 key 移动到给定的数据库 db 当中</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dbIndex</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Boolean <span class="title function_">move</span><span class="params">(String key, <span class="type">int</span> dbIndex)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.move(key, dbIndex);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移除 key 的过期时间，key 将持久保持</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Boolean <span class="title function_">persist</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.persist(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回 key 的剩余的过期时间</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> unit</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">getExpire</span><span class="params">(String key, TimeUnit unit)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.getExpire(key, unit);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回 key 的剩余的过期时间</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">getExpire</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.getExpire(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从当前数据库中随机返回一个 key</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">randomKey</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.randomKey();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改 key 的名称</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> oldKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> newKey</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">rename</span><span class="params">(String oldKey, String newKey)</span> &#123;</span><br><span class="line">        redisTemplate.rename(oldKey, newKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 仅当 newkey 不存在时，将 oldKey 改名为 newkey</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> oldKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> newKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Boolean <span class="title function_">renameIfAbsent</span><span class="params">(String oldKey, String newKey)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.renameIfAbsent(oldKey, newKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回 key 所储存的值的类型</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> DataType <span class="title function_">type</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.type(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** -------------------string相关操作--------------------- */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置指定 key 的值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">set</span><span class="params">(String key, String value)</span> &#123;</span><br><span class="line">        redisTemplate.opsForValue().set(key, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取指定 key 的值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">get</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().get(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回 key 中字符串值的子字符</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> start</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> end</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getRange</span><span class="params">(String key, <span class="type">long</span> start, <span class="type">long</span> end)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().get(key, start, end);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将给定 key 的值设为 value ，并返回 key 的旧值(old value)</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAndSet</span><span class="params">(String key, String value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().getAndSet(key, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 对 key 所储存的字符串值，获取指定偏移量上的位(bit)</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> offset</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Boolean <span class="title function_">getBit</span><span class="params">(String key, <span class="type">long</span> offset)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().getBit(key, offset);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量获取</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> keys</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;String&gt; <span class="title function_">multiGet</span><span class="params">(Collection&lt;String&gt; keys)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().multiGet(keys);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置ASCII码, 字符串&#x27;a&#x27;的ASCII码是97, 转为二进制是&#x27;01100001&#x27;, 此方法是将二进制第offset位值变为value</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 位置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     *            值,true为1, false为0</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">setBit</span><span class="params">(String key, <span class="type">long</span> offset, <span class="type">boolean</span> value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().setBit(key, offset, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将值 value 关联到 key ，并将 key 的过期时间设为 timeout</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> timeout</span></span><br><span class="line"><span class="comment">     *            过期时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> unit</span></span><br><span class="line"><span class="comment">     *            时间单位, 天:TimeUnit.DAYS 小时:TimeUnit.HOURS 分钟:TimeUnit.MINUTES</span></span><br><span class="line"><span class="comment">     *            秒:TimeUnit.SECONDS 毫秒:TimeUnit.MILLISECONDS</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEx</span><span class="params">(String key, String value, <span class="type">long</span> timeout, TimeUnit unit)</span> &#123;</span><br><span class="line">        redisTemplate.opsForValue().set(key, value, timeout, unit);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 只有在 key 不存在时设置 key 的值</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 之前已经存在返回false,不存在返回true</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">setIfAbsent</span><span class="params">(String key, String value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().setIfAbsent(key, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用 value 参数覆写给定 key 所储存的字符串值，从偏移量 offset 开始</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> offset</span></span><br><span class="line"><span class="comment">     *            从指定位置开始覆写</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRange</span><span class="params">(String key, String value, <span class="type">long</span> offset)</span> &#123;</span><br><span class="line">        redisTemplate.opsForValue().set(key, value, offset);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取字符串的长度</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">size</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().size(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量添加</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> maps</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">multiSet</span><span class="params">(Map&lt;String, String&gt; maps)</span> &#123;</span><br><span class="line">        redisTemplate.opsForValue().multiSet(maps);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 同时设置一个或多个 key-value 对，当且仅当所有给定 key 都不存在</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> maps</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 之前已经存在返回false,不存在返回true</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">multiSetIfAbsent</span><span class="params">(Map&lt;String, String&gt; maps)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().multiSetIfAbsent(maps);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 增加(自增长), 负数则为自减</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">incrBy</span><span class="params">(String key, <span class="type">long</span> increment)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().increment(key, increment);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Double <span class="title function_">incrByFloat</span><span class="params">(String key, <span class="type">double</span> increment)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().increment(key, increment);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 追加到末尾</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">append</span><span class="params">(String key, String value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().append(key, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** -------------------hash相关操作------------------------- */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取存储在哈希表中指定字段的值</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> field</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">hGet</span><span class="params">(String key, String field)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().get(key, field);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取所有给定字段的值</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;Object, Object&gt; <span class="title function_">hGetAll</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().entries(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取所有给定字段的值</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fields</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Object&gt; <span class="title function_">hMultiGet</span><span class="params">(String key, Collection&lt;Object&gt; fields)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().multiGet(key, fields);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">hPut</span><span class="params">(String key, String hashKey, String value)</span> &#123;</span><br><span class="line">        redisTemplate.opsForHash().put(key, hashKey, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">hPutAll</span><span class="params">(String key, Map&lt;String, String&gt; maps)</span> &#123;</span><br><span class="line">        redisTemplate.opsForHash().putAll(key, maps);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 仅当hashKey不存在时才设置</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> hashKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Boolean <span class="title function_">hPutIfAbsent</span><span class="params">(String key, String hashKey, String value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().putIfAbsent(key, hashKey, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除一个或多个哈希表字段</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fields</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">hDelete</span><span class="params">(String key, Object... fields)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().delete(key, fields);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查看哈希表 key 中，指定的字段是否存在</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> field</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hExists</span><span class="params">(String key, String field)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().hasKey(key, field);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 为哈希表 key 中的指定字段的整数值加上增量 increment</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> field</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> increment</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">hIncrBy</span><span class="params">(String key, Object field, <span class="type">long</span> increment)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().increment(key, field, increment);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 为哈希表 key 中的指定字段的整数值加上增量 increment</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> field</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> delta</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Double <span class="title function_">hIncrByFloat</span><span class="params">(String key, Object field, <span class="type">double</span> delta)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().increment(key, field, delta);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取所有哈希表中的字段</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;Object&gt; <span class="title function_">hKeys</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().keys(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取哈希表中字段的数量</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">hSize</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().size(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取哈希表中所有值</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Object&gt; <span class="title function_">hValues</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().values(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 迭代哈希表中的键值对</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> options</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Cursor&lt;Entry&lt;Object, Object&gt;&gt; <span class="title function_">hScan</span><span class="params">(String key, ScanOptions options)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().scan(key, options);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** ------------------------list相关操作---------------------------- */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过索引获取列表中的元素</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">lIndex</span><span class="params">(String key, <span class="type">long</span> index)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForList().index(key, index);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取列表指定范围内的元素</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> start</span></span><br><span class="line"><span class="comment">     *            开始位置, 0是开始位置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> end</span></span><br><span class="line"><span class="comment">     *            结束位置, -1返回所有</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;String&gt; <span class="title function_">lRange</span><span class="params">(String key, <span class="type">long</span> start, <span class="type">long</span> end)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForList().range(key, start, end);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 存储在list头部</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">lLeftPush</span><span class="params">(String key, String value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForList().leftPush(key, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">lLeftPushAll</span><span class="params">(String key, String... value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForList().leftPushAll(key, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">lLeftPushAll</span><span class="params">(String key, Collection&lt;String&gt; value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForList().leftPushAll(key, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当list存在的时候才加入</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">lLeftPushIfPresent</span><span class="params">(String key, String value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForList().leftPushIfPresent(key, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 如果pivot存在,再pivot前面添加</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pivot</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">lLeftPush</span><span class="params">(String key, String pivot, String value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForList().leftPush(key, pivot, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">lRightPush</span><span class="params">(String key, String value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForList().rightPush(key, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">lRightPushAll</span><span class="params">(String key, String... value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForList().rightPushAll(key, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">lRightPushAll</span><span class="params">(String key, Collection&lt;String&gt; value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForList().rightPushAll(key, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 为已存在的列表添加值</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">lRightPushIfPresent</span><span class="params">(String key, String value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForList().rightPushIfPresent(key, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在pivot元素的右边添加值</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pivot</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">lRightPush</span><span class="params">(String key, String pivot, String value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForList().rightPush(key, pivot, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过索引设置列表元素的值</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index</span></span><br><span class="line"><span class="comment">     *            位置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">lSet</span><span class="params">(String key, <span class="type">long</span> index, String value)</span> &#123;</span><br><span class="line">        redisTemplate.opsForList().set(key, index, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移出并获取列表的第一个元素</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 删除的元素</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">lLeftPop</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForList().leftPop(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移出并获取列表的第一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> timeout</span></span><br><span class="line"><span class="comment">     *            等待时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> unit</span></span><br><span class="line"><span class="comment">     *            时间单位</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">lBLeftPop</span><span class="params">(String key, <span class="type">long</span> timeout, TimeUnit unit)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForList().leftPop(key, timeout, unit);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移除并获取列表最后一个元素</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 删除的元素</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">lRightPop</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForList().rightPop(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移出并获取列表的最后一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> timeout</span></span><br><span class="line"><span class="comment">     *            等待时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> unit</span></span><br><span class="line"><span class="comment">     *            时间单位</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">lBRightPop</span><span class="params">(String key, <span class="type">long</span> timeout, TimeUnit unit)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForList().rightPop(key, timeout, unit);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移除列表的最后一个元素，并将该元素添加到另一个列表并返回</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sourceKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> destinationKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">lRightPopAndLeftPush</span><span class="params">(String sourceKey, String destinationKey)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForList().rightPopAndLeftPush(sourceKey,</span><br><span class="line">                destinationKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从列表中弹出一个值，将弹出的元素插入到另外一个列表中并返回它； 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sourceKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> destinationKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> timeout</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> unit</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">lBRightPopAndLeftPush</span><span class="params">(String sourceKey, String destinationKey,</span></span><br><span class="line"><span class="params">            <span class="type">long</span> timeout, TimeUnit unit)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForList().rightPopAndLeftPush(sourceKey,</span><br><span class="line">                destinationKey, timeout, unit);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除集合中值等于value得元素</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index</span></span><br><span class="line"><span class="comment">     *            index=0, 删除所有值等于value的元素; index&gt;0, 从头部开始删除第一个值等于value的元素;</span></span><br><span class="line"><span class="comment">     *            index&lt;0, 从尾部开始删除第一个值等于value的元素;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">lRemove</span><span class="params">(String key, <span class="type">long</span> index, String value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForList().remove(key, index, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 裁剪list</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> start</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> end</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">lTrim</span><span class="params">(String key, <span class="type">long</span> start, <span class="type">long</span> end)</span> &#123;</span><br><span class="line">        redisTemplate.opsForList().trim(key, start, end);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取列表长度</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">lLen</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForList().size(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** --------------------set相关操作-------------------------- */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * set添加元素</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> values</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">sAdd</span><span class="params">(String key, String... values)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForSet().add(key, values);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * set移除元素</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> values</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">sRemove</span><span class="params">(String key, Object... values)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForSet().remove(key, values);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移除并返回集合的一个随机元素</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">sPop</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForSet().pop(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将元素value从一个集合移到另一个集合</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> destKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Boolean <span class="title function_">sMove</span><span class="params">(String key, String value, String destKey)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForSet().move(key, value, destKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取集合的大小</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">sSize</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForSet().size(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断集合是否包含value</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Boolean <span class="title function_">sIsMember</span><span class="params">(String key, Object value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForSet().isMember(key, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取两个集合的交集</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> otherKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;String&gt; <span class="title function_">sIntersect</span><span class="params">(String key, String otherKey)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForSet().intersect(key, otherKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取key集合与多个集合的交集</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> otherKeys</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;String&gt; <span class="title function_">sIntersect</span><span class="params">(String key, Collection&lt;String&gt; otherKeys)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForSet().intersect(key, otherKeys);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key集合与otherKey集合的交集存储到destKey集合中</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> otherKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> destKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">sIntersectAndStore</span><span class="params">(String key, String otherKey, String destKey)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForSet().intersectAndStore(key, otherKey,</span><br><span class="line">                destKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key集合与多个集合的交集存储到destKey集合中</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> otherKeys</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> destKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">sIntersectAndStore</span><span class="params">(String key, Collection&lt;String&gt; otherKeys,</span></span><br><span class="line"><span class="params">            String destKey)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForSet().intersectAndStore(key, otherKeys,</span><br><span class="line">                destKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取两个集合的并集</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> otherKeys</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;String&gt; <span class="title function_">sUnion</span><span class="params">(String key, String otherKeys)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForSet().union(key, otherKeys);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取key集合与多个集合的并集</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> otherKeys</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;String&gt; <span class="title function_">sUnion</span><span class="params">(String key, Collection&lt;String&gt; otherKeys)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForSet().union(key, otherKeys);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key集合与otherKey集合的并集存储到destKey中</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> otherKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> destKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">sUnionAndStore</span><span class="params">(String key, String otherKey, String destKey)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForSet().unionAndStore(key, otherKey, destKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key集合与多个集合的并集存储到destKey中</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> otherKeys</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> destKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">sUnionAndStore</span><span class="params">(String key, Collection&lt;String&gt; otherKeys,</span></span><br><span class="line"><span class="params">            String destKey)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForSet().unionAndStore(key, otherKeys, destKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取两个集合的差集</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> otherKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;String&gt; <span class="title function_">sDifference</span><span class="params">(String key, String otherKey)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForSet().difference(key, otherKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取key集合与多个集合的差集</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> otherKeys</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;String&gt; <span class="title function_">sDifference</span><span class="params">(String key, Collection&lt;String&gt; otherKeys)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForSet().difference(key, otherKeys);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key集合与otherKey集合的差集存储到destKey中</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> otherKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> destKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">sDifference</span><span class="params">(String key, String otherKey, String destKey)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForSet().differenceAndStore(key, otherKey,</span><br><span class="line">                destKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key集合与多个集合的差集存储到destKey中</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> otherKeys</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> destKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">sDifference</span><span class="params">(String key, Collection&lt;String&gt; otherKeys,</span></span><br><span class="line"><span class="params">            String destKey)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForSet().differenceAndStore(key, otherKeys,</span><br><span class="line">                destKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取集合所有元素</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;String&gt; <span class="title function_">setMembers</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForSet().members(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 随机获取集合中的一个元素</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">sRandomMember</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForSet().randomMember(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 随机获取集合中count个元素</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> count</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;String&gt; <span class="title function_">sRandomMembers</span><span class="params">(String key, <span class="type">long</span> count)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForSet().randomMembers(key, count);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 随机获取集合中count个元素并且去除重复的</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> count</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;String&gt; <span class="title function_">sDistinctRandomMembers</span><span class="params">(String key, <span class="type">long</span> count)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForSet().distinctRandomMembers(key, count);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> options</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Cursor&lt;String&gt; <span class="title function_">sScan</span><span class="params">(String key, ScanOptions options)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForSet().scan(key, options);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**------------------zSet相关操作--------------------------------*/</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加元素,有序集合是按照元素的score值由小到大排列</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> score</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Boolean <span class="title function_">zAdd</span><span class="params">(String key, String value, <span class="type">double</span> score)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().add(key, value, score);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> values</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">zAdd</span><span class="params">(String key, Set&lt;TypedTuple&lt;String&gt;&gt; values)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().add(key, values);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> values</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">zRemove</span><span class="params">(String key, Object... values)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().remove(key, values);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 增加元素的score值，并返回增加后的值</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> delta</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Double <span class="title function_">zIncrementScore</span><span class="params">(String key, String value, <span class="type">double</span> delta)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().incrementScore(key, value, delta);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回元素在集合的排名,有序集合是按照元素的score值由小到大排列</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 0表示第一位</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">zRank</span><span class="params">(String key, Object value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().rank(key, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回元素在集合的排名,按元素的score值由大到小排列</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">zReverseRank</span><span class="params">(String key, Object value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().reverseRank(key, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取集合的元素, 从小到大排序</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> start</span></span><br><span class="line"><span class="comment">     *            开始位置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> end</span></span><br><span class="line"><span class="comment">     *            结束位置, -1查询所有</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;String&gt; <span class="title function_">zRange</span><span class="params">(String key, <span class="type">long</span> start, <span class="type">long</span> end)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().range(key, start, end);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取集合元素, 并且把score值也获取</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> start</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> end</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;TypedTuple&lt;String&gt;&gt; <span class="title function_">zRangeWithScores</span><span class="params">(String key, <span class="type">long</span> start,</span></span><br><span class="line"><span class="params">            <span class="type">long</span> end)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().rangeWithScores(key, start, end);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据Score值查询集合元素</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> min</span></span><br><span class="line"><span class="comment">     *            最小值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> max</span></span><br><span class="line"><span class="comment">     *            最大值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;String&gt; <span class="title function_">zRangeByScore</span><span class="params">(String key, <span class="type">double</span> min, <span class="type">double</span> max)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().rangeByScore(key, min, max);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据Score值查询集合元素, 从小到大排序</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> min</span></span><br><span class="line"><span class="comment">     *            最小值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> max</span></span><br><span class="line"><span class="comment">     *            最大值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;TypedTuple&lt;String&gt;&gt; <span class="title function_">zRangeByScoreWithScores</span><span class="params">(String key,</span></span><br><span class="line"><span class="params">            <span class="type">double</span> min, <span class="type">double</span> max)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().rangeByScoreWithScores(key, min, max);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> min</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> max</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> start</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> end</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;TypedTuple&lt;String&gt;&gt; <span class="title function_">zRangeByScoreWithScores</span><span class="params">(String key,</span></span><br><span class="line"><span class="params">            <span class="type">double</span> min, <span class="type">double</span> max, <span class="type">long</span> start, <span class="type">long</span> end)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().rangeByScoreWithScores(key, min, max,</span><br><span class="line">                start, end);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取集合的元素, 从大到小排序</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> start</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> end</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;String&gt; <span class="title function_">zReverseRange</span><span class="params">(String key, <span class="type">long</span> start, <span class="type">long</span> end)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().reverseRange(key, start, end);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取集合的元素, 从大到小排序, 并返回score值</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> start</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> end</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;TypedTuple&lt;String&gt;&gt; <span class="title function_">zReverseRangeWithScores</span><span class="params">(String key,</span></span><br><span class="line"><span class="params">            <span class="type">long</span> start, <span class="type">long</span> end)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().reverseRangeWithScores(key, start,</span><br><span class="line">                end);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据Score值查询集合元素, 从大到小排序</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> min</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> max</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;String&gt; <span class="title function_">zReverseRangeByScore</span><span class="params">(String key, <span class="type">double</span> min,</span></span><br><span class="line"><span class="params">            <span class="type">double</span> max)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().reverseRangeByScore(key, min, max);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据Score值查询集合元素, 从大到小排序</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> min</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> max</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;TypedTuple&lt;String&gt;&gt; <span class="title function_">zReverseRangeByScoreWithScores</span><span class="params">(</span></span><br><span class="line"><span class="params">            String key, <span class="type">double</span> min, <span class="type">double</span> max)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().reverseRangeByScoreWithScores(key,</span><br><span class="line">                min, max);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> min</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> max</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> start</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> end</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Set&lt;String&gt; <span class="title function_">zReverseRangeByScore</span><span class="params">(String key, <span class="type">double</span> min,</span></span><br><span class="line"><span class="params">            <span class="type">double</span> max, <span class="type">long</span> start, <span class="type">long</span> end)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().reverseRangeByScore(key, min, max,</span><br><span class="line">                start, end);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据score值获取集合元素数量</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> min</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> max</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">zCount</span><span class="params">(String key, <span class="type">double</span> min, <span class="type">double</span> max)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().count(key, min, max);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取集合大小</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">zSize</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().size(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取集合大小</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">zZCard</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().zCard(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取集合中value元素的score值</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Double <span class="title function_">zScore</span><span class="params">(String key, Object value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().score(key, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移除指定索引位置的成员</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> start</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> end</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">zRemoveRange</span><span class="params">(String key, <span class="type">long</span> start, <span class="type">long</span> end)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().removeRange(key, start, end);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据指定的score值的范围来移除成员</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> min</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> max</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">zRemoveRangeByScore</span><span class="params">(String key, <span class="type">double</span> min, <span class="type">double</span> max)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().removeRangeByScore(key, min, max);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取key和otherKey的并集并存储在destKey中</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> otherKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> destKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">zUnionAndStore</span><span class="params">(String key, String otherKey, String destKey)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().unionAndStore(key, otherKey, destKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> otherKeys</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> destKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">zUnionAndStore</span><span class="params">(String key, Collection&lt;String&gt; otherKeys,</span></span><br><span class="line"><span class="params">            String destKey)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet()</span><br><span class="line">                .unionAndStore(key, otherKeys, destKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 交集</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> otherKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> destKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">zIntersectAndStore</span><span class="params">(String key, String otherKey,</span></span><br><span class="line"><span class="params">            String destKey)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().intersectAndStore(key, otherKey,</span><br><span class="line">                destKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 交集</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> otherKeys</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> destKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Long <span class="title function_">zIntersectAndStore</span><span class="params">(String key, Collection&lt;String&gt; otherKeys,</span></span><br><span class="line"><span class="params">            String destKey)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().intersectAndStore(key, otherKeys,</span><br><span class="line">                destKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> options</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Cursor&lt;TypedTuple&lt;String&gt;&gt; <span class="title function_">zScan</span><span class="params">(String key, ScanOptions options)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForZSet().scan(key, options);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="8-Redis-config"><a href="#8-Redis-config" class="headerlink" title="8. Redis.config"></a>8. Redis.config</h2><h3 id="8-1-前述"><a href="#8-1-前述" class="headerlink" title="8.1 前述"></a>8.1 前述</h3><ol>
<li>units单位</li>
</ol>
<blockquote>
<p>不区分大小写</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 1k =&gt; 1000 bytes</span><br><span class="line"># 1kb =&gt; 1024 bytes</span><br><span class="line"># 1m =&gt; 1000000 bytes</span><br><span class="line"># 1mb =&gt; 1024*1024 bytes</span><br><span class="line"># 1g =&gt; 1000000000 bytes</span><br><span class="line"># 1gb =&gt; 1024*1024*1024 bytes</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>INCLUDES包含</li>
</ol>
<blockquote>
<p>相当于导入其他文件import</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># include .\path\to\local.conf</span><br><span class="line"># include c:\path\to\other.conf</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>GENERAL通用<a href="#article_top">跳到基础配置表格</a></li>
</ol>
<p>[表格]: </p>
<ol start="4">
<li>SNAPSHOTTING快照</li>
</ol>
<blockquote>
<p>持久化，redis是内存数据库，数据容易断电就失</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 多少秒进行了多少操作，就持久化到文件.rdb.aof</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line"># 持久化如果出错，是否继续工作</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line"># 是否压缩rdb文件</span><br><span class="line">rdbcompression yes  </span><br><span class="line"># 校验rdb文件</span><br><span class="line">rdbchecksum yes</span><br><span class="line"># rdb文件保存目录</span><br><span class="line">dir ./</span><br></pre></td></tr></table></figure>

<ol start="5">
<li><p>REPLICATION 主从复制</p>
</li>
<li><p>SECURITY安全</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">requirepass root</span><br></pre></td></tr></table></figure>

<ol start="7">
<li>LIMITS限制</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">maxclients 10000</span><br><span class="line">maxmemory &lt;bytes&gt;</span><br><span class="line"># 内存达到上限后的处理策略</span><br><span class="line">maxmemory-policy noeviction </span><br><span class="line">1、volatile-lru：只对设置了过期时间的key进行LRU（默认值）</span><br><span class="line">2、allkeys-lru ： 删除lru算法的key</span><br><span class="line">3、volatile-random：随机删除即将过期key</span><br><span class="line">4、allkeys-random：随机删除</span><br><span class="line">5、volatile-ttl ： 删除即将过期的</span><br><span class="line">6、noeviction ： 永不过期，返回错误</span><br></pre></td></tr></table></figure>

<ol start="8">
<li>APPEND ONLY MODE 模式 aof配置（持久化）</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">appendonly no    #默认是不开启aof模式，默认使用rdb方式</span><br><span class="line">appendfilename &quot;appendonly.aof&quot;  #持久化文件名</span><br><span class="line"># appendfsync always    #每次修改都会sync同步，消耗性能</span><br><span class="line">appendfsync everysec   #每秒执行一次sync，可能会丢失ls的数据</span><br><span class="line"># appendfsync no   #不执行sync，操作系统自己同步数据,速度最快</span><br></pre></td></tr></table></figure>

<h3 id="8-2-持久化RDB"><a href="#8-2-持久化RDB" class="headerlink" title="8.2 持久化RDB"></a>8.2 持久化RDB</h3><ol>
<li>RDB（Redis DataBase）</li>
</ol>
<blockquote>
<p>在指定的时间间隔内将内存中的数据集快照写入磁盘，就是Snapshot快照，它恢复时是将快照文件直接读到内存里，默认情况下， Redis 将数据库快照保存在名字为 dump.rdb的二进制文件中。文件名可以在配置文件中进行自定义。</p>
</blockquote>
<ol start="2">
<li>RDB工作原理</li>
</ol>
<ul>
<li><p>Redis 调用forks。同时拥有父进程和子进程。在进行 <strong><code>RDB</code></strong> 的时候，**<code>redis</code>** 的主线程是不会做 <strong><code>io</code></strong> 操作的，主线程会 <strong><code>fork</code></strong> 一个子线程来完成该操作；</p>
</li>
<li><p>子进程将数据集写入到一个临时 RDB 文件中。</p>
</li>
<li><p>当子进程完成对新 RDB 文件的写入时，Redis 用新 RDB 文件替换原来的 RDB 文件，并删除旧的 RDB 文件。</p>
</li>
</ul>
<ol start="3">
<li>触发条件</li>
</ol>
<ul>
<li>save的规则满足的情况下，会自动触发rdb规则,,但是会阻塞，不接受其他操作</li>
<li>执行flushall命令，也会触发我们的rdb规则</li>
<li>退出redis，也会产生dump.rdb文件</li>
</ul>
<ol start="4">
<li>恢复rdb文件</li>
</ol>
<ul>
<li>只需要将rdb文件放到我们redis启动目录就可以，redis启动的时候会自动检查dump.rdb恢复数据</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># redis启动目录</span></span><br><span class="line">config get <span class="built_in">dir</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li>优缺点</li>
</ol>
<table>
<thead>
<tr>
<th>序号</th>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>适合大规模数据恢复</td>
<td>需要一定的时间间隔进行操作，如果redis意外宕机了，这个最后一次修改的数据就没有了</td>
</tr>
<tr>
<td>2</td>
<td>对数据的完整性要求不高</td>
<td>fork进程的时候，会占用一定的内容空间</td>
</tr>
</tbody></table>
<h3 id="8-3-持久化AOF"><a href="#8-3-持久化AOF" class="headerlink" title="8.3 持久化AOF"></a>8.3 持久化AOF</h3><ol>
<li>AOF（Append Only File）【仅仅追加命令模式】</li>
</ol>
<blockquote>
<p>记录命令history，以日志的形式来记录每个写的操作，需要恢复时追加命令但不可以改写文件，然后执行，默认文件无限追加，文件超过配置文件里设置大小，会重写</p>
</blockquote>
<ol start="2">
<li>开启步骤</li>
</ol>
<ul>
<li>修改配置文件</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">appendonly yes</span><br></pre></td></tr></table></figure>

<ul>
<li>重启Redis</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看进程</span></span><br><span class="line"> ps -ef|grep redis</span><br></pre></td></tr></table></figure>

<ul>
<li>aof文件出现错误</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">redis-check-aof --fix</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>优缺点</li>
</ol>
<table>
<thead>
<tr>
<th>序号</th>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>每一次修改都会同步，文件的完整性会更加好</td>
<td>如果每秒同步一次，可能会丢失一秒的数据，如果从不同步，效率最高</td>
</tr>
<tr>
<td>2</td>
<td></td>
<td>相对于数据文件来说，aof远远大于rdb，修复速度比rdb慢！</td>
</tr>
<tr>
<td>3</td>
<td></td>
<td>Aof运行效率也要比rdb慢，所以我们redis默认的配置就是rdb持久化</td>
</tr>
</tbody></table>
<h3 id="8-4-RDB和AOF对比"><a href="#8-4-RDB和AOF对比" class="headerlink" title="8.4 RDB和AOF对比"></a>8.4 RDB和AOF对比</h3><blockquote>
<p>公司一般混合使用RDB和AOF</p>
</blockquote>
<table>
<thead>
<tr>
<th>名称</th>
<th>RDB</th>
<th>AOF</th>
</tr>
</thead>
<tbody><tr>
<td>启动优先级</td>
<td>低</td>
<td>高</td>
</tr>
<tr>
<td>体积</td>
<td>小</td>
<td>大</td>
</tr>
<tr>
<td>恢复速度</td>
<td>快</td>
<td>慢</td>
</tr>
<tr>
<td>数据安全性</td>
<td>丢数据</td>
<td>根据策略决定</td>
</tr>
</tbody></table>
<h2 id="9-Redis主从复制（集群）"><a href="#9-Redis主从复制（集群）" class="headerlink" title="9. Redis主从复制（集群）"></a>9. Redis主从复制（集群）</h2><ol>
<li>定义</li>
</ol>
<blockquote>
<p>主从复制，是指将一台Redis服务器的数据，复制到其他的Redis服务器。前者称为主节点（Master&#x2F;Leader）,后者称为从节点（Slave&#x2F;Follower）， 数据的复制是单向的！只能由主节点复制到从节点（主节点以写为主、从节点以读为主）。至少一主二从，主机只能写，从机只能读</p>
</blockquote>
<ol start="2">
<li>集群解决问题</li>
</ol>
<ul>
<li>单台服务器难以负载大量的请求</li>
<li>单台服务器故障率高，系统崩坏概率大</li>
<li>单台服务器内存容量有限</li>
</ul>
<ol start="3">
<li>集群作用</li>
</ol>
<ul>
<li>数据冗余</li>
<li>故障恢复</li>
<li>负载均衡：在主从复制的基础上，配合读写分离</li>
<li>高可用基石：主从复制还是哨兵和集群能够实施的基础</li>
</ul>
<ol start="4">
<li>环境配置</li>
</ol>
<ul>
<li>查看当前redis信息</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> <span class="comment"># 查看当前库的信息</span></span><br><span class="line">127.0.0.1:6379&gt; info replication</span><br></pre></td></tr></table></figure>

<ul>
<li><p>复制配置文件，修改对应信息</p>
<p>1、端口</p>
<p>2、pid名字</p>
<p>3、log文件名字</p>
<p>4、dump.rdb名字</p>
</li>
<li><p>配置一主二从，默认每台Redis服务器都是主节点</p>
</li>
</ul>
<blockquote>
<p>有密码的去从机的配置文件加上masterauth 密码，永久配置需要到配置文件中配置，命令配置是暂时的，命令配置重启后会变回主机</p>
</blockquote>
<ul>
<li>命令</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置主机号和端口，把自己作为从机</span></span><br><span class="line">SLAVEOF 127.0.0.1 6379</span><br><span class="line"> <span class="comment"># 查看当前库的信息</span></span><br><span class="line">127.0.0.1:6379&gt; info replication</span><br></pre></td></tr></table></figure>

<ul>
<li>配置文件</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 配置主机号和端口，把自己作为从机</span><br><span class="line">slaveof &lt;masterip&gt; &lt;masterport&gt;</span><br><span class="line"># 主机密码</span><br><span class="line">masterauth &lt;master-password&gt;</span><br></pre></td></tr></table></figure>

<ol start="5">
<li><p>测试结果分析</p>
</li>
<li><p>主机断开连接，从机返回的是空</p>
</li>
<li><p>配置后，master将传送整个数据文件到slave ，并完成一次完全同步。</p>
</li>
</ol>
<ul>
<li>全量复制：</li>
</ul>
<blockquote>
<p>slave服务在接收到数据库文件数据后，将其存盘并加载到内存中</p>
</blockquote>
<ul>
<li>增量复制：</li>
</ul>
<blockquote>
<p>:Master继续将新的所有收集到的修改命令依次传给slave，完成同步但是只要是重新连接master,一次完全同步(全量复制)将被自动执行！我们的数据一定可以在从机中看到</p>
</blockquote>
<ol start="3">
<li>当主机断电宕机后，默认情况下从机的角色不会发生变化 ，集群中只是失去了写操作，当主机恢复以后，又会连接上从机恢复原状。</li>
<li>两种方式可以产生新的主机:</li>
</ol>
<ul>
<li>从机手动执行命令<code>slaveof no one</code>,这样执行以后从机会独立出来成为一个主机</li>
<li>使用哨兵模式（自动选举）</li>
</ul>
<h2 id="10-哨兵模式"><a href="#10-哨兵模式" class="headerlink" title="10. 哨兵模式"></a>10. 哨兵模式</h2><h3 id="10-1-定义"><a href="#10-1-定义" class="headerlink" title="10.1 定义"></a>10.1 定义</h3><blockquote>
<p>当主服务器宕机后自动选举主机，原理是哨兵通过发送命令，等待Redis服务器响应，从而监控运行的多个Redis实例</p>
</blockquote>
<h3 id="10-2-作用"><a href="#10-2-作用" class="headerlink" title="10.2 作用"></a>10.2 作用</h3><ul>
<li>通过发送命令，让Redis服务器返回监控其运行状态，包括主服务器和从服务器。</li>
<li>当哨兵监测到master宕机，会自动将slave切换成master，然后通过<strong>发布订阅模式</strong>通知其他的从服务器，修改配置文件，让它们切换主机。</li>
</ul>
<h3 id="10-3-测试"><a href="#10-3-测试" class="headerlink" title="10.3 测试"></a>10.3 测试</h3><ol>
<li>配置哨兵配置文件sentinel.conf</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># sentinel monitor 被监控的名称 host port 主机没了投票数</span><br><span class="line">sentinel monitor myredis 127.0.0.1 6379 1</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>启动哨兵</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># redis-sentinel sentinel.conf </span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>断开主机，发现127.0.0.1 6379当了主机了，果主机此时回来了，只能归并到新的主机下，当做从机</li>
</ol>
<h3 id="10-4-优缺点"><a href="#10-4-优缺点" class="headerlink" title="10.4 优缺点"></a>10.4 优缺点</h3><table>
<thead>
<tr>
<th>序号</th>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>哨兵集群，基于主从复制模式，所有主从配置优点，它都有</td>
<td>Redis不好在线扩容的，集群容量一旦到达上限，在线扩容就十分麻烦</td>
</tr>
<tr>
<td>2</td>
<td>主从可以切换，故障可以转移，系统的可用性会更好</td>
<td>实现哨兵模式的配置其实是很麻烦的，里面有很多选择！</td>
</tr>
<tr>
<td>3</td>
<td>哨兵模式就是主从复制模式的升级，手动到自动，更加健壮！</td>
<td>主机回来，只能归并到新的主机下，当做从机</td>
</tr>
</tbody></table>
<h3 id="10-5-配置文件"><a href="#10-5-配置文件" class="headerlink" title="10.5 配置文件"></a>10.5 配置文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Example sentinel.conf</span><br><span class="line"> </span><br><span class="line"># 哨兵sentinel实例运行的端口 默认26379</span><br><span class="line">port 26379</span><br><span class="line"> </span><br><span class="line"># 哨兵sentinel的工作目录</span><br><span class="line">dir /tmp</span><br><span class="line"> </span><br><span class="line"># 哨兵sentinel监控的redis主节点的 ip port </span><br><span class="line"># master-name  可以自己命名的主节点名字 只能由字母A-z、数字0-9 、这三个字符&quot;.-_&quot;组成。</span><br><span class="line"># quorum 当这些quorum个数sentinel哨兵认为master主节点失联 那么这时 客观上认为主节点失联了</span><br><span class="line"># sentinel monitor &lt;master-name&gt; &lt;ip&gt; &lt;redis-port&gt; &lt;quorum&gt;</span><br><span class="line">sentinel monitor mymaster 127.0.0.1 6379 1</span><br><span class="line"> </span><br><span class="line"># 当在Redis实例中开启了requirepass foobared 授权密码 这样所有连接Redis实例的客户端都要提供密码</span><br><span class="line"># 设置哨兵sentinel 连接主从的密码 注意必须为主从设置一样的验证密码</span><br><span class="line"># sentinel auth-pass &lt;master-name&gt; &lt;password&gt;</span><br><span class="line">sentinel auth-pass mymaster MySUPER--secret-0123passw0rd</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># 指定多少毫秒之后 主节点没有应答哨兵sentinel 此时 哨兵主观上认为主节点下线 默认30秒</span><br><span class="line"># sentinel down-after-milliseconds &lt;master-name&gt; &lt;milliseconds&gt;</span><br><span class="line">sentinel down-after-milliseconds mymaster 30000</span><br><span class="line"> </span><br><span class="line"># 这个配置项指定了在发生failover主备切换时最多可以有多少个slave同时对新的master进行 同步，</span><br><span class="line">这个数字越小，完成failover所需的时间就越长，</span><br><span class="line">但是如果这个数字越大，就意味着越 多的slave因为replication而不可用。</span><br><span class="line">可以通过将这个值设为 1 来保证每次只有一个slave 处于不能处理命令请求的状态。</span><br><span class="line"># sentinel parallel-syncs &lt;master-name&gt; &lt;numslaves&gt;</span><br><span class="line">sentinel parallel-syncs mymaster 1</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># 故障转移的超时时间 failover-timeout 可以用在以下这些方面： </span><br><span class="line">#1. 同一个sentinel对同一个master两次failover之间的间隔时间。</span><br><span class="line">#2. 当一个slave从一个错误的master那里同步数据开始计算时间。直到slave被纠正为向正确的master那里同步数据时。</span><br><span class="line">#3.当想要取消一个正在进行的failover所需要的时间。  </span><br><span class="line">#4.当进行failover时，配置所有slaves指向新的master所需的最大时间。不过，即使过了这个超时，slaves依然会被正确配置为指向master，但是就不按parallel-syncs所配置的规则来了</span><br><span class="line"># 默认三分钟</span><br><span class="line"># sentinel failover-timeout &lt;master-name&gt; &lt;milliseconds&gt;</span><br><span class="line">sentinel failover-timeout mymaster 180000</span><br><span class="line"> </span><br><span class="line"># SCRIPTS EXECUTION</span><br><span class="line"> </span><br><span class="line">#配置当某一事件发生时所需要执行的脚本，可以通过脚本来通知管理员，例如当系统运行不正常时发邮件通知相关人员。</span><br><span class="line">#对于脚本的运行结果有以下规则：</span><br><span class="line">#若脚本执行后返回1，那么该脚本稍后将会被再次执行，重复次数目前默认为10</span><br><span class="line">#若脚本执行后返回2，或者比2更高的一个返回值，脚本将不会重复执行。</span><br><span class="line">#如果脚本在执行过程中由于收到系统中断信号被终止了，则同返回值为1时的行为相同。</span><br><span class="line">#一个脚本的最大执行时间为60s，如果超过这个时间，脚本将会被一个SIGKILL信号终止，之后重新执行。</span><br><span class="line"> </span><br><span class="line">#通知型脚本:当sentinel有任何警告级别的事件发生时（比如说redis实例的主观失效和客观失效等等），将会去调用这个脚本，</span><br><span class="line">#这时这个脚本应该通过邮件，SMS等方式去通知系统管理员关于系统不正常运行的信息。调用该脚本时，将传给脚本两个参数，</span><br><span class="line">#一个是事件的类型，</span><br><span class="line">#一个是事件的描述。</span><br><span class="line">#如果sentinel.conf配置文件中配置了这个脚本路径，那么必须保证这个脚本存在于这个路径，并且是可执行的，否则sentinel无法正常启动成功。</span><br><span class="line">#通知脚本</span><br><span class="line"># sentinel notification-script &lt;master-name&gt; &lt;script-path&gt;</span><br><span class="line">  sentinel notification-script mymaster /var/redis/notify.sh</span><br><span class="line"> </span><br><span class="line"># 客户端重新配置主节点参数脚本</span><br><span class="line"># 当一个master由于failover而发生改变时，这个脚本将会被调用，通知相关的客户端关于master地址已经发生改变的信息。</span><br><span class="line"># 以下参数将会在调用脚本时传给脚本:</span><br><span class="line"># &lt;master-name&gt; &lt;role&gt; &lt;state&gt; &lt;from-ip&gt; &lt;from-port&gt; &lt;to-ip&gt; &lt;to-port&gt;</span><br><span class="line"># 目前&lt;state&gt;总是“failover”,</span><br><span class="line"># &lt;role&gt;是“leader”或者“observer”中的一个。 </span><br><span class="line"># 参数 from-ip, from-port, to-ip, to-port是用来和旧的master和新的master(即旧的slave)通信的</span><br><span class="line"># 这个脚本应该是通用的，能被多次调用，不是针对性的。</span><br><span class="line"># sentinel client-reconfig-script &lt;master-name&gt; &lt;script-path&gt;</span><br><span class="line">sentinel client-reconfig-script mymaster /var/redis/reconfig.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="11-Redis缓存穿透和雪崩"><a href="#11-Redis缓存穿透和雪崩" class="headerlink" title="11. Redis缓存穿透和雪崩"></a>11. Redis缓存穿透和雪崩</h2><h3 id="11-1-缓存穿透（缓存查不到）"><a href="#11-1-缓存穿透（缓存查不到）" class="headerlink" title="11.1 缓存穿透（缓存查不到）"></a>11.1 缓存穿透（缓存查不到）</h3><ol>
<li>定义</li>
</ol>
<blockquote>
<p>在默认情况下，用户请求数据时，会先在缓存(Redis)中查找，若没找到即缓存未命中，再在数据库中进行查找，数量少可能问题不大，可是一旦大量的请求数据（例如秒杀场景）缓存都没有命中的话，就会全部转移到数据库上，造成数据库极大的压力，就有可能导致数据库崩溃。网络安全中也有人恶意使用这种手段进行攻击被称为洪水攻击。</p>
</blockquote>
<ol start="2">
<li>解决方案</li>
</ol>
<ul>
<li>布隆过滤器</li>
</ul>
<blockquote>
<p>对所有可能查询的参数以Hash的形式存储，以便快速确定是否存在这个值，在控制层先进行拦截校验，校验不通过直接打回，减轻了存储系统的压力</p>
</blockquote>
<ul>
<li>缓存空对象</li>
</ul>
<blockquote>
<p>一次请求若在缓存和数据库中都没找到，就在缓存中方一个空对象用于处理后续这个请求。缺点：存储空对象也需要空间，大量的空对象会耗费一定的空间，存储效率并不高。解决这个缺陷的方式就是设置较短过期时间，对于保持一致性业务会有影响</p>
</blockquote>
<h3 id="11-2-缓存击穿（量大，缓存过期）"><a href="#11-2-缓存击穿（量大，缓存过期）" class="headerlink" title="11.2 缓存击穿（量大，缓存过期）"></a>11.2 缓存击穿（量大，缓存过期）</h3><ol>
<li>定义</li>
</ol>
<blockquote>
<p>相较于缓存穿透，缓存击穿的目的性更强，一个存在的key，在缓存过期的一刻，同时有大量的请求，这些请求都会击穿到DB，造成瞬时DB请求量大、压力骤增。这就是缓存被击穿，只是针对其中某个key的缓存不可用而导致击穿，但是其他的key依然可以使用缓存响应。</p>
</blockquote>
<ol start="2">
<li>解决方案</li>
</ol>
<ul>
<li>设置热点数据永不过期</li>
</ul>
<blockquote>
<p>这样就不会出现热点数据过期的情况，但是当Redis内存空间满的时候也会清理部分数据，而且此种方案会占用空间，一旦热点数据多了起来，就会占用部分空间。</p>
</blockquote>
<ul>
<li>加互斥锁(分布式锁)</li>
</ul>
<blockquote>
<p>在访问key之前，采用SETNX（set if not exists）来设置另一个短期key来锁住当前key的访问，访问结束再删除该短期key。保证同时刻只有一个线程访问。这样对锁的要求就十分高。</p>
</blockquote>
<h3 id="11-3-缓存雪崩"><a href="#11-3-缓存雪崩" class="headerlink" title="11.3 缓存雪崩"></a>11.3 缓存雪崩</h3><ol>
<li>定义</li>
</ol>
<blockquote>
<p>大量的key设置了相同的过期时间，导致在缓存在同一时刻全部失效，造成瞬时DB请求量大、压力骤增，引起雪崩。</p>
</blockquote>
<ol start="2">
<li>解决方案</li>
</ol>
<ul>
<li>redis高可用</li>
</ul>
<blockquote>
<p>这个思想的含义是，既然redis有可能挂掉，那我多增设几台redis，这样一台挂掉之后其他的还可以继续工作，其实就是搭建的集群</p>
</blockquote>
<ul>
<li>限流降级</li>
</ul>
<blockquote>
<p>这个解决方案的思想是，在缓存失效后，通过加锁或者队列来控制读数据库写缓存的线程数量。比如对某个key只允许一个线程查询数据和写缓存，其他线程等待。</p>
</blockquote>
<ul>
<li>数据预热</li>
</ul>
<blockquote>
<p>数据加热的含义就是在正式部署之前，我先把可能的数据先预先访问一遍，这样部分可能大量访问的数据就会加载到缓存中。在即将发生大并发访问前手动触发加载缓存不同的key，设置不同的过期时间，让缓存失效的时间点尽量均匀。</p>
</blockquote>
<h2 id="12-Redis和数据库一致性"><a href="#12-Redis和数据库一致性" class="headerlink" title="12. Redis和数据库一致性"></a>12. Redis和数据库一致性</h2><ol>
<li>先更新数据库，再更新redis(弃)</li>
</ol>
<blockquote>
<p>如果先更新数据库成功，接着更新redis失败，那么会造成数据不一致，所以这种方法舍弃</p>
</blockquote>
<ol start="2">
<li>先更新redis，在更新数据库(弃)</li>
</ol>
<blockquote>
<p>如果更新reids成功，更新数据库失败，那么同样会造成数据不一致</p>
</blockquote>
<ol start="3">
<li>先更新数据库，再删除redis</li>
</ol>
<blockquote>
<p>这种方案，同样会造成数据不一致的问题，但是相比上两个方案，如果他设置key的过期时间，那么保证了数据的最终一致性。如果在更新数据库后删除redis失败，又未设置redis过期时间。那么会造成数据不一致。</p>
</blockquote>
<blockquote>
<p><strong>如果线程A更新数据库，正准备更新redis时。线程B在更新线程A更新redis前获取了redis中的数据，那么其他数据拿到的数据还是旧数据，如果删除redis失败也会造成数据不一致</strong></p>
</blockquote>
<ul>
<li>解决方案：</li>
</ul>
<ol>
<li><p>mysql和redis设置事务，在发生异常时回滚数据</p>
</li>
<li><p>redis设置重试机制，在删除失败后进入重试模式</p>
</li>
<li><p>先删除redis，再更新数据库（）</p>
</li>
</ol>
<blockquote>
<p>如果线程A删除了redis，正准备更新数据库。线程B查询了redis没有之后，查询了数据库的旧数据，并且把它写到redis。之后线程A才更新数据成功，会出现数据库和redis的数据不一致</p>
</blockquote>
<ul>
<li>延迟双删</li>
</ul>
<blockquote>
<p>线程A在删除redis以及更新数据库后，睡眠一段时间后，再次删除<a href="https://so.csdn.net/so/search?q=reids&spm=1001.2101.3001.7020">reids</a>中的数据。这个睡眠时间得大于一次查询的时间。</p>
</blockquote>
<ol start="5">
<li>(延迟双删)先删除 Redis，再写 MySQL，再删除 Redis（优）</li>
<li>先写 MySQL，通过 Binlog，异步更新 Redis</li>
</ol>
<blockquote>
<p>这个方案，比如 binlog + kafka会保证 MySQL 和 Redis 的最终一致性，但是如果中途请求 B 需要查询数据，如果缓存无数据，就直接查 DB；如果缓存有数据，查询的数据也会存在不一致的情况。所以这个方案，是实现最终一致性的终极解决方案，但是不能保证实时性。</p>
</blockquote>
<ol start="7">
<li>个人建议</li>
</ol>
<ul>
<li><p>实时一致性方案：采用“先写 MySQL，再删除 Redis”的策略，这种情况虽然也会存在两者不一致，但是需要满足的条件有点苛刻，所以是满足实时性条件下，能尽量满足一致性的最优解。</p>
</li>
<li><p>最终一致性方案：采用“先写 MySQL，通过 Binlog，异步更新 Redis”，可以通过 Binlog，结合消息队列异步更新 Redis，是最终一致性的最优解。</p>
</li>
</ul>
<h2 id="13-总结"><a href="#13-总结" class="headerlink" title="13. 总结"></a>13. 总结</h2><p>本次学习了Redis，对Redis有了基础的了解，会不断进行学习</p>
]]></content>
      <tags>
        <tag>数据库</tag>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot</title>
    <url>/2023/03/17/Spring-Boot/</url>
    <content><![CDATA[<blockquote>
<center>瞻山识璞，临川知珠</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<p><a href="https://docs.spring.io/spring-boot/docs/3.0.2/reference/htmlsingle/">官方文档</a></p>
<h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h2><ol>
<li>定义</li>
</ol>
<blockquote>
<p>SpringBoot是一个基于Spring4.0的javaweb快速开发框架，策略：开箱即用和约定优于配置，作者：Pivotal团队</p>
</blockquote>
<ol start="2">
<li>与SSM区别</li>
</ol>
<table>
<thead>
<tr>
<th>序号</th>
<th>SSM</th>
<th>SpringBoot</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>Tomcat：war包</td>
<td>内嵌Tomcat ：jar包</td>
</tr>
</tbody></table>
<ol start="3">
<li>微服务</li>
</ol>
<blockquote>
<p>微服务是一种高内聚,低耦合架构风格，James Lewis，Martin Fowler</p>
</blockquote>
<ul>
<li><p><a href="https://martinfowler.com/articles/microservices.html#CharacteristicsOfAMicroserviceArchitecture">微服务论文</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/liuning8023/p/4493156.html">微服务论文中文翻译</a></p>
</li>
<li><p><a href="https://dubbo.apache.org/zh/">dubbo</a></p>
</li>
</ul>
<ol start="4">
<li>SpringBoot 2.7.8要求</li>
</ol>
<table>
<thead>
<tr>
<th>工具</th>
<th>Version</th>
</tr>
</thead>
<tbody><tr>
<td>jdk</td>
<td>Java 8</td>
</tr>
<tr>
<td>Spring Framework</td>
<td>5.3.25</td>
</tr>
<tr>
<td>Maven</td>
<td>3.5+</td>
</tr>
<tr>
<td>Gradle</td>
<td>6.8.x, 6.9.x, and 7.x</td>
</tr>
<tr>
<td>Tomcat 9.0</td>
<td>4.0</td>
</tr>
<tr>
<td>Jetty 9.4</td>
<td>3.1</td>
</tr>
<tr>
<td>Jetty 10.0</td>
<td>4.0</td>
</tr>
<tr>
<td>Undertow 2.0</td>
<td>4.0</td>
</tr>
</tbody></table>
<h2 id="2-项目结构分析"><a href="#2-项目结构分析" class="headerlink" title="2. 项目结构分析"></a>2. 项目结构分析</h2><h3 id="2-1-创建方式"><a href="#2-1-创建方式" class="headerlink" title="2.1 创建方式"></a>2.1 创建方式</h3><ul>
<li><a href="https://start.aliyun.com/">阿里云镜像导入</a></li>
<li><a href="https://start.spring.io/">spring官网导入</a></li>
<li>idea创建（推荐）选择spring initalizr</li>
</ul>
<h3 id="2-2-项目结构"><a href="#2-2-项目结构" class="headerlink" title="2.2 项目结构"></a>2.2 项目结构</h3><p>1、程序的主启动类（程序的主入口）</p>
<p>2、一个 application.properties 配置文件（SpringBoot的核心配置文件）</p>
<p>3、一个 测试类</p>
<p>4、一个 pom.xml</p>
<ul>
<li>pom.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--有一个父项目 控制版本与打包--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xxy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>helloworld<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>helloworld<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">description</span>&gt;</span>first project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--所有的SpringBoot依赖都是spring-boot-starter开头--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--Web依赖：tomact.dispatcherServlet.xml--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--单元测试--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--热部署开发工具--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--jar包插件--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-3-修改配置"><a href="#2-3-修改配置" class="headerlink" title="2.3 修改配置"></a>2.3 修改配置</h3><ol>
<li>修改端口</li>
</ol>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">server.port</span>=<span class="string">8081</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>修改运行图标</li>
</ol>
<ul>
<li><p><a href="https://www.bootschool.net/">前端小模块</a></p>
</li>
<li><p>banner.txt</p>
</li>
</ul>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">                              __</span><br><span class="line">                     /\    .-&quot; /</span><br><span class="line">                    /  ; .&#x27;  .&#x27;</span><br><span class="line">                   :   :/  .&#x27;</span><br><span class="line">                    \  ;-.&#x27;</span><br><span class="line">       .--&quot;&quot;&quot;&quot;--..__/     `.</span><br><span class="line">     .&#x27;           .&#x27;    `o  \</span><br><span class="line">    /                    `   ;</span><br><span class="line">   :                  \      :</span><br><span class="line"> .-;        -.         `.__.-&#x27;</span><br><span class="line">:  ;          \     ,   ;</span><br><span class="line">&#x27;._:           ;   :   (</span><br><span class="line">    \/  .__    ;    \   `-.</span><br><span class="line"> 没有bug ;     &quot;-,/_..--&quot;`-..__)</span><br><span class="line">     &#x27;&quot;&quot;--.._:</span><br><span class="line">////////////////////////////////</span><br></pre></td></tr></table></figure>

<h2 id="3-原理初探"><a href="#3-原理初探" class="headerlink" title="3. 原理初探"></a>3. 原理初探</h2><h3 id="3-1-自动配置"><a href="#3-1-自动配置" class="headerlink" title="3.1 自动配置"></a>3.1 自动配置</h3><ul>
<li><p>pom.xml文件</p>
<ul>
<li>spring-boot-starter-parent 核心依赖在父工程中spring-boot-dependencies,锁定了版本，不需要写版本</li>
</ul>
</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>启动器【springBoot 启动场景】<ul>
<li>spring-boot-starter，我们需要什么功能，找到对应的启动器就可以了，<code>starter</code>,比如spring-boot-starter-web就是自动导入web环境所有依赖</li>
</ul>
</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>主程序</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.helloworld;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="comment">//@SpringBootApplication 标注这是一个Spring Boot的应用，启动类</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloworldApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		<span class="comment">//将springBoot应用启动</span></span><br><span class="line">		<span class="comment">//run 开启了一个服务</span></span><br><span class="line">		<span class="comment">//SpringApplication 判断普通项目还是web项目，初始化器，监听器，找到Main的运行方法或者主类</span></span><br><span class="line">		SpringApplication.run(HelloworldApplication.class, args);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>@SpringBootApplication下的注解</p>
<ol>
<li><p>springboot配置<code>@SpringBootConfiguration </code></p>
</li>
<li><p>spring自动配置 全面接管SpringMVC的配置<code>@EnableAutoConfiguration</code></p>
</li>
<li><p>springboot自动配置扫描：有判断条件，只有导入了先对应的start，自动装配才会生效<code>@ComponentScan</code></p>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@org</span>.springframework.boot.SpringBootConfiguration  <span class="comment">//springboot的配置</span></span><br><span class="line">  - <span class="meta">@Configuration</span> <span class="comment">//spring 配置类</span></span><br><span class="line">    -- <span class="meta">@Component</span> <span class="comment">//说明者也是一个Spring的组件</span></span><br><span class="line"><span class="meta">@org</span>.springframework.boot.autoconfigure.EnableAutoConfiguration <span class="comment">//自动配置ioc注入类</span></span><br><span class="line">    - <span class="meta">@AutoConfigurationPackage</span> <span class="comment">//自动配置包</span></span><br><span class="line">    	--<span class="meta">@Import(&#123;Registrar.class&#125;)</span> <span class="comment">//自动配置 ‘包注册’</span></span><br><span class="line">    - <span class="meta">@Import(&#123;AutoConfigurationImportSelector.class&#125;)</span><span class="comment">//自动配置导入选择器</span></span><br><span class="line">    <span class="comment">//获取所有（候选）的配置</span></span><br><span class="line">     -- <span class="keyword">protected</span> List&lt;String&gt; getCandidateConfigurations AnnotationMetadata metadata, AnnotationAttributes attributes) &#123;</span><br><span class="line">        List&lt;String&gt; configurations = SpringFactoriesLoader.loadFactoryNames(<span class="built_in">this</span>.getSpringFactoriesLoaderFactoryClass(), <span class="built_in">this</span>.getBeanClassLoader());</span><br><span class="line">        Assert.notEmpty(configurations, <span class="string">&quot;No auto configuration classes found in META-INF/spring.factories. If you are using a custom packaging, make sure that file is correct.&quot;</span>);<span class="comment">//自动配置中的核心文件</span></span><br><span class="line">        <span class="keyword">return</span> configurations;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

</li>
<li><p>结论：</p>
</li>
</ul>
<blockquote>
<p>springboot所有自动配置都是启动时进行加载：spring.factories,里面有判断条件，条件不满足，就会无效，有了启动器，自动装配才会生效；</p>
</blockquote>
<p> 自动装配的原理</p>
<ul>
<li>SpringBoot启动会加载大量的自动配置类</li>
<li>寻找我们的功能是否在默认自动配置中</li>
<li>查看自动配置类中配置了哪些组件 （没有就需要手动配置）</li>
<li>添加组件时会从properties类中获取一部分属性</li>
<li>XX AutoConfigurartion：给容器添加组件</li>
<li>XX Properties：封装配置文件的属性，.yaml</li>
<li>可以通过yml文件<code>debug:  true</code>来查看自动配置的生效</li>
</ul>
<h3 id="3-2-SpringApplication类"><a href="#3-2-SpringApplication类" class="headerlink" title="3.2 SpringApplication类"></a>3.2 SpringApplication类</h3><ol>
<li>SpringApplication做了下面四件事</li>
</ol>
<ul>
<li><p>推断应用的类型是普通的项目还是Web项目</p>
</li>
<li><p>查找并加载所有可用初始化器 ， 设置到initializers属性中</p>
</li>
<li><p>找出所有的应用程序监听器，设置到listeners属性中</p>
</li>
<li><p>推断并设置main方法的定义类，找到运行的主类</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">SpringApplication</span><span class="params">(ResourceLoader resourceLoader, Class... primarySources)</span> &#123;</span><br><span class="line">    <span class="comment">// ......</span></span><br><span class="line">    <span class="built_in">this</span>.webApplicationType = WebApplicationType.deduceFromClasspath();</span><br><span class="line">    <span class="built_in">this</span>.setInitializers(<span class="built_in">this</span>.getSpringFactoriesInstances();</span><br><span class="line">    <span class="built_in">this</span>.setListeners(<span class="built_in">this</span>.getSpringFactoriesInstances(ApplicationListener.class));</span><br><span class="line">    <span class="built_in">this</span>.mainApplicationClass = <span class="built_in">this</span>.deduceMainApplicationClass();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>run()：<br>①配置环境参数<br>②推断并设置main方法的定义类，找到运行的主类<br>③run方法里面有一些监听器，这些监听器是全局存在的，它的作用是获取上下文处理一些bean，所有的bean无论是加载还是生产初始化多存在。</li>
</ol>
<h3 id="3-3-自动配置加深"><a href="#3-3-自动配置加深" class="headerlink" title="3.3 自动配置加深"></a>3.3 自动配置加深</h3><ol>
<li>自动配置原理</li>
</ol>
<blockquote>
<p>Spring Boot通过@EnableAutoConfiguration注解开启自动配置，对jar包下的spring.factories文件进行扫描，这个文件中包含了可以进行自动配置的类，当满足@Condition注解指定的条件时，便在依赖的支持下进行实例化，注册到Spring容器中。<br>通俗的来讲，springboot的自动配置就是用注解来对一些常规的配置做默认配置，简化xml配置内容，使你的项目能够快速运行。</p>
</blockquote>
<ol start="2">
<li>@Conditional派生注解</li>
</ol>
<table>
<thead>
<tr>
<th>序号</th>
<th>注解名称</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>@Conditional</td>
<td>作用（判断是否满足当前指定条件）</td>
</tr>
<tr>
<td>2</td>
<td>@ConditionalOnJava</td>
<td>系统的java版本是否符合要求</td>
</tr>
<tr>
<td>3</td>
<td>@ConditionalOnBean</td>
<td>容器中存在指定Bean</td>
</tr>
<tr>
<td>4</td>
<td>@ConditionalOnMissingBean</td>
<td>容器中不存在指定Bean</td>
</tr>
<tr>
<td>5</td>
<td>@ConditionalOnExpression</td>
<td>满足SpEL表达式指定</td>
</tr>
<tr>
<td>6</td>
<td>@ConditionalOnClass</td>
<td>系统中有指定的类</td>
</tr>
<tr>
<td>7</td>
<td>@ConditionalOnMissingClass</td>
<td>系统中没有指定的类</td>
</tr>
<tr>
<td>8</td>
<td>@ConditionalOnSingleCandidate</td>
<td>容器中只有一个指定的Bean，或者这个Bean是首选Bean</td>
</tr>
<tr>
<td>9</td>
<td>@ConditionalOnProperty</td>
<td>系统中指定的属性是否有指定的值</td>
</tr>
<tr>
<td>10</td>
<td>@ConditionalOnResource</td>
<td>类路径下是否存在指定资源文件</td>
</tr>
<tr>
<td>11</td>
<td>@ConditionalOnWebApplication</td>
<td>当前是web环境</td>
</tr>
<tr>
<td>12</td>
<td>@ConditionalOnNotWebApplication</td>
<td>当前不是web环境</td>
</tr>
<tr>
<td>13</td>
<td>@ConditionalOnJndi</td>
<td>JNDI存在指定项</td>
</tr>
</tbody></table>
<h2 id="4-注入配置文件"><a href="#4-注入配置文件" class="headerlink" title="4. 注入配置文件"></a>4. 注入配置文件</h2><blockquote>
<p>结论：用yaml更好，除了SPEL表达式；如果yml和properties同时都配置了端口，默认会使用properties配置文件的！</p>
</blockquote>
<p>4.1 导入文件处理器</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--	防止@ConfigurationProperties(prefix = &quot;person&quot;)注入报红--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>4.2 编写配置文件</p>
<ul>
<li>application.properties文件</li>
</ul>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Spring Boot配置文件，修改SpringBoot自动配置的默认值</span></span><br><span class="line"><span class="comment"># 格式 key=value</span></span><br></pre></td></tr></table></figure>

<ul>
<li>application.yaml文件</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Spring Boot yaml配置</span></span><br><span class="line"><span class="comment"># 规范: key:空格value</span></span><br><span class="line"><span class="comment"># yaml一般是utf-8格式，可以注入配置文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置服务器端口号</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># person对象赋值</span></span><br><span class="line"><span class="attr">person:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">lisi$&#123;random.uuid&#125;</span></span><br><span class="line">  <span class="attr">age:</span> <span class="string">$&#123;random.int&#125;</span></span><br><span class="line">  <span class="attr">isHappy:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">birth:</span> <span class="number">2000</span><span class="string">/10/22</span></span><br><span class="line">  <span class="attr">maps:</span> &#123;<span class="attr">k1:</span> <span class="string">v1</span>,<span class="attr">k2:</span> <span class="string">v2</span>&#125;</span><br><span class="line">  <span class="comment"># hello: jj</span></span><br><span class="line">  <span class="attr">lists:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">code</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">music</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">girl</span></span><br><span class="line">  <span class="attr">dog:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">$&#123;person.hello:hello&#125;_旺财</span></span><br><span class="line">    <span class="attr">age:</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数组</span></span><br><span class="line"><span class="attr">pets:</span> [<span class="string">cat</span>,<span class="string">dog</span>,<span class="string">pig</span>]</span><br><span class="line"><span class="comment"># 行内规范对象</span></span><br><span class="line"><span class="attr">student:</span> &#123;<span class="attr">name:</span> <span class="string">hh</span>, <span class="attr">age:</span> <span class="string">dd</span>&#125;</span><br></pre></td></tr></table></figure>

<p>4.3 进行绑定注入</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;person&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> isHappy;</span><br><span class="line">    <span class="keyword">private</span> Date birth;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,Object&gt; maps;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Object&gt; lists;</span><br><span class="line">    <span class="keyword">private</span> Dog dog;</span><br><span class="line">   <span class="comment">//get、set、toString方法</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="comment">//加载指定的配置文件</span></span><br><span class="line"><span class="meta">@PropertySource(value = &quot;classpath:dog.properties&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Dog</span> &#123;</span><br><span class="line">    <span class="comment">//通过SPEL表达式取出配置文件的值</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;name&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@Value(&quot;5&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">  <span class="comment">//get\set\toString方法</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>4.4 松散绑定</p>
<blockquote>
<p>yaml可以是-和_和驼峰式命名相互绑定，根据set方法赋值</p>
</blockquote>
<p>4.5 JSR303校验</p>
<blockquote>
<p>@Validated&#x2F;&#x2F;Spring数据验证 @Valid：JDK提供的（标准JSR-303规范）,不知道用哪个可以直接找源码javax.validation.constraints</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--jsr303验证--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-validation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th><strong>约束注解名称</strong></th>
<th><strong>约束注解说明</strong></th>
</tr>
</thead>
<tbody><tr>
<td>@Null</td>
<td>用于验证对象为null</td>
</tr>
<tr>
<td>@NotNull</td>
<td>用于对象不能为null，无法查检长度为0的字符串</td>
</tr>
<tr>
<td>@NotBlank</td>
<td>只用于String类型上，不能为null且trim()之后的size&gt;0</td>
</tr>
<tr>
<td>@NotEmpty</td>
<td>用于集合类、String类不能为null,且size&gt;0。但是带有空格的字符串校验不出来</td>
</tr>
<tr>
<td>@Size</td>
<td>用于对象（Array,Collection,Map,String）长度是否在给定的范围之内</td>
</tr>
<tr>
<td>@Length</td>
<td>用于String对象的大小必须在指定的范围内</td>
</tr>
<tr>
<td>@Pattern</td>
<td>用于String对象是否符合正则表达式的规则</td>
</tr>
<tr>
<td>@Email</td>
<td>用于String对象是否符合邮箱格式</td>
</tr>
<tr>
<td>@Min</td>
<td>用于Number和String对象是否大等于指定的值</td>
</tr>
<tr>
<td>@Max</td>
<td>用于Number和String对象是否小等于指定的值</td>
</tr>
<tr>
<td>@AssertTrue</td>
<td>用于Boolean对象是否为true</td>
</tr>
<tr>
<td>@AssertFalse</td>
<td>用于Boolean对象是否为false</td>
</tr>
<tr>
<td>@Past</td>
<td>验证 Date 和 Calendar 对象是否在当前时间之前</td>
</tr>
<tr>
<td>@Future</td>
<td>验证 Date 和 Calendar 对象是否在当前时间之后</td>
</tr>
</tbody></table>
<p>4.6  配置文件yaml优先级(从高到低)；互补配置；可以通过spring.config.location改变默认位置</p>
<p>– file:.&#x2F;config&#x2F;</p>
<p>– file:.&#x2F;</p>
<p>–classpath:&#x2F;config&#x2F;</p>
<p>–classpath:&#x2F;</p>
<p>4.7 配置文件服务端口配置(建议)</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置服务器端口号</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line">  <span class="attr">spring:</span></span><br><span class="line"><span class="attr">profiles:</span> </span><br><span class="line"><span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8082</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">profiles:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8083</span></span><br><span class="line">  <span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">test</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<h2 id="5-SpringBoot-Web开发"><a href="#5-SpringBoot-Web开发" class="headerlink" title="5. SpringBoot Web开发"></a>5. SpringBoot Web开发</h2><h3 id="5-1-静态资源"><a href="#5-1-静态资源" class="headerlink" title="5.1 静态资源"></a>5.1 静态资源</h3><ul>
<li>WebMvcAutoConfiguration类源码</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//源码</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="built_in">this</span>.resourceProperties.isAddMappings()) &#123; <span class="comment">//判断是否自定义</span></span><br><span class="line">                logger.debug(<span class="string">&quot;Default resource handling disabled&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">Duration</span> <span class="variable">cachePeriod</span> <span class="operator">=</span> <span class="built_in">this</span>.resourceProperties.getCache().getPeriod();</span><br><span class="line">                <span class="type">CacheControl</span> <span class="variable">cacheControl</span> <span class="operator">=</span> <span class="built_in">this</span>.resourceProperties.getCache().getCachecontrol().toHttpCacheControl();</span><br><span class="line">                <span class="keyword">if</span> (!registry.hasMappingForPattern(<span class="string">&quot;/webjars/**&quot;</span>)) &#123;</span><br><span class="line">                    <span class="built_in">this</span>.customizeResourceHandlerRegistration(registry.addResourceHandler(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;/webjars/**&quot;</span>&#125;).addResourceLocations(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;classpath:/META-INF/resources/webjars/&quot;</span>&#125;).setCachePeriod(<span class="built_in">this</span>.getSeconds(cachePeriod)).setCacheControl(cacheControl));</span><br><span class="line">                &#125;<span class="comment">//第一个静态资源的位置</span></span><br><span class="line"></span><br><span class="line">                <span class="type">String</span> <span class="variable">staticPathPattern</span> <span class="operator">=</span> <span class="built_in">this</span>.mvcProperties.getStaticPathPattern();<span class="comment">//获取静态资源的路径</span></span><br><span class="line">                <span class="keyword">if</span> (!registry.hasMappingForPattern(staticPathPattern)) &#123;</span><br><span class="line">                    <span class="built_in">this</span>.customizeResourceHandlerRegistration(registry.addResourceHandler(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;staticPathPattern&#125;).addResourceLocations(WebMvcAutoConfiguration.getResourceLocations(<span class="built_in">this</span>.resourceProperties.getStaticLocations())).setCachePeriod(<span class="built_in">this</span>.getSeconds(cachePeriod)).setCacheControl(cacheControl));</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p><a href="https://www.webjars.org/">webjars官网</a></p>
</li>
<li><p>引入jquery静态资源</p>
</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--引入jquery包--&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.webjars<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jquery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.6.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>静态资源放的位置：（优先级从高到低），自己定义路径</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 自定义静态资源位置</span></span><br><span class="line"><span class="attr">spring.mvc.static-path-pattern</span>=<span class="string">/hello/,classpath:/xxy/</span></span><br></pre></td></tr></table></figure>

<ol>
<li>导入依赖包，classpath:&#x2F;META-INF&#x2F;resources&#x2F;webjars&#x2F;</li>
<li>classpath:&#x2F;resources&#x2F;</li>
<li>classpath:&#x2F;static&#x2F;（默认）</li>
<li>classpath:&#x2F;public&#x2F;</li>
<li>&#x2F;**</li>
</ol>
<h3 id="5-2-首页"><a href="#5-2-首页" class="headerlink" title="5.2 首页"></a>5.2 首页</h3><ul>
<li>源码</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line">        <span class="keyword">public</span> WelcomePageHandlerMapping <span class="title function_">welcomePageHandlerMapping</span><span class="params">(ApplicationContext applicationContext, FormattingConversionService mvcConversionService, ResourceUrlProvider mvcResourceUrlProvider)</span> &#123;</span><br><span class="line">            <span class="type">WelcomePageHandlerMapping</span> <span class="variable">welcomePageHandlerMapping</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WelcomePageHandlerMapping</span>(<span class="keyword">new</span> <span class="title class_">TemplateAvailabilityProviders</span>(applicationContext), applicationContext, <span class="built_in">this</span>.getWelcomePage(), <span class="built_in">this</span>.mvcProperties.getStaticPathPattern());</span><br><span class="line">            welcomePageHandlerMapping.setInterceptors(<span class="built_in">this</span>.getInterceptors(mvcConversionService, mvcResourceUrlProvider));</span><br><span class="line">            welcomePageHandlerMapping.setCorsConfigurations(<span class="built_in">this</span>.getCorsConfigurations());</span><br><span class="line">            <span class="keyword">return</span> welcomePageHandlerMapping;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> Optional&lt;Resource&gt; <span class="title function_">getWelcomePage</span><span class="params">()</span> &#123;</span><br><span class="line">            String[] locations = WebMvcAutoConfiguration.getResourceLocations(<span class="built_in">this</span>.resourceProperties.getStaticLocations());</span><br><span class="line">            <span class="keyword">return</span> Arrays.stream(locations).map(<span class="built_in">this</span>::getIndexHtml).filter(<span class="built_in">this</span>::isReadable).findFirst();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> Resource <span class="title function_">getIndexHtml</span><span class="params">(String location)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.resourceLoader.getResource(location + <span class="string">&quot;index.html&quot;</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在templates目录下的所有页面，只能通过Controller来跳转</span></span><br><span class="line"><span class="comment">//需要模板引擎的支持 thymeleaf依赖</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IndexController</span> &#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/index&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">index</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="5-3-模板引擎-比较少用，大多数前后端分离，用来渲染，vue使用pug"><a href="#5-3-模板引擎-比较少用，大多数前后端分离，用来渲染，vue使用pug" class="headerlink" title="5.3 模板引擎(比较少用，大多数前后端分离，用来渲染，vue使用pug)"></a>5.3 模板引擎(比较少用，大多数前后端分离，用来渲染，vue使用pug)</h3><p><a href="https://www.thymeleaf.org/"><strong>Thymeleaf</strong>官网</a></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--导入Thymeleaf模板引擎--&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="5-4-装配扩展SpringMVC"><a href="#5-4-装配扩展SpringMVC" class="headerlink" title="5.4 装配扩展SpringMVC"></a>5.4 装配扩展SpringMVC</h3><ul>
<li>自定义视图解析器</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.View;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ViewResolver;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.EnableWebMvc;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Locale;</span><br><span class="line"></span><br><span class="line"><span class="comment">//扩展Mvc</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="comment">//一旦标注@EnableWebMvc将全面接管Mvc，从容器中获取所有的webmvcconfig;</span></span><br><span class="line"><span class="comment">/*@EnableWebMvc*/</span></span><br><span class="line"><span class="comment">//如果想自定义，只要写这个组件，然后交给Springboot自动配置</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyMvcConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line">    <span class="comment">// public interface ViewResolver() 实现了视图解析器接口的类，我们就可以把它看作视图解析器</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ViewResolver <span class="title function_">MyViewResolver</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MyViewResolver</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//静态内部类自定义了一个视图解析器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">MyViewResolver</span> <span class="keyword">implements</span> <span class="title class_">ViewResolver</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> View <span class="title function_">resolveViewName</span><span class="params">(String s, Locale locale)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>视图跳转</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.ViewControllerRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="comment">//扩展SpringMVC，官方建议</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MymvcConfig1</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line">    <span class="comment">//视图跳转</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> &#123;</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/xxy&quot;</span>).setViewName(<span class="string">&quot;index&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="5-5-增删改查"><a href="#5-5-增删改查" class="headerlink" title="5.5 增删改查"></a>5.5 增删改查</h3><ol>
<li>controlller Restful风格</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmployeeController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> EmployeeDao employeeDao;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DepartmentDao departmentDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/selectEmployeeByAll&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">selectEmployeeByAll</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">        Collection&lt;Employee&gt; employeeList = employeeDao.selectEmployeeByAll();</span><br><span class="line">        model.addAttribute(<span class="string">&quot;employeeList&quot;</span>, employeeList);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;table1&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/toInsertEmployee&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toInsertEmployee</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">        Collection&lt;Department&gt; departments = departmentDao.departmentCollection();</span><br><span class="line">        model.addAttribute(<span class="string">&quot;departments&quot;</span>, departments);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;insertemployee&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/toInsertEmployee&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toInsertEmployee</span><span class="params">(Employee employee)</span> &#123;</span><br><span class="line">        System.out.println(employee);</span><br><span class="line">        employeeDao.insertEmployee(employee);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:/selectEmployeeByAll&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/update/&#123;employeeId&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">update</span><span class="params">(<span class="meta">@PathVariable(&quot;employeeId&quot;)</span> Integer employeeId, Model model)</span> &#123;</span><br><span class="line">        <span class="type">Employee</span> <span class="variable">employee</span> <span class="operator">=</span> employeeDao.selectEmployeeById(employeeId);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;employee&quot;</span>, employee);</span><br><span class="line">        Collection&lt;Department&gt; departments = departmentDao.departmentCollection();</span><br><span class="line">        model.addAttribute(<span class="string">&quot;departments&quot;</span>, departments);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;updateemployee&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PutMapping(&quot;/update&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">update</span><span class="params">(Employee employee)</span> &#123;</span><br><span class="line">        employeeDao.insertEmployee(employee);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:/selectEmployeeByAll&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/delete/&#123;employeeId&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">delete</span><span class="params">(<span class="meta">@PathVariable(&quot;employeeId&quot;)</span> Integer employeeId)</span> &#123;</span><br><span class="line">        System.out.println(employeeId);</span><br><span class="line">        employeeDao.deleteEmployeeById(employeeId);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:/selectEmployeeByAll&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>错误信息</li>
</ol>
<blockquote>
<p>在templates建立error包，然后404，500文件</p>
</blockquote>
<h3 id="5-6-国际化"><a href="#5-6-国际化" class="headerlink" title="5.6 国际化"></a>5.6 国际化</h3><ol>
<li>在资源文件夹建立i18u文件夹</li>
<li>建立login.properties和login_zh_CN.properties</li>
<li>他们会自动合并为一个文件夹中，新建login_en_US.properties文件</li>
<li>login_en_US.properties写入内容进行翻译</li>
<li>自定义组件</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.tomcat.util.descriptor.LocalResolver;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.LocaleResolver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.util.Locale;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023-02-06-3:36</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LocalI18n</span> <span class="keyword">implements</span> <span class="title class_">LocaleResolver</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Locale <span class="title function_">resolveLocale</span><span class="params">(HttpServletRequest httpServletRequest)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">l</span> <span class="operator">=</span> httpServletRequest.getParameter(<span class="string">&quot;l&quot;</span>);</span><br><span class="line">        System.out.println(l);</span><br><span class="line">        <span class="type">Locale</span> <span class="variable">locale</span> <span class="operator">=</span> Locale.getDefault();</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(l)) &#123;</span><br><span class="line">            String[] split = l.split(<span class="string">&quot;_&quot;</span>);</span><br><span class="line">            locale = <span class="keyword">new</span> <span class="title class_">Locale</span>(split[<span class="number">0</span>], split[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> locale;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setLocale</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Locale locale)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>注册bean到Spring容器</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> LocaleResolver <span class="title function_">localI18n</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">LocalI18n</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="7">
<li>前端渲染显示</li>
</ol>
<h2 id="6-Data"><a href="#6-Data" class="headerlink" title="6. Data"></a>6. Data</h2><h3 id="6-1-SpringData"><a href="#6-1-SpringData" class="headerlink" title="6.1 SpringData"></a>6.1 SpringData</h3><blockquote>
<p>对于数据访问层，无论是 SQL(关系型数据库) 还是 NOSQL(非关系型数据库)，Spring Boot 底层都是采用 Spring Data 的方式进行统一处理</p>
</blockquote>
<ul>
<li><a href="https://spring.io/projects/spring-data">官网</a></li>
<li><a href="https://docs.spring.io/spring-boot/docs/2.7.8/reference/htmlsingle/#web.servlet.spring-mvc.auto-configuration">数据库启动器</a></li>
</ul>
<h3 id="6-2-整合JDBC"><a href="#6-2-整合JDBC" class="headerlink" title="6.2 整合JDBC"></a>6.2 整合JDBC</h3><ol>
<li>导入依赖</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>进行配置</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://127.0.0.1:3306/temp1?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">&#x27;root&#x27;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>使用原始jdbc进行开发</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Springdemo1ApplicationTests</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DataSource dataSource;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">contextLoads</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testJdbc</span><span class="params">()</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">       System.out.println(dataSource.getClass());</span><br><span class="line">       <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">       <span class="comment">//1. 加载驱动</span></span><br><span class="line">       <span class="comment">//2. 获取连接</span></span><br><span class="line">       <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> dataSource.getConnection();</span><br><span class="line">       System.out.println(connection);</span><br><span class="line">       <span class="comment">//3. 创建操作对象Statement，PreparedStatement，CallableStatement</span></span><br><span class="line"><span class="comment">//       PreparedStatement ps = connection.prepareStatement(sql);</span></span><br><span class="line">       <span class="comment">//4. 执行SQl</span></span><br><span class="line"><span class="comment">//       int i = ps.executeUpdate();</span></span><br><span class="line">       <span class="comment">//5. 处理结果集</span></span><br><span class="line"><span class="comment">//       System.out.println(i);</span></span><br><span class="line">       <span class="comment">//6. 释放资源，结果集，操作对象，连接</span></span><br><span class="line"><span class="comment">//       ps.close();</span></span><br><span class="line">       connection.close();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>使用SpringBoot封装的jdbcTemplate</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JdbcController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line">    <span class="comment">//查询数据库所有信息</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/userList&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&lt;String,Object&gt;&gt; <span class="title function_">userList</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from user&quot;</span>;</span><br><span class="line">        List&lt;Map&lt;String,Object&gt;&gt; list_map = jdbcTemplate.queryForList(sql);</span><br><span class="line">        <span class="keyword">return</span> list_map;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="6-3-整合JDBC数据连接池"><a href="#6-3-整合JDBC数据连接池" class="headerlink" title="6.3 整合JDBC数据连接池"></a>6.3 整合JDBC数据连接池</h3><ol>
<li>概述</li>
</ol>
<blockquote>
<p>HikariDataSource 号称 Java WEB 当前速度最快的数据源，相比于传统的 C3P0 、DBCP、Tomcat jdbc 等连接池更加优秀；Druid 是阿里巴巴开源平台上一个数据库连接池实现，结合了 C3P0、DBCP 等 DB 池的优点，同时加入了<strong>日志监控</strong>。可以说 Hikari 与 Driud 都是当前 Java Web 上最优秀的数据源</p>
</blockquote>
<ul>
<li><a href="https://github.com/alibaba/druid/">druid GIthub</a></li>
</ul>
<ol start="2">
<li>导入依赖</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-log4j2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>配置</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://127.0.0.1:3306/temp1?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">&#x27;root&#x27;</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">db-type:</span> <span class="string">com.alibaba.druid-spring-boot-starter</span></span><br><span class="line">      <span class="comment">#Spring Boot 默认是不注入这些属性值的，需要自己绑定</span></span><br><span class="line">      <span class="comment">#druid 数据源专有配置</span></span><br><span class="line">      <span class="comment">#initialSize: 5</span></span><br><span class="line">      <span class="comment">#minIdle: 5</span></span><br><span class="line">      <span class="attr">maxActive:</span> <span class="number">20</span></span><br><span class="line">      <span class="attr">maxWait:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">timeBetweenEvictionRunsMillis:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">minEvictableIdleTimeMillis:</span> <span class="number">300000</span></span><br><span class="line">      <span class="attr">validationQuery:</span> <span class="string">SELECT</span> <span class="number">1</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">      <span class="attr">testWhileIdle:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">testOnBorrow:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">testOnReturn:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">poolPreparedStatements:</span> <span class="literal">true</span></span><br><span class="line">      <span class="comment">#配置监控统计拦截的filters，stat:监控统计、log4j2：日志记录、wall：防御sql注入</span></span><br><span class="line">      <span class="comment">#如果允许时报错  java.lang.ClassNotFoundException: org.apache.log4j.Priority</span></span><br><span class="line">      <span class="comment">#则导入 log4j 依赖即可，Maven 地址：https://mvnrepository.com/artifact/log4j/log4j</span></span><br><span class="line">      <span class="comment">#filters: stat,wall,log4j2</span></span><br><span class="line">        <span class="comment">#配置StatFilter (SQL监控配置)</span></span><br><span class="line">      <span class="attr">filters:</span> <span class="string">stat,wall,log4j2</span></span><br><span class="line">      <span class="attr">filter:</span></span><br><span class="line">        <span class="attr">stat:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment">#开启 SQL 监控</span></span><br><span class="line">          <span class="comment">#slow-sql-millis: 1000 #慢查询</span></span><br><span class="line">          <span class="comment">#log-slow-sql: true #记录慢查询 SQL</span></span><br><span class="line">        <span class="comment">#配置WallFilter (防火墙配置)</span></span><br><span class="line">        <span class="attr">wall:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment">#开启防火墙</span></span><br><span class="line">          <span class="attr">config:</span></span><br><span class="line">            <span class="attr">update-allow:</span> <span class="literal">true</span> <span class="comment">#允许更新操作</span></span><br><span class="line">            <span class="attr">drop-table-allow:</span> <span class="literal">false</span> <span class="comment">#禁止删表操作</span></span><br><span class="line">            <span class="attr">insert-allow:</span> <span class="literal">true</span> <span class="comment">#允许插入操作</span></span><br><span class="line">            <span class="attr">delete-allow:</span> <span class="literal">true</span> <span class="comment">#删除数据操作</span></span><br><span class="line">        <span class="attr">log4j2:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">statement-execute-query-after-log-enabled:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">statement-executable-sql-log-enable:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">statement-close-after-log-enabled:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">result-set-open-after-log-enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">maxPoolPreparedStatementPerConnectionSize:</span> <span class="number">20</span></span><br><span class="line">      <span class="attr">useGlobalDataSourceStat:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">connectionProperties:</span> <span class="string">druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>进行扩展</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DruidConfig</span> &#123;</span><br><span class="line">    <span class="meta">@ConfigurationProperties(prefix = &quot;spring.datasource&quot;)</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> DataSource <span class="title function_">druidDataSource</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">DruidDataSource</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//后台监控</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ServletRegistrationBean <span class="title function_">servletRegistrationBean</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//后台有人登录</span></span><br><span class="line">        ServletRegistrationBean&lt;StatViewServlet&gt; bean = <span class="keyword">new</span> <span class="title class_">ServletRegistrationBean</span>&lt;&gt;(<span class="keyword">new</span> <span class="title class_">StatViewServlet</span>(), <span class="string">&quot;/druid/*&quot;</span>);</span><br><span class="line">        bean.addInitParameter(<span class="string">&quot;loginUsername&quot;</span>,<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        bean.addInitParameter(<span class="string">&quot;loginPassword&quot;</span>,<span class="string">&quot;123&quot;</span>);</span><br><span class="line">        bean.addInitParameter(<span class="string">&quot;allow&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="comment">//        bean.addInitParameter(&quot;xxy&quot;,&quot;192.168.1.101&quot;);</span></span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> FilterRegistrationBean <span class="title function_">webStatFilter</span><span class="params">()</span> &#123;</span><br><span class="line">        FilterRegistrationBean&lt;Filter&gt; bean = <span class="keyword">new</span> <span class="title class_">FilterRegistrationBean</span>&lt;&gt;();</span><br><span class="line">        bean.addInitParameter(<span class="string">&quot;exclusions&quot;</span>,<span class="string">&quot;*.js,*.css,/druid/*&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="6-4-整合Mybatis"><a href="#6-4-整合Mybatis" class="headerlink" title="6.4 整合Mybatis"></a>6.4 整合Mybatis</h3><ol>
<li>概述</li>
</ol>
<table>
<thead>
<tr>
<th>MyBatis-Spring-Boot-Starter</th>
<th>MyBatis-Spring</th>
<th>Spring Boot</th>
<th>Java</th>
</tr>
</thead>
<tbody><tr>
<td><strong>3.0</strong></td>
<td>3.0</td>
<td>3.0</td>
<td>17 或更高</td>
</tr>
<tr>
<td><strong>2.3</strong></td>
<td>2.1</td>
<td>2.5 - 2.7</td>
<td>8 或更高</td>
</tr>
<tr>
<td><strong>2.2</strong></td>
<td>2.0（2.0.6 以上可开启所有特性）</td>
<td>2.5 - 2.7</td>
<td>8 或更高</td>
</tr>
<tr>
<td><strong>2.1</strong></td>
<td>2.0（2.0.6 以上可开启所有特性）</td>
<td>2.1 - 2.4</td>
<td>8 或更高</td>
</tr>
</tbody></table>
<ol start="2">
<li>导入依赖</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>进行配置</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://127.0.0.1:3306/temp1?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">&#x27;root&#x27;</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">db-type:</span> <span class="string">com.alibaba.druid-spring-boot-starter</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.xxy.entity</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> [<span class="string">classpath:mapper/*.xml</span>]</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>进行开发模块</li>
</ol>
<ul>
<li>User</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>UserMapper</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xxy.entity.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023-02-11-3:53</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> List&lt;User&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;User&gt; <span class="title function_">selectUserByAll</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过id查询用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> User</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    User <span class="title function_">selectUserById</span><span class="params">(String id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 插入用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user 用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">insertUser</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id 用户id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">deleteUser</span><span class="params">(String id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user 用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">updateUser</span><span class="params">(User user)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>UserMapper.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.xxy.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    &lt;resultMap id=&quot;userResultMap&quot; type=&quot;com.xxy.entity.User&quot;&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;id property=&quot;id&quot; column=&quot;id&quot;&gt;&lt;/id&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;result property=&quot;name&quot; column=&quot;name&quot;&gt;&lt;/result&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;result property=&quot;email&quot; column=&quot;email&quot;&gt;&lt;/result&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;/resultMap&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectUserByAll&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        select id,name,email from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;String&quot;</span>&gt;</span></span><br><span class="line">        select id,name,email from user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        insert into user(id,name,email) values(#&#123;id&#125;,#&#123;name&#125;,#&#123;email&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;String&quot;</span>&gt;</span></span><br><span class="line">        delete from user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        update user set name=#&#123;name&#125;,email = #&#123;email&#125; where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>UserService</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xxy.entity.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023-02-11-4:11</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> List&lt;User&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;User&gt; <span class="title function_">selectUserByAll</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过id查询用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> User</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    User <span class="title function_">selectUserById</span><span class="params">(String id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 插入用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user 用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">insertUser</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id 用户id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">deleteUser</span><span class="params">(String id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user 用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">updateUser</span><span class="params">(User user)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>UserServiceImpl</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xxy.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.xxy.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023-02-11-4:11</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">selectUserByAll</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.selectUserByAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">selectUserById</span><span class="params">(String id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.selectUserById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">insertUser</span><span class="params">(User user)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.insertUser(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">deleteUser</span><span class="params">(String id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.deleteUser(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updateUser</span><span class="params">(User user)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.updateUser(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>UserController</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xxy.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.xxy.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023-02-11-4:30</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/select&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">selectUserByAll</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;User&gt; userList = userService.selectUserByAll();</span><br><span class="line">        <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">            System.out.println(user.toString());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> userList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/select/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">selectUserById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> String id)</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.selectUserById(id);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/insert/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">insertUser</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> String id,User user)</span> &#123;</span><br><span class="line">        user.setId(id);</span><br><span class="line">        user.setName(<span class="string">&quot;xxy&quot;</span>);</span><br><span class="line">        user.setEmail(<span class="string">&quot;test!@qq.com&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> userService.insertUser(user);</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;insertOk&quot;</span>+ i);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;insertOk&quot;</span> + i;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;insert失败&quot;</span> + i);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;insert失败&quot;</span> + i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;deleteUser/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">deleteUser</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> String id)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> userService.deleteUser(id);</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;d成功&quot;</span> + i;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;d失败&quot;</span> + i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/update/&#123;id&#125;/&#123;name&#125;&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">updateUser</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> String id,<span class="meta">@PathVariable(&quot;name&quot;)</span> String name,User user)</span> &#123;</span><br><span class="line">        user.setId(id);</span><br><span class="line">        user.setName(name);</span><br><span class="line">        user.setEmail(<span class="string">&quot;jj@qq.com&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> userService.updateUser(user);</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;updatesuccess&quot;</span> + i;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;updatefault&quot;</span> + i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="7-SpringSecurity"><a href="#7-SpringSecurity" class="headerlink" title="7. SpringSecurity"></a>7. SpringSecurity</h2><h3 id="7-1-简述"><a href="#7-1-简述" class="headerlink" title="7.1 简述"></a>7.1 简述</h3><blockquote>
<p>一个安全的框架，其实通过过滤器和拦截器也可以实现,主要是用户认证和授权</p>
</blockquote>
<ul>
<li>用户认证</li>
</ul>
<blockquote>
<p>在用户认证方面，Spring Security 框架支持主流的认证方式，包括 HTTP 基本认证、HTTP 表单验证、HTTP 摘要认证、OpenID 和 LDAP 等。</p>
</blockquote>
<ul>
<li>用户授权</li>
</ul>
<blockquote>
<p>在用户授权方面，Spring Security 提供了基于角色的访问控制和访问控制列表（Access Control List，ACL），可以对应用中的领域对象进行细粒度的控制。</p>
</blockquote>
<h3 id="7-2-使用"><a href="#7-2-使用" class="headerlink" title="7.2 使用"></a>7.2 使用</h3><ol>
<li>导依赖</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--SpringSecurity --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>配置和扩展</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//@EnableWebSecurity：开启WebSecurity模式</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="comment">//WebSecurityConfigurerAdapter：自定义Security策略</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SecurityConfig</span> <span class="keyword">extends</span> <span class="title class_">WebSecurityConfigurerAdapter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        http.authorizeRequests()</span><br><span class="line">                .antMatchers(<span class="string">&quot;/&quot;</span>).permitAll()</span><br><span class="line">                .antMatchers(<span class="string">&quot;/level1/**&quot;</span>).hasAnyRole(<span class="string">&quot;vip1&quot;</span>)</span><br><span class="line">                .antMatchers(<span class="string">&quot;/level2/**&quot;</span>).hasAnyRole(<span class="string">&quot;vip2&quot;</span>)</span><br><span class="line">                .antMatchers(<span class="string">&quot;/level3/**&quot;</span>).hasAnyRole(<span class="string">&quot;vip3&quot;</span>);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//记住我</span></span><br><span class="line">   http.rememberMe();</span><br><span class="line">        <span class="comment">// 开启自动配置的登录功能</span></span><br><span class="line"><span class="comment">// /login 请求来到登录页</span></span><br><span class="line"><span class="comment">// /login?error 重定向到这里表示登录失败</span></span><br><span class="line"> http.formLogin().usernameParameter(<span class="string">&quot;name&quot;</span>).passwordParameter(<span class="string">&quot;pwd&quot;</span>).loginPage(<span class="string">&quot;/toLogin1&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//关闭csrf功能:跨站请求伪造,默认只能通过post方式提交logout请求</span></span><br><span class="line">                http.csrf().disable();</span><br><span class="line">   <span class="comment">//开启自动配置的注销的功能</span></span><br><span class="line">      <span class="comment">// /logout 注销请求</span></span><br><span class="line">   <span class="comment">// .logoutSuccessUrl(&quot;/&quot;); 注销成功来到首页</span></span><br><span class="line">http.logout().logoutSuccessUrl(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//定义认证规则</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="comment">//AuthenticationManagerBuilder：自定义认证策略</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">   <span class="comment">//在内存中定义，也可以在jdbc中去拿....</span></span><br><span class="line">   <span class="comment">//Spring security 5.0中新增了多种加密方式，也改变了密码的格式。</span></span><br><span class="line">   <span class="comment">//要想我们的项目还能够正常登陆，需要修改一下configure中的代码。我们要将前端传过来的密码进行某种方式加密</span></span><br><span class="line">   <span class="comment">//spring security 官方推荐的是使用bcrypt加密方式。</span></span><br><span class="line">   </span><br><span class="line">   auth.inMemoryAuthentication().passwordEncoder(<span class="keyword">new</span> <span class="title class_">BCryptPasswordEncoder</span>())</span><br><span class="line">          .withUser(<span class="string">&quot;admin&quot;</span>).password(<span class="keyword">new</span> <span class="title class_">BCryptPasswordEncoder</span>().encode(<span class="string">&quot;123456&quot;</span>)).roles(<span class="string">&quot;vip2&quot;</span>,<span class="string">&quot;vip3&quot;</span>)</span><br><span class="line">          .and()</span><br><span class="line">          .withUser(<span class="string">&quot;root&quot;</span>).password(<span class="keyword">new</span> <span class="title class_">BCryptPasswordEncoder</span>().encode(<span class="string">&quot;123456&quot;</span>)).roles(<span class="string">&quot;vip1&quot;</span>,<span class="string">&quot;vip2&quot;</span>,<span class="string">&quot;vip3&quot;</span>)</span><br><span class="line">          .and()</span><br><span class="line">          .withUser(<span class="string">&quot;guest&quot;</span>).password(<span class="keyword">new</span> <span class="title class_">BCryptPasswordEncoder</span>().encode(<span class="string">&quot;123456&quot;</span>)).roles(<span class="string">&quot;vip1&quot;</span>,<span class="string">&quot;vip2&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>开发</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SecurityController</span> &#123;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/views/index&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">index</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;views/index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/&#123;leavel&#125;/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">leavels</span><span class="params">(<span class="meta">@PathVariable(&quot;leavel&quot;)</span> String leavel,<span class="meta">@PathVariable(&quot;id&quot;)</span> <span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;views&quot;</span> + leavel + id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="8-Shiro"><a href="#8-Shiro" class="headerlink" title="8.Shiro"></a>8.Shiro</h2><h3 id="8-1-简介"><a href="#8-1-简介" class="headerlink" title="8.1 简介"></a>8.1 简介</h3><ol>
<li>定义</li>
</ol>
<blockquote>
<p>Apache Shiro是一个强大且易用的Java安全框架,可以完成身份验证、授权、密码和会话管理</p>
</blockquote>
<ul>
<li><a href="https://shiro.apache.org/">Shiro官网</a></li>
</ul>
<ol start="2">
<li>功能</li>
</ol>
<ul>
<li>Authentication：身份认证&#x2F;登录，验证用户是不是拥有相应的身份；</li>
<li>Authorization：授权，即权限验证，验证某个已认证的用户是否拥有某个权限；即判断用户是否能做事情，常见的如：验证某个用户是否拥有某个角色。或者细粒度的验证某个用户对某个资源是否具有某个权限；</li>
<li>Session Manager：会话管理，即用户登录后就是一次会话，在没有退出之前，它的所有信息都在会话中；会话可以是普通JavaSE环境的，也可以是如Web环境的；</li>
<li>Cryptography：加密，保护数据的安全性，如密码加密存储到数据库，而不是明文存储</li>
<li>Web Support：Web支持，可以非常容易的集成到Web环境；</li>
<li>Caching：缓存，比如用户登录后，其用户信息、拥有的角色&#x2F;权限不必每次去查，这样可以提高效率；</li>
<li>Concurrency：shiro支持多线程应用的并发验证，即如在一个线程中开启另一个线程，能把权限自动传播过去；</li>
<li>Testing：提供测试支持；</li>
<li>Run As：允许一个用户假装为另一个用户（如果他们允许）的身份进行访问；</li>
<li>Remember Me：记住我，这个是非常常见的功能，即一次登录后，下次再来的话不用登录了。</li>
</ul>
<ol start="3">
<li>外部架构</li>
</ol>
<ul>
<li>Subject：主体，代表了当前“用户”，这个用户不一定是一个具体的人，与当前应用交互的任何东西都是Subject，如网络爬虫，机器人等；即一个抽象概念；所有Subject都绑定到SecurityManager，与Subject的所有交互都会委托给SecurityManager；可以把Subject认为是一个门面；SecurityManager才是实际的执行者；</li>
<li>SecurityManager：安全管理器；即所有与安全有关的操作都会与SecurityManager交互；且它管理着所有Subject；可以看出它是Shiro的核心，它负责与后边介绍的其他组件进行交互，如果学习过SpringMVC，你可以把它看成DispatcherServlet前端控制器；</li>
<li>Realm：域，Shiro从从Realm获取安全数据（如用户、角色、权限），就是说SecurityManager要验证用户身份，那么它需要从Realm获取相应的用户进行比较以确定用户身份是否合法；也需要从Realm得到用户相应的角色&#x2F;权限进行验证用户是否能进行操作；可以把Realm看成DataSource，即安全数据源。</li>
</ul>
<h3 id="8-2-认证"><a href="#8-2-认证" class="headerlink" title="8.2 认证"></a>8.2 认证</h3><ol>
<li>导入依赖</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-spring-boot-web-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.11.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>扩展或配置</li>
</ol>
<ul>
<li>UserRealm</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserRealm</span> <span class="keyword">extends</span> <span class="title class_">AuthorizingRealm</span> &#123;</span><br><span class="line">    <span class="comment">//授权</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> AuthorizationInfo <span class="title function_">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principalCollection)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;授权doGetAuthorizationInfo&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//验证</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> AuthenticationInfo <span class="title function_">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken authenticationToken)</span> <span class="keyword">throws</span> AuthenticationException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;执行认证doGetAuthenticationInfo&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">userName</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;password&quot;</span>;</span><br><span class="line">        <span class="type">UsernamePasswordToken</span> <span class="variable">userToken</span> <span class="operator">=</span> (UsernamePasswordToken) authenticationToken;</span><br><span class="line">        <span class="keyword">if</span> (!userToken.getUsername().equals(userName)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SimpleAuthenticationInfo</span>(<span class="string">&quot;&quot;</span>,password,<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>ShiroConfig</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ShiroConfig</span> &#123;</span><br><span class="line">    <span class="comment">//1.创建reaml对象，需要自定义类</span></span><br><span class="line">    <span class="meta">@Bean(name = &quot;userRealm&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> UserRealm <span class="title function_">userRealm</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">UserRealm</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//2.DefaultWebSecurityManager</span></span><br><span class="line">    <span class="meta">@Bean(name = &quot;securityManager&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> DefaultWebSecurityManager  <span class="title function_">getDefaultWebSecurityManager</span><span class="params">(<span class="meta">@Qualifier(&quot;userRealm&quot;)</span> UserRealm userRealm)</span> &#123;</span><br><span class="line">        <span class="type">DefaultWebSecurityManager</span> <span class="variable">securityManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultWebSecurityManager</span>();</span><br><span class="line">        securityManager.setRealm(userRealm);</span><br><span class="line">        <span class="keyword">return</span> securityManager;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//3.ShiroFilterFactoryBean</span></span><br><span class="line">    <span class="meta">@Bean(name = &quot;shiroFilterFactoryBean&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ShiroFilterFactoryBean <span class="title function_">getFilterFactoryBean</span><span class="params">(<span class="meta">@Qualifier(&quot;securityManager&quot;)</span> DefaultWebSecurityManager defaultWebSecurityManager)</span> &#123;</span><br><span class="line">        <span class="type">ShiroFilterFactoryBean</span> <span class="variable">bean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ShiroFilterFactoryBean</span>();</span><br><span class="line">        bean.setSecurityManager(defaultWebSecurityManager);</span><br><span class="line">        <span class="comment">//添加shiro的内置过滤器</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         anon:无需认证就可以访问</span></span><br><span class="line"><span class="comment">         authc:必须认证才可访问</span></span><br><span class="line"><span class="comment">         user：必须拥有   记住我才能用</span></span><br><span class="line"><span class="comment">         perms：拥有对某个资源的权限才能访问</span></span><br><span class="line"><span class="comment">         role:拥有某个角色权限才能访问</span></span><br><span class="line"><span class="comment">         **/</span></span><br><span class="line">        Map&lt;String, String&gt; filterMap  = <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>&lt;&gt;();</span><br><span class="line">        filterMap.put(<span class="string">&quot;/shiro/user/insert&quot;</span>,<span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/shiro/user/update&quot;</span>,<span class="string">&quot;authc&quot;</span>);</span><br><span class="line">        bean.setFilterChainDefinitionMap(filterMap);</span><br><span class="line">        bean.setLoginUrl(<span class="string">&quot;/shiro/login&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>开发</li>
</ol>
<ul>
<li>ShiroController</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ShiroController</span> &#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&#123;&quot;/shiro&quot;,&quot;/shiro/index&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toIndex</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;shiro&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;shiro/index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/shiro/login&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toLogin</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;shiro/login&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/shiro/user/insert&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">add</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;shiro/user/insert&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/shiro/user/update&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">update</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;shiro/user/update&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/shiro/logining&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">login</span><span class="params">(String username,String password,Model model)</span> &#123;</span><br><span class="line">        <span class="type">Subject</span> <span class="variable">subject</span> <span class="operator">=</span> SecurityUtils.getSubject();</span><br><span class="line">        <span class="type">UsernamePasswordToken</span> <span class="variable">token</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UsernamePasswordToken</span>(username, password);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            subject.login(token);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;shiro/user/update&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnknownAccountException e) &#123;</span><br><span class="line">            model.addAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;用户名错误&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;shiro/login&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IncorrectCredentialsException e) &#123;</span><br><span class="line">            model.addAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;密码错误&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;shiro/login&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>前端</li>
</ol>
<ul>
<li>templeats文件夹新建shiro文件夹，在shiro文件夹新建user文件夹</li>
<li>shiro文件夹主页index.html</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">首页</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;msg&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/shiro/user/insert&#125;&quot;</span>&gt;</span>增加<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/shiro/user/update&#125;&quot;</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>shiro文件夹login.html</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;author&quot;</span> <span class="attr">content</span>=<span class="string">&quot;Mark Otto, Jacob Thornton, and Bootstrap contributors&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;generator&quot;</span> <span class="attr">content</span>=<span class="string">&quot;Hugo 0.80.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Signin Template · Bootstrap v4.6<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;canonical&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://getbootstrap.com/docs/4.6/examples/sign-in/&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Custom styles for this template --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;../static/css/signin.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span></span><br><span class="line">shiro 登录</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form-signin&quot;</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/shiro/logining&#125;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;msg&#125;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;h3 mb-3 font-weight-normal&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;#&#123;login.tip&#125;&quot;</span>&gt;</span>Please sign in<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;inputEmail&quot;</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Email address<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span> =<span class="string">&quot;username&quot;</span> <span class="attr">id</span>=<span class="string">&quot;inputEmail&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Email address&quot;</span> <span class="attr">required</span> <span class="attr">autofocus</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;inputPassword&quot;</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Password<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;inputPassword&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Password&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;checkbox mb-3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;remember-me&quot;</span>&gt;</span> Remember me</span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-lg btn-primary btn-block&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>Sign in<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;mt-5 mb-3 text-muted&quot;</span>&gt;</span><span class="symbol">&amp;copy;</span> 2017-2021<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/xxy?l=&#x27;zh_CN&#x27;&#125;&quot;</span>&gt;</span>中文<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/xxy?l=&#x27;en_US&#x27;&#125;&quot;</span>&gt;</span>English<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>user文件夹更新和增加insert.html、update.html</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span></span><br><span class="line">更新/增加</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="8-3-整合Mybatis"><a href="#8-3-整合Mybatis" class="headerlink" title="8.3 整合Mybatis"></a>8.3 整合Mybatis</h3><ul>
<li>修改UserRealm</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserRealm</span> <span class="keyword">extends</span> <span class="title class_">AuthorizingRealm</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//授权</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> AuthorizationInfo <span class="title function_">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principalCollection)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;授权doGetAuthorizationInfo&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//验证</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> AuthenticationInfo <span class="title function_">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken authenticationToken)</span> <span class="keyword">throws</span> AuthenticationException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;执行认证doGetAuthenticationInfo&quot;</span>);</span><br><span class="line"><span class="comment">//        String userName = &quot;root&quot;;</span></span><br><span class="line"><span class="comment">//        String password = &quot;password&quot;;</span></span><br><span class="line">        <span class="type">UsernamePasswordToken</span> <span class="variable">userToken</span> <span class="operator">=</span> (UsernamePasswordToken) authenticationToken;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.selectUserById(userToken.getUsername());</span><br><span class="line">        <span class="keyword">if</span> (user == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        if (!userToken.getUsername().equals(userName)) &#123;</span></span><br><span class="line"><span class="comment">//            return null;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SimpleAuthenticationInfo</span>(<span class="string">&quot;&quot;</span>, user.getName(), <span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="8-4-授权"><a href="#8-4-授权" class="headerlink" title="8.4 授权"></a>8.4 授权</h3><ol>
<li>前端</li>
</ol>
<ul>
<li>update.html</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span></span><br><span class="line">更新|<span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/shiro/user/insert&#125;&quot;</span>&gt;</span>增加<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>ShiroConfig</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ShiroConfig</span> &#123;</span><br><span class="line">    <span class="comment">//1.创建reaml对象，需要自定义类</span></span><br><span class="line">    <span class="meta">@Bean(name = &quot;userRealm&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> UserRealm <span class="title function_">userRealm</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">UserRealm</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//2.DefaultWebSecurityManager</span></span><br><span class="line">    <span class="meta">@Bean(name = &quot;securityManager&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> DefaultWebSecurityManager  <span class="title function_">getDefaultWebSecurityManager</span><span class="params">(<span class="meta">@Qualifier(&quot;userRealm&quot;)</span> UserRealm userRealm)</span> &#123;</span><br><span class="line">        <span class="type">DefaultWebSecurityManager</span> <span class="variable">securityManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultWebSecurityManager</span>();</span><br><span class="line">        securityManager.setRealm(userRealm);</span><br><span class="line">        <span class="keyword">return</span> securityManager;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//3.ShiroFilterFactoryBean</span></span><br><span class="line">    <span class="meta">@Bean(name = &quot;shiroFilterFactoryBean&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ShiroFilterFactoryBean <span class="title function_">getFilterFactoryBean</span><span class="params">(<span class="meta">@Qualifier(&quot;securityManager&quot;)</span> DefaultWebSecurityManager defaultWebSecurityManager)</span> &#123;</span><br><span class="line">        <span class="type">ShiroFilterFactoryBean</span> <span class="variable">bean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ShiroFilterFactoryBean</span>();</span><br><span class="line">        bean.setSecurityManager(defaultWebSecurityManager);</span><br><span class="line">        <span class="comment">//添加shiro的内置过滤器</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         anon:无需认证就可以访问</span></span><br><span class="line"><span class="comment">         authc:必须认证才可访问</span></span><br><span class="line"><span class="comment">         user：必须拥有   记住我才能用</span></span><br><span class="line"><span class="comment">         perms：拥有对某个资源的权限才能访问</span></span><br><span class="line"><span class="comment">         role:拥有某个角色权限才能访问</span></span><br><span class="line"><span class="comment">         **/</span></span><br><span class="line">        Map&lt;String, String&gt; filterMap  = <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>&lt;&gt;();</span><br><span class="line"><span class="comment">//        filterMap.put(&quot;/shiro/user/insert&quot;,&quot;anon&quot;);</span></span><br><span class="line">        filterMap.put(<span class="string">&quot;/shiro/user/insert&quot;</span>,<span class="string">&quot;perms[user:add]&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/shiro/user/update&quot;</span>,<span class="string">&quot;authc&quot;</span>);</span><br><span class="line">        bean.setFilterChainDefinitionMap(filterMap);</span><br><span class="line">        bean.setLoginUrl(<span class="string">&quot;/shiro/login&quot;</span>);</span><br><span class="line">        bean.setUnauthorizedUrl(<span class="string">&quot;/unAuthorized&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>controller</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/unAuthorized&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">unAuthorized</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;没有权限&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="9-Swagger"><a href="#9-Swagger" class="headerlink" title="9. Swagger"></a>9. Swagger</h2><ul>
<li><a href="https://swagger.io/">Swagger官网</a></li>
<li><a href="https://[github](https://so.csdn.net/so/search?q=github&spm=1001.2101.3001.7020).com/swagger-api/swagger-core/wiki/Annotations">Swagger文档</a></li>
</ul>
<h3 id="9-1-简述"><a href="#9-1-简述" class="headerlink" title="9.1 简述"></a>9.1 简述</h3><ol>
<li>定义</li>
</ol>
<blockquote>
<p>Swagger 是一个规范且完整的框架，用于生成、描述、调用和可视化 RESTful 风格的 Web 服务。</p>
</blockquote>
<ol start="2">
<li>优点</li>
</ol>
<ul>
<li>支持多种语言</li>
<li>直接运行，在线测试API接口（其实就是controller requsetmapping）</li>
</ul>
<ol start="3">
<li>注解</li>
</ol>
<table>
<thead>
<tr>
<th>序号</th>
<th>注解名称</th>
<th>功能</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>@Api()</td>
<td>用于类，标识这个类是swagger的资源</td>
<td></td>
</tr>
<tr>
<td>2</td>
<td>@ApiOperation()</td>
<td>用于方法，描述 Controller类中的 method接口</td>
<td></td>
</tr>
<tr>
<td>3</td>
<td>@ApiParam()</td>
<td>用于参数，单个参数描述，与 @ApiImplicitParam不同的是，他是写在参数左侧的</td>
<td></td>
</tr>
<tr>
<td>4</td>
<td>@ApiModel()</td>
<td>用于类，表示对类进行说明，用于参数用实体类接收</td>
<td></td>
</tr>
<tr>
<td>5</td>
<td>@ApiModelProperty()</td>
<td>用于方法，字段，表示对model属性的说明或者数据操作更改</td>
<td></td>
</tr>
<tr>
<td>6</td>
<td>@ApiIgnore()</td>
<td>用于类，忽略该 Controller，指不对当前类做扫描</td>
<td></td>
</tr>
<tr>
<td>7</td>
<td>@ApiImplicitParam()</td>
<td>用于方法，表示单独的请求参数</td>
<td></td>
</tr>
<tr>
<td>8</td>
<td>@ApiImplicitParams()</td>
<td>用于方法，包含多个 @ApiImplicitParam</td>
<td></td>
</tr>
<tr>
<td>9</td>
<td>@ApiResponse</td>
<td>用于方法，描述单个出参信息</td>
<td></td>
</tr>
<tr>
<td>10</td>
<td>@ApiResponses</td>
<td>用于方法，包含多个@ApiResponse</td>
<td></td>
</tr>
<tr>
<td>11</td>
<td>@ApiError</td>
<td>用于方法，接口错误所返回的信息</td>
<td></td>
</tr>
</tbody></table>
<h3 id="9-2-SpringBoot使用"><a href="#9-2-SpringBoot使用" class="headerlink" title="9.2 SpringBoot使用"></a>9.2 SpringBoot使用</h3><ol>
<li>导入依赖</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>或</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger2 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>配置或者扩展</li>
</ol>
<ul>
<li><a href="http://springfox.github.io/springfox/docs/current/#quick-start-guides">全面配置</a></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.env.Environment;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.env.Profiles;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.PathSelectors;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.RequestHandlerSelectors;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.ApiInfo;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.Contact;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spi.DocumentationType;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spring.web.plugins.Docket;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.swagger2.annotations.EnableSwagger2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> springfox.documentation.service.ApiInfo.DEFAULT_CONTACT;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023-03-02-22:51</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableSwagger2</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Swagger2Config</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Docket <span class="title function_">createRestApi</span><span class="params">(Environment environment)</span> &#123;</span><br><span class="line">        <span class="type">Profiles</span> <span class="variable">profiles</span> <span class="operator">=</span> Profiles.of(<span class="string">&quot;dev&quot;</span>,<span class="string">&quot;test&quot;</span>);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> environment.acceptsProfiles(profiles);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Docket</span>(DocumentationType.SWAGGER_2)</span><br><span class="line">                .groupName(<span class="string">&quot;标准接口&quot;</span>)</span><br><span class="line">                .apiInfo(apiInfo())</span><br><span class="line">                .enable(flag)</span><br><span class="line">                .select()</span><br><span class="line"><span class="comment">//        any() // 扫描所有，项目中的所有接口都会被扫描到</span></span><br><span class="line"><span class="comment">//        none() // 不扫描接口</span></span><br><span class="line"><span class="comment">//// 通过方法上的注解扫描，如withMethodAnnotation(GetMapping.class)只扫描get请求</span></span><br><span class="line"><span class="comment">//        withMethodAnnotation(final Class&lt;? extends Annotation&gt; annotation)</span></span><br><span class="line"><span class="comment">//// 通过类上的注解扫描，如.withClassAnnotation(Controller.class)只扫描有controller注解的类中的接口</span></span><br><span class="line"><span class="comment">//        withClassAnnotation(final Class&lt;? extends Annotation&gt; annotation)</span></span><br><span class="line"><span class="comment">//        basePackage(final String basePackage) // 根据包路径扫描接口</span></span><br><span class="line"><span class="comment">//        paths(PathSelectors.ant(&quot;/guo/**&quot;))  //过滤什么路径：过滤/guo下的所有路径</span></span><br><span class="line">                .apis(RequestHandlerSelectors.basePackage(<span class="string">&quot;com.xxy.controller&quot;</span>))</span><br><span class="line"><span class="comment">//        any() // 任何请求都扫描</span></span><br><span class="line"><span class="comment">//        none() // 任何请求都不扫描</span></span><br><span class="line"><span class="comment">//        regex(final String pathRegex) // 通过正则表达式控制</span></span><br><span class="line"><span class="comment">//        ant(final String antPattern) // 通过ant()控制</span></span><br><span class="line">                .paths(PathSelectors.ant(<span class="string">&quot;/xxy/**&quot;</span>))</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Docket <span class="title function_">docket1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Docket</span>(DocumentationType.SWAGGER_2).groupName(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> ApiInfo <span class="title function_">apiInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Contact</span> <span class="variable">contact</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Contact</span>(<span class="string">&quot;xxy1&quot;</span>, <span class="string">&quot;https://www.kuangstudy.com&quot;</span>, <span class="string">&quot;1@qq.com&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ApiInfo</span>(</span><br><span class="line">                <span class="string">&quot;xxyApi Documentation&quot;</span>,</span><br><span class="line">                <span class="string">&quot;xxyApi Documentation&quot;</span>,</span><br><span class="line">                <span class="string">&quot;v1.0&quot;</span>,</span><br><span class="line">                <span class="string">&quot;urn:tos&quot;</span>,</span><br><span class="line">                contact,</span><br><span class="line">                <span class="string">&quot;Apache 2.0&quot;</span>,</span><br><span class="line">                <span class="string">&quot;http://www.apache.org/licenses/LICENSE-2.0&quot;</span>,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ArrayList</span>());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>3.0.0版本需要增加两个注解，不需要@EnableSwagger2</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableOpenApi</span> <span class="comment">// 可选</span></span><br><span class="line"><span class="meta">@EnableWebMvc</span> <span class="comment">// spring-boot-starter-web冲突会引发启动服务时null，必选</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>开发</li>
</ol>
<ul>
<li>User.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@ApiModel(value=&quot;user对象&quot;,description=&quot;用户对象user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="meta">@ApiModelProperty(value=&quot;用户id&quot;,name=&quot;id&quot;,example=&quot;100&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="meta">@ApiModelProperty(value=&quot;用户名&quot;,name=&quot;name&quot;,example=&quot;xingguo&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@ApiModelProperty(value=&quot;用户邮箱&quot;,name=&quot;email&quot;,example=&quot;xingguo@163.com&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>UserController</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Api(value = &quot;用户controller&quot;, tags = &#123;&quot;用户操作接口&quot;&#125;)</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;获取用户信息&quot;, tags = &#123;&quot;获取用户信息copy&quot;&#125;, notes = &quot;注意问题点&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/select&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">selectUserByAll</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;User&gt; userList = userService.selectUserByAll();</span><br><span class="line">        <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">            System.out.println(user.toString());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> userList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/select/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">selectUserById</span><span class="params">(<span class="meta">@ApiParam(name=&quot;id&quot;,value=&quot;用户id&quot;,required=true)</span> <span class="meta">@PathVariable(&quot;id&quot;)</span> String id)</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.selectUserById(id);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong></p>
<blockquote>
<p>正式环境或者开发测试结束后应该关闭Swagger，.enable(flag)</p>
</blockquote>
<h2 id="10-任务"><a href="#10-任务" class="headerlink" title="10. 任务"></a>10. 任务</h2><h3 id="10-1-异步任务"><a href="#10-1-异步任务" class="headerlink" title="10.1 异步任务"></a>10.1 异步任务</h3><ol>
<li>定义</li>
</ol>
<blockquote>
<p>某些功能实现时可能要花费一定的时间，但是为了不影响客户端的体验，选择异步执行</p>
</blockquote>
<ol start="2">
<li>开发</li>
</ol>
<blockquote>
<p>先启用@EnableAsync，在想要异步的方法加 @Async注解</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableAsync</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SwaggerDemoApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(SwaggerDemoApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Async</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">hello</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;数据正在传输...&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="10-2-邮件任务"><a href="#10-2-邮件任务" class="headerlink" title="10.2 邮件任务"></a>10.2 邮件任务</h3><ol>
<li>导包</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>配置</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">spring.mail.username=你的邮箱</span></span><br><span class="line"><span class="string">spring.mail.password=你的邮箱授权码</span></span><br><span class="line"><span class="string">spring.mail.host=smtp.163.com</span></span><br><span class="line"><span class="comment"># qq需要配置ssl，其他邮箱不需要</span></span><br><span class="line"><span class="string">spring.mail.properties.mail.smtp.ssl.enable=true</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>开发</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SwaggerDemoApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    JavaMailSenderImpl mailSender;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">contextLoads</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//邮件设置1：一个简单的邮件</span></span><br><span class="line">        <span class="type">SimpleMailMessage</span> <span class="variable">message</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleMailMessage</span>();</span><br><span class="line">        message.setSubject(<span class="string">&quot;这是一个测试邮件发送标题&quot;</span>);</span><br><span class="line">        message.setText(<span class="string">&quot;这是一个测试邮件发送内容&quot;</span>);</span><br><span class="line">        message.setTo(<span class="string">&quot;xxy@163.com&quot;</span>);</span><br><span class="line">        message.setFrom(<span class="string">&quot;xxy@163.com&quot;</span>);</span><br><span class="line">        mailSender.send(message);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">contextLoads2</span><span class="params">()</span> <span class="keyword">throws</span> MessagingException &#123;</span><br><span class="line">       <span class="comment">//邮件设置2：一个复杂的邮件</span></span><br><span class="line">       <span class="type">MimeMessage</span> <span class="variable">mimeMessage</span> <span class="operator">=</span> mailSender.createMimeMessage();</span><br><span class="line">       <span class="type">MimeMessageHelper</span> <span class="variable">helper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MimeMessageHelper</span>(mimeMessage, <span class="literal">true</span>);</span><br><span class="line">       helper.setSubject(<span class="string">&quot;通知-明天听课&quot;</span>);</span><br><span class="line">       helper.setText(<span class="string">&quot;&lt;b style=&#x27;color:red&#x27;&gt;今天 7:30来开会&lt;/b&gt;&quot;</span>,<span class="literal">true</span>);</span><br><span class="line">       <span class="comment">//发送附件</span></span><br><span class="line">       helper.addAttachment(<span class="string">&quot;1.jpg&quot;</span>,<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;绝对路径地址&quot;</span>));</span><br><span class="line">       helper.addAttachment(<span class="string">&quot;2.jpg&quot;</span>,<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;&quot;</span>));</span><br><span class="line">       helper.setTo(<span class="string">&quot;xxy@163.com&quot;</span>);</span><br><span class="line">       helper.setFrom(<span class="string">&quot;xxy@163.com&quot;</span>);</span><br><span class="line">       mailSender.send(mimeMessage);</span><br><span class="line">	&#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="10-3-定时任务"><a href="#10-3-定时任务" class="headerlink" title="10.3 定时任务"></a>10.3 定时任务</h3><ol>
<li>简述接口和注解</li>
</ol>
<blockquote>
<p>TaskExecutor接口和TaskScheduler接口 注解：@EnableScheduling和@Scheduled</p>
</blockquote>
<ol start="2">
<li>cron</li>
</ol>
<ul>
<li><a href="https://www.bejson.com/othertools/cron/">cron生成器</a></li>
<li>常规用法</li>
</ul>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">    //秒   分   时     日   月   周几</span><br><span class="line">（1）0/2 * * * * ?   表示每2秒 执行任务</span><br><span class="line">（1）0 0/2 * * * ?   表示每2分钟 执行任务</span><br><span class="line">（1）0 0 2 1 * ?   表示在每月的1日的凌晨2点调整任务</span><br><span class="line">（2）0 15 10 ? * MON-FRI   表示周一到周五每天上午10:15执行作业</span><br><span class="line">（3）0 15 10 ? 6L 2002-2006   表示2002-2006年的每个月的最后一个星期五上午10:15执行作</span><br><span class="line">（4）0 0 10,14,16 * * ?   每天上午10点，下午2点，4点</span><br><span class="line">（5）0 0/30 9-17 * * ?   朝九晚五工作时间内每半小时</span><br><span class="line">（6）0 0 12 ? * WED   表示每个星期三中午12点</span><br><span class="line">（7）0 0 12 * * ?   每天中午12点触发</span><br><span class="line">（8）0 15 10 ? * *   每天上午10:15触发</span><br><span class="line">（9）0 15 10 * * ?     每天上午10:15触发</span><br><span class="line">（10）0 15 10 * * ?   每天上午10:15触发</span><br><span class="line">（11）0 15 10 * * ? 2005   2005年的每天上午10:15触发</span><br><span class="line">（12）0 * 14 * * ?     在每天下午2点到下午2:59期间的每1分钟触发</span><br><span class="line">（13）0 0/5 14 * * ?   在每天下午2点到下午2:55期间的每5分钟触发</span><br><span class="line">（14）0 0/5 14,18 * * ?     在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发</span><br><span class="line">（15）0 0-5 14 * * ?   在每天下午2点到下午2:05期间的每1分钟触发</span><br><span class="line">（16）0 10,44 14 ? 3 WED   每年三月的星期三的下午2:10和2:44触发</span><br><span class="line">（17）0 15 10 ? * MON-FRI   周一至周五的上午10:15触发</span><br><span class="line">（18）0 15 10 15 * ?   每月15日上午10:15触发</span><br><span class="line">（19）0 15 10 L * ?   每月最后一日的上午10:15触发</span><br><span class="line">（20）0 15 10 ? * 6L   每月的最后一个星期五上午10:15触发</span><br><span class="line">（21）0 15 10 ? * 6L 2002-2005   2002年至2005年的每月的最后一个星期五上午10:15触发</span><br><span class="line">（22）0 15 10 ? * 6#3   每月的第三个星期五上午10:15触发</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>特殊字符</li>
</ol>
<table>
<thead>
<tr>
<th>序号</th>
<th>符号</th>
<th>意思</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>*</td>
<td>每个</td>
<td></td>
</tr>
<tr>
<td>2</td>
<td>？</td>
<td>不确定值</td>
<td></td>
</tr>
<tr>
<td>3</td>
<td>-</td>
<td>指定范围</td>
<td></td>
</tr>
<tr>
<td>4</td>
<td>L</td>
<td>只用在DayofMonth和DayofWeek中，这个字符是“Last”的简写，重要的是不要指定列表或者值范围，否则会导致混乱。</td>
<td></td>
</tr>
<tr>
<td>5</td>
<td>W</td>
<td>指定给定日（星期一到星期五）最近的一天</td>
<td></td>
</tr>
<tr>
<td>6</td>
<td>#</td>
<td>表示本月中的第几个周几</td>
<td></td>
</tr>
<tr>
<td>7</td>
<td>，</td>
<td>表达一个列表值</td>
<td></td>
</tr>
<tr>
<td>8</td>
<td>&#x2F;</td>
<td>如 x&#x2F;y，x 是开始值，y 是步长</td>
<td></td>
</tr>
<tr>
<td>9</td>
<td>C</td>
<td>和Calendar计算过的值</td>
<td></td>
</tr>
</tbody></table>
<ol start="4">
<li>开发</li>
</ol>
<ul>
<li>在主程序加上<code>@EnableScheduling</code>注解</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ScheduledService</span> &#123;</span><br><span class="line">    <span class="comment">//秒   分   时     日   月   周几</span></span><br><span class="line">    <span class="meta">@Scheduled(cron = &quot;0 * * * * 0-7&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">hello</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;hello.....&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="11-SpringBoot和Redis"><a href="#11-SpringBoot和Redis" class="headerlink" title="11 SpringBoot和Redis"></a>11 SpringBoot和Redis</h2><h3 id="11-1-概述"><a href="#11-1-概述" class="headerlink" title="11.1 概述"></a>11.1 概述</h3><ul>
<li>SpringBoot操作数据： Spring-data jpa jdbc mongdb redis</li>
<li>springboot 2.x后 ，原来使用的 Jedis 被 lettuce 替换。</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//LettuceConnectionFactory</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LettuceConnectionFactory</span> <span class="keyword">implements</span> <span class="title class_">InitializingBean</span>, DisposableBean, RedisConnectionFactory, ReactiveRedisConnectionFactory &#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//JedisConnectionFactory</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JedisConnectionFactory</span> <span class="keyword">implements</span> <span class="title class_">InitializingBean</span>, DisposableBean, RedisConnectionFactory &#123;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>   jedis：采用的直连，多个线程操作的话，是不安全的。如果要避免不安全，使用jedis pool连接池！更像BIO模式</p>
<p>   lettuce：采用netty，实例可以在多个线程中共享，不存在线程不安全的情况！可以减少线程数据了，更像NIO模式</p>
</blockquote>
<h3 id="11-2-Redis在SpringBoot中的自动配置"><a href="#11-2-Redis在SpringBoot中的自动配置" class="headerlink" title="11.2 Redis在SpringBoot中的自动配置"></a>11.2 Redis在SpringBoot中的自动配置</h3><ul>
<li>找到org.springframework.boot.autoconfigure包下的spring-boot-autoconfigure-2.5.0.jar!\META-INF\spring.factories，搜索redis</li>
<li>存在一个xxxAutoConfiguration和RedisProperties</li>
<li>若要修改配置查看RedisProperties</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@ConfigurationProperties(</span><br><span class="line">    prefix = <span class="string">&quot;spring.redis&quot;</span></span><br><span class="line">)</span><br><span class="line">spring.redis.port=3967</span><br></pre></td></tr></table></figure>

<h3 id="11-3-测试"><a href="#11-3-测试" class="headerlink" title="11.3 测试"></a>11.3 测试</h3><ul>
<li>导入依赖</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;!--操作redis--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">	&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">	&lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>配置</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">spring.redis.host=127.0.0.1</span><br><span class="line">spring.redis.password=root</span><br></pre></td></tr></table></figure>

<ul>
<li>自定义序列化模板</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedisConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RedisTemplate&lt;String, Object&gt; <span class="title function_">redisTemplate</span><span class="params">(RedisConnectionFactory redisConnectionFactory)</span> <span class="keyword">throws</span> UnknownHostException &#123;</span><br><span class="line">        RedisTemplate&lt;String, Object&gt; template = <span class="keyword">new</span> <span class="title class_">RedisTemplate</span>();</span><br><span class="line">        template.setConnectionFactory(redisConnectionFactory);</span><br><span class="line"></span><br><span class="line">        Jackson2JsonRedisSerializer&lt;Object&gt; objectJackson2JsonRedisSerializer = <span class="keyword">new</span> <span class="title class_">Jackson2JsonRedisSerializer</span>&lt;Object&gt;(Object.class);</span><br><span class="line">        <span class="type">ObjectMapper</span> <span class="variable">objectMapper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectMapper</span>();</span><br><span class="line">        objectMapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class="line">        objectMapper.activateDefaultTyping(LaissezFaireSubTypeValidator.instance);</span><br><span class="line"></span><br><span class="line">        objectJackson2JsonRedisSerializer.setObjectMapper(objectMapper);</span><br><span class="line">        <span class="type">StringRedisSerializer</span> <span class="variable">stringRedisSerializer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringRedisSerializer</span>();</span><br><span class="line">        template.setKeySerializer(stringRedisSerializer);</span><br><span class="line">        template.setValueSerializer(stringRedisSerializer);</span><br><span class="line">        template.setHashKeySerializer(stringRedisSerializer);</span><br><span class="line">        template.setHashValueSerializer(stringRedisSerializer);</span><br><span class="line">        template.afterPropertiesSet();</span><br><span class="line">        <span class="keyword">return</span> template;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>编写代码</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">testJedis</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Jedis</span> <span class="variable">jedis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Jedis</span>(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">6379</span>);</span><br><span class="line">        jedis.auth(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">        jsonObject.put(<span class="string">&quot;hello&quot;</span>, <span class="string">&quot;xxy&quot;</span>);</span><br><span class="line">        jsonObject.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;k&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> jsonObject.toJSONString();</span><br><span class="line">        <span class="type">Transaction</span> <span class="variable">multi</span> <span class="operator">=</span> jedis.multi();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            multi.set(<span class="string">&quot;u1&quot;</span>, s);</span><br><span class="line">            multi.set(<span class="string">&quot;u2&quot;</span>, s);</span><br><span class="line">            multi.exec();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            multi.discard();</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            System.out.println(jedis.get(<span class="string">&quot;u1&quot;</span>));</span><br><span class="line">            System.out.println(jedis.get(<span class="string">&quot;u2&quot;</span>));</span><br><span class="line">            jedis.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;    </span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">testSpringBootRedis</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//        RedisConnection connection = redisTemplate.getConnectionFactory().getConnection();</span></span><br><span class="line">        dog.setDogName(<span class="string">&quot;皇子&quot;</span>);</span><br><span class="line">        dog.setAge(<span class="number">3</span>);</span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> jsonObject.toJSONString(dog);</span><br><span class="line">            redisTemplate.opsForValue().set(<span class="string">&quot;js2&quot;</span>,s);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; </span><br><span class="line">        System.out.println(redisTemplate.opsForValue().get(<span class="string">&quot;js2&quot;</span>));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="12-分布式Dubbo和Zookeeper集成"><a href="#12-分布式Dubbo和Zookeeper集成" class="headerlink" title="12. 分布式Dubbo和Zookeeper集成"></a>12. 分布式Dubbo和Zookeeper集成</h2><h3 id="12-1-分布式简述"><a href="#12-1-分布式简述" class="headerlink" title="12.1 分布式简述"></a>12.1 分布式简述</h3><ol>
<li>定义</li>
</ol>
<blockquote>
<p>分布式系统是若干独立计算机的集合，这些计算机对于用户来说就像单个相关系统, 分布式系统（distributed system）是建立在网络之上的软件系统。其目的是利用更多的机器，处理更多的数据。</p>
</blockquote>
<ol start="2">
<li>为什么使用</li>
</ol>
<blockquote>
<p>首先需要明确的是，只有当单个节点的处理能力无法满足日益增长的计算、存储任务的时候，且硬件的提升（加内存、加磁盘、使用更好的CPU）高昂到得不偿失的时候，应用程序也不能进一步优化的时候，我们才需要考虑分布式系统。</p>
</blockquote>
<h3 id="12-2-Dubbo"><a href="#12-2-Dubbo" class="headerlink" title="12.2 Dubbo"></a>12.2 Dubbo</h3><ul>
<li><a href="https://cn.dubbo.apache.org/">dubbo官网</a></li>
</ul>
<ol>
<li>背景</li>
</ol>
<ul>
<li>单一应用架构</li>
</ul>
<blockquote>
<p>性能扩展比较难、协同开发问题、不利于升级维护</p>
</blockquote>
<ul>
<li>垂直应用架构（MVC）</li>
</ul>
<blockquote>
<p>公用模块无法重复利用，开发性的浪费</p>
</blockquote>
<ul>
<li>分布式服务架构</li>
</ul>
<blockquote>
<p>提高业务复用及整合的**分布式服务框架(RPC)**是关键。</p>
</blockquote>
<ul>
<li>流动计算架构</li>
</ul>
<blockquote>
<p>提高机器利用率的资源调度和治理中心(SOA)[ Service Oriented Architecture]是关键。</p>
</blockquote>
<ol start="2">
<li>定义</li>
</ol>
<blockquote>
<p>Dubbo是一个分布式服务框架，致力于提供高性能和透明化的RPC远程服务调用方案，以及SOA服务治理方案</p>
</blockquote>
<ol start="3">
<li>核心</li>
</ol>
<ul>
<li>远程通讯: 提供对多种基于长连接的NIO框架抽象封装，包括多种线程模型，序列化，以及“请求-响应”模式的信息交换方式。</li>
<li>集群容错: 提供基于接口方法的透明远程过程调用，包括多协议支持，以及软负载均衡，失败容错，地址路由，动态配置等集群支持。</li>
<li>自动发现: 基于注册中心目录服务，使服务消费方能动态的查找服务提供方，使地址透明，使服务提供方可以平滑增加或减少机器。</li>
</ul>
<ol start="4">
<li>调用关系</li>
</ol>
<ul>
<li><p>服务提供者（Provider）：暴露服务的服务提供方，服务提供者在启动时，向注册中心注册自己提供的服务。</p>
</li>
<li><p>服务消费者（Consumer 发布订阅设计模式）：调用远程服务的服务消费方，服务消费者在启动时，向注册中心订阅自己所需的服务，服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。</p>
</li>
<li><p>注册中心（Registry）：注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者</p>
</li>
<li><p>监控中心（Monitor）：服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心</p>
</li>
</ul>
<ol start="5">
<li>RPC</li>
</ol>
<blockquote>
<p>RPC【Remote Procedure Call】是指远程过程调用，是一种进程间通信方式，他是一种技术的思想，而不是规范。</p>
</blockquote>
<ol start="6">
<li>RPC核心</li>
</ol>
<ul>
<li>通讯：协议</li>
<li>序列化</li>
<li><a href="https://www.jianshu.com/p/2accc2840a1b">推荐文章</a></li>
</ul>
<h3 id="12-3-Zookeeper"><a href="#12-3-Zookeeper" class="headerlink" title="12.3 Zookeeper"></a>12.3 Zookeeper</h3><ul>
<li><a href="https://zookeeper.apache.org/">zookeeper下载</a></li>
</ul>
<ol>
<li>定义</li>
</ol>
<blockquote>
<p>是一个分布式服务框架，是Apache Hadoop 的一个子项目，它主要是用来解决分布式应用中经常遇到的一些数据管理问题，如：统一命名服务、状态同步服务、集群管理、分布式应用配置项的管理等。文件系统+监听通知机制。</p>
</blockquote>
<h3 id="12-4-开发"><a href="#12-4-开发" class="headerlink" title="12.4 开发"></a>12.4 开发</h3><blockquote>
<p>需要打开Zookeeper,如果需要监控dubbo-admin-0.0.1-SNAPSHOT.jar</p>
</blockquote>
<ol>
<li>导包</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入zookeeper --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-framework<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.12.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-recipes<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.12.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.zookeeper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zookeeper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.14<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--排除这个slf4j-log4j12--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>配置或扩展</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#当前应用名字</span></span><br><span class="line"><span class="string">dubbo.application.name=provider-server</span></span><br><span class="line"><span class="comment">#注册中心地址</span></span><br><span class="line"><span class="string">dubbo.registry.address=zookeeper://127.0.0.1:2181</span></span><br><span class="line"><span class="comment">#扫描指定包下服务</span></span><br><span class="line"><span class="string">dubbo.scan.base-packages=com.guo.provider.service</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>开发</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.annotation.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span> <span class="comment">//将服务发布出去,不是spring的注解,可以使用新注解@DubboService</span></span><br><span class="line"><span class="meta">@Component</span> <span class="comment">//放在容器中</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TicketServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">TicketService</span> &#123;</span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">getTicket</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;111&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>另外服务消费者导包</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--dubbo--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Dubbo Spring Boot Starter --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.dubbo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--zookeeper--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.github.sgroschupf/zkclient --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.sgroschupf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zkclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 引入zookeeper --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-framework<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.12.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-recipes<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.12.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.zookeeper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zookeeper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.14<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--排除这个slf4j-log4j12--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="6">
<li>消费者配置</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#当前应用名字</span></span><br><span class="line"><span class="string">dubbo.application.name=consumer-server</span></span><br><span class="line"><span class="comment">#注册中心地址</span></span><br><span class="line"><span class="string">dubbo.registry.address=zookeeper://127.0.0.1:2181</span></span><br></pre></td></tr></table></figure>

<ol start="7">
<li>消费者开发</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.guo.consumer.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.guo.provider.service.TicketService;</span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.annotation.Reference;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span> <span class="comment">//注入到容器中</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Reference</span> <span class="comment">//远程引用指定的服务，他会按照全类名进行匹配，看谁给注册中心注册了这个全类名</span></span><br><span class="line">   TicketService ticketService;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">buyTicket</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="type">String</span> <span class="variable">ticket</span> <span class="operator">=</span> ticketService.getTicket();</span><br><span class="line">       System.out.println(<span class="string">&quot;在注册中心买到&quot;</span>+ticket);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="8">
<li>测试</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConsumerServerApplicationTests</span> &#123;</span><br><span class="line">   <span class="meta">@Autowired</span></span><br><span class="line">   UserService userService;</span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">contextLoads</span><span class="params">()</span> &#123;</span><br><span class="line">       userService.bugTicket();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="13-总结"><a href="#13-总结" class="headerlink" title="13. 总结"></a>13. 总结</h2><p>本次系统学习了SpringBoot，下面开始学习SpringCloud，将往API网关【服务路由】、Http、RPC框架【异步调用】、服务注册与发现【高可用】、熔断机制【服务降级】方向发展</p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringCloud</title>
    <url>/2023/03/17/SpringCloud/</url>
    <content><![CDATA[<blockquote>
<center>登山不以艰险而止,则必臻乎峻岭矣</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<h2 id="1-微服务"><a href="#1-微服务" class="headerlink" title="1. 微服务"></a>1. 微服务</h2><h3 id="1-1-定义"><a href="#1-1-定义" class="headerlink" title="1.1 定义"></a>1.1 定义</h3><blockquote>
<p>微服务是一种高内聚,低耦合架构风格，James Lewis，Martin Fowler</p>
</blockquote>
<ul>
<li><p><a href="https://martinfowler.com/articles/microservices.html#CharacteristicsOfAMicroserviceArchitecture">微服务论文</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/liuning8023/p/4493156.html">微服务论文中文翻译</a></p>
</li>
</ul>
<h3 id="1-2-解决方案"><a href="#1-2-解决方案" class="headerlink" title="1.2 解决方案"></a>1.2 解决方案</h3><table>
<thead>
<tr>
<th>序号</th>
<th>名称</th>
<th>API</th>
<th>通信</th>
<th>服务注册与发现</th>
<th>熔断机制</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>Cloud NetFlix 一站式解决方案</td>
<td>zuul组件</td>
<td>基于Httpclient —Http通信方式：同步、阻塞</td>
<td>Eureka</td>
<td>Hystrix</td>
</tr>
<tr>
<td>2</td>
<td>Apache Dubbo Zookeeper半自动，需要整合别人的</td>
<td>无，需要自己实现</td>
<td>Dubbo</td>
<td>Zookeeper</td>
<td>无，借助Hystrix</td>
</tr>
<tr>
<td>3</td>
<td>Spring Cloud Alibaba 一站式解决方案，更简单</td>
<td>Zuul 和 Gateway组件</td>
<td>Dubbo</td>
<td>Nacos</td>
<td>Sentinel</td>
</tr>
</tbody></table>
<h3 id="1-3-优缺点"><a href="#1-3-优缺点" class="headerlink" title="1.3 优缺点"></a>1.3 优缺点</h3><table>
<thead>
<tr>
<th>序号</th>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>松耦合</td>
<td>开发人员要处理分布式系统的复杂性</td>
</tr>
<tr>
<td>2</td>
<td>单一职责原则</td>
<td>多服务运维难度，随着服务的增加，运维的压力也在增大</td>
</tr>
<tr>
<td>3</td>
<td>易于和第三方集成</td>
<td>服务间通信成本</td>
</tr>
<tr>
<td>4</td>
<td>易于修改和维护等</td>
<td>数据一致性等</td>
</tr>
</tbody></table>
<h3 id="1-4-技术栈"><a href="#1-4-技术栈" class="headerlink" title="1.4 技术栈"></a>1.4 技术栈</h3><table>
<thead>
<tr>
<th>微服务条目</th>
<th>技术</th>
</tr>
</thead>
<tbody><tr>
<td>服务开发</td>
<td>springboot, spring, springmvc</td>
</tr>
<tr>
<td>服务配置与管理</td>
<td>Netflix公司的Archaius, 阿里的Diamond等</td>
</tr>
<tr>
<td>服务注册与发现</td>
<td>Eureka, Consul, Zookeeper等</td>
</tr>
<tr>
<td>服务调用</td>
<td>Rest, RPC, gRPC</td>
</tr>
<tr>
<td>服务熔断器</td>
<td>Hystrix, Envoy等</td>
</tr>
<tr>
<td>负载均衡</td>
<td>Ribbon, Nginx等</td>
</tr>
<tr>
<td>服务接口调用(客户端调用服务的简化工具)</td>
<td>Feign等</td>
</tr>
<tr>
<td>消息队列</td>
<td>Kafka, RabbitMQ, ActiveMQ等</td>
</tr>
<tr>
<td>服务配置中心管理</td>
<td>SpringCloudConfig, cher等</td>
</tr>
<tr>
<td>服务路由(API网关)</td>
<td>zuul等</td>
</tr>
<tr>
<td>服务监控</td>
<td>Zabbix, Nagios, Metrice, Specatator等</td>
</tr>
<tr>
<td>全链路追踪</td>
<td>Zipkin, Brave, Dapper等</td>
</tr>
<tr>
<td>服务部署</td>
<td>Docker, OpenStack, Kubernetes等</td>
</tr>
<tr>
<td>数据流操作开发包</td>
<td>SpringCloud Stream(封装与Redis, Rabbit, KafKa等发送接收消息)</td>
</tr>
<tr>
<td>事务消息总线</td>
<td>SpringClound Bus</td>
</tr>
</tbody></table>
<h3 id="1-5-微服务架构"><a href="#1-5-微服务架构" class="headerlink" title="1.5 微服务架构"></a>1.5 微服务架构</h3><ul>
<li><p>阿里：dubbo+HFS</p>
</li>
<li><p>京东：JSF</p>
</li>
<li><p>新浪：Motan</p>
</li>
<li><p>当当网： DubboX</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>功能点&#x2F;服务框架</th>
<th>Netflix&#x2F;SpringCloud</th>
<th>Motan</th>
<th>gRPC</th>
<th>Thrift</th>
<th>Dubbo&#x2F;DubboX</th>
</tr>
</thead>
<tbody><tr>
<td>功能定位</td>
<td>完整的微服务框架</td>
<td>RPC框架，但整合了ZK或Consul，实现集群环境的基本服务注册发现</td>
<td>RPC框架</td>
<td>RPC框架</td>
<td>服务框架</td>
</tr>
<tr>
<td>支持Rest</td>
<td>是，Ribbon支持多种可拔插的序列号选择</td>
<td>否</td>
<td>否</td>
<td>否</td>
<td>否</td>
</tr>
<tr>
<td>支持RPC</td>
<td>否</td>
<td>是(Hession2)</td>
<td>是</td>
<td>是</td>
<td>是</td>
</tr>
<tr>
<td>支持多语言</td>
<td>是(Rest形式)</td>
<td>否</td>
<td>是</td>
<td>是</td>
<td>否</td>
</tr>
<tr>
<td>负载均衡</td>
<td>是(服务端zuul+客户端Ribbon)，zuul-服务，动态路由，云端负载均衡Eureka（针对中间层服务器）</td>
<td>是(客户端)</td>
<td>否</td>
<td>否</td>
<td>是(客户端)</td>
</tr>
<tr>
<td>配置服务</td>
<td>Netfix Archaius，Spring Cloud Config Server 集中配置</td>
<td>是(Zookeeper提供)</td>
<td>否</td>
<td>否</td>
<td>否</td>
</tr>
<tr>
<td>服务调用链监控</td>
<td>是(zuul)，zuul提供边缘服务，API网关</td>
<td>否</td>
<td>否</td>
<td>否</td>
<td>否</td>
</tr>
<tr>
<td>高可用&#x2F;容错</td>
<td>是(服务端Hystrix+客户端Ribbon)</td>
<td>是(客户端)</td>
<td>否</td>
<td>否</td>
<td>是(客户端)</td>
</tr>
<tr>
<td>典型应用案例</td>
<td>Netflix</td>
<td>Sina</td>
<td>Google</td>
<td>Facebook</td>
<td></td>
</tr>
<tr>
<td>社区活跃程度</td>
<td>高</td>
<td>一般</td>
<td>高</td>
<td>一般</td>
<td>2017年后重新开始维护，之前中断了5年</td>
</tr>
<tr>
<td>学习难度</td>
<td>中等</td>
<td>低</td>
<td>高</td>
<td>高</td>
<td>低</td>
</tr>
<tr>
<td>文档丰富程度</td>
<td>高</td>
<td>一般</td>
<td>一般</td>
<td>一般</td>
<td>高</td>
</tr>
<tr>
<td>其他</td>
<td>Spring Cloud Bus为我们的应用程序带来了更多管理端点</td>
<td>支持降级</td>
<td>Netflix内部在开发集成gRPC</td>
<td>IDL定义</td>
<td>实践的公司比较多</td>
</tr>
</tbody></table>
<h2 id="2-SpringCloud"><a href="#2-SpringCloud" class="headerlink" title="2. SpringCloud"></a>2. SpringCloud</h2><h3 id="2-1-定义"><a href="#2-1-定义" class="headerlink" title="2.1 定义"></a>2.1 定义</h3><blockquote>
<p>SpringCloud,基于SpringBoot提供了-套微服务解决方案,包括服务注册与发现，配置中心，全链路监控,服务网关，负载均衡，熔断器等组件，除了基于NetFlix的开源组件做高度抽象封装之外，还有一些选型中立的开源组件。</p>
</blockquote>
<p><a href="https://springcloud.cc/spring-cloud-netflix.html">springcloud学习1</a><br><a href="https://springcloud.cc/spring-cloud-dalston.html">springcloud中文API文档</a><br><a href="http://springcloud.cn/">SpringCloud中国社区</a><br><a href="https://springcloud.cc/">SpringCloud中文网</a></p>
<h3 id="2-2-Dubbo-和-SpringCloud对比"><a href="#2-2-Dubbo-和-SpringCloud对比" class="headerlink" title="2.2 Dubbo 和 SpringCloud对比"></a>2.2 Dubbo 和 SpringCloud对比</h3><blockquote>
<p>最大区别：Spring Cloud 抛弃了Dubbo的RPC通信，采用的是基于HTTP的REST方式</p>
</blockquote>
<table>
<thead>
<tr>
<th>名称&#x2F;服务</th>
<th>Dubbo</th>
<th>SpringCloud</th>
</tr>
</thead>
<tbody><tr>
<td>服务注册中心</td>
<td>Zookeeper</td>
<td>Spring Cloud Netfilx Eureka</td>
</tr>
<tr>
<td>服务调用方式</td>
<td>RPC</td>
<td>REST API</td>
</tr>
<tr>
<td>服务监控</td>
<td>Dubbo-monitor</td>
<td>Spring Boot Admin</td>
</tr>
<tr>
<td>断路器</td>
<td>不完善</td>
<td>Spring Cloud Netfilx Hystrix</td>
</tr>
<tr>
<td>服务网关</td>
<td>无</td>
<td>Spring Cloud Netfilx Zuul</td>
</tr>
<tr>
<td>分布式配置</td>
<td>无</td>
<td>Spring Cloud Config</td>
</tr>
<tr>
<td>服务跟踪</td>
<td>无</td>
<td>Spring Cloud Sleuth</td>
</tr>
<tr>
<td>消息总栈</td>
<td>无</td>
<td>Spring Cloud Bus</td>
</tr>
<tr>
<td>数据流</td>
<td>无</td>
<td>Spring Cloud Stream</td>
</tr>
<tr>
<td>批量任务</td>
<td>无</td>
<td>Spring Cloud Task</td>
</tr>
</tbody></table>
<h3 id="2-3-版本"><a href="#2-3-版本" class="headerlink" title="2.3 版本"></a>2.3 版本</h3><table>
<thead>
<tr>
<th>spring-boot-starter-parent</th>
<th></th>
<th>spring-cloud-dependencles</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><strong>版本号</strong></td>
<td><strong>发布日期</strong></td>
<td><strong>版本号</strong></td>
<td><strong>发布日期</strong></td>
</tr>
<tr>
<td>2.0.2.RELEASE</td>
<td>2018-05</td>
<td>Fomchiey.BULD-SNAPSHOT</td>
<td>2018-x</td>
</tr>
<tr>
<td>2.0.6.RELEASE</td>
<td>2018-10</td>
<td>Fomchiey-SR2</td>
<td>2018-10</td>
</tr>
<tr>
<td>2.1.4.RELEASE</td>
<td>2019-04</td>
<td>Greenwich.SR1</td>
<td>2019-03</td>
</tr>
</tbody></table>
<h2 id="3-SpringCloud开发"><a href="#3-SpringCloud开发" class="headerlink" title="3. SpringCloud开发"></a>3. SpringCloud开发</h2><h3 id="3-1-导入依赖"><a href="#3-1-导入依赖" class="headerlink" title="3.1 导入依赖"></a>3.1 导入依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xxy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springcloud<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>springcloud-api<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>springcloud-server-provider<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>springcloud-user-consumer<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud-dependencies.version</span>&gt;</span>Greenwich.SR1<span class="tag">&lt;/<span class="name">spring-cloud-dependencies.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-boot-dependencies.version</span>&gt;</span>2.1.4.RELEASE<span class="tag">&lt;/<span class="name">spring-boot-dependencies.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mysql-connector-java.version</span>&gt;</span>8.0.22<span class="tag">&lt;/<span class="name">mysql-connector-java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">druid-spring-boot-starter.version</span>&gt;</span>1.2.8<span class="tag">&lt;/<span class="name">druid-spring-boot-starter.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mybatis-spring-boot-starter.version</span>&gt;</span>2.1.1<span class="tag">&lt;/<span class="name">mybatis-spring-boot-starter.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">lombok.version</span>&gt;</span>1.18.22<span class="tag">&lt;/<span class="name">lombok.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">junit.version</span>&gt;</span>4.13.1<span class="tag">&lt;/<span class="name">junit.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">logback-core.version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">logback-core.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">slf4j-api.version</span>&gt;</span>1.7.36<span class="tag">&lt;/<span class="name">slf4j-api.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--springcloud依赖--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-dependencies --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud-dependencies.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--SpringBoot--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-boot-dependencies.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--数据库--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql-connector-java.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;druid-spring-boot-starter.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis-spring-boot-starter.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--日志测试--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;lombok.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;junit.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;logback-core.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;slf4j-api.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-2-进行新建springboot项目或者maven项目"><a href="#3-2-进行新建springboot项目或者maven项目" class="headerlink" title="3.2 进行新建springboot项目或者maven项目"></a>3.2 进行新建springboot项目或者maven项目</h3><ul>
<li>springcloud-api</li>
<li>springcloud-provider</li>
<li>springcloud-consumer</li>
</ul>
<h3 id="3-3-springcloud-api编写"><a href="#3-3-springcloud-api编写" class="headerlink" title="3.3 springcloud-api编写"></a>3.3 springcloud-api编写</h3><ol>
<li>pom.xml</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springcloud<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xxy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springcloud-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>User.java</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@Accessors(chain = true)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String version;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-4-springcloud-provider编写"><a href="#3-4-springcloud-provider编写" class="headerlink" title="3.4 springcloud-provider编写"></a>3.4 springcloud-provider编写</h3><ol>
<li>pom.xml</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springcloud<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xxy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springcloud-server-provider<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xxy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springcloud-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>application.yml</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.xxy.cloud.pojo</span></span><br><span class="line">  <span class="attr">onfig-location:</span> [<span class="string">classpath:mybatis-config.xml</span>]</span><br><span class="line">  <span class="attr">mapper-locations:</span> [<span class="string">classpath:mapper/*.xml</span>]</span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">springcloud-provider</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://127.0.0.1:3306/temp1?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">&#x27;root&#x27;</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">db-type:</span> <span class="string">com.alibaba.druid-spring-boot-starter</span></span><br><span class="line">      <span class="attr">max-active:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>UserMapper.java</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">insertUser</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">deleteUserById</span><span class="params">(Long id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">updateUser</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    User <span class="title function_">selectUserById</span><span class="params">(Long id)</span>;</span><br><span class="line"></span><br><span class="line">    List&lt;User&gt; <span class="title function_">selectUserByAll</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>UserMapper.xml</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.xxy.springcloud.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectUserByAll&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        select id,name from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Long&quot;</span>&gt;</span></span><br><span class="line">        select id,name from user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        insert into user(id,name) values(#&#123;id&#125;,#&#123;name&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteUserById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Long&quot;</span>&gt;</span></span><br><span class="line">        delete from user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        update user set name=#&#123;name&#125; where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li>UserService.java</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.springcloud.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xxy.cloud.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023-02-11-4:11</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> List&lt;User&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;User&gt; <span class="title function_">selectUserByAll</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过id查询用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> User</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    User <span class="title function_">selectUserById</span><span class="params">(Long id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 插入用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user 用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">insertUser</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id 用户id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">deleteUserById</span><span class="params">(Long id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user 用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">updateUser</span><span class="params">(User user)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>UserServiceImpl.java</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.springcloud.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xxy.cloud.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.xxy.springcloud.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023-02-11-4:11</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">selectUserByAll</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.selectUserByAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">selectUserById</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.selectUserById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">insertUser</span><span class="params">(User user)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.insertUser(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">deleteUserById</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.deleteUserById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updateUser</span><span class="params">(User user)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.updateUser(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="7">
<li>UserController.java</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.springcloud.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xxy.cloud.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.xxy.springcloud.service.UserService;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023-03-11-23:15</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/insert/&#123;id&#125;&quot;,method = RequestMethod.GET)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">insertUser</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id,<span class="meta">@RequestBody</span> User user)</span> &#123;</span><br><span class="line">        user.setId(id).setName(<span class="string">&quot;li&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> userService.insertUser(user);</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;增加成功&quot;</span>+i;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">return</span> <span class="string">&quot;增加失败&quot;</span>+i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping( value = &quot;/del/&#123;id&#125;&quot;,method = RequestMethod.GET)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">deleteUser</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> userService.deleteUserById(id);</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;删除成功&quot;</span>+i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;删除失败&quot;</span> + i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping( value = &quot;/update/&#123;id&#125;&quot;,method = RequestMethod.GET)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">updateUser</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id,User user)</span> &#123;</span><br><span class="line">        user.setId(id).setName(<span class="string">&quot;lisi&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> userService.updateUser(user);</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;修改成功&quot;</span>+i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;修改失败&quot;</span> + i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/select&quot;,method = RequestMethod.GET)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">selectUserByAll</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;User&gt; users = userService.selectUserByAll();</span><br><span class="line">        <span class="keyword">if</span> (users.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> users;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/select/&#123;id&#125;&quot;,method = RequestMethod.GET)</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">seleteUserById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id)</span> &#123;</span><br><span class="line"><span class="comment">//        log.info(&quot;信息id&quot;+id);</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.selectUserById(id);</span><br><span class="line">        <span class="keyword">if</span> (user == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="8">
<li>启动类UserProvider_8081</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.springcloud;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023-03-19-20:42</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserProvider_8081</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(UserProvider_8081.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-5-springcloud-consumer编写"><a href="#3-5-springcloud-consumer编写" class="headerlink" title="3.5 springcloud-consumer编写"></a>3.5 springcloud-consumer编写</h3><ol>
<li>pom.xml</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springcloud<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xxy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springcloud-user-consumer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xxy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springcloud-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>application.yml</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>config.java</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.springcloud.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023-03-19-21:51</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConfigBean</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RestTemplate <span class="title function_">getRestTemplate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">RestTemplate</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>UserConsumerController.java</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.springcloud.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xxy.cloud.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023-03-19-21:48</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/consumer&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserConsumerController</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">REST_URL_PREFIX</span> <span class="operator">=</span> <span class="string">&quot;http://localhost:8081/user&quot;</span>;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/insert/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">insertUser</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id,User user)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(REST_URL_PREFIX + <span class="string">&quot;/insert/&quot;</span> + id,<span class="type">boolean</span>.class);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/select/&#123;id&#125;&quot;,method = RequestMethod.GET)</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">seleteUserById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(REST_URL_PREFIX + <span class="string">&quot;/select/&quot;</span> + id,User.class);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/select&quot;,method = RequestMethod.GET)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">selectUserByAll</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(REST_URL_PREFIX+<span class="string">&quot;/select&quot;</span>,List.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="5">
<li>启动类UserConsumer_80.java</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.springcloud;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023-03-19-22:19</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserConsumer_80</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(UserConsumer_80.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>输入<code>localhost/consumer/select/100</code>测试</li>
</ol>
<h2 id="4-Eureka服务注册与发现"><a href="#4-Eureka服务注册与发现" class="headerlink" title="4. Eureka服务注册与发现"></a>4. Eureka服务注册与发现</h2><blockquote>
<p>此已经过时，了解思想即可，nacos</p>
</blockquote>
<h3 id="4-1-简述"><a href="#4-1-简述" class="headerlink" title="4.1 简述"></a>4.1 简述</h3><ol>
<li>定义</li>
</ol>
<blockquote>
<p>Eureka是Netflix的一个子模块，遵循AP原则,实现服务注册和发现，Eureka是一个基于REST的服务，用于定位服务，以实现云端中间层服务发现和故障转移，服务注册与发现对于微服务来说是非常重要的，有了服务发现与注册，只需要使用服务的标识符，就可以访问到服务，而不需要修改服务调用的配置文件了，功能类似于Dubbo的注册中心，比如Zookeeper</p>
</blockquote>
<ol start="2">
<li>基本架构</li>
</ol>
<ul>
<li>Eureka Server：提供服务注册与发现。和zookeeper客户端一样</li>
<li>Service Provider：将自身服务注册到Eureka中，从而使消费方能够找到</li>
<li>Service Consumer：服务消费方从Eureka中获取注册服务列表，从而找到消费服务</li>
</ul>
<h3 id="4-2-开发"><a href="#4-2-开发" class="headerlink" title="4.2 开发"></a>4.2 开发</h3><ol>
<li>导入依赖pom.xml</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springcloud<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xxy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springcloud-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>配置application.yml</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">7001</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">localhost</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span> <span class="comment">#false表示不向注册中心注册自己</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span> <span class="comment">#false表示自己就是注册中心，我的职责就是维护服务实例，并不需要去搜索服务</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="comment">#设置与eureka server交互的地址查询服务和注册服务都需要依赖这个地址</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>启动类EurekaServer_7001.java</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.springcloud;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023-03-20-0:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EurekaServer_7001</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(EurekaServer_7001.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>输入<code>localhost:7001</code>进行测试</li>
</ol>
<h3 id="4-3-注册和发现提供者端"><a href="#4-3-注册和发现提供者端" class="headerlink" title="4.3 注册和发现提供者端"></a>4.3 注册和发现提供者端</h3><ol>
<li><p>导入依赖</p>
</li>
<li><p>进行配置</p>
</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:7001/eureka</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="comment">#修改Eureka中status的默认描述信息。不配置默认为DESKTOP-XXX描述</span></span><br><span class="line">    <span class="attr">instance-id:</span> <span class="string">springcloud-server-provider</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>启动类增加@EnableEurekaClient</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserProvider_8081</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(UserProvider_8081.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>输入<code>localhost:7001</code>进行测试</li>
</ol>
<h3 id="4-4-自我保护机制"><a href="#4-4-自我保护机制" class="headerlink" title="4.4 自我保护机制"></a>4.4 自我保护机制</h3><blockquote>
<p>某时刻某一个微服务不可以用了 , eureka不会立刻清理，依旧会对该微服务的信息进行保存!</p>
</blockquote>
<ul>
<li><p>默认情况下，如果EurekaServer在一定时间内没有接收到某 个微服务实例的心跳，EurekaServer将会注销该实例(默认90秒)。 但是当网络分区故障发生时，微服务与Eureka之间无法正常通行，以上行为可能变得非常危险了—- 因为微服务本身其实是健康的，此时本不应该注销这个服务。Eureka通过 自我保护机制来解决这个问题–当EurekaServer节点在短时间内丢失过多客户端时(可能发生了网络分区故障) , 那么这个节点就会进入自我保护模式。一旦进入该模式，EurekaServer就会保护服务注册表中的信息，不再删除服务注册表中的数据(也就是不会注销任何微服务) .当网络故障恢复后，该EurekaServer节 点会自动退出自我保护模式。</p>
</li>
<li><p>自我保护模式是-种应对网络异常的安全保护措施。它的架构哲学是宁可同时保留所有微服务(健康的微服务和不健康的微服务都会保留)，也不盲目注销任何健康的微服务。使用自我保护模式，可以让Eureka集群更加的健壮和稳定</p>
</li>
<li><p>在SpringCloud中, 可以使用 eureka. server. enable-self-preservation &#x3D; false 禁用自我保护模式[不推荐关闭自我保护机制]</p>
</li>
</ul>
<h3 id="4-5-Eureka集群环境配置"><a href="#4-5-Eureka集群环境配置" class="headerlink" title="4.5 Eureka集群环境配置"></a>4.5 Eureka集群环境配置</h3><blockquote>
<p><strong>对应的 Eureka Server服务的状态是UP，<br>则不会向另外两个节点（eureka7002，eureka7003）发送请求，<br>相应地页面上也就没有显示。一旦停止 eureka7001 服务注册中心，则 user-8001 服务会向 eureka7002 发送注册请求。</strong></p>
</blockquote>
<ol>
<li>导入依赖</li>
<li>进行配置</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">7001</span></span><br><span class="line"><span class="comment">#Eureka配置</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">eureka7001.com</span> <span class="comment">#Eureaka服务端的实例名称</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span>  <span class="comment">#表示是否向Eureka注册中心注册自己</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span> <span class="comment">#如果fetch-registry为false，则表示自己为注册中心</span></span><br><span class="line">    <span class="attr">service-url:</span> <span class="comment">#监控页面</span></span><br><span class="line">      <span class="comment">#单机：点进去参考源码，可看到默认的url端口配置为8761，我们设置为自己的端口。</span></span><br><span class="line">      <span class="comment">#defaultZone: http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka</span></span><br><span class="line"> </span><br><span class="line">      <span class="comment">#集群（除自身外 关联其他所有）</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka7002.com:7002/eureka/,http://eureka7003.com:7003/eureka/</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>分别配置启动类</li>
</ol>
<h3 id="4-6-Eureka和Zookeeper"><a href="#4-6-Eureka和Zookeeper" class="headerlink" title="4.6 Eureka和Zookeeper"></a>4.6 Eureka和Zookeeper</h3><blockquote>
<p>Eureka可以很好的应对因网络故障导致部分节点失去联系的情况，而不会像zookeeper那样使整个注册服务瘫痪。</p>
</blockquote>
<ol>
<li>简述</li>
</ol>
<ul>
<li>RDBMS (Mysql. Oracle. sqlServer) &#x3D;&#x3D;&gt; ACID</li>
<li>NoSQL (redis. mongdb) &#x3D;&#x3D;&gt;CAP</li>
</ul>
<ol start="2">
<li>CAP</li>
</ol>
<blockquote>
<p>CAP的三进二: CA、AP、 CP</p>
</blockquote>
<ul>
<li>C (Consistency) 强一致性</li>
<li>A (Availabilty)可用性</li>
<li>P (Partition tolerance)分区容错性</li>
</ul>
<ol start="3">
<li>CAP核心</li>
</ol>
<ul>
<li>CA:单点集群，满足-致性，可用性的系统，通常可扩展性较差</li>
<li>CP: 满足- -致性，分区容错性的系统，通常性能不是特别高</li>
<li>AP:满足可用性。分区容错性的系统，通常可能对一致性要求低一些</li>
</ul>
<ol start="4">
<li>对比</li>
</ol>
<table>
<thead>
<tr>
<th>对比&#x2F;对象</th>
<th>Eureka</th>
<th>Zookeeper</th>
</tr>
</thead>
<tbody><tr>
<td>CAP</td>
<td>AP</td>
<td>CP</td>
</tr>
</tbody></table>
<h2 id="5-Ribbno负载均衡"><a href="#5-Ribbno负载均衡" class="headerlink" title="5. Ribbno负载均衡"></a>5. Ribbno负载均衡</h2><h3 id="5-1-简述"><a href="#5-1-简述" class="headerlink" title="5.1 简述"></a>5.1 简述</h3><ol>
<li>定义</li>
</ol>
<blockquote>
<p>Spring Cloud Ribbon是基于Netflix Ribbon实现的一套 客户端负载均衡的工具,Ribbon就属于进程内LB，它只是一个类库，集成于消费方进程，消费方通过它来获取到服务提供方的地址</p>
</blockquote>
<ol start="2">
<li>负载均衡分类</li>
</ol>
<ul>
<li>集中式LB</li>
</ul>
<blockquote>
<p>即在服务的消费方和提供方之间使用独立的LB设施，如Nginx, 由该设施负责把访问请求通过某种策略转发至服务的提供方</p>
</blockquote>
<ul>
<li>进程式LB</li>
</ul>
<blockquote>
<p>将LB逻辑集成到消费方，消费方从服务注册中心获知有哪些地址可用,然后自己再从这些地址中选出一个合适的服务器</p>
</blockquote>
<h3 id="5-2-开发"><a href="#5-2-开发" class="headerlink" title="5.2 开发"></a>5.2 开发</h3><ol>
<li>导入依赖</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--Eureka--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Ribbon负载均衡--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-ribbon<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>进行配置和扩展</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#Eureka配置</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">   <span class="attr">register-with-eureka:</span> <span class="literal">false</span> <span class="comment">#不向Eureka中注册自己</span></span><br><span class="line">   <span class="attr">service-url:</span></span><br><span class="line">     <span class="attr">defaultZone:</span> <span class="string">http://localhost:7001/eureka/,http://localhost:7002/eureka/,http://localhost:7003/eureka/</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConfigBean</span> &#123;<span class="comment">//@Configuration=spring的 application.xml</span></span><br><span class="line">    <span class="comment">//配置负载均衡实现RestTemplate</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@LoadBalanced</span> <span class="comment">//ribbon负载均衡的作用</span></span><br><span class="line">    <span class="keyword">public</span> RestTemplate <span class="title function_">getRestTemplate</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">RestTemplate</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//消费者 运行方式80可省略  例：localhost/consumer/dept/list</span></span><br><span class="line"><span class="comment">//Ribbon 和 Eureka 整合后，客户端可直接调用，不用关心Ip地址和端口号，会在定义的多个地址中随机选择</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span><span class="comment">//在服务启动后，自动注册到Eureka注册中心中</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DeptConsumer_80</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(DeptConsumer_80.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>开发</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//声明提供者的localhost路径</span></span><br><span class="line"><span class="comment">//private static final String rest_url_prefix = &quot;http://localhost:8001&quot;;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//通过ribbon去实现负载均衡，这里服务应该是一个变量，通过服务名来访问 *</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">rest_url_prefix</span> <span class="operator">=</span> <span class="string">&quot;http://SPRINGCLOUD-PROVIDER-DEPT&quot;</span>;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>修改算法</li>
</ol>
<ul>
<li>在不能被全局引入下创建RuleConfig</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//自定义Ribbon配置的负载均衡类，客户端RibbonConfiguration中已存在的组件与FooConfiguration中的任何组件组成（后者通常会覆盖前者）</span></span><br><span class="line"><span class="comment">//自定义的组件请注意 它不在|程序的上下文的ComponentScan中，所以要放在单独的不重叠的包中</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RuleConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> IRule <span class="title function_">myRule</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//默认是轮询，现在我们自定义为DiyRandomRule 自定义负载均衡</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">DiyRandomRule</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>更改算法</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DiyRandomRule</span> <span class="keyword">extends</span> <span class="title class_">AbstractLoadBalancerRule</span> &#123;</span><br><span class="line">    <span class="comment">//代码全是复制的 DiyRandomRule.class的，自定义负载均衡需要自己修改</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">//当前自定义负载均衡：</span></span><br><span class="line">    <span class="comment">//每个服务访问5次。换下一个服务</span></span><br><span class="line">    <span class="comment">//total=0，默认=0，如果=5，指向下一个服务节点</span></span><br><span class="line">    <span class="comment">//index=0，默认0，如果total=5，则inedx+1</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> totla=<span class="number">0</span>;<span class="comment">//被调用的次数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> currentIndex=<span class="number">0</span>;<span class="comment">//当前是谁在提供服务</span></span><br><span class="line">    <span class="keyword">public</span> Server <span class="title function_">choose</span><span class="params">(ILoadBalancer lb, Object key)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (lb == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">Server</span> <span class="variable">server</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">while</span> (server == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (Thread.interrupted()) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line"> </span><br><span class="line">                List&lt;Server&gt; upList = lb.getReachableServers();<span class="comment">//获得活着的服务</span></span><br><span class="line">                List&lt;Server&gt; allList = lb.getAllServers();<span class="comment">//获得全部的服务</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">serverCount</span> <span class="operator">=</span> allList.size();</span><br><span class="line">                <span class="keyword">if</span> (serverCount == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line"> </span><br><span class="line">                <span class="comment">//int index = this.chooseRandomInt(serverCount);//生成区间随机数</span></span><br><span class="line">                <span class="comment">//server = (Server) upList.get(index);//从活着的服务中，随机获取一个</span></span><br><span class="line"> </span><br><span class="line">               <span class="comment">//================自定义负载均衡算法==================</span></span><br><span class="line">                <span class="keyword">if</span>(totla&lt;<span class="number">5</span>)&#123;</span><br><span class="line">                    server = upList.get(currentIndex);</span><br><span class="line">                    totla++;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    totla=<span class="number">0</span>;</span><br><span class="line">                    currentIndex++;</span><br><span class="line">                    <span class="keyword">if</span> (currentIndex&gt;=upList.size())&#123;<span class="comment">//当前节点大于活着的数量</span></span><br><span class="line">                        currentIndex = <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    server=upList.get(currentIndex);<span class="comment">//从活着的服务中，获取指定的服务来进行操作</span></span><br><span class="line">                &#125;</span><br><span class="line">               <span class="comment">//====================================================</span></span><br><span class="line">                <span class="keyword">if</span> (server == <span class="literal">null</span>) &#123;</span><br><span class="line">                    Thread.yield();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (server.isAlive()) &#123;</span><br><span class="line">                        <span class="keyword">return</span> server;</span><br><span class="line">                    &#125;</span><br><span class="line"> </span><br><span class="line">                    server = <span class="literal">null</span>;</span><br><span class="line">                    Thread.yield();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">return</span> server;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">protected</span> <span class="type">int</span> <span class="title function_">chooseRandomInt</span><span class="params">(<span class="type">int</span> serverCount)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ThreadLocalRandom.current().nextInt(serverCount);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> Server <span class="title function_">choose</span><span class="params">(Object key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.choose(<span class="built_in">this</span>.getLoadBalancer(), key);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initWithNiwsConfig</span><span class="params">(IClientConfig clientConfig)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>引用注解</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//消费者 运行方式80可省略  例：localhost/consumer/dept/list</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span><span class="comment">//在服务启动后，自动注册到Eureka注册中心中</span></span><br><span class="line"><span class="comment">//在微服务启动的时候就能去加载我们自定义Ribbon配置的负载均衡类，自定义为跳转5次切换节点</span></span><br><span class="line"><span class="meta">@RibbonClient(name=&quot;SPRINGCLOUD-PROVIDER-DEPT&quot;,configuration = RuleConfig.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DeptConsumer_80</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(DeptConsumer_80.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="6-Feign负载均衡"><a href="#6-Feign负载均衡" class="headerlink" title="6. Feign负载均衡"></a>6. Feign负载均衡</h2><h3 id="6-1-简述"><a href="#6-1-简述" class="headerlink" title="6.1 简述"></a>6.1 简述</h3><ol>
<li>定义</li>
</ol>
<blockquote>
<p>Feign旨在使编写Java Http客户端变得更容易</p>
</blockquote>
<ol start="2">
<li>Feign与Ribbon的区别</li>
</ol>
<blockquote>
<p>Ribbon和Feign都是用于调用其他服务的，不过方式不同。</p>
</blockquote>
<table>
<thead>
<tr>
<th>不同点</th>
<th>Ribbon</th>
<th>Feign</th>
</tr>
</thead>
<tbody><tr>
<td>风格</td>
<td>RestFul</td>
<td>面向接口</td>
</tr>
<tr>
<td>启动类使用的注解</td>
<td>@RibbonClient</td>
<td>@EnableFeignClients</td>
</tr>
<tr>
<td>服务的指定位置</td>
<td>Ribbon是在@RibbonClient注解上声明</td>
<td>Feign则是在定义抽象方法的接口中使用@FeignClient声明</td>
</tr>
<tr>
<td>调用方式不同</td>
<td>Ribbon需要自己构建http请求，模拟http请求然后使用RestTemplate发送给其他服务，步骤相当繁琐。</td>
<td>Feign则是在Ribbon的基础上进行了一次改进，采用接口的方式，将需要调用的其他服务的方法定义成抽象方法即可，不需要自己构建http请求。不过要注意的是抽象方法的注解、方法签名要和提供服务的方法完全一致</td>
</tr>
</tbody></table>
<h3 id="6-2-开发"><a href="#6-2-开发" class="headerlink" title="6.2  开发"></a>6.2  开发</h3><ol>
<li>springcloud-api</li>
</ol>
<ul>
<li>导入依赖</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>DeptClientService.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@FeignClient(value = &quot;SPRINGCLOUD-PROVIDER-DEPT&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">DeptClientService</span> &#123;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/dept/get/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Dept <span class="title function_">queryById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id)</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@PostMapping(&quot;/dept/list&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Dept&gt; <span class="title function_">queryAll</span><span class="params">()</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@GetMapping(&quot;/dept/add&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">addDept</span><span class="params">(Dept dept)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>springcloud-consumer-dept-feign</li>
</ol>
<ul>
<li>导入依赖</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springcloud-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">&lt;!--Ribbon--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-ribbon<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>DeptConsumerController</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DeptConsumerController</span> &#123;</span><br><span class="line">    <span class="comment">//Feign面向接口编程</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">//springcloud-api-feign 下的service</span></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">DeptClientService</span> <span class="variable">deptClientService</span> <span class="operator">=</span><span class="literal">null</span>;</span><br><span class="line">    <span class="comment">//添加数据</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/consumer/dept/add&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">add</span><span class="params">(Dept dept)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> deptClientService.addDept(dept);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//通过id查询</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/consumer/dept/get/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Dept <span class="title function_">get</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> deptClientService.queryById(id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//查询所有</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/consumer/dept/list&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Dept&gt; <span class="title function_">queryAll</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> deptClientService.queryAll();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>DeptConsumer_feign启动类</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//消费者 运行方式80可省略  例：localhost/consumer/dept/list</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span>  <span class="comment">//在服务启动后，自动注册到Eureka注册中心中</span></span><br><span class="line"><span class="meta">@EnableFeignClients(basePackages = &#123;&quot;com.lemon.springCloud&quot;&#125;)</span> <span class="comment">//Feign被扫描到</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DeptConsumer_feign</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(DeptConsumer_feign.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="7-Hystrix-服务熔断"><a href="#7-Hystrix-服务熔断" class="headerlink" title="7. Hystrix 服务熔断"></a>7. Hystrix 服务熔断</h2><h3 id="7-1-简述"><a href="#7-1-简述" class="headerlink" title="7.1 简述"></a>7.1 简述</h3><ol>
<li>定义</li>
</ol>
<blockquote>
<p>分布式系统面临的问题: 复杂分布式结构中的应用程序有数十个依赖关系，每个依赖关系在某些时候将不可避免的失效,Hystrix是一个用于处理分布式系统的延迟和容错的开源库，在分布式系统里，许多依赖不可避免的会调用失败，比如超时，异常等，Hystrix能够保证在一 个依赖出问题的情况下， 不会导致整体服务失败,避免级联故障，以提高分布式系统的弹性。</p>
</blockquote>
<ol start="2">
<li>用处</li>
</ol>
<ul>
<li>服务降级</li>
<li>服务熔断</li>
<li>服务限流</li>
<li>接近实时的监控等等</li>
</ul>
<ol start="3">
<li>服务熔断</li>
</ol>
<blockquote>
<p>熔断机制是对应雪崩效应的一种微服务链路保护机制。<br>当扇出链路的某个微服务不可用或者响应时间太长时，会进行服务的降级，进而熔断该节点微服务的调用，快速返回错误的响应信息。当检测到该节点微服务调用响应正常后恢复调用链路。在SpringCloud框架里熔断机制通过Hystrix实现。Hystrix会监控微服务间调用的状况， 当失败的调用到一定阈值，缺省是5秒内20次调用失败就会启动熔断机制。熔断机制的注解是@HystrixCommand.</p>
</blockquote>
<h3 id="7-2-服务熔断"><a href="#7-2-服务熔断" class="headerlink" title="7.2 服务熔断"></a>7.2 服务熔断</h3><ol>
<li>导入依赖</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>进行配置或者扩展</li>
</ol>
<ul>
<li>配置文件</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8082</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.xxy.cloud.pojo</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> [<span class="string">classpath:mapper/*.xml</span>]</span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">springcloud-provider-hystrix</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://127.0.0.1:3306/temp1?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">&#x27;root&#x27;</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">db-type:</span> <span class="string">com.alibaba.druid-spring-boot-starter</span></span><br><span class="line">      <span class="attr">max-active:</span> <span class="number">20</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:7001/eureka</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="comment">#修改Eureka中status的默认描述信息。不配置默认为DESKTOP-XXX描述</span></span><br><span class="line">    <span class="attr">instance-id:</span> <span class="string">springcloud-server-provider</span></span><br></pre></td></tr></table></figure>

<ul>
<li>启动类@EnableHystrix</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.springcloud;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.EnableEurekaClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.hystrix.EnableHystrix;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023-03-19-20:42</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@EnableHystrix</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserProviderHystrix_8082</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(UserProviderHystrix_8082.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>开发controller</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/select/&#123;id&#125;&quot;,method = RequestMethod.GET)</span></span><br><span class="line"><span class="meta">@HystrixCommand(fallbackMethod = &quot;hystrixGet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> User <span class="title function_">seleteUserById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id)</span> &#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.selectUserById(id);</span><br><span class="line">    <span class="keyword">if</span> (user == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;id=&gt; &quot;</span>+ id+<span class="string">&quot;不存在该用户,或者该信息无法找到&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> User <span class="title function_">hystrixGet</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">User</span>().setId(id).setName(id+<span class="string">&quot;没有相关信息&quot;</span>).setVersion(<span class="string">&quot;not at mysql&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>输入<code>http://localhost:8082/user/select/数据库没有的id</code>进行测试</li>
</ol>
<h3 id="7-3-服务降级"><a href="#7-3-服务降级" class="headerlink" title="7.3 服务降级"></a>7.3 服务降级</h3><blockquote>
<p>被动服务熔断会服务降级，主动关闭服务也会服务降级,熔断机制是应对雪崩效应的一种微服务链路保护机制，当扇出链路的某个微服务不可用或者响应时间太长时，会进行服务的降级，服务降级处理是在客户端实现完成的，与服务端没有关系</p>
</blockquote>
<ol>
<li>配置</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#开启降级Feign   Hystrix</span></span><br><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">hystrix:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span> </span><br></pre></td></tr></table></figure>

<ol start="2">
<li>在springcloud-api中或者新建的springcloud-api-feign项目中的service包中创建DeptClientServiceFallbackFactory降级服务类</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Hystrix 降级，当服务端关闭后的提示信息</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DeptClientServiceFallbackFactory</span> <span class="keyword">implements</span> <span class="title class_">FallbackFactory</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> DeptClientService <span class="title function_">create</span><span class="params">(Throwable throwable)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">DeptClientService</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> Dept <span class="title function_">queryById</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Dept</span>()</span><br><span class="line">                        .setDeptno(id)</span><br><span class="line">                        .setDname(<span class="string">&quot;id=&gt;&quot;</span> +id+<span class="string">&quot;没有对应的信息，客户端提供了降级的信息，这个服务现在已经关闭&quot;</span>)</span><br><span class="line">                        .setDb_source(<span class="string">&quot;已降级 未查找到数据&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> List&lt;Dept&gt; <span class="title function_">queryAll</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">addDept</span><span class="params">(Dept dept)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>增加注解@FeignClient(value &#x3D; “SPRINGCLOUD-PROVIDER-DEPT”,fallbackFactory &#x3D; DeptClientServiceFallbackFactory.class)</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@FeignClient(value = &quot;SPRINGCLOUD-PROVIDER-DEPT&quot;,fallbackFactory = DeptClientServiceFallbackFactory.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">DeptClientService</span> &#123;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/dept/get/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Dept <span class="title function_">queryById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id)</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@PostMapping(&quot;/dept/list&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Dept&gt; <span class="title function_">queryAll</span><span class="params">()</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@PostMapping(&quot;/dept/add&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">addDept</span><span class="params">(Dept dept)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">123456789101112</span></span><br></pre></td></tr></table></figure>

<h3 id="7-4-Dashboard流监控"><a href="#7-4-Dashboard流监控" class="headerlink" title="7.4 Dashboard流监控"></a>7.4 Dashboard流监控</h3><ol>
<li>导包</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--dashboard流监控--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-hystrix-dashboard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>配置</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Hystrix的dashboard流监控 端口</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9001</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>启动类@EnableHystrixDashboard</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableHystrixDashboard</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserConsumerDashboard_9001</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(UserConsumerDashboard_9001.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>在<code>springcloud-provider-hystrix</code>中启动类</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.springcloud;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023-03-19-20:42</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@EnableHystrix</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserProviderHystrix_8082</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(UserProviderHystrix_8082.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//增加一个servlet,配合dashboard监控使用，固定的代码 http://localhost:8001/actuator/hystrix.stream访问监控</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ServletRegistrationBean <span class="title function_">hystrixMetricsStreamServlet</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">ServletRegistrationBean</span> <span class="variable">registrationBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServletRegistrationBean</span>(<span class="keyword">new</span> <span class="title class_">HystrixMetricsStreamServlet</span>());</span><br><span class="line">        registrationBean.addUrlMappings(<span class="string">&quot;/actuator/hystrix.stream&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> registrationBean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="5">
<li>输入<code>localhost:8001/actuator/hystrix.stream</code>进行测试</li>
</ol>
<h2 id="8-Zuul路由网关"><a href="#8-Zuul路由网关" class="headerlink" title="8. Zuul路由网关"></a>8. Zuul路由网关</h2><blockquote>
<p>已经过时，了解思想即可，推荐GetWay</p>
</blockquote>
<h3 id="8-1-简述"><a href="#8-1-简述" class="headerlink" title="8.1 简述"></a>8.1 简述</h3><ol>
<li>定义</li>
</ol>
<blockquote>
<p>Zuul包含了对请求的路由和过滤两个最主要的功能,Zuul服务最终还是会注册进Eureka,代理+路由+过滤三大功能</p>
</blockquote>
<ol start="2">
<li>Zuul组件</li>
</ol>
<ul>
<li>zuul-core–zuul核心库，包含编译和执行过滤器的核心功能</li>
<li>zuul-simple-webapp–zuul Web应用程序示例，展示了如何使用zuul-core构建应用程序</li>
<li>zuul-netflix–lib包，将其他NetflixOSS组件添加到Zuul中，例如使用功能区进去路由请求处理</li>
<li>zuul-netflix-webapp–webapp，它将zuul-core和zuul-netflix封装成一个简易的webapp工程包</li>
</ul>
<h3 id="8-2-Zuul开发"><a href="#8-2-Zuul开发" class="headerlink" title="8.2 Zuul开发"></a>8.2 Zuul开发</h3><ol>
<li>导依赖</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--Zuul路由网关 9527端口--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springcloud/springcloud-zuul-9527<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--Zuul路由网关--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-zuul<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>配置</li>
</ol>
<blockquote>
<p>可以在<code>C:\Windows\System32\drivers\etc\hosts</code> 模拟zuul网关</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1	www.lijie.com</span><br></pre></td></tr></table></figure>

<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9527</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">springcloud-zuul</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:7001/eureka/,http://localhost:7002/eureka/,http://localhost:7003/eureka/</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="comment">#修改Eureka中status的默认描述信息。不配置默认为DESKTOP-XXX描述</span></span><br><span class="line">    <span class="attr">instance-id:</span> <span class="string">zuul9527.com</span> <span class="comment">#自定义名称</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span> <span class="comment">#改为true后 Eureka中的status就会显示真实ip地址</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">info:</span>  <span class="comment">#链接点开后显示的info信息</span></span><br><span class="line">  <span class="attr">app.name:</span> <span class="string">tizi</span> <span class="string">=&gt;</span> <span class="string">zuul</span> <span class="string">test</span></span><br><span class="line">  <span class="attr">company.name:</span> <span class="string">tizi=&gt;</span> <span class="string">zuul.com</span></span><br><span class="line">  <span class="attr">version.name:</span> <span class="string">tizi.01</span></span><br><span class="line"><span class="attr">zuul:</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">    <span class="attr">mydept.serviceId:</span> <span class="string">springcloud-provider-dept</span></span><br><span class="line">      <span class="comment">#之前的查询链接地址 http://www.lijie.com:9527/springcloud-provider-dept/dept/get/1</span></span><br><span class="line">      <span class="comment">#现在的查询链接地址，配置后为 http://www.lijie.com:9527/mydept/dept/get/1</span></span><br><span class="line">      <span class="comment">#两者都皆可访问(原路径+现配路径)。配置自定义的前缀后 可不让客户端知道真实的ip地址</span></span><br><span class="line">    <span class="attr">mydept.path:</span> <span class="string">/mydept/**</span></span><br><span class="line">      <span class="comment">#加上此配置后 原路径不能访问(springcloud-provider-dept/dept/get/6)，只能通过自定义的规则路径访问。</span></span><br><span class="line">      <span class="comment">#ignored-services: springcloud-provider-dept</span></span><br><span class="line">      <span class="comment">#星号(*) 隐藏全部的项目真实名字</span></span><br><span class="line">  <span class="attr">ignored-services:</span> <span class="string">&quot;*&quot;</span></span><br><span class="line">  <span class="attr">prefix:</span> <span class="string">/li</span> <span class="comment">#设置公共的地址前缀 配置后链接为：www.lijie.com:9527/li/mydept/dept/get/11</span></span><br></pre></td></tr></table></figure>

<h2 id="9-SpringCloud-config分布式配置中心"><a href="#9-SpringCloud-config分布式配置中心" class="headerlink" title="9. SpringCloud config分布式配置中心"></a>9. SpringCloud config分布式配置中心</h2><h3 id="9-1-简述"><a href="#9-1-简述" class="headerlink" title="9.1 简述"></a>9.1 简述</h3><ol>
<li>定义</li>
</ol>
<blockquote>
<p>Spring Cloud Config为微服务架构中的微服务提供集中化的外部配置支持，配置服务器为各个不同微服务应用的所有环节提供了一个中心化的外部配置。</p>
</blockquote>
<ol start="2">
<li>组成</li>
</ol>
<blockquote>
<p>Spring Cloud Config 分为服务端和客户端两部分;<br>服务端也称为分布式配置中心，它是一 个独立的微服务应用，用来连接配置服务器并为客户端提供获取配置信息,加密，解密信息等访问接口。</p>
</blockquote>
<ol start="3">
<li>解决的问题</li>
</ol>
<ul>
<li>集中管理配置文件</li>
<li>不同环境，不同配置，动态化的配置更新，分环境部署，比如&#x2F;dev &#x2F;test&#x2F; &#x2F;prod &#x2F;beta &#x2F;release</li>
<li>运行期间动态调整配置，不再需要在每个服务部署的机器上编写配置文件，服务会向配置中心统一拉取配置自己的信息。</li>
<li>当配置发生变动时，服务不需要重启，即可感知到配置的变化，井应用新的配置</li>
<li>将配置信息以REST接口的形式暴露</li>
</ul>
<h3 id="9-2-config-server开发"><a href="#9-2-config-server开发" class="headerlink" title="9.2 config-server开发"></a>9.2 config-server开发</h3><ol>
<li><p>新建gitee仓库</p>
</li>
<li><p>初始化git</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 显示当前的Git配置</span><br><span class="line">$ git config --list</span><br><span class="line"> </span><br><span class="line"># 设置提交代码时的用户信息</span><br><span class="line">$ git config --global user.name &quot;[name]&quot;</span><br><span class="line">$ git config --global user.email &quot;[email address]&quot;</span><br><span class="line">$ git clone &quot;你的SSH地址&quot;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>新建application.yml文件</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">springcloud-config-dev</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">test</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">springcloud-config-test</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>提交码云</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GitBash打开命令工具</span><br><span class="line"><span class="built_in">cd</span> 至 springcloud-config</span><br><span class="line"> </span><br><span class="line">git add .  将文件添加到暂存区</span><br><span class="line"> </span><br><span class="line">git status 查看状态</span><br><span class="line"> </span><br><span class="line">git commit -m “第一次提交” 本地提交,-m为提交时写的信息</span><br><span class="line"> </span><br><span class="line">git push origin master 提交到远程的当前路径分枝</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>导入依赖</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springcloud<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xxy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springcloud-config-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--springcloud-config的配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-config-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="6">
<li>配置application.yml</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">3344</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">springcloud-config-server</span></span><br><span class="line">  <span class="comment">#连接远程的仓库</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">server:</span></span><br><span class="line">        <span class="attr">git:</span></span><br><span class="line">          <span class="comment"># 通过 config-server可以连接到git，访问其中的资源以及配置</span></span><br><span class="line">          <span class="comment"># skip-ssl-validation: true</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">https://gitee.com/xxy8/springcloud-config.git</span> <span class="comment">#自己远程仓库的https地址</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">xxy8</span></span><br><span class="line">          <span class="attr">password:</span> <span class="string">&#x27;xxy580108&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="7">
<li>启动类加@EnableConfigServe</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableConfigServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConfigServer_3344</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(ConfigServer_3344.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="8">
<li>输入<code>localhost:3344/application-dev.yml</code>进行测试</li>
</ol>
<h3 id="9-3-config-client开发"><a href="#9-3-config-client开发" class="headerlink" title="9.3 config-client开发"></a>9.3 config-client开发</h3><ol>
<li>新建config-client.yml文件</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#启动环境选择的配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#springboot启动多环境的配置</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8201</span></span><br><span class="line"><span class="comment">#spring的配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">springcloud-config-client-dev</span></span><br><span class="line"><span class="comment">#Eureka的配置。 服务注册到Eureka中，需要一个路径地址</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:7001/eureka</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8202</span></span><br><span class="line"><span class="comment">#spring的配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">test</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">springcloud-config-client-test</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#Eureka的配置。 服务注册到Eureka中，需要一个路径地址</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:7001/eureka</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>提交到码云</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GitBash打开命令工具</span><br><span class="line">cd 至 springcloud-config</span><br><span class="line"> </span><br><span class="line">git add .  将文件添加到暂存区</span><br><span class="line"> </span><br><span class="line">git status 查看状态</span><br><span class="line"> </span><br><span class="line">git commit -m “一次提交” 本地提交,-m为提交时写的信息</span><br><span class="line"> </span><br><span class="line">git push origin master 提交到远程的当前路径分枝</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>导入依赖</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springcloud<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xxy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springcloud-config-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--springcloud-config启动的配置 和服务端的不同--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>创建application.yml，并配置</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#用户级别的配置 配置去读取谁</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">springcloud-config-client-3355</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li>创建bootstrap.yml,配置</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 系统级别的配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">config-client</span> <span class="comment"># 需要从git上读取的资源名称，不要后缀</span></span><br><span class="line">      <span class="attr">profile:</span> <span class="string">dev</span> <span class="comment">#dev环境端口：8201 test环境端口：8202</span></span><br><span class="line">      <span class="attr">label:</span> <span class="string">master</span> <span class="comment">#需要在git上的哪个分支拿</span></span><br><span class="line">      <span class="comment">#连接到3344服务，中转站的形式连接服务端访问远程地址</span></span><br><span class="line">      <span class="attr">uri:</span> <span class="string">http://localhost:3344</span></span><br></pre></td></tr></table></figure>

<ol start="6">
<li>启动类</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.springcloud;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023-03-21-23:32</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConfigClient_8201</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(ConfigClient_8201.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="7">
<li>Controller</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.springcloud.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023-03-21-23:30</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//@Value为git上的client-config的值</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConfigClientController</span> &#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.application.name&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String applicationName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;eureka.client.service-url.defaultZone&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String eurekaServer;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;server.port&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String port;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/config&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getConfig</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;applicationName: &quot;</span>+applicationName+</span><br><span class="line">                <span class="string">&quot;eurekaServer: &quot;</span>+eurekaServer+</span><br><span class="line">                <span class="string">&quot;port: &quot;</span>+port;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="8">
<li>输入<code>http://localhost:8201/config</code>进行测试,结果为：</li>
</ol>
<blockquote>
<p>applicationName: springcloud-config-client-deveurekaServer: <a href="http://localhost:7001/eurekaport">http://localhost:7001/eurekaport</a>: 8201</p>
</blockquote>
<h3 id="9-4-实际开发"><a href="#9-4-实际开发" class="headerlink" title="9.4 实际开发"></a>9.4 实际开发</h3><ol>
<li>修改eureka配置文件，将配置加入码云中</li>
</ol>
<ul>
<li>config-eureka.yml</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">7001</span></span><br><span class="line"><span class="comment">#spring的配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">springcloud-config-eureka</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">localhost</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span> <span class="comment">#false表示不向注册中心注册自己</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span> <span class="comment">#false表示自己就是注册中心，我的职责就是维护服务实例，并不需要去搜索服务</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="comment">#设置与eureka server交互的地址查询服务和注册服务都需要依赖这个地址</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">7001</span></span><br><span class="line"><span class="comment">#spring的配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">test</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">springcloud-config-eureka</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">localhost</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span> <span class="comment">#false表示不向注册中心注册自己</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span> <span class="comment">#false表示自己就是注册中心，我的职责就是维护服务实例，并不需要去搜索服务</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="comment">#设置与eureka server交互的地址查询服务和注册服务都需要依赖这个地址</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>将user:8081提供者配置文件改变</li>
</ol>
<ul>
<li>config-user.yml</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.xxy.cloud.pojo</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> [<span class="string">classpath:mapper/*.xml</span>]</span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">springcloud-config-user</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://127.0.0.1:3306/temp1?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">&#x27;root&#x27;</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">db-type:</span> <span class="string">com.alibaba.druid-spring-boot-starter</span></span><br><span class="line">      <span class="attr">max-active:</span> <span class="number">20</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:7001/eureka</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="comment">#修改Eureka中status的默认描述信息。不配置默认为DESKTOP-XXX描述</span></span><br><span class="line">    <span class="attr">instance-id:</span> <span class="string">springcloud-server-provider</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.xxy.cloud.pojo</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> [<span class="string">classpath:mapper/*.xml</span>]</span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">test</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">springcloud-config-user</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://127.0.0.1:3306/temp1?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">&#x27;root&#x27;</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">db-type:</span> <span class="string">com.alibaba.druid-spring-boot-starter</span></span><br><span class="line">      <span class="attr">max-active:</span> <span class="number">20</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:7001/eureka</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="comment">#修改Eureka中status的默认描述信息。不配置默认为DESKTOP-XXX描述</span></span><br><span class="line">    <span class="attr">instance-id:</span> <span class="string">springcloud-server-provider</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>提交到码云</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GitBash打开命令工具</span><br><span class="line"><span class="built_in">cd</span> 至 springcloud-config</span><br><span class="line"> </span><br><span class="line">git add .  将文件添加到暂存区</span><br><span class="line"> </span><br><span class="line">git status 查看状态</span><br><span class="line"> </span><br><span class="line">git commit -m “一次提交” 本地提交,-m为提交时写的信息</span><br><span class="line"> </span><br><span class="line">git push origin master 提交到远程的当前路径分枝</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>新建项目，导入依赖</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springcloud<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xxy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springcloud-config-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--springcloud-config启动的配置 和服务端的不同--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li>applicaation.yml</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">springcloud-config-eureka</span></span><br></pre></td></tr></table></figure>

<ol start="6">
<li>bootstrap.yml</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 系统级别的配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">config-eureka</span> <span class="comment"># 需要从git上读取的资源名称，不要后缀</span></span><br><span class="line">      <span class="attr">profile:</span> <span class="string">dev</span> <span class="comment">#dev环境端口：8201 test环境端口：8202</span></span><br><span class="line">      <span class="attr">label:</span> <span class="string">master</span> <span class="comment">#需要在git上的哪个分支拿</span></span><br><span class="line">      <span class="comment">#连接到3344服务，中转站的形式连接服务端访问远程地址</span></span><br><span class="line">      <span class="attr">uri:</span> <span class="string">http://localhost:3344</span></span><br></pre></td></tr></table></figure>

<ol start="7">
<li><p>其他复制 springcloud-eureka所有的内容,除配置文件，进行测试<code>http://localhost:3344/config-eureka-dev.yml</code>,<code>http://localhost:7001/</code></p>
</li>
<li><p>复制springcloud-provider-user所有内容</p>
</li>
<li><p>修改application.yml</p>
</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">springcloud-config-user</span></span><br></pre></td></tr></table></figure>

<ol start="10">
<li>新增bootstrap.yml文件</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 系统级别的配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">config-user</span> <span class="comment"># 需要从git上读取的资源名称，不要后缀</span></span><br><span class="line">      <span class="attr">profile:</span> <span class="string">dev</span> <span class="comment">#dev环境端口：8201 test环境端口：8202</span></span><br><span class="line">      <span class="attr">label:</span> <span class="string">master</span> <span class="comment">#需要在git上的哪个分支拿</span></span><br><span class="line">      <span class="comment">#连接到3344服务，中转站的形式连接服务端访问远程地址</span></span><br><span class="line">      <span class="attr">uri:</span> <span class="string">http://localhost:3344</span></span><br></pre></td></tr></table></figure>

<ol start="11">
<li>分别输入<code>http://localhost:3344/config-user-dev.yml</code>,<code>http://localhost:7001/</code>,<code>localhost:8081/user/select/</code>进行测试，能够显示结果说明Springcloud config成功</li>
</ol>
<h2 id="10-总结"><a href="#10-总结" class="headerlink" title="10. 总结"></a>10. 总结</h2><p>本文以Springcloud Netflix为例子主要了解了微服务的网关 、服务注册与发现、负载均衡（通信）、服务熔断，其他的像监控、Spring Cloud Config，这些，其他微服务像Spring Alibaba可以以此为例子学习和对比。</p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring</title>
    <url>/2023/03/17/Spring/</url>
    <content><![CDATA[<blockquote>
<center>锐锋产乎钝石,明火炽乎暗木</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h2><ul>
<li><a href="https://spring.io/projects/spring-framework#support">Spring官方网站</a></li>
</ul>
<h3 id="1-1-定义"><a href="#1-1-定义" class="headerlink" title="1.1 定义"></a>1.1 定义</h3><blockquote>
<p>Spring认证框架是一个开放源代码的J2EE应用程序框架，由Rod Johnson发起，是针对bean的生命周期进行管理的轻量级容器（lightweight container）。</p>
</blockquote>
<h3 id="1-2-背景"><a href="#1-2-背景" class="headerlink" title="1.2 背景"></a>1.2 背景</h3><ul>
<li>2002年，Spring框架雏形：interface21框架</li>
<li>2004年3月24日，发布1.0正式版本</li>
<li>Rod Johnson，Spring Framework创始人，音乐学家，轮子理论</li>
<li>SSH：Struts，Spring，Hibernate或SpringMVC,Spring,Hibernate</li>
<li>SSM：SpringMVC,Spring,Mybatis</li>
<li>SpringBoot：约定大于配置</li>
<li>SpringCloud</li>
</ul>
<h3 id="1-3-理念"><a href="#1-3-理念" class="headerlink" title="1.3 理念"></a>1.3 理念</h3><p>使现有技术更加容易使用，本身是一个大杂烩，整合了现在的技术框架</p>
<h3 id="1-4-获取"><a href="#1-4-获取" class="headerlink" title="1.4 获取"></a>1.4 获取</h3><ul>
<li><a href="https://github.com/spring-projects/spring-framework">github地址</a></li>
<li><a href="https://mvnrepository.com/">maven仓库</a></li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><a href="https://repo1.maven.org/maven2/">maven下载包的地址</a></li>
</ul>
<h3 id="1-5-优点"><a href="#1-5-优点" class="headerlink" title="1.5 优点"></a>1.5 优点</h3><ul>
<li>开源、免费的框架（容器）</li>
<li>轻量级、非入侵式的框架</li>
<li>控制反转（IOC）、面向切面编程（AOP）</li>
<li>支持事务的处理，对框架整合的支持</li>
</ul>
<h3 id="1-6-组成"><a href="#1-6-组成" class="headerlink" title="1.6 组成"></a>1.6 组成</h3><p><img src="https://xxy8.github.io/images/ssm1.jpg" alt="图片"></p>
<h2 id="2-IOC（Inversion-of-Control思想，DI是其一种实现方法）"><a href="#2-IOC（Inversion-of-Control思想，DI是其一种实现方法）" class="headerlink" title="2. IOC（Inversion of Control思想，DI是其一种实现方法）"></a>2. IOC（Inversion of Control思想，DI是其一种实现方法）</h2><blockquote>
<p>有很多实现方式，注解零配置（约定大于配置）、XML配置</p>
</blockquote>
<h3 id="2-1-核心内容"><a href="#2-1-核心内容" class="headerlink" title="2.1 核心内容"></a>2.1 核心内容</h3><blockquote>
<p>IOC控制反转是一种设计思想，没有IOC的程序，对象的创建和对象间的依赖关系完全依赖，有IOC后，对象的创建，管理，装配由Spring控制</p>
</blockquote>
<h3 id="2-2-IOC创建对象"><a href="#2-2-IOC创建对象" class="headerlink" title="2.2 IOC创建对象"></a>2.2 IOC创建对象</h3><blockquote>
<p>在配置文件加载的时候，bean就被实例化了</p>
</blockquote>
<ul>
<li>构造器注入</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;hello&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.xxy.entity.Hello&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--使用下标赋值index--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;constructor-arg index=&quot;0&quot; value=&quot;spring&quot;&gt;&lt;/constructor-arg&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--不建议使用类型type，不能处理多个参数--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;constructor-arg type=&quot;java.lang.String&quot; value=&quot;spring1&quot;&gt;&lt;/constructor-arg&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--使用参数名 name--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;spring2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>set方式注入【依赖注入DI】<ul>
<li>实体类</li>
</ul>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Hello hello;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String[] book;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; hobbys;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,String&gt; cards;</span><br><span class="line">    <span class="keyword">private</span> Set&lt;String&gt; games;</span><br><span class="line">    <span class="keyword">private</span> Properties info;</span><br><span class="line">    <span class="keyword">private</span> String wife;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//。。。省略toString和getset方法</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;hello&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.xxy.entity.Hello&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;x&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.xxy.entity.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--普通值注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;zs&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;23&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Bean注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hello&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;hello&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--数组注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;book&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>《西游记》<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>《红楼梦》<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--List注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hobbys&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>听歌<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>看电影<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Map注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cards&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;身份证&quot;</span> <span class="attr">value</span>=<span class="string">&quot;22&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;银行卡&quot;</span> <span class="attr">value</span>=<span class="string">&quot;122&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Set注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;games&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>LOL<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>CS<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--null注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;wife&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">null</span>&gt;</span><span class="tag">&lt;/<span class="name">null</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Properties注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;学号&quot;</span>&gt;</span>202211228<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;sex&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>其他方式注入</li>
</ul>
<blockquote>
<p>注意p和c标签不能直接使用，需要导入命名空间</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">xmlns:p=&quot;http://www.springframework.org/schema/p&quot;</span><br><span class="line">       xmlns:c=&quot;http://www.springframework.org/schema/c&quot;</span><br></pre></td></tr></table></figure>

<ul>
<li>p标签注入，相当于property</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;hello1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.xxy.entity.Hello&quot;</span> <span class="attr">p:name</span>=<span class="string">&quot;s&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>c标签注入，相当于构造器注入</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:c</span>=<span class="string">&quot;http://www.springframework.org/schema/c&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;hello1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.xxy.entity.Hello&quot;</span> <span class="attr">p:name</span>=<span class="string">&quot;s&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;hello2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.xxy.entity.Hello&quot;</span> <span class="attr">c:name</span>=<span class="string">&quot;s2&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="3-Spring-配置"><a href="#3-Spring-配置" class="headerlink" title="3. Spring 配置"></a>3. Spring 配置</h2><h3 id="3-1-别名"><a href="#3-1-别名" class="headerlink" title="3.1 别名"></a>3.1 别名</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">alias</span> <span class="attr">name</span>=<span class="string">&quot;hello&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;hello1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">alias</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-2-Bean的配置"><a href="#3-2-Bean的配置" class="headerlink" title="3.2 Bean的配置"></a>3.2 Bean的配置</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">    <span class="comment">&lt;!--id:bean唯一标识符，相当于对象名--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--class：bean对象所对应的全限定名：包名+类型--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--name：也是别名，比alias功能更丰富，可以同时取多个--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.xxy.service.UserService&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;iUserDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;userDaoMysql&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-3-import"><a href="#3-3-import" class="headerlink" title="3.3 import"></a>3.3 import</h3><blockquote>
<p>用于合并多个配置文件，多用于团队开发</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;beans.xml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">import</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;beans1.xml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">import</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="3-4-bean作用域"><a href="#3-4-bean作用域" class="headerlink" title="3.4 bean作用域"></a>3.4 bean作用域</h3><blockquote>
<p>scope默认是单例，singleton，prototype每次get产生一个新对象，其余requese、session、application这些只在web中使用</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;hello1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.xxy.entity.Hello&quot;</span> <span class="attr">p:name</span>=<span class="string">&quot;s&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;singleton&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;hello2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.xxy.entity.Hello&quot;</span> <span class="attr">c:name</span>=<span class="string">&quot;s&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;singleton&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-5-Bean自动装配"><a href="#3-5-Bean自动装配" class="headerlink" title="3.5 Bean自动装配"></a>3.5 Bean自动装配</h3><ul>
<li>在XML显示的配置</li>
</ul>
<blockquote>
<p>byName需要保证bean的id唯一，byType需要保证bean的class唯一，而且都要和set方法的值或类型一致</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;hello1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.xxy.entity.Hello&quot;</span> <span class="attr">p:name</span>=<span class="string">&quot;s&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;singleton&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;hello2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.xxy.entity.Hello&quot;</span> <span class="attr">c:name</span>=<span class="string">&quot;s&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;singleton&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byType&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>在java中显示配置</li>
</ul>
<blockquote>
<p>jdk1.5支持注解，spring2.5支持注解</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>@Autowired可以直接在属性上使用，也可以在Set方式上使用,通过ByType实现</p>
</blockquote>
<table>
<thead>
<tr>
<th>序号</th>
<th>注解</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>@Qualifier(value &#x3D; “hell01”)</td>
<td>@Autowired环境复杂，可以通过此注解指定唯一bean注入</td>
</tr>
<tr>
<td>2</td>
<td>@Resource</td>
<td>首先通过byName寻找，找不到通过byType寻找</td>
</tr>
<tr>
<td>3</td>
<td>@Nullable</td>
<td>标记这个注解，说明允许为空</td>
</tr>
</tbody></table>
<ul>
<li>隐式的自动装配</li>
</ul>
<h3 id="3-6-Java配置Spring"><a href="#3-6-Java配置Spring" class="headerlink" title="3.6 Java配置Spring"></a>3.6 Java配置Spring</h3><blockquote>
<p>spring4之后成为了核心功能，以前是一个子项目，SpringBoot很常见</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">getUser</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-使用注解开发"><a href="#4-使用注解开发" class="headerlink" title="4. 使用注解开发"></a>4. 使用注解开发</h2><blockquote>
<p>在spring4之后，使用注解必须保证aop的包导入，然后是命名空间约束，维护较为复杂，不是所有场景能够使用</p>
</blockquote>
<table>
<thead>
<tr>
<th>序号</th>
<th>注解</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>@Component</td>
<td>组件，放在类上，说明被Spring管理</td>
</tr>
<tr>
<td>2</td>
<td>@Value(value &#x3D; “li”)</td>
<td>属性注入，最好放在set方法上</td>
</tr>
<tr>
<td>3</td>
<td>@Repository</td>
<td>标记这个注解，说明是数据访问层</td>
</tr>
<tr>
<td>4</td>
<td>@Service</td>
<td>标识为业务逻辑层</td>
</tr>
<tr>
<td>5</td>
<td>@Controller</td>
<td>标识为控制层</td>
</tr>
<tr>
<td>6</td>
<td>@Scope(value &#x3D; “singleton”)</td>
<td>bean作用域</td>
</tr>
<tr>
<td>7</td>
<td>@Configuration</td>
<td>用java配置spring，标识为配置类，通常和@Bean一起使用，类似于beans</td>
</tr>
</tbody></table>
<h2 id="5-AOP（Aspect-Oriented-Programming）"><a href="#5-AOP（Aspect-Oriented-Programming）" class="headerlink" title="5. AOP（Aspect Oriented Programming）"></a>5. AOP（Aspect Oriented Programming）</h2><h3 id="5-1-代理模式"><a href="#5-1-代理模式" class="headerlink" title="5.1 代理模式"></a>5.1 代理模式</h3><h4 id="5-1-1-静态代理"><a href="#5-1-1-静态代理" class="headerlink" title="5.1.1 静态代理"></a>5.1.1 静态代理</h4><blockquote>
<p>一个真实角色会产生一个代理角色，开发效率会降低</p>
</blockquote>
<ul>
<li>抽象角色</li>
<li>代理角色</li>
<li>真实角色</li>
<li>客户</li>
</ul>
<h4 id="5-1-2-动态代理"><a href="#5-1-2-动态代理" class="headerlink" title="5.1.2 动态代理"></a>5.1.2 动态代理</h4><blockquote>
<p>代理类是动态生成的，Proxy，InvocationHandler，本质是使用反射机制实现的</p>
</blockquote>
<ul>
<li>基于接口【Jdk动态代理】</li>
<li>基于类【cglib动态代理】</li>
<li>Java字节码【javassist】</li>
</ul>
<h3 id="5-2-AOP（默认为JDK动态代理）"><a href="#5-2-AOP（默认为JDK动态代理）" class="headerlink" title="5.2 AOP（默认为JDK动态代理）"></a>5.2 AOP（默认为JDK动态代理）</h3><h4 id="5-2-1-通过Spring的AOP自带的API实现"><a href="#5-2-1-通过Spring的AOP自带的API实现" class="headerlink" title="5.2.1 通过Spring的AOP自带的API实现"></a>5.2.1 通过Spring的AOP自带的API实现</h4><ul>
<li>导包</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>被代理的类</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IUserService</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">update</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">select</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">IUserService</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;增加&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;删除&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;修改&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">select</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;查询&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>代理</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.MethodBeforeAdvice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Log</span> <span class="keyword">implements</span> <span class="title class_">MethodBeforeAdvice</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">(Method method, Object[] objects, Object o)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        System.out.println(o.getClass().getName()+<span class="string">&quot;的&quot;</span> + method.getName()+<span class="string">&quot;被执行了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>配置文件</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.xxy&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userServiceImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.xxy.service.UserServiceImpl&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;log&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.xxy.utils.Log&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置aop,需要aop约束--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--切入点,需要执行的位置 修饰符 全包名.类名.方法（参数）--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;pointcut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.xxy.service.UserServiceImpl.*(..))&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;log&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointcut&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:advisor</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>测试</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xxy.config.MyConfig;</span><br><span class="line"><span class="keyword">import</span> com.xxy.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.xxy.service.IUserService;</span><br><span class="line"><span class="keyword">import</span> com.xxy.service.UserServiceImpl;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.AnnotationConfigApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;applicationConfiger.xml&quot;</span>);</span><br><span class="line">        <span class="comment">//只能是接口</span></span><br><span class="line">        <span class="type">IUserService</span> <span class="variable">userServiceImpl</span> <span class="operator">=</span> (IUserService) context.getBean(<span class="string">&quot;userServiceImpl&quot;</span>);</span><br><span class="line">        userServiceImpl.delete();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="5-2-2-自定义的切面实现"><a href="#5-2-2-自定义的切面实现" class="headerlink" title="5.2.2 自定义的切面实现"></a>5.2.2 自定义的切面实现</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置切面 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">&quot;myAspect&quot;</span>&gt;</span></span><br><span class="line">		  <span class="comment">&lt;!-- 3.1 配置切入点，通知最后增强哪些方法 --&gt;</span></span><br><span class="line">		  <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.itheima.jdk.*.*(..))&quot;</span></span></span><br><span class="line"><span class="tag">				                                      <span class="attr">id</span>=<span class="string">&quot;myPointCut&quot;</span> /&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 3.2 关联通知Advice和切入点pointCut --&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 3.2.1 前置通知 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">&quot;myBefore&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointCut&quot;</span> /&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 3.2.2 后置通知,在方法返回之后执行，就可以获得返回值</span></span><br><span class="line"><span class="comment">			 returning属性：用于设置后置通知的第二个参数的名称,类型是Object --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">aop:after-returning</span> <span class="attr">method</span>=<span class="string">&quot;myAfterReturning&quot;</span></span></span><br><span class="line"><span class="tag">				<span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointCut&quot;</span> <span class="attr">returning</span>=<span class="string">&quot;returnVal&quot;</span> /&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 3.2.3 环绕通知 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">aop:around</span> <span class="attr">method</span>=<span class="string">&quot;myAround&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointCut&quot;</span> /&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 3.2.4 抛出通知：用于处理程序发生异常--&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- * 注意：如果程序没有异常，将不会执行增强 --&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- * throwing属性：用于设置通知第二个参数的名称，类型Throwable --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">aop:after-throwing</span> <span class="attr">method</span>=<span class="string">&quot;myAfterThrowing&quot;</span></span></span><br><span class="line"><span class="tag">				<span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointCut&quot;</span> <span class="attr">throwing</span>=<span class="string">&quot;e&quot;</span> /&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 3.2.5 最终通知：无论程序发生任何事情，都将执行 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">method</span>=<span class="string">&quot;myAfter&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointCut&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="5-2-3-注解实现"><a href="#5-2-3-注解实现" class="headerlink" title="5.2.3 注解实现"></a>5.2.3 注解实现</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;annotationPointCut&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.xxy.utils.AnnotationPointCut&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:aspectj-autoproxy</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Before;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AnnotationPointCut</span> &#123;</span><br><span class="line">    <span class="meta">@Before(&quot;execution(* com.xxy.service.UserServiceImpl.*(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;执行前&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>优先级：环绕前-方法执行前-方法-环绕后-方法执行后-最终执行</p>
<ul>
<li>cglib动态代理</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span> <span class="attr">proxy-target-class</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:aspectj-autoproxy</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="6-整合Mybatis"><a href="#6-整合Mybatis" class="headerlink" title="6. 整合Mybatis"></a>6. 整合Mybatis</h2><h3 id="6-1-导包"><a href="#6-1-导包" class="headerlink" title="6.1 导包"></a>6.1 导包</h3><ul>
<li><p>spring相关</p>
</li>
<li><p>spring-mybatis【注意版本】<a href="http://mybatis.org/spring/zh/index.html">spring-mybatis</a></p>
</li>
</ul>
<table>
<thead>
<tr>
<th>MyBatis-Spring</th>
<th>MyBatis</th>
<th>Spring Framework</th>
<th>Spring Batch</th>
<th>Java</th>
</tr>
</thead>
<tbody><tr>
<td><strong>3.0</strong></td>
<td>3.5+</td>
<td>6.0+</td>
<td>5.0+</td>
<td>Java 17+</td>
</tr>
<tr>
<td><strong>2.1</strong></td>
<td>3.5+</td>
<td>5.x</td>
<td>4.x</td>
<td>Java 8+</td>
</tr>
<tr>
<td><strong>2.0</strong></td>
<td>3.5+</td>
<td>5.x</td>
<td>4.x</td>
<td>Java 8+</td>
</tr>
<tr>
<td><strong>1.3</strong></td>
<td>3.4+</td>
<td>3.2.2+</td>
<td>2.1+</td>
<td>Java 6+</td>
</tr>
</tbody></table>
<ul>
<li>mybatis相关</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xxy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring03<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mybatis.version</span>&gt;</span>3.2.6<span class="tag">&lt;/<span class="name">mybatis.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mysql.version</span>&gt;</span>5.1.30<span class="tag">&lt;/<span class="name">mysql.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aspectjweaver.version</span>&gt;</span>1.9.6<span class="tag">&lt;/<span class="name">aspectjweaver.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">springjdbc.version</span>&gt;</span>5.2.12.RELEASE<span class="tag">&lt;/<span class="name">springjdbc.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mybatis-spring.version</span>&gt;</span>2.0.4<span class="tag">&lt;/<span class="name">mybatis-spring.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--导入依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mysql驱动--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mybatis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aspectjweaver.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring操作数据库还需要一个spring-jdbc--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;springjdbc.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis-spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 如果不添加此节点mybatis的mapper.xml文件都会被漏掉。 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="6-2-编写配置文件"><a href="#6-2-编写配置文件" class="headerlink" title="6.2 编写配置文件"></a>6.2 编写配置文件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DriverManagerDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://127.0.0.1:3306/temp1?useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=utf8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--   &lt;property name=&quot;configLocation&quot; value=&quot;classpath:mybatis-config.xml&quot;&gt;&lt;/property&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSession&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionTemplate&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="6-3-编写实体类"><a href="#6-3-编写实体类" class="headerlink" title="6.3 编写实体类"></a>6.3 编写实体类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="comment">//...省略getset、tostring方法</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xxy.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">selectAllUser</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xxy.entity.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.SqlSessionTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserMapperImpl</span> <span class="keyword">implements</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> SqlSessionTemplate sqlSession;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSqlSession</span><span class="params">(SqlSessionTemplate sqlSession)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sqlSession = sqlSession;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">selectAllUser</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        <span class="keyword">return</span> mapper.selectAllUser();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.xxy.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectAllUser&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.xxy.entity.User&quot;</span>&gt;</span></span><br><span class="line">    select * from user</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="6-4-测试"><a href="#6-4-测试" class="headerlink" title="6.4 测试"></a>6.4 测试</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxy.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xxy.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.xxy.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test01</span> &#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectAllUser</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;applicationConfiger.xml&quot;</span>);</span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;userMapperImpl&quot;</span>, UserMapper.class);</span><br><span class="line">        <span class="keyword">for</span> (User user : userMapper.selectAllUser()) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="7-事务"><a href="#7-事务" class="headerlink" title="7. 事务"></a>7. 事务</h2><blockquote>
<p>ACID非常重要</p>
</blockquote>
<h3 id="7-1-声明式事务-不影响代码"><a href="#7-1-声明式事务-不影响代码" class="headerlink" title="7.1 声明式事务[不影响代码]"></a>7.1 声明式事务[不影响代码]</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">    <span class="comment">&lt;!--配置事务管理器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--propagation事务传播--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;add&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">tx:method</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置事务切入--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;txPointcut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.xxy.mapper.*.*(..))&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;txPointcut&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:advisor</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 事务管理器，依赖于数据源 --&gt;</span> </span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=</span></span><br><span class="line"><span class="tag">     <span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span>	</span><br><span class="line">    <span class="comment">&lt;!--开启事务注解 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="7-2-编程式事务"><a href="#7-2-编程式事务" class="headerlink" title="7.2 编程式事务"></a>7.2 编程式事务</h3><blockquote>
<p>会改变代码结构</p>
</blockquote>
<h2 id="8-总结"><a href="#8-总结" class="headerlink" title="8. 总结"></a>8. 总结</h2><p>学习了Spring框架，最主要是IOC和AOP的理解</p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring MVC</title>
    <url>/2023/03/17/Spring-MVC/</url>
    <content><![CDATA[<blockquote>
<center>志合者，不以山海为远；道乖者，不以咫尺为近</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<h2 id="1-MVC简介"><a href="#1-MVC简介" class="headerlink" title="1. MVC简介"></a>1. MVC简介</h2><h3 id="1-1-定义"><a href="#1-1-定义" class="headerlink" title="1.1 定义"></a>1.1 定义</h3><blockquote>
<p>MVC是模型(Model)、视图(View)、控制器(Controller)的简写，是一种软件设计规范，MVC不是一种设计模式，<strong>MVC是一种架构模式</strong></p>
</blockquote>
<h3 id="1-2-背景"><a href="#1-2-背景" class="headerlink" title="1.2 背景"></a>1.2 背景</h3><ul>
<li>Model1时代：主要分为两层，视图层和模型层。逻辑基本在jsp上。jsp本质是一个Servlet</li>
<li>Model2时代：MVC：模型(dao、service) 视图(jsp) 控制器(Servlet)，最典型的MVC就是JSP + servlet + javabean的模式。</li>
</ul>
<h3 id="1-3-功能"><a href="#1-3-功能" class="headerlink" title="1.3 功能"></a>1.3 功能</h3><ul>
<li>将url映射到java类或java类的方法 </li>
<li>封装用户提交的数据 </li>
<li>处理请求–调用相关的业务处理–封装响应数据 </li>
<li>将响应的数据进行渲染 . jsp &#x2F; html 等表示层数据</li>
</ul>
<h3 id="1-4-常见框架"><a href="#1-4-常见框架" class="headerlink" title="1.4 常见框架"></a>1.4 常见框架</h3><ul>
<li>常见的服务器端MVC框架有：Struts、Spring MVC、ASP.NET MVC、Zend Framework、JSF</li>
<li>常见前端MVC框架：vue、angularjs、react、backbone；</li>
<li>MVC演化出了另外一些模式如：MVP、MVVM【前后端分离核心】 等</li>
</ul>
<h2 id="2-Spring-MVC概述"><a href="#2-Spring-MVC概述" class="headerlink" title="2. Spring MVC概述"></a>2. Spring MVC概述</h2><h3 id="2-1-定义"><a href="#2-1-定义" class="headerlink" title="2.1 定义"></a>2.1 定义</h3><ul>
<li><a href="https://docs.spring.io/spring-framework/docs/5.3.25/reference/html/web.html#mvc">官网</a></li>
</ul>
<blockquote>
<p>Spring MVC是Spring Framework的一部分，是基于Java实现MVC的轻量级Web框架。</p>
</blockquote>
<h3 id="2-2-特点"><a href="#2-2-特点" class="headerlink" title="2.2 特点"></a>2.2 特点</h3><ul>
<li>与Spring无缝结合，可以将mvc的bean注册到Spring，使用人多</li>
<li>约定优于配置</li>
<li>功能多：RESTful、数据验证、格式化、本地化、主题等</li>
<li>Spring的web框架围绕<strong>DispatcherServlet</strong> [ 调度Servlet ] 设计，DispatcherServlet是一个实际的Servlet (它继承自HttpServlet 基类）</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DispatcherServlet</span> <span class="keyword">extends</span> <span class="title class_">FrameworkServlet</span></span><br><span class="line"><span class="number">2.</span> <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">FrameworkServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServletBean</span> <span class="keyword">implements</span> <span class="title class_">ApplicationContextAware</span> &#123;</span><br><span class="line"><span class="number">3.</span> <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">HttpServletBean</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> <span class="keyword">implements</span> <span class="title class_">EnvironmentCapable</span>, EnvironmentAware &#123;</span><br></pre></td></tr></table></figure>

<h3 id="2-3-Spring-MVC原理和流程"><a href="#2-3-Spring-MVC原理和流程" class="headerlink" title="2.3 Spring MVC原理和流程"></a>2.3 Spring MVC原理和流程</h3><blockquote>
<p><strong>当发起请求时被前置的控制器拦截到请求，根据请求参数生成代理请求，找到请求对应的实际控制器，控制器处理请求，创建数据模型，访问数据库，将模型响应给中心控制器，控制器使用模型与视图渲染视图结果，将结果返回给中心控制器，再将结果返回给请求者</strong></p>
</blockquote>
<p><img src="https://xxy8.github.io/images/ssm4.png" alt="Spring MVC原理和流程图"></p>
<ul>
<li>DispatcherServlet表示前置控制器，是整个SpringMVC的控制中心。用户发出请求，DispatcherServlet接收请求并拦截请求。<ul>
<li>web.xml</li>
</ul>
</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置DispatcherServlet ：这个是SpringMVC的核心：请求分发器，前端控制器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--DispatcherServlet要绑定Spring 的配置文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc-servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--启动级别：1--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">       在SpringMVC中 ，/  /*</span></span><br><span class="line"><span class="comment">       /：只匹配所有的请求，不包括jsp页面</span></span><br><span class="line"><span class="comment">       /*：匹配所有的请求，包括jsp页面,可能会404不建议</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    &lt;servlet&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;servlet-name&gt;hello&lt;/servlet-name&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;servlet-class&gt;cn.xxy.servlet.HelloServlet&lt;/servlet-class&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;/servlet&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;servlet-mapping&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;servlet-name&gt;hello&lt;/servlet-name&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;url-pattern&gt;/hello&lt;/url-pattern&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;/servlet-mapping&gt;--&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--    &lt;session-config&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;session-timeout&gt;15&lt;/session-timeout&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;/session-config&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>form.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>HandlerMapping为处理器映射。DispatcherServlet调用HandlerMapping,HandlerMapping根据请求url查找Handler。</p>
<ul>
<li>springmvc-servlet.xml【接口版】</li>
</ul>
<blockquote>
<p>缺点：一个控制器中只有一个方法handleRequest，不方便</p>
</blockquote>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Controller</span> &#123;</span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    ModelAndView <span class="title function_">handleRequest</span><span class="params">(HttpServletRequest var1, HttpServletResponse var2)</span> <span class="keyword">throws</span> Exception;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--添加 处理映射器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--添加 处理器适配器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--视图解析器:DispatcherServlet给他的ModelAndView</span></span><br><span class="line"><span class="comment">     视图解析器：模板引擎 Thymeleaf  Freemarker ...</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span> <span class="attr">id</span>=<span class="string">&quot;InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--前缀--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--后缀--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Handler--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;/hello&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.xxy.controller.HelloController&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>springmvc-servlet.xml【注解版】</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;1http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line"> ​</span><br><span class="line">    <span class="comment">&lt;!-- 自动扫描包，让指定包下的注解生效,由IOC容器统一管理 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.kuang.controller&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 让Spring MVC不处理静态资源 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    支持mvc注解驱动</span></span><br><span class="line"><span class="comment">        在spring中一般采用@RequestMapping注解来完成映射关系</span></span><br><span class="line"><span class="comment">        要想使@RequestMapping注解生效</span></span><br><span class="line"><span class="comment">        必须向上下文中注册DefaultAnnotationHandlerMapping</span></span><br><span class="line"><span class="comment">        和一个AnnotationMethodHandlerAdapter实例</span></span><br><span class="line"><span class="comment">        这两个实例分别在类级别和方法级别处理。</span></span><br><span class="line"><span class="comment">        而annotation-driven配置帮助我们自动完成上述两个实例的注入。</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></span><br><span class="line"> ​</span><br><span class="line">    <span class="comment">&lt;!-- 视图解析器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;internalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 前缀 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 后缀 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"> ​</span><br><span class="line"> <span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>HandlerExecution表示具体的Handler,其主要作用是根据url查找控制器，如上url被查找控制器为：hello</li>
<li>HandlerExecution将解析后的信息传递给DispatcherServlet,如解析控制器映射等。</li>
<li>HandlerAdapter表示处理器适配器，其按照特定的规则去执行Handler。</li>
<li>Handler让具体的Controller执行。<ul>
<li>HelloController【接口版】</li>
</ul>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.Controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">//注意：这里我们先导入Controller接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloController</span> <span class="keyword">implements</span> <span class="title class_">Controller</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ModelAndView <span class="title function_">handleRequest</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//ModelAndView 模型和视图</span></span><br><span class="line">        <span class="type">ModelAndView</span> <span class="variable">mv</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>();</span><br><span class="line">        <span class="comment">//调用业务层</span></span><br><span class="line">        <span class="comment">//封装对象，放在ModelAndView中。Model</span></span><br><span class="line">        mv.addObject(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;HelloSpringMVC!&quot;</span>);</span><br><span class="line">        <span class="comment">//封装要跳转的视图，放在ModelAndView中</span></span><br><span class="line">        mv.setViewName(<span class="string">&quot;hello&quot;</span>); <span class="comment">//: /WEB-INF/jsp/hello.jsp</span></span><br><span class="line">        <span class="keyword">return</span> mv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>HelloController【注解版】</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/hello2&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloController2</span> &#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/h2&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;helloannotion&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>Controller将具体的执行信息返回给HandlerAdapter,如ModelAndView。</li>
<li>HandlerAdapter将视图逻辑名或模型传递给DispatcherServlet。</li>
<li>DispatcherServlet调用视图解析器(ViewResolver)来解析HandlerAdapter传递的逻辑视图名</li>
<li>视图解析器将解析的逻辑视图名传给DispatcherServlet。</li>
<li>DispatcherServlet根据视图解析器解析的视图结果，调用具体的视图。</li>
<li>最终视图呈现给用户</li>
</ul>
<h3 id="2-4-RestFul-风格【不是标准】"><a href="#2-4-RestFul-风格【不是标准】" class="headerlink" title="2.4 RestFul 风格【不是标准】"></a>2.4 RestFul 风格【不是标准】</h3><blockquote>
<p>Restful就是一个资源定位及资源操作的风格。请求地址一样，但是功能可以不同！不是标准也不是协议，只是一种风格。基于这个风格设计的软件可以更简洁，更有层次，更易于实现缓存等机制</p>
</blockquote>
<ul>
<li><p>资源操作：使用POST、DELETE、PUT、GET，使用不同方法对资源进行操作，分别对应 添加、 删除、修改、查询。</p>
</li>
<li><p>注解有：</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@PathVariable</span> <span class="comment">//路经变量，放参数旁边</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/add/&#123;p1&#125;/&#123;p2&#125;&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/add/&#123;p1&#125;/&#123;p2&#125;&quot;)</span> <span class="comment">// 等同于   @RequestMapping(value = &quot;/add/&#123;p1&#125;/&#123;p2&#125;&quot;,method = RequestMethod.GET)，下面同理</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/add/&#123;p1&#125;/&#123;p2&#125;&quot;)</span></span><br><span class="line">    <span class="meta">@DeleteMapping(&quot;/add/&#123;p1&#125;/&#123;p2&#125;&quot;)</span></span><br><span class="line">    <span class="meta">@PutMapping(&quot;/add/&#123;p1&#125;/&#123;p2&#125;&quot;)</span></span><br></pre></td></tr></table></figure>

<h3 id="2-5-页面跳转方式"><a href="#2-5-页面跳转方式" class="headerlink" title="2.5 页面跳转方式"></a>2.5 页面跳转方式</h3><ol>
<li>ModelAndView： {视图解析器前缀} + viewName +{视图解析器后缀}</li>
</ol>
<blockquote>
<p>没有解耦</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 视图解析器 --&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">id</span>=<span class="string">&quot;internalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 前缀 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 后缀 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span> /&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ControllerTest1</span> <span class="keyword">implements</span> <span class="title class_">Controller</span> &#123;</span><br><span class="line"> ​</span><br><span class="line">    <span class="keyword">public</span> ModelAndView <span class="title function_">handleRequest</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//返回一个模型视图对象</span></span><br><span class="line">        <span class="type">ModelAndView</span> <span class="variable">mv</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>();</span><br><span class="line">        mv.addObject(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;ControllerTest1&quot;</span>);</span><br><span class="line">        mv.setViewName(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> mv;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>ServletAPI</li>
</ol>
<blockquote>
<p>不需要视图解析器 ,不建议使用,通过HttpServletResponse进行输出,通过HttpServletResponse实现重定向,通过HttpServletResponse实现转发</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ResultGo</span> &#123;</span><br><span class="line"> ​</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/result/t1&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">(HttpServletRequest req, HttpServletResponse rsp)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        rsp.getWriter().println(<span class="string">&quot;Hello,Spring BY servlet API&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"> ​</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/result/t2&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test2</span><span class="params">(HttpServletRequest req, HttpServletResponse rsp)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        rsp.sendRedirect(<span class="string">&quot;/index.jsp&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"> ​</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/result/t3&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test3</span><span class="params">(HttpServletRequest req, HttpServletResponse rsp)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//转发</span></span><br><span class="line">        req.setAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;/result/t3&quot;</span>);</span><br><span class="line">        req.getRequestDispatcher(<span class="string">&quot;/WEB-INF/jsp/test.jsp&quot;</span>).forward(req,rsp);</span><br><span class="line">   &#125;</span><br><span class="line"> ​</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>SpringMVC</li>
</ol>
<ul>
<li>无视图解析器</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ResultSpringMVC</span> &#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/rsm/t1&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test1</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//转发</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;/index.jsp&quot;</span>;</span><br><span class="line">   &#125;</span><br><span class="line"> ​</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/rsm/t2&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test2</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//转发二</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;forward:/index.jsp&quot;</span>;</span><br><span class="line">   &#125;</span><br><span class="line"> ​</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/rsm/t3&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test3</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//重定向</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:/index.jsp&quot;</span>;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>有视图解析器</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ResultSpringMVC2</span> &#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/rsm2/t1&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test1</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//转发</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;test&quot;</span>;</span><br><span class="line">   &#125;</span><br><span class="line"> ​</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/rsm2/t2&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test2</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//重定向</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:/index.jsp&quot;</span>;</span><br><span class="line">        <span class="comment">//return &quot;redirect:hello.do&quot;; //hello.do为另一个请求/</span></span><br><span class="line">   &#125;</span><br><span class="line"> ​</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>对比Model ，ModelMap ，ModelAndView</li>
</ol>
<table>
<thead>
<tr>
<th>序号</th>
<th>名称</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>Model</td>
<td>只有寥寥几个方法只适合用于储存数据，简化了新手对于Model对象的操作和理解；</td>
</tr>
<tr>
<td>2</td>
<td>ModelMap</td>
<td>继承了 LinkedMap ，除了实现了自身的一些方法，同样的继承 LinkedMap 的方法和特性</td>
</tr>
<tr>
<td>3</td>
<td>ModelAndView</td>
<td>可以在储存数据的同时，可以进行设置返回的逻辑视图，进行控制展示层的跳转，<strong>但没有解耦</strong></td>
</tr>
</tbody></table>
<h3 id="2-6-接收参数并绑定"><a href="#2-6-接收参数并绑定" class="headerlink" title="2.6 接收参数并绑定"></a>2.6 接收参数并绑定</h3><ol>
<li>注解</li>
</ol>
<blockquote>
<p>通过如HttpServletRequest等API得到请求数据，但推荐使用注解方式</p>
</blockquote>
<table>
<thead>
<tr>
<th>序号</th>
<th>注解</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>@RequestParam</td>
<td>绑定单个请求参数值</td>
</tr>
<tr>
<td>2</td>
<td>@PathVariable</td>
<td>绑定URI模板变量值</td>
</tr>
<tr>
<td>3</td>
<td>@CookieValue</td>
<td>绑定Cookie数据值</td>
</tr>
<tr>
<td>4</td>
<td>@RequestHeader</td>
<td>绑定请求头数据</td>
</tr>
<tr>
<td>5</td>
<td>@ModelValue</td>
<td>绑定参数到命令对象</td>
</tr>
<tr>
<td>6</td>
<td>@SessionAttributes</td>
<td>绑定命令对象到session</td>
</tr>
<tr>
<td>7</td>
<td>@RequestBody</td>
<td>绑定请求的内容区数据并能进行自动类型转换等,例如JSON和RESTful风格</td>
</tr>
<tr>
<td>8</td>
<td>@RequestPart</td>
<td>绑定“multipart&#x2F;data”数据，一般上传和下载</td>
</tr>
</tbody></table>
<ol start="2">
<li>单个请求参数值</li>
</ol>
<blockquote>
<p>@RequestParam(value&#x3D;”user_id”)</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/selectUser&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">selectUser</span><span class="params">(<span class="meta">@RequestParam(value=&quot;user_id&quot;)</span>Integer id)</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;id=&quot;</span>+id);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>对象实体</li>
</ol>
<blockquote>
<p>直接对象放入参数User user,前端传递的参数名和对象名必须一致</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/registerUser&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">registerUser</span><span class="params">(User user)</span> &#123;</span><br><span class="line">    	System.out.println(user);</span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-7-乱码"><a href="#2-7-乱码" class="headerlink" title="2.7 乱码"></a>2.7 乱码</h3><ol>
<li>前端乱码【过滤器】</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>Tomcat乱码【修改配置文件】</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">URIEncoding</span>=<span class="string">&quot;utf-8&quot;</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>json乱码</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:message-converters</span> <span class="attr">register-defaults</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.StringHttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.json.MappingJackson2HttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;objectMapper&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;failOnEmptyBeans&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>自定义编码</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.filter;</span><br><span class="line"> ​</span><br><span class="line"> <span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"> <span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"> <span class="keyword">import</span> javax.servlet.http.HttpServletRequestWrapper;</span><br><span class="line"> <span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"> <span class="keyword">import</span> java.io.IOException;</span><br><span class="line"> <span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"> <span class="keyword">import</span> java.util.Map;</span><br><span class="line"> ​</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 解决get和post请求 全部乱码的过滤器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GenericEncodingFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line"> ​</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">   &#125;</span><br><span class="line"> ​</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        <span class="comment">//处理response的字符编码</span></span><br><span class="line">        HttpServletResponse myResponse=(HttpServletResponse) response;</span><br><span class="line">        myResponse.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line"> ​</span><br><span class="line">        <span class="comment">// 转型为与协议相关对象</span></span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">httpServletRequest</span> <span class="operator">=</span> (HttpServletRequest) request;</span><br><span class="line">        <span class="comment">// 对request包装增强</span></span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">myrequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyRequest</span>(httpServletRequest);</span><br><span class="line">        chain.doFilter(myrequest, response);</span><br><span class="line">   &#125;</span><br><span class="line"> ​</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line">   &#125;</span><br><span class="line"> ​</span><br><span class="line"> &#125;</span><br><span class="line"> ​</span><br><span class="line"> <span class="comment">//自定义request对象，HttpServletRequest的包装类</span></span><br><span class="line"> <span class="keyword">class</span> <span class="title class_">MyRequest</span> <span class="keyword">extends</span> <span class="title class_">HttpServletRequestWrapper</span> &#123;</span><br><span class="line"> ​</span><br><span class="line">    <span class="keyword">private</span> HttpServletRequest request;</span><br><span class="line">    <span class="comment">//是否编码的标记</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> hasEncode;</span><br><span class="line">    <span class="comment">//定义一个可以传入HttpServletRequest对象的构造函数，以便对其进行装饰</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyRequest</span><span class="params">(HttpServletRequest request)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(request);<span class="comment">// super必须写</span></span><br><span class="line">        <span class="built_in">this</span>.request = request;</span><br><span class="line">   &#125;</span><br><span class="line"> ​</span><br><span class="line">    <span class="comment">// 对需要增强方法 进行覆盖</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Map <span class="title function_">getParameterMap</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 先获得请求方式</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">method</span> <span class="operator">=</span> request.getMethod();</span><br><span class="line">        <span class="keyword">if</span> (method.equalsIgnoreCase(<span class="string">&quot;post&quot;</span>)) &#123;</span><br><span class="line">            <span class="comment">// post请求</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 处理post乱码</span></span><br><span class="line">                request.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> request.getParameterMap();</span><br><span class="line">           &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125; <span class="keyword">else</span> <span class="keyword">if</span> (method.equalsIgnoreCase(<span class="string">&quot;get&quot;</span>)) &#123;</span><br><span class="line">            <span class="comment">// get请求</span></span><br><span class="line">            Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line">            <span class="keyword">if</span> (!hasEncode) &#123; <span class="comment">// 确保get手动编码逻辑只运行一次</span></span><br><span class="line">                <span class="keyword">for</span> (String parameterName : parameterMap.keySet()) &#123;</span><br><span class="line">                    String[] values = parameterMap.get(parameterName);</span><br><span class="line">                    <span class="keyword">if</span> (values != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; values.length; i++) &#123;</span><br><span class="line">                            <span class="keyword">try</span> &#123;</span><br><span class="line">                                <span class="comment">// 处理get乱码</span></span><br><span class="line">                                values[i] = <span class="keyword">new</span> <span class="title class_">String</span>(values[i]</span><br><span class="line">                                       .getBytes(<span class="string">&quot;ISO-8859-1&quot;</span>), <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">                           &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">                                e.printStackTrace();</span><br><span class="line">                           &#125;</span><br><span class="line">                       &#125;</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">                hasEncode = <span class="literal">true</span>;</span><br><span class="line">           &#125;</span><br><span class="line">            <span class="keyword">return</span> parameterMap;</span><br><span class="line">       &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getParameterMap();</span><br><span class="line">   &#125;</span><br><span class="line"> ​</span><br><span class="line">    <span class="comment">//取一个值</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getParameter</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        Map&lt;String, String[]&gt; parameterMap = getParameterMap();</span><br><span class="line">        String[] values = parameterMap.get(name);</span><br><span class="line">        <span class="keyword">if</span> (values == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">       &#125;</span><br><span class="line">        <span class="keyword">return</span> values[<span class="number">0</span>]; <span class="comment">// 取回参数的第一个值</span></span><br><span class="line">   &#125;</span><br><span class="line"> ​</span><br><span class="line">    <span class="comment">//取所有值</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String[] getParameterValues(String name) &#123;</span><br><span class="line">        Map&lt;String, String[]&gt; parameterMap = getParameterMap();</span><br><span class="line">        String[] values = parameterMap.get(name);</span><br><span class="line">        <span class="keyword">return</span> values;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-8-JSON"><a href="#2-8-JSON" class="headerlink" title="2.8 JSON"></a>2.8 JSON</h3><ol>
<li>定义</li>
</ol>
<blockquote>
<p>JSON(JavaScript Object Notation, JS 对象标记) 是一种轻量级的数据交换格式,独立于编程语言的<strong>文本格式</strong>来存储和表示数据</p>
</blockquote>
<ol start="2">
<li>格式</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">a</span>: <span class="string">&#x27;Hello&#x27;</span>, <span class="attr">b</span>: <span class="string">&#x27;World&#x27;</span>&#125;; <span class="comment">//这是一个对象，注意键名也是可以使用引号包裹的</span></span><br><span class="line"> <span class="keyword">var</span> json = <span class="string">&#x27;&#123;&quot;a&quot;: &quot;Hello&quot;, &quot;b&quot;: &quot;World&quot;&#125;&#x27;</span>; <span class="comment">//这是一个 JSON 字符串，本质是一个字符串</span></span><br><span class="line"><span class="keyword">var</span> obj = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="string">&#x27;&#123;&quot;a&quot;: &quot;Hello&quot;, &quot;b&quot;: &quot;World&quot;&#125;&#x27;</span>);<span class="comment">//JSON字符串转换为JavaScript 对象</span></span><br><span class="line"><span class="keyword">var</span> json = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;<span class="attr">a</span>: <span class="string">&#x27;Hello&#x27;</span>, <span class="attr">b</span>: <span class="string">&#x27;World&#x27;</span>&#125;);<span class="comment">//JavaScript 对象转换为JSON字符串</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>注解</li>
</ol>
<table>
<thead>
<tr>
<th>序号</th>
<th>名称</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>@ResponseBody</td>
<td>直接返回json对象，用于method</td>
</tr>
<tr>
<td>2</td>
<td>@RequestBody</td>
<td>用于请求的数据绑定到方法的形参中，用于形参上</td>
</tr>
<tr>
<td>3</td>
<td>@RestController</td>
<td>里面所有的方法都只会返回 json 字符串，不用再每一个方法都添加@ResponseBody</td>
</tr>
</tbody></table>
<ol start="4">
<li>开发测试</li>
</ol>
<ul>
<li>导包【jackson\fastjson】</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jackson-databind.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>实体类</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>Controller类</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.xxy.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/json1&quot;)</span></span><br><span class="line">    <span class="comment">//不会走视图解析器，会直接返回一个字符串,配合Controller使用！</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">json1</span><span class="params">()</span> <span class="keyword">throws</span> JsonProcessingException &#123;</span><br><span class="line">        <span class="comment">//创建一个jackson的对象映射器，用来解析数据 jackson  ObjectMapper</span></span><br><span class="line">        <span class="type">ObjectMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectMapper</span>();</span><br><span class="line">        <span class="comment">//创建一个对象</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;xxy&quot;</span>, <span class="number">3</span>, <span class="string">&quot;男&quot;</span>);</span><br><span class="line">        <span class="comment">//将我们的对象解析成为json格式</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> mapper.writeValueAsString(user);</span><br><span class="line">        <span class="comment">//由于@ResponseBody注解，这里会将str转成json格式返回；十分方便</span></span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>json乱码<ul>
<li>第一种解决</li>
</ul>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//produces:指定响应体返回类型和编码</span></span><br><span class="line"> <span class="meta">@RequestMapping(value = &quot;/json1&quot;,produces = &quot;application/json;charset=utf-8&quot;)</span></span><br></pre></td></tr></table></figure>

<ul>
<li>第二种解决</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:message-converters</span> <span class="attr">register-defaults</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.StringHttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.json.MappingJackson2HttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;objectMapper&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;failOnEmptyBeans&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>日期优化(getjson作为一个工具类)</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.SerializationFeature;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.logging.SimpleFormatter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JsonUtil</span> &#123;</span><br><span class="line"><span class="comment">//重载</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getJson</span><span class="params">(Object object)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getJson(object,<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">getJson</span><span class="params">(Object object, String s)</span> &#123;</span><br><span class="line">        <span class="type">ObjectMapper</span> <span class="variable">objectMapper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectMapper</span>();</span><br><span class="line">        objectMapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS,<span class="literal">false</span>);</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">simpleDateFormat</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(s);</span><br><span class="line">        objectMapper.setDateFormat(simpleDateFormat);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> objectMapper.writeValueAsString(object);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>fastjson<ul>
<li>导包</li>
</ul>
</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;fastjson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>测试</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.xxy.pojo.User;</span><br><span class="line"><span class="keyword">import</span> cn.xxy.utils.JsonUtil;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/json1&quot;)</span></span><br><span class="line">    <span class="comment">//不会走视图解析器，会直接返回一个字符串,配合Controller使用！</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">json1</span><span class="params">()</span> <span class="keyword">throws</span> JsonProcessingException &#123;</span><br><span class="line">        <span class="comment">//创建一个对象</span></span><br><span class="line"><span class="comment">//        User user = new User(&quot;xxy&quot;, 3, &quot;男&quot;);</span></span><br><span class="line">        <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">        <span class="comment">//将我们的对象解析成为json格式</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> JsonUtil.getJson(date);</span><br><span class="line">        <span class="comment">//由于@ResponseBody注解，这里会将str转成json格式返回；十分方便</span></span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/json2&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">json2</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;xxy&quot;</span>, <span class="number">3</span>, <span class="string">&quot;男&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> JSON.toJSONString(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-9-Ajax【-Asynchronous-JavaScript-and-XML】"><a href="#2-9-Ajax【-Asynchronous-JavaScript-and-XML】" class="headerlink" title="2.9 Ajax【 Asynchronous JavaScript and XML】"></a>2.9 Ajax【 Asynchronous JavaScript and XML】</h3><ol>
<li>概述</li>
</ol>
<blockquote>
<p>使用ajax技术的网页，通过在后台服务器进行少量的数据交换，就可以实现异步局部更新,框架一般用AXIOS库来使用ajax</p>
</blockquote>
<ol start="2">
<li>jQuery库的ajax</li>
</ol>
<blockquote>
<p>jQuery Ajax本质就是 XMLHttpRequest，对他进行了封装，</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">jQuery.<span class="title function_">ajax</span>(...)</span><br><span class="line">       部分参数：</span><br><span class="line">             url：请求地址</span><br><span class="line">             type：请求方式，<span class="variable constant_">GET</span>、<span class="title function_">POST</span>(<span class="number">1.9</span><span class="number">.0</span>之后用method)</span><br><span class="line">         headers：请求头</span><br><span class="line">             data：要发送的数据</span><br><span class="line">     contentType：即将发送信息至服务器的内容编码类型(默认: <span class="string">&quot;application/x-www-form-urlencoded; charset=UTF-8&quot;</span>)</span><br><span class="line">           <span class="keyword">async</span>：是否异步</span><br><span class="line">         timeout：设置请求超时时间(毫秒)</span><br><span class="line">       beforeSend：发送请求前执行的函数(全局)</span><br><span class="line">         complete：完成之后执行的回调函数(全局)</span><br><span class="line">         success：成功之后执行的回调函数(全局)</span><br><span class="line">           error：失败之后执行的回调函数(全局)</span><br><span class="line">         accepts：通过请求头发送给服务器，告诉服务器当前客户端可接受的数据类型</span><br><span class="line">         dataType：将服务器端返回的数据转换成指定类型</span><br><span class="line">           <span class="string">&quot;xml&quot;</span>: 将服务器端返回的内容转换成xml格式</span><br><span class="line">           <span class="string">&quot;text&quot;</span>: 将服务器端返回的内容转换成普通文本格式</span><br><span class="line">           <span class="string">&quot;html&quot;</span>: 将服务器端返回的内容转换成普通文本格式，在插入<span class="variable constant_">DOM</span>中时，如果包含<span class="title class_">JavaScript</span>标签，则会尝试去执行。</span><br><span class="line">         <span class="string">&quot;script&quot;</span>: 尝试将返回值当作<span class="title class_">JavaScript</span>去执行，然后再将服务器端返回的内容转换成普通文本格式</span><br><span class="line">           <span class="string">&quot;json&quot;</span>: 将服务器端返回的内容转换成相应的<span class="title class_">JavaScript</span>对象</span><br><span class="line">         <span class="string">&quot;jsonp&quot;</span>: <span class="title class_">JSON</span>P 格式使用 <span class="title class_">JSON</span>P 形式调用函数时，如 <span class="string">&quot;myurl?callback=?&quot;</span> jQuery 将自动替换 ? 为正确的函数名，以执行回调函数</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>测试</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;$Title$&lt;/title&gt;</span><br><span class="line">  &lt;%--加载动态的JQ资源--%&gt;</span><br><span class="line">  &lt;script src=&quot;https://code.jquery.com/jquery-3.4.1.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    /*</span><br><span class="line">    AJax后盾必须懂的东西：</span><br><span class="line">    url：后端接受的地址</span><br><span class="line">    data：后端接受到的请求参数，json数据格式=前后端分离时候，后端传的数据便于前端接受就是json数据</span><br><span class="line">    success:后端接受成功返回的函数</span><br><span class="line">    error:后盾失败接受返回的函数</span><br><span class="line">    */</span><br><span class="line">    function username() &#123;</span><br><span class="line">      $.post(&#123;</span><br><span class="line">        url: &quot;$&#123;pageContext.request.contextPath&#125;/a1&quot;,</span><br><span class="line">        data: &#123;&quot;name&quot;: $(&quot;#username&quot;).val()&#125;,</span><br><span class="line">        success: function (data, status) &#123;</span><br><span class="line">          alert(data);</span><br><span class="line">          console.log(&quot;data:&quot; + data);</span><br><span class="line">          console.log(&quot;status:&quot; + status);</span><br><span class="line">        &#125;,</span><br><span class="line">        error:function (e)&#123;</span><br><span class="line">          alert(&quot;error&quot; + e);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%--实现Ajax异步请求</span><br><span class="line">1 绑定单击事件</span><br><span class="line">2 单击事件函数使用Jq：$.post(&#123;&#125;)</span><br><span class="line">--%&gt;</span><br><span class="line">用户名:&lt;input type=&quot;text&quot; id=&quot;username&quot; onclick=&quot;username()&quot;&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;$Title$&lt;/title&gt;</span><br><span class="line">  &lt;%--加载动态的JQ资源--%&gt;</span><br><span class="line">  &lt;script src=<span class="string">&quot;https://code.jquery.com/jquery-3.4.1.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    AJax后盾必须懂的东西：</span></span><br><span class="line"><span class="comment">    url：后端接受的地址</span></span><br><span class="line"><span class="comment">    data：后端接受到的请求参数，json数据格式=前后端分离时候，后端传的数据便于前端接受就是json数据</span></span><br><span class="line"><span class="comment">    success:后端接受成功返回的函数</span></span><br><span class="line"><span class="comment">    error:后盾失败接受返回的函数</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    function <span class="title function_">username</span><span class="params">()</span> &#123;</span><br><span class="line">      $.post(&#123;</span><br><span class="line">        url: <span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/a1&quot;</span>,</span><br><span class="line">        data: &#123;<span class="string">&quot;name&quot;</span>: $(<span class="string">&quot;#username&quot;</span>).val()&#125;,</span><br><span class="line">        success: function (data, status) &#123;</span><br><span class="line">          alert(data);</span><br><span class="line">          console.log(<span class="string">&quot;data:&quot;</span> + data);</span><br><span class="line">          console.log(<span class="string">&quot;status:&quot;</span> + status);</span><br><span class="line">        &#125;,</span><br><span class="line">        error:function (e)&#123;</span><br><span class="line">          alert(<span class="string">&quot;error&quot;</span> + e);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%--实现Ajax异步请求</span><br><span class="line"><span class="number">1</span> 绑定单击事件</span><br><span class="line"><span class="number">2</span> 单击事件函数使用Jq：$.post(&#123;&#125;)</span><br><span class="line">--%&gt;</span><br><span class="line">用户名:&lt;input type=<span class="string">&quot;text&quot;</span> id=<span class="string">&quot;username&quot;</span> onclick=<span class="string">&quot;username()&quot;</span>&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AjaxController</span> &#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/a1&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">ajax1</span><span class="params">(String name , HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;admin&quot;</span>.equals(name))&#123;</span><br><span class="line">            response.getWriter().print(<span class="string">&quot;true&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            response.getWriter().print(<span class="string">&quot;false&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-10-拦截器"><a href="#2-10-拦截器" class="headerlink" title="2.10 拦截器"></a>2.10 拦截器</h3><blockquote>
<p>必须实现 HandlerInterceptor 接口</p>
</blockquote>
<ol>
<li>概述</li>
</ol>
<blockquote>
<p>拦截器类似于Servlet开发中的过滤器Filter,用于对处理器进行预处理和后处理</p>
</blockquote>
<p>2.过滤器与拦截器的区别</p>
<ul>
<li><p>拦截器是AOP思想的具体应用</p>
</li>
<li><p>过滤器在url-pattern中配置了&#x2F;*之后，可以对所有要访问的资源进行拦截，任何java web工程都可以使用</p>
</li>
<li><p>拦截器只会拦截访问的控制器方法， 如果访问的是jsp&#x2F;html&#x2F;css&#x2F;image&#x2F;js是不会进行拦截的，只有使用了SpringMVC框架才能使用</p>
</li>
</ul>
<ol start="3">
<li>测试</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyInterceptor</span> <span class="keyword">implements</span> <span class="title class_">HandlerInterceptor</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//return true：执行下一个拦截器</span></span><br><span class="line">        System.out.println(<span class="string">&quot;===========处理前,这里进行拦截处理=================&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;===========处理后，通常进行日志管理=================&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;===========清洁中=================&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--拦截器配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">                /**是拦截之后所有的请求，比如/admin/a1/2131</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">&quot;/**&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.ssl.config.MyInterceptor&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="2-11-文件上传下载"><a href="#2-11-文件上传下载" class="headerlink" title="2.11 文件上传下载"></a>2.11 文件上传下载</h3><blockquote>
<p>Spring MVC为文件上传提供了直接的支持，这种支持是用即插即用的MultipartResolver实现的。</p>
</blockquote>
<ol>
<li>概述</li>
</ol>
<blockquote>
<p>前端表单设置enctype为multipart&#x2F;form-data，浏览器即会采用二进制流的方式来处理表单数据，而对于文件上传的处理则涉及在服务器端解析原始的HTTP响应。在2003年，Apache Software Foundation发布了开源的Commons FileUpload组件，其很快成为Servlet&#x2F;JSP程序员上传文件的最佳选择。</p>
</blockquote>
<ol start="2">
<li>测试上传</li>
</ol>
<ul>
<li>pom.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--文件上传--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--servlet-api导入高版本的--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>index.jsp</li>
</ul>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;form action=<span class="string">&quot;/upload&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;file&quot;</span>/&gt;</span><br><span class="line">  &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;upload&quot;</span>&gt;</span><br><span class="line"> &lt;/form&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>springmvc-servlet.xml</li>
</ul>
<blockquote>
<p>id不能变，必须是multipartResolver</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--文件上传配置--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;multipartResolver&quot;</span>  <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 请求的编码格式，必须和jSP的pageEncoding属性一致，以便正确读取表单的内容，默认为ISO-8859-1 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;defaultEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;utf-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 上传文件大小上限，单位为字节(10485760=10M) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxUploadSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10485760&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxInMemorySize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;40960&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>序号</th>
<th>CommonsMultipartResolver类的方法</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>String getOriginalFilename()</td>
<td>获取上传文件的原名</td>
</tr>
<tr>
<td>2</td>
<td>InputStream getInputStream()</td>
<td>获取文件流</td>
</tr>
<tr>
<td>3</td>
<td>void transferTo(File dest)</td>
<td>将上传文件保存到一个目录文件中</td>
</tr>
</tbody></table>
<ul>
<li>FileController</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.xxy.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.commons.CommonsMultipartFile;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileController</span> &#123;</span><br><span class="line">    <span class="comment">//@RequestParam(&quot;file&quot;) 将name=file控件得到的文件封装成CommonsMultipartFile 对象</span></span><br><span class="line">    <span class="comment">//批量上传CommonsMultipartFile则为数组即可</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/upload&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">fileUpload</span><span class="params">(<span class="meta">@RequestParam(&quot;file&quot;)</span> CommonsMultipartFile file, HttpServletRequest request)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//获取文件名 : file.getOriginalFilename();</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">uploadFileName</span> <span class="operator">=</span> file.getOriginalFilename();</span><br><span class="line">        <span class="comment">//如果文件名为空，直接回到首页！</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;&quot;</span>.equals(uploadFileName)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;redirect:/WEB-INF/jsp/shangchuan.jsp&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;上传文件名：&quot;</span> + uploadFileName);</span><br><span class="line">        <span class="comment">//上传路径保存设置</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> request.getServletContext().getRealPath(<span class="string">&quot;/upload&quot;</span>);</span><br><span class="line">        <span class="comment">//如果路径不存在，创建一个</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">realPath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(path);</span><br><span class="line">        <span class="keyword">if</span> (!realPath.exists()) &#123;</span><br><span class="line">            realPath.mkdir();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;上传文件保存地址：&quot;</span> + realPath);</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> file.getInputStream(); <span class="comment">//文件输入流</span></span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">os</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="keyword">new</span> <span class="title class_">File</span>(realPath, uploadFileName)); <span class="comment">//文件输出流​</span></span><br><span class="line">        <span class="comment">//读取写出</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">while</span> ((len = is.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">            os.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">            os.flush();</span><br><span class="line">        &#125;</span><br><span class="line">        os.close();</span><br><span class="line">        is.close();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:/index.jsp&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 采用file.Transto 来保存上传的文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/upload2&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String  <span class="title function_">fileUpload2</span><span class="params">(<span class="meta">@RequestParam(&quot;file&quot;)</span> CommonsMultipartFile file, HttpServletRequest request)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//上传路径保存设置</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> request.getServletContext().getRealPath(<span class="string">&quot;/upload&quot;</span>);</span><br><span class="line">        <span class="type">File</span> <span class="variable">realPath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(path);</span><br><span class="line">        <span class="keyword">if</span> (!realPath.exists())&#123;</span><br><span class="line">            realPath.mkdir();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//上传文件地址</span></span><br><span class="line">        System.out.println(<span class="string">&quot;上传文件保存地址：&quot;</span> + realPath);</span><br><span class="line">        <span class="comment">//通过CommonsMultipartFile的方法直接写文件(注意这个时候)</span></span><br><span class="line">        file.transferTo(<span class="keyword">new</span> <span class="title class_">File</span>(realPath + <span class="string">&quot;/&quot;</span> + file.getOriginalFilename()));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:/index.jsp&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>测试下载</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/download&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">downLoad</span><span class="params">(HttpServletResponse response, HttpServletRequest request)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">      <span class="comment">//手动设置，要下载的图片地址</span></span><br><span class="line">      <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> request.getServletContext().getRealPath(<span class="string">&quot;/upload&quot;</span>);</span><br><span class="line">      <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> <span class="string">&quot;1.png&quot;</span>;</span><br><span class="line">      <span class="comment">//设置响应头</span></span><br><span class="line">      response.reset();<span class="comment">//设置页面不缓存，清空buffer</span></span><br><span class="line">      response.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">      response.setContentType(<span class="string">&quot;multipart/form-data&quot;</span>);<span class="comment">//二进制传输数据</span></span><br><span class="line">      response.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;fileName=&quot;</span> + URLEncoder.encode(fileName, <span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">      <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(path, fileName);</span><br><span class="line">      <span class="comment">//读取文件-输入流</span></span><br><span class="line">      <span class="type">InputStream</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file);</span><br><span class="line">      <span class="comment">//写入文件-输出流</span></span><br><span class="line">      <span class="type">OutputStream</span> <span class="variable">out</span> <span class="operator">=</span> response.getOutputStream();</span><br><span class="line">      <span class="type">byte</span>[] buff = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">      <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span> ((index = input.read(buff)) != -<span class="number">1</span>) &#123;</span><br><span class="line">          out.write(buff,<span class="number">0</span>,index);</span><br><span class="line">          out.flush();</span><br><span class="line">      &#125;</span><br><span class="line">      input.close();</span><br><span class="line">      out.close();</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;redirect:/index.jsp&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;a href=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/static/1.png&quot;</span>&gt;图片下载&lt;/a&gt;</span><br></pre></td></tr></table></figure>

<h2 id="3-总结"><a href="#3-总结" class="headerlink" title="3. 总结"></a>3. 总结</h2><p>本次完成Spring MVC的复习，重点在原理和流程的掌握，三部分：映射器+适配器+前端显示</p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>世界发展</title>
    <url>/2023/03/17/%E4%B8%96%E7%95%8C%E5%8F%91%E5%B1%95/</url>
    <content><![CDATA[<blockquote>
<center>所见少，则怪者多</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<table>
<thead>
<tr>
<th>序号</th>
<th>时间</th>
<th>农历</th>
<th>事件</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>1764-1869年（18世纪-19世纪）</td>
<td></td>
<td>第一次工业革命（蒸汽时代）</td>
</tr>
<tr>
<td>2</td>
<td>1840-1869年</td>
<td></td>
<td>中国战争、革命</td>
</tr>
<tr>
<td>3</td>
<td>1857年</td>
<td></td>
<td>世界经济危机</td>
</tr>
<tr>
<td>4</td>
<td>1870-1941年（19世纪中后期）</td>
<td></td>
<td>第二次工业革命（电气时代）</td>
</tr>
<tr>
<td>5</td>
<td>1870-1914年</td>
<td></td>
<td>中国战争、革命</td>
</tr>
<tr>
<td>6</td>
<td>1914年7月28日－1918年11月11日</td>
<td></td>
<td>第一次世界大战</td>
</tr>
<tr>
<td>7</td>
<td>1918-1919年</td>
<td></td>
<td>世界大瘟疫（西班牙大流感）</td>
</tr>
<tr>
<td>8</td>
<td>1918-1931年</td>
<td></td>
<td>中国革命、运动</td>
</tr>
<tr>
<td>9</td>
<td>1929年至1933年</td>
<td></td>
<td>资本主义经济危机</td>
</tr>
<tr>
<td>10</td>
<td>1931年9月18日 —1945年9月2日</td>
<td></td>
<td>第二次世界大战</td>
</tr>
<tr>
<td>11</td>
<td>1947年—1991年</td>
<td></td>
<td>世界冷战（苏美）</td>
</tr>
<tr>
<td>12</td>
<td>1949年</td>
<td></td>
<td>新中国成立</td>
</tr>
<tr>
<td>13</td>
<td>1966-1976年</td>
<td></td>
<td>文化大革命</td>
</tr>
<tr>
<td>14</td>
<td>1978年</td>
<td></td>
<td>改革开放</td>
</tr>
<tr>
<td>15</td>
<td>2002年-2003年</td>
<td></td>
<td>SARS事件（非典）</td>
</tr>
<tr>
<td>16</td>
<td>2009年</td>
<td></td>
<td>甲型H1N1流感</td>
</tr>
<tr>
<td>17</td>
<td>2019年-2022年</td>
<td></td>
<td>新型冠状病毒肺炎</td>
</tr>
<tr>
<td>18</td>
<td>2019年</td>
<td></td>
<td>中美贸易战争</td>
</tr>
<tr>
<td>19</td>
<td>2022年2月15</td>
<td></td>
<td>俄罗斯和乌克兰战争</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>探索</tag>
      </tags>
  </entry>
  <entry>
    <title>前端</title>
    <url>/2023/03/17/%E5%89%8D%E7%AB%AF/</url>
    <content><![CDATA[<blockquote>
<center>过载者沉其舟,欲胜者杀其生</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<h2 id="1-前端工具"><a href="#1-前端工具" class="headerlink" title="1. 前端工具"></a>1. 前端工具</h2><ol>
<li>工具官网</li>
</ol>
<ul>
<li><a href="https://code.visualstudio.com/">vscode</a></li>
<li><a href="https://nodejs.org/en/">nodejs</a></li>
<li><a href="https://github.com/PanJiaChen/vue-element-admin/blob/master/README.zh-CN.md">vue-element-admin</a></li>
</ul>
<ol start="2">
<li>文档官网</li>
</ol>
<ul>
<li><a href="http://nodejs.cn/">nodejs中文文档</a></li>
<li><a href="https://www.npmjs.com/">nodejs外部模块npm</a></li>
<li><a href="https://www.webpackjs.com/concepts/">webpack文档</a></li>
</ul>
<ol start="3">
<li>安装命令</li>
</ol>
<ul>
<li>node 、npm</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看版本</span></span><br><span class="line">node -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 由于新版的nodejs已经集成了npm，所以之前npm也一并安装好了。同样可以使用cmd命令行输</span></span><br><span class="line">入“npm -v”来测试是否安装成功。</span><br><span class="line">npm -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装相关环境 express快速、开放、极简的 Web 开发框架</span></span><br><span class="line">npm install express -g</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装淘宝镜像，防止下载较慢</span></span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看npm配置信息</span></span><br><span class="line">npm config list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立一个空文件夹，在命令提示符进入该文件夹 执行命令初始化</span></span><br><span class="line">npm init</span><br><span class="line"><span class="comment"># 如果想直接生成 package.json 文件，那么可以使用命令</span></span><br><span class="line">npm init -y</span><br></pre></td></tr></table></figure>

<ul>
<li>babel</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g babel-cli</span><br><span class="line"><span class="comment"># 查看是否安装成功</span></span><br><span class="line">babel --version</span><br><span class="line"><span class="comment"># 安装转码器，在项目中安装</span></span><br><span class="line">npm install --save-dev babel-preset-es2015</span><br><span class="line"><span class="comment"># 转码</span></span><br><span class="line"><span class="comment"># npm install --save-dev csv-loader xml-loader</span></span><br><span class="line"><span class="comment"># 转码结果写入一个文件</span></span><br><span class="line"><span class="built_in">mkdir</span> dist1</span><br><span class="line"><span class="comment"># --out-file 或 -o 参数指定输出文件</span></span><br><span class="line">babel src/example.js --out-file dist1/compiled.js</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">babel src/example.js -o dist1/compiled.js</span><br><span class="line"><span class="comment"># 整个目录转码</span></span><br><span class="line"><span class="built_in">mkdir</span> dist2</span><br><span class="line"><span class="comment"># --out-dir 或 -d 参数指定输出目录</span></span><br><span class="line">babel src --out-dir dist2</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">babel src -d dist2</span><br></pre></td></tr></table></figure>

<ul>
<li>webpack</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 全局安装</span></span><br><span class="line">npm install -g webpack webpack-cli</span><br><span class="line"><span class="comment"># 安装后查看版本号</span></span><br><span class="line">webpack -v</span><br></pre></td></tr></table></figure>





<h2 id="2-Nodejs"><a href="#2-Nodejs" class="headerlink" title="2. Nodejs"></a>2. Nodejs</h2><ol>
<li>概述</li>
</ol>
<blockquote>
<p>Node.js 就是运行在服务端的 JavaScript,是一个事件驱动I&#x2F;O服务端JavaScript环境，基于Google的V8引擎</p>
</blockquote>
<ol start="2">
<li>运行</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 运行文件，和javac很像</span></span><br><span class="line">node hello.js</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>测试http模块</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//导入模块</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"><span class="comment">//1. 创建 HTTP 服务器</span></span><br><span class="line">http.<span class="title function_">createServer</span>(<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.<span class="title function_">writeHead</span>(<span class="number">200</span>, &#123; <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/plain&#x27;</span> &#125;);</span><br><span class="line">    res.<span class="title function_">end</span>(<span class="string">&quot;hello okay&quot;</span>);</span><br><span class="line">  &#125;).<span class="title function_">listen</span>(<span class="number">8888</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;你Server running at http://127.0.0.1:8888/&quot;</span>);</span><br><span class="line"><span class="comment">//2. 监听一个端口 8888</span></span><br><span class="line"><span class="comment">//3. 启动 node http.js</span></span><br><span class="line"><span class="comment">//4. 浏览器打开8888</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>测试操作mysql</li>
</ol>
<ul>
<li>nodejs本地没有mysql模块，引入外部依赖</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install mysql</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> mysql  = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> connection = mysql.<span class="title function_">createConnection</span>(&#123;</span><br><span class="line">  host     : <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">  user     : <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">  password : <span class="string">&#x27;root123&#x27;</span>,</span><br><span class="line">  database : <span class="string">&#x27;tempdb&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">connection.<span class="title function_">connect</span>();</span><br><span class="line"> </span><br><span class="line">connection.<span class="title function_">query</span>(<span class="string">&#x27;SELECT * from books&#x27;</span>, <span class="keyword">function</span> (<span class="params">error, results, fields</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (error) <span class="keyword">throw</span> error;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;The solution is: &#x27;</span>, results);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">connection.<span class="title function_">end</span>();</span><br></pre></td></tr></table></figure>

<h2 id="3-ES6-ECMAScript"><a href="#3-ES6-ECMAScript" class="headerlink" title="3. ES6[ECMAScript]"></a>3. ES6[ECMAScript]</h2><ol>
<li>简述</li>
</ol>
<blockquote>
<p>ECMAScript 6.0（以下简称 ES6）是 JavaScript 语言的下一代标准，已经在 2015 年 6 月正式发布了。 它的目标，是使得 JavaScript 语言可以用来编写复杂的大型应用程序，成为企业级开发语言，泛指“下一代 JavaScript 语言”。</p>
</blockquote>
<ol start="2">
<li>新增功能</li>
</ol>
<ul>
<li>箭头函数&#x3D;&gt;</li>
<li>map(循环输出)</li>
<li>reduce（循环赋值）</li>
<li>传播操作符 […]</li>
<li>模板字符&#96;&#96;</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="string">`let adress = 你家在<span class="subst">$&#123;name&#125;</span>`</span> </span><br></pre></td></tr></table></figure>

<ul>
<li><p>声明命令</p>
<ul>
<li>let</li>
<li>const</li>
<li>class</li>
<li>import、export</li>
</ul>
</li>
<li><p>解构赋值</p>
</li>
</ul>
<blockquote>
<p>ES6允许按照一定模式，从数组和对象中提取值，对变量进行赋值，这被称为解构（Destructuring）</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> &#123; name, age &#125; = user;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(name, age);</span><br></pre></td></tr></table></figure>

<ul>
<li><p>字符处理</p>
<ul>
<li>**includes()**：返回布尔值，表示是否找到了参数字符串</li>
<li>**startsWith()**：返回布尔值，表示参数字符串是否在原字符串的头部</li>
<li>**endsWith()**：返回布尔值，表示参数字符串是否在原字符串的尾部</li>
<li><strong>repeat</strong>方法返回一个新字符串，表示将原字符串重复n次</li>
</ul>
</li>
<li><p>性能扩展</p>
<ul>
<li>字符串</li>
<li>遍历器(of)</li>
<li>正则表达式</li>
</ul>
</li>
<li><p>兼容问题</p>
</li>
</ul>
<h2 id="4-Npm【Node-Package-Manager】"><a href="#4-Npm【Node-Package-Manager】" class="headerlink" title="4. Npm【Node Package Manager】"></a>4. Npm【Node Package Manager】</h2><ol>
<li>概述</li>
</ol>
<blockquote>
<p>NPM全称Node Package Manager，是Node.js包管理工具，是全球最大的模块生态系统，里面所有的 模块都是开源免费的；也是Node.js的包管理工具，相当于后端的Maven 。</p>
</blockquote>
<ol start="2">
<li>作用</li>
</ol>
<ul>
<li>管理项目</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 建立一个空文件夹，在命令提示符进入该文件夹 执行命令初始化</span></span><br><span class="line">npm init</span><br><span class="line"><span class="comment"># 按照提示输入相关信息，如果是用默认值则直接回车即可。</span></span><br><span class="line"><span class="comment"># name: 项目名称</span></span><br><span class="line"><span class="comment"># version: 项目版本号</span></span><br><span class="line"><span class="comment"># description: 项目描述</span></span><br><span class="line"><span class="comment"># keywords: &#123;Array&#125;关键词，便于用户搜索到我们的项目</span></span><br><span class="line"><span class="comment"># 最后会生成package.json文件，这个是包的配置文件，相当于maven的pom.xml</span></span><br><span class="line"><span class="comment"># 我们之后也可以根据需要进行修改。</span></span><br><span class="line"><span class="comment"># 如果想直接生成 package.json 文件，那么可以使用命令</span></span><br><span class="line">npm init -y</span><br></pre></td></tr></table></figure>

<ul>
<li>快速下载和安装第三方nodejs模块</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用 npm install 安装依赖包的最新版，</span></span><br><span class="line"><span class="comment">#模块安装的位置：项目目录\node_modules</span></span><br><span class="line"><span class="comment">#安装会自动在项目目录下添加 package-lock.json文件，这个文件帮助锁定安装包的版本</span></span><br><span class="line"><span class="comment">#同时package.json 文件中，依赖包会被添加到dependencies节点下，类似maven中的 &lt;dependencies&gt;</span></span><br><span class="line">npm install jquery</span><br><span class="line"><span class="comment">#如果安装时想指定特定的版本</span></span><br><span class="line">npm install jquery@2.1.x</span><br><span class="line"><span class="comment">#devDependencies节点：开发时的依赖包，项目打包到生产环境的时候不包含的依赖</span></span><br><span class="line"><span class="comment">#使用 -D参数将依赖添加到devDependencies节点</span></span><br><span class="line">npm install --save-dev eslint</span><br><span class="line"><span class="comment">#或</span></span><br><span class="line">npm install -D eslint</span><br><span class="line"><span class="comment">#全局安装</span></span><br><span class="line"><span class="comment">#Node.js全局安装的npm包和工具的位置：用户目录\AppData\Roaming\npm\node_modules</span></span><br><span class="line"><span class="comment">#一些命令行工具常使用全局安装的方式</span></span><br><span class="line">npm install -g webpack</span><br><span class="line"><span class="comment">#npm管理的项目在备份和传输的时候一般不携带node_modules文件夹</span></span><br><span class="line">npm install </span><br><span class="line"><span class="comment"># 根据package.json中的配置下载依赖，初始化项目</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#更新包（更新到最新版本）</span></span><br><span class="line">npm update 包名</span><br><span class="line"><span class="comment">#全局更新</span></span><br><span class="line">npm update -g 包名</span><br><span class="line"><span class="comment">#卸载包</span></span><br><span class="line">npm uninstall 包名</span><br><span class="line"><span class="comment">#全局卸载</span></span><br><span class="line">npm uninstall -g 包名</span><br></pre></td></tr></table></figure>

<h2 id="5-Babel"><a href="#5-Babel" class="headerlink" title="5. Babel"></a>5. Babel</h2><ol>
<li>概述</li>
</ol>
<blockquote>
<p>ES6的某些高级语法在浏览器环境甚至是Node.js环境中无法执行,安装命令行转码工具Bable可以转为ES5代码</p>
</blockquote>
<ol start="2">
<li>安装</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g babel-cli</span><br><span class="line"><span class="comment"># 查看是否安装成功</span></span><br><span class="line">babel --version</span><br><span class="line"><span class="comment"># 安装转码器，在项目中安装</span></span><br><span class="line">npm install --save-dev babel-preset-es2015</span><br><span class="line"><span class="comment"># 转码</span></span><br><span class="line"><span class="comment"># npm install --save-dev csv-loader xml-loader</span></span><br><span class="line"><span class="comment"># 转码结果写入一个文件</span></span><br><span class="line"><span class="built_in">mkdir</span> dist1</span><br><span class="line"><span class="comment"># --out-file 或 -o 参数指定输出文件</span></span><br><span class="line">babel src/example.js --out-file dist1/compiled.js</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">babel src/example.js -o dist1/compiled.js</span><br><span class="line"><span class="comment"># 整个目录转码</span></span><br><span class="line"><span class="built_in">mkdir</span> dist2</span><br><span class="line"><span class="comment"># --out-dir 或 -d 参数指定输出目录</span></span><br><span class="line">babel src --out-dir dist2</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">babel src -d dist2</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>自定义脚本</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    	<span class="string">&quot;build&quot;</span>: <span class="string">&quot;babel src\\example.js -o dist\\compiled.js&quot;</span></span><br><span class="line">	&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;dev&quot;</span>:  <span class="string">&quot;babel src -d dist&quot;</span> <span class="comment">//其中dev是键（随便取、自定义）</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="6-模块化"><a href="#6-模块化" class="headerlink" title="6. 模块化"></a>6. 模块化</h2><ol>
<li>概述</li>
</ol>
<blockquote>
<p>互联网应用程序Javascript不是一种模块化编程语,不支持”模块”,异步请求需要模块化管理</p>
</blockquote>
<ol start="2">
<li>规范</li>
</ol>
<ul>
<li>CommonJS模块化规范(exports,require)</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义成员</span></span><br><span class="line"><span class="keyword">const</span> sum=<span class="keyword">function</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> subtract=<span class="keyword">function</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> a-b</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> multiply=<span class="keyword">function</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> a*b</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> divide=<span class="keyword">function</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> a/b</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 导出成员:</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>=&#123;</span><br><span class="line">    <span class="attr">sum</span>:sum,</span><br><span class="line">    <span class="attr">subtract</span>:subtract,</span><br><span class="line">    <span class="attr">multiply</span>:multiply,</span><br><span class="line">    <span class="attr">divide</span>:divide</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引入模块，注意:当前路径必须写 ./</span></span><br><span class="line"><span class="keyword">const</span> m = <span class="built_in">require</span>(<span class="string">&#x27;./sum.js&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(m);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> r1=m.<span class="title function_">sum</span>(<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">let</span> r2=m.<span class="title function_">subtract</span>(<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(r1,r2);</span><br></pre></td></tr></table></figure>

<ul>
<li>ES6模块化规范（ES6使用export和import来导出、导入模块。）</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="title function_">getList</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;获取数据列表2&#x27;</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">save</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;保存数据2&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> user <span class="keyword">from</span> <span class="string">&quot;./userApi2.js&quot;</span></span><br><span class="line">user.<span class="title function_">getList</span>()</span><br><span class="line">user.<span class="title function_">save</span>()</span><br></pre></td></tr></table></figure>

<h2 id="7-webpack"><a href="#7-webpack" class="headerlink" title="7. webpack"></a>7. webpack</h2><ol>
<li>概述</li>
</ol>
<blockquote>
<p>Webpack 是一个前端资源加载&#x2F;打包工具。它将根据模块的依赖关系进行静态分析，然后将这些模块按 照指定的规则生成对应的静态资源。多个js合成1个</p>
</blockquote>
<ol start="2">
<li>安装</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g webpack webpack-cli</span><br><span class="line">webpack -v</span><br><span class="line">npm init -y</span><br><span class="line"><span class="comment"># css</span></span><br><span class="line">npm install --save-dev style-loader css-loader</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>测试（发现项目js文件必须放在src包下，不可自定义命名包）</li>
</ol>
<ul>
<li>common.js</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">exports</span>.<span class="property">info</span> = <span class="keyword">function</span> (<span class="params">str</span>) &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>utils.js</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">exports</span>.<span class="property">add</span> = <span class="keyword">function</span> (<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>main.js</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> style = <span class="built_in">require</span>(<span class="string">&#x27;./style.css&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> common = <span class="built_in">require</span>(<span class="string">&#x27;./common&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> utils = <span class="built_in">require</span>(<span class="string">&#x27;./utils&#x27;</span>);</span><br><span class="line">common.<span class="title function_">info</span>(<span class="string">&#x27;Hello world!&#x27;</span> + utils.<span class="title function_">add</span>(<span class="number">400</span>, <span class="number">200</span>));</span><br></pre></td></tr></table></figure>

<ul>
<li>webpack.config.js</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>); <span class="comment">//Node.js内置模块</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">entry</span>: <span class="string">&#x27;./src/main.js&#x27;</span>, <span class="comment">//配置入口文件</span></span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">path</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;./dist&#x27;</span>), <span class="comment">//输出路径，__dirname：当前文件所在路径</span></span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;bundle.js&#x27;</span> <span class="comment">//输出文件</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>执行命令</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">webpack --mode=development</span><br><span class="line"><span class="comment"># 执行后查看bundle.js 里面包含了上面两个js文件的内容并进行了代码压缩</span></span><br><span class="line"><span class="comment"># 也可以配置项目的npm运行命令，修改package.json文件</span></span><br><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    //...,</span><br><span class="line">    <span class="string">&quot;dev&quot;</span>: <span class="string">&quot;webpack --mode=development&quot;</span></span><br><span class="line"> &#125;</span><br><span class="line">npm run dev </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>css的webpack.config.js</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>); <span class="comment">// Node.js内置模块</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="comment">//...,</span></span><br><span class="line">    <span class="attr">output</span>:&#123;</span><br><span class="line">        <span class="comment">// 其他配置</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [  </span><br><span class="line">            &#123;  </span><br><span class="line">                <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,    <span class="comment">//打包规则应用到以css结尾的文件上</span></span><br><span class="line">                <span class="attr">use</span>: [<span class="string">&#x27;style-loader&#x27;</span>, <span class="string">&#x27;css-loader&#x27;</span>]</span><br><span class="line">            &#125;  </span><br><span class="line">        ]  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>style.css</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: coral;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>配置webpack.config.js</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">entry</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">loaders</span>: [</span><br><span class="line">            &#123;<span class="attr">test</span>: <span class="regexp">/\.js$/</span>, <span class="attr">loader</span>: <span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">plugins</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">resolve</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">watch</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>序号</th>
<th>名称</th>
<th>功能</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>entry</td>
<td>入口文件，指定 WebPack 用哪个文件作为项目的入口</td>
<td></td>
</tr>
<tr>
<td>2</td>
<td>output</td>
<td>输出，指定 WebPack 把处理完成的文件放置到指定路径</td>
<td></td>
</tr>
<tr>
<td>3</td>
<td>module</td>
<td>模块，用于处理各种类型的文件</td>
<td></td>
</tr>
<tr>
<td>4</td>
<td>plugins</td>
<td>插件，如：热更新、代码重用等</td>
<td></td>
</tr>
<tr>
<td>5</td>
<td>resolve</td>
<td>设置路径指向</td>
<td></td>
</tr>
<tr>
<td>6</td>
<td>watch</td>
<td>监听，用于设置文件改动后直接打包</td>
<td></td>
</tr>
</tbody></table>
<h2 id="8-总结"><a href="#8-总结" class="headerlink" title="8. 总结"></a>8. 总结</h2><p>对于前端的利用有更新的了解，知道了新的知识。</p>
]]></content>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>对于计算机的探索</title>
    <url>/2023/03/17/%E5%AF%B9%E4%BA%8E%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E6%8E%A2%E7%B4%A2/</url>
    <content><![CDATA[<blockquote>
<center>半捧光阴终流水，一轮岁月始光尘</center>
</blockquote>
<p><escape><span id="more"></span></escape></p>
<h2 id="1-简述"><a href="#1-简述" class="headerlink" title="1. 简述"></a>1. 简述</h2><blockquote>
<p>本文是自己对于计算机的粗略了解，随着了解的深入，会不断修改内容，大致目录为 组成、系统、语言。</p>
</blockquote>
<h2 id="2-计算机组成"><a href="#2-计算机组成" class="headerlink" title="2. 计算机组成"></a>2. 计算机组成</h2><blockquote>
<p>组成以硬件系统和软件系统组成</p>
</blockquote>
<h3 id="2-1-硬件系统"><a href="#2-1-硬件系统" class="headerlink" title="2.1 硬件系统"></a>2.1 硬件系统</h3><ol>
<li>输入设备</li>
</ol>
<blockquote>
<p>输入设备功能是将数据、程序及其他信息，从人们熟悉的形式转换为计算机能够识别和处理的形式输入到计算机内部。 常用的输入设备有键盘、鼠标、光笔、扫描仪、数字化仪、条形码阅读器等。 </p>
</blockquote>
<ol start="2">
<li>输出设备</li>
</ol>
<blockquote>
<p>输出设备功能是将计算机内部二进制形式的数据信息转换成人们所需要的或其他设备能接受和识别的信息形式。常用的输出设备有显示器、打印机、绘图仪等。 </p>
</blockquote>
<ol start="3">
<li>存储器</li>
</ol>
<blockquote>
<p>存储器的主要功能是存放程序和数据。程序是计算机操作的依据，数据是计算机操作的对象。</p>
</blockquote>
<ol start="4">
<li>运算器</li>
</ol>
<blockquote>
<p>运算器功能是完成算术运算和逻辑运算,算术运算是指加、减、乘、除及它们的复合运算。而逻辑运算是指“与”、“或”、“非”等逻辑比较和逻辑判断等操作</p>
</blockquote>
<ol start="5">
<li>控制器</li>
</ol>
<blockquote>
<p>控制器一般由指令寄存器、指令译码器、时序电路和控制电路组成。它的基本功能是从内存取指令和执行指令。指令由操作码（操作方法）及操作数（操作对象）两部分组成</p>
</blockquote>
<ol start="6">
<li>总线</li>
</ol>
<blockquote>
<p>总线是一组能为多个部件分时共享的公共信息传送线路，分时和共享</p>
</blockquote>
<h3 id="2-2-软件系统"><a href="#2-2-软件系统" class="headerlink" title="2.2 软件系统"></a>2.2 软件系统</h3><ol>
<li>系统软件</li>
</ol>
<blockquote>
<p>操作系统【OS】、数据库管理系统【DBMS】、语言处理程序、分布式软件系统、网络软件系统、标准库程序、服务性程序</p>
</blockquote>
<ol start="2">
<li>应用软件</li>
</ol>
<blockquote>
<p>程序库软件、包套装软件、自己开发的软件</p>
</blockquote>
<h2 id="3-操作系统"><a href="#3-操作系统" class="headerlink" title="3. 操作系统"></a>3. 操作系统</h2><blockquote>
<p>调用软件能和硬件进行交互的程序</p>
</blockquote>
<h3 id="3-1-功能"><a href="#3-1-功能" class="headerlink" title="3.1 功能"></a>3.1 功能</h3><blockquote>
<p>  进程管理（Processing management） 、 处理器管理、存储器管理、设备管理、文件管理、作业管理（系统调用接口） 、用户界面、安全机制、网络通信</p>
</blockquote>
<h3 id="3-2-种类"><a href="#3-2-种类" class="headerlink" title="3.2 种类"></a>3.2 种类</h3><ul>
<li>嵌入式</li>
</ul>
<blockquote>
<p>如VxWorks、eCos、Symbian OS及Palm OS,iOS,Android</p>
</blockquote>
<ul>
<li>类 Unix</li>
</ul>
<blockquote>
<p>System V、BSD与Linux</p>
</blockquote>
<ul>
<li>Microsoft Windows</li>
<li>MacOS X</li>
<li>Google Chrome OS</li>
<li>鸿蒙</li>
</ul>
<h3 id="3-3-组成"><a href="#3-3-组成" class="headerlink" title="3.3 组成"></a>3.3 组成</h3><blockquote>
<p>   内核、驱动程序、接口库、外围 </p>
</blockquote>
<ul>
<li><p>对CPU的使用进行管理的进程调度程序</p>
</li>
<li><p>对内存分配进行管理的内存管理程序</p>
</li>
<li><p>对输入输出设备进行管理的设备驱动程序</p>
</li>
<li><p>对外存中信息进行管理的文件系统</p>
</li>
</ul>
<h3 id="3-4-特征"><a href="#3-4-特征" class="headerlink" title="3.4 特征"></a>3.4 特征</h3><blockquote>
<p>并发、共享、虚拟、异步</p>
</blockquote>
<h3 id="3-5-BIOS帮助命令"><a href="#3-5-BIOS帮助命令" class="headerlink" title="3.5 BIOS帮助命令"></a>3.5 BIOS帮助命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># windows加在命令后面可以有详细的信息</span></span><br><span class="line">/?</span><br><span class="line"><span class="comment"># 加在命令后面可以有详细的信息</span></span><br><span class="line">--<span class="built_in">help</span></span><br><span class="line"><span class="comment"># （windows、Linux）帮助</span></span><br><span class="line"><span class="built_in">help</span></span><br></pre></td></tr></table></figure>

<h2 id="4-计算机网络"><a href="#4-计算机网络" class="headerlink" title="4. 计算机网络"></a>4. 计算机网络</h2><blockquote>
<p>连接设备在协议下进行资源共享和信息传送</p>
</blockquote>
<h3 id="4-1-功能"><a href="#4-1-功能" class="headerlink" title="4.1 功能"></a>4.1 功能</h3><blockquote>
<p>数据通信、资源共享、集中管理、实现分布式处理、负荷均衡</p>
</blockquote>
<h3 id="4-2-种类"><a href="#4-2-种类" class="headerlink" title="4.2 种类"></a>4.2 种类</h3><blockquote>
<p>按地理范围标准可以把各种网络类型划分为局域网、城域网、广域网和互联网四种。</p>
</blockquote>
<h3 id="4-3-组成"><a href="#4-3-组成" class="headerlink" title="4.3 组成"></a>4.3 组成</h3><blockquote>
<p>计算机、网络操作系统、传输介质（可以是有形的，也可以是无形的，如无线网络的传输介质就是空间）以及相应的应用软件四部分</p>
</blockquote>
<h3 id="4-4-查看网络连接"><a href="#4-4-查看网络连接" class="headerlink" title="4.4 查看网络连接"></a>4.4 查看网络连接</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令用于显示各种网络相关信息,如网络连接,路由表,接口状态 (Interface Statistics),masquerade 连接,多播成员 (Multicast Memberships) 等等。 </span></span><br><span class="line">netstat</span><br><span class="line"><span class="comment"># 查看ip</span></span><br><span class="line">ipconfig</span><br></pre></td></tr></table></figure>

<h2 id="5-机器语言"><a href="#5-机器语言" class="headerlink" title="5. 机器语言"></a>5. 机器语言</h2><h3 id="5-1-简述"><a href="#5-1-简述" class="headerlink" title="5.1 简述"></a>5.1 简述</h3><blockquote>
<p>机器语言是机器能直接识别的程序语言或指令代码,机器语言使用绝对地址和绝对操作码,不同的计算机都有各自的机器语言，可以运行在计算机内的指令集。</p>
</blockquote>
<h3 id="5-2-功能"><a href="#5-2-功能" class="headerlink" title="5.2 功能"></a>5.2 功能</h3><blockquote>
<p>它是计算机的设计者通过计算机的硬件结构赋予计算机的操作功能,无需经过翻译，每一操作码在计算机内部都有相应的电路来完成它</p>
</blockquote>
<h3 id="5-3-种类"><a href="#5-3-种类" class="headerlink" title="5.3 种类"></a>5.3 种类</h3><ul>
<li>二进制代码,由操作码和操作数两部分组成</li>
<li>三进制(3^1)</li>
<li>四进制(2^2)</li>
<li>八进制(2^3)</li>
<li>九进制(3^2)</li>
<li>十进制</li>
<li>十六进制(2^4,ABCDEF)</li>
</ul>
<h3 id="5-4-组成"><a href="#5-4-组成" class="headerlink" title="5.4 组成"></a>5.4 组成</h3><p>（1）操作码。<br>（2）操作数的地址。<br>（3）操作结果的存储地址。<br>（4）下条指令的地址。</p>
<h3 id="5-5-实现Hello"><a href="#5-5-实现Hello" class="headerlink" title="5.5 实现Hello"></a>5.5 实现Hello</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0000000 457f 464c 0102 0001 0000 0000 0000 0000</span><br><span class="line">0000010 0001 003e 0001 0000 0000 0000 0000 0000</span><br><span class="line">0000020 0000 0000 0000 0000 0040 0000 0000 0000</span><br><span class="line">0000030 0000 0000 0040 0000 0000 0040 0007 0003</span><br><span class="line">0000040 0000 0000 0000 0000 0000 0000 0000 0000</span><br><span class="line">*</span><br><span class="line">0000080 0001 0000 0001 0000 0003 0000 0000 0000</span><br><span class="line">0000090 0000 0000 0000 0000 0200 0000 0000 0000</span><br><span class="line">00000a0 000d 0000 0000 0000 0000 0000 0000 0000</span><br><span class="line">00000b0 0004 0000 0000 0000 0000 0000 0000 0000</span><br><span class="line">00000c0 0007 0000 0001 0000 0006 0000 0000 0000</span><br><span class="line">00000d0 0000 0000 0000 0000 0210 0000 0000 0000</span><br><span class="line">00000e0 0027 0000 0000 0000 0000 0000 0000 0000</span><br><span class="line">00000f0 0010 0000 0000 0000 0000 0000 0000 0000</span><br><span class="line">0000100 000d 0000 0003 0000 0000 0000 0000 0000</span><br><span class="line">0000110 0000 0000 0000 0000 0240 0000 0000 0000</span><br><span class="line">0000120 0032 0000 0000 0000 0000 0000 0000 0000</span><br><span class="line">0000130 0001 0000 0000 0000 0000 0000 0000 0000</span><br><span class="line">0000140 0017 0000 0002 0000 0000 0000 0000 0000</span><br><span class="line">0000150 0000 0000 0000 0000 0280 0000 0000 0000</span><br><span class="line">0000160 0090 0000 0000 0000 0005 0000 0005 0000</span><br><span class="line">0000170 0004 0000 0000 0000 0018 0000 0000 0000</span><br><span class="line">0000180 001f 0000 0003 0000 0000 0000 0000 0000</span><br><span class="line">0000190 0000 0000 0000 0000 0310 0000 0000 0000</span><br><span class="line">00001a0 0020 0000 0000 0000 0000 0000 0000 0000</span><br><span class="line">00001b0 0001 0000 0000 0000 0000 0000 0000 0000</span><br><span class="line">00001c0 0027 0000 0004 0000 0000 0000 0000 0000</span><br><span class="line">00001d0 0000 0000 0000 0000 0330 0000 0000 0000</span><br><span class="line">00001e0 0018 0000 0000 0000 0004 0000 0002 0000</span><br><span class="line">00001f0 0004 0000 0000 0000 0018 0000 0000 0000</span><br><span class="line">0000200 6548 6c6c 2c6f 5720 726f 646c 0021 0000</span><br><span class="line">0000210 01b8 0000 ba00 000d 0000 be48 0000 0000</span><br><span class="line">0000220 0000 0000 01bf 0000 0f00 b805 003c 0000</span><br><span class="line">0000230 00bf 0000 0f00 0005 0000 0000 0000 0000</span><br><span class="line">0000240 2e00 6164 6174 2e00 6574 7478 2e00 6873</span><br><span class="line">0000250 7473 7472 6261 2e00 7973 746d 6261 2e00</span><br><span class="line">0000260 7473 7472 6261 2e00 6572 616c 742e 7865</span><br><span class="line">0000270 0074 0000 0000 0000 0000 0000 0000 0000</span><br><span class="line">0000280 0000 0000 0000 0000 0000 0000 0000 0000</span><br><span class="line">0000290 0000 0000 0000 0000 0001 0000 0004 fff1</span><br><span class="line">00002a0 0000 0000 0000 0000 0000 0000 0000 0000</span><br><span class="line">00002b0 0000 0000 0003 0001 0000 0000 0000 0000</span><br><span class="line">00002c0 0000 0000 0000 0000 0000 0000 0003 0002</span><br><span class="line">00002d0 0000 0000 0000 0000 0000 0000 0000 0000</span><br><span class="line">00002e0 0011 0000 0000 0001 0000 0000 0000 0000</span><br><span class="line">00002f0 0000 0000 0000 0000 0019 0000 0010 0002</span><br><span class="line">0000300 0000 0000 0000 0000 0000 0000 0000 0000</span><br><span class="line">0000310 6800 6c65 6f6c 772d 726f 646c 612e 6d73</span><br><span class="line">0000320 6d00 7365 6173 6567 5f00 7473 7261 0074</span><br><span class="line">0000330 000c 0000 0000 0000 0001 0000 0002 0000</span><br><span class="line">0000340 0000 0000 0000 0000 0000 0000 0000 0000</span><br><span class="line">0000350</span><br></pre></td></tr></table></figure>

<h2 id="6-汇编语言"><a href="#6-汇编语言" class="headerlink" title="6. 汇编语言"></a>6. 汇编语言</h2><h3 id="6-1-概述"><a href="#6-1-概述" class="headerlink" title="6.1 概述"></a>6.1 概述</h3><blockquote>
<p>汇编是一种直接访问计算机硬件不具有移植性的编程语言</p>
</blockquote>
<h3 id="6-2-功能"><a href="#6-2-功能" class="headerlink" title="6.2 功能"></a>6.2 功能</h3><blockquote>
<p>能够对计算机进行开发自己想要的功能和操作</p>
</blockquote>
<h3 id="6-3-种类"><a href="#6-3-种类" class="headerlink" title="6.3 种类"></a>6.3 种类</h3><blockquote>
<p>根据操作系统有不同的种类,汇编语言编译器如MASM、NASM、TASM、GAS、FASM、RADASM</p>
</blockquote>
<h3 id="6-4-组成"><a href="#6-4-组成" class="headerlink" title="6.4 组成"></a>6.4 组成</h3><blockquote>
<p>逻辑运算、算术运算、输入输出、内存运算</p>
</blockquote>
<ol>
<li>传送指令</li>
</ol>
<ul>
<li>通用数据传送指令</li>
</ul>
<blockquote>
<p><strong>MOV</strong> 传送字或字节.<br>MOVSX 先符号扩展,再传送.<br>MOVZX 先零扩展,再传送.<br>PUSH 把字压入堆栈.<br>POP 把字弹出堆栈.<br>PUSHA 把AX,CX,DX,BX,SP,BP,SI,DI依次压入堆栈.<br>POPA 把DI,SI,BP,SP,BX,DX,CX,AX依次弹出堆栈.<br>PUSHAD 把EAX,ECX,EDX,EBX,ESP,EBP,ESI,EDI依次压入堆栈.<br>POPAD 把EDI,ESI,EBP,ESP,EBX,EDX,ECX,EAX依次弹出堆栈.<br>BSWAP 交换32位寄存器里字节的顺序<br>XCHG 交换字或字节.( 至少有一个操作数为寄存器,段寄存器不可作为操作数)<br>CMPXCHG 比较并交换操作数.( 第二个操作数必须为累加器AL&#x2F;AX&#x2F;EAX )<br>XADD 先交换再累加.( 结果在第一个操作数里 )<br>XLAT 字节查表转换.<br>── BX 指向一张 256 字节的表的起点, AL 为表的索引值 (0-255,即<br>0-FFH); 返回 AL 为查表结果. ( [BX+AL]-&gt;AL )</p>
</blockquote>
<ul>
<li>目的地址传送指令</li>
</ul>
<blockquote>
<p><strong>LEA</strong> 装入有效地址.<br>例: LEA DX,string ;把偏移地址存到DX.<br>LDS 传送目标指针,把指针内容装入DS.<br>例: LDS SI,string ;把段地址:偏移地址存到DS:SI.<br>LES 传送目标指针,把指针内容装入ES.<br>例: LES DI,string ;把段地址:偏移地址存到ES:DI.<br>LFS 传送目标指针,把指针内容装入FS.<br>例: LFS DI,string ;把段地址:偏移地址存到FS:DI.<br>LGS 传送目标指针,把指针内容装入GS.<br>例: LGS DI,string ;把段地址:偏移地址存到GS:DI.<br>LSS 传送目标指针,把指针内容装入SS.<br>例: LSS DI,string ;把段地址:偏移地址存到SS:DI.</p>
</blockquote>
<ul>
<li>标志传送指令</li>
</ul>
<blockquote>
<p>LAHF 标志寄存器传送,把标志装入AH.<br>SAHF 标志寄存器传送,把AH内容装入标志寄存器.<br>PUSHF 标志入栈.<br>POPF 标志出栈.<br>PUSHD 32位标志入栈.<br>POPD 32位标志出栈.</p>
</blockquote>
<ol start="2">
<li>逻辑运算</li>
</ol>
<blockquote>
<p>AND 与运算.<br>or 或运算.<br>XOR 异或运算.<br>NOT 取反.<br>TEST 测试.(两操作数作与运算,仅修改标志位,不回送结果).<br>SHL 逻辑左移.<br>SAL 算术左移.(&#x3D;SHL)<br>SHR 逻辑右移.<br>SAR 算术右移.(&#x3D;SHR)<br>ROL 循环左移.<br>ROR 循环右移.<br>RCL 通过进位的循环左移.<br>RCR 通过进位的循环右移.<br>以上八种移位指令,其移位次数可达255次.<br>移位一次时, 可直接用操作码. 如 SHL AX,1.<br>移位&gt;1次时, 则由寄存器CL给出移位次数.<br>如 MOV CL,04<br>SHL AX,CL</p>
</blockquote>
<ol start="3">
<li>算数运算指令</li>
</ol>
<blockquote>
<p><strong>ADD</strong> 加法.<br>ADC 带进位加法.<br>INC 加 1.<br>AAA 加法的ASCII码调整.<br>DAA 加法的十进制调整.<br>SUB 减法.<br>SBB 带借位减法.<br>DEC 减 1.<br>NEC 求反(以 0 减之).<br>CMP 比较.(两操作数作减法,仅修改标志位,不回送结果).<br>AAS 减法的ASCII码调整.<br>DAS 减法的十进制调整.<br>MUL 无符号乘法.<br>IMUL 整数乘法.<br>以上两条,结果回送AH和AL(字节运算),或DX和AX(字运算),<br>AAM 乘法的ASCII码调整.<br>DIV 无符号除法.<br>IDIV 整数除法.<br>以上两条,结果回送:<br>商回送AL,余数回送AH, (字节运算);<br>或 商回送AX,余数回送DX, (字运算).<br>AAD 除法的ASCII码调整.<br>CBW 字节转换为字. (把AL中字节的符号扩展到AH中去)<br>CWD 字转换为双字. (把AX中的字的符号扩展到DX中去)<br>CWDE 字转换为双字. (把AX中的字符号扩展到EAX中去)<br>CDQ 双字扩展. (把EAX中的字的符号扩展到EDX中去)</p>
</blockquote>
<ol start="4">
<li>串操作</li>
</ol>
<blockquote>
<p>DS:SI 源串段寄存器 :源串变址.<br>ES:DI 目标串段寄存器:目标串变址.<br>CX 重复次数计数器.<br>AL&#x2F;AX 扫描值.<br>D标志 0表示重复操作中SI和DI应自动增量; 1表示应自动减量.<br>Z标志 用来控制扫描或比较操作的结束.<br>MOVS 串传送.<br>( MOVSB 传送字符. MOVSW 传送字. MOVSD 传送双字. )<br>CMPS 串比较.<br>( CMPSB 比较字符. CMPSW 比较字. )<br>SCAS 串扫描.<br>把AL或AX的内容与目标串作比较,比较结果反映在标志位.<br>LODS 装入串.<br>把源串中的元素(字或字节)逐一装入AL或AX中.<br>( LODSB 传送字符. LODSW 传送字. LODSD 传送双字. )<br>STOS 保存串.<br>是LODS的逆过程.<br>REP 当CX&#x2F;ECX&lt;&gt;0时重复.<br>REPE&#x2F;REPZ 当ZF&#x3D;1或比较结果相等,且CX&#x2F;ECX&lt;&gt;0时重复.<br>REPNE&#x2F;REPNZ 当ZF&#x3D;0或比较结果不相等,且CX&#x2F;ECX&lt;&gt;0时重复.<br>REPC 当CF&#x3D;1且CX&#x2F;ECX&lt;&gt;0时重复.<br>REPNC 当CF&#x3D;0且CX&#x2F;ECX&lt;&gt;0时重复.</p>
</blockquote>
<ol start="5">
<li>输入输出</li>
</ol>
<blockquote>
<p>IN I&#x2F;O端口输入. ( 语法: IN 累加器, {端口号│DX} )<br>OUT I&#x2F;O端口输出. ( 语法: OUT {端口号│DX},累加器 )<br>输入输出端口由立即方式指定时, 其范围是 0-255; 由寄存器 DX 指定时,<br>其范围是 0-65535.</p>
</blockquote>
<ol start="6">
<li>程序转移指令</li>
</ol>
<blockquote>
<p>1&gt;无条件转移指令 (长转移)<br>JMP 无条件转移指令<br>CALL 过程调用<br>RET&#x2F;RETF过程返回.<br>2&gt;条件转移指令 (短转移,-128到+127的距离内)<br>( 当且仅当(SF XOR OF)&#x3D;1时,OP1&lt;op2 )<br>JA&#x2F;JNBE 不小于或不等于时转移.<br>JAE&#x2F;JNB 大于或等于转移.<br>JB&#x2F;JNAE 小于转移.<br>JBE&#x2F;JNA 小于或等于转移.<br>以上四条,测试无符号整数运算的结果(标志C和Z).<br>JG&#x2F;JNLE 大于转移.<br>JGE&#x2F;JNL 大于或等于转移.<br>JL&#x2F;JNGE 小于转移.<br>JLE&#x2F;JNG 小于或等于转移.<br>以上四条,测试带符号整数运算的结果(标志S,O和Z).<br>JE&#x2F;JZ 等于转移.<br>JNE&#x2F;JNZ 不等于时转移.<br>JC 有进位时转移.<br>JNC 无进位时转移.<br>JNO 不溢出时转移.<br>JNP&#x2F;JPO 奇偶性为奇数时转移.<br>JNS 符号位为 “0” 时转移.<br>JO 溢出转移.<br>JP&#x2F;JPE 奇偶性为偶数时转移.<br>JS 符号位为 “1” 时转移.<br>3&gt;循环控制指令(短转移)<br><strong>LOOP</strong> CX不为零时循环.<br>LOOPE&#x2F;LOOPZ CX不为零且标志Z&#x3D;1时循环.<br>LOOPNE&#x2F;LOOPNZ CX不为零且标志Z&#x3D;0时循环.<br>JCXZ CX为零时转移.<br>JECXZ ECX为零时转移.<br>4&gt;中断指令<br><strong>INT</strong> 中断指令<br>INTO 溢出中断<br>IRET 中断返回<br>5&gt;处理器控制指令<br>HLT 处理器暂停, 直到出现中断或复位信号才继续.<br>WAIT 当芯片引线TEST为高电平时使CPU进入等待状态.<br>ESC 转换到外处理器.<br>LOCK 封锁总线.<br>NOP 空操作.<br>STC 置进位标志位.<br>CLC 清进位标志位.<br>CMC 进位标志取反.<br>STD 置方向标志位.<br>CLD 清方向标志位.<br>STI 置中断允许位.<br>CLI 清中断允许位.</p>
</blockquote>
<ol start="7">
<li>伪指令</li>
</ol>
<blockquote>
<p>DW 定义字(2字节).<br>PROC 定义过程.<br>ENDP 过程结束.<br><strong>SEGMENT</strong> 定义段.<br><strong>ASSUME</strong> 建立段寄存器寻址.<br><strong>ENDS</strong> 段结束.<br>END 程序结束.</p>
</blockquote>
<h3 id="6-5-编程hello"><a href="#6-5-编程hello" class="headerlink" title="6.5 编程hello"></a>6.5 编程hello</h3><ol>
<li>下载开发环境包，（msam、link、dosbox【需要32位环境】）</li>
</ol>
<ul>
<li><a href="https://files-cdn.cnblogs.com/files/dgwblog/DOSBox.rar">dosbox安装包</a></li>
<li><a href="https://files-cdn.cnblogs.com/files/dgwblog/%E6%B1%87%E7%BC%96%E6%89%8B%E5%86%8C%E4%B8%AD%E6%96%87.rar">文档</a></li>
</ul>
<ol start="2">
<li><p>运行dosbox.exe</p>
</li>
<li><p>进行挂载,查看是否成功</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 挂载命令  masm 我是放在DOSBOX下面的  Z盘是你存放文件的路径</span></span><br><span class="line">mount d: d:\<span class="built_in">test</span>\DOSBox\masm</span><br><span class="line"><span class="comment"># 出现msam，link文件为成功</span></span><br><span class="line"><span class="built_in">cd</span> d:</span><br><span class="line"><span class="built_in">dir</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>汇编编译hello.asm（将数据转换为机器语言）</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">masm hello.asm</span><br></pre></td></tr></table></figure>

<ul>
<li>hello.asm</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">data SEGMENT                  ;定义数据段</span><br><span class="line">msg DB &#x27;Hello, xxy.8.$&#x27;       ;定义一个字符串，以&#x27;$&#x27;结束</span><br><span class="line">data ENDS                     ;定义数据段结束</span><br><span class="line"></span><br><span class="line">code SEGMENT                  ;代码段定义开始</span><br><span class="line">ASSUME CS:code,DS:data        ;通知汇编程序，源程序中定义的组由对应的段寄存器进行段的寻址</span><br><span class="line">start:                        ;整个程序开始</span><br><span class="line">MOV AX,data                   ;获取段基址</span><br><span class="line">MOV DS,AX                     ;实现段基址加载到寄存器DS</span><br><span class="line">lea dx,msg                    ;将字符串地址送人DX中，同mov dx,offset str</span><br><span class="line">mov ah,09h                    ;调用9号功能调用输出字符串</span><br><span class="line">int 21h                       ;调用INT 21H的9号中断</span><br><span class="line">MOV Ah,4Ch                    ;实现返回MOS-DOS窗口</span><br><span class="line">INT 21h</span><br><span class="line">code ENDS                     ;代码段结束</span><br><span class="line">END start                     ;整个程序结束</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">code SEGMENT</span><br><span class="line">ASSUME CS:code,DS:data</span><br><span class="line">msg DB &#x27;Hello, Mr.286.$&#x27;</span><br><span class="line">start:MOV AX,data</span><br><span class="line">MOV DS,AX</span><br><span class="line">lea dx,msg</span><br><span class="line">mov ah,9h</span><br><span class="line">int 21h</span><br><span class="line">MOV AX,4C00h</span><br><span class="line">INT 21h</span><br><span class="line">code ENDS</span><br><span class="line">END start</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>汇编后生成hello.obj文件,进行链接生成hello.exe机器码文件（将机器码分配内存）</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">link</span> hello.obj</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>执行hello.exe，查看结果</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hello</span><br></pre></td></tr></table></figure>

<h2 id="7-高级语言"><a href="#7-高级语言" class="headerlink" title="7. 高级语言"></a>7. 高级语言</h2><h3 id="7-1-概述"><a href="#7-1-概述" class="headerlink" title="7.1 概述"></a>7.1 概述</h3><blockquote>
<p>高级语言（High-level programming language）是一种独立于机器，面向过程或对象的语言。高级语言设计的程序必须经过“翻译”以后才能被机器执行。“翻译”的方法有两种，一种是解释，一种是编译。</p>
</blockquote>
<h3 id="7-2-功能"><a href="#7-2-功能" class="headerlink" title="7.2 功能"></a>7.2 功能</h3><blockquote>
<p>能够在任何平台上进行开发自己想要的任何功能</p>
</blockquote>
<h3 id="7-3-种类"><a href="#7-3-种类" class="headerlink" title="7.3 种类"></a>7.3 种类</h3><ul>
<li>命令式语言</li>
</ul>
<blockquote>
<p>这种语言的语义基础是模拟“数据存储&#x2F;数据操作”的图灵机可计算模型，Fortran、Pascal、Cobol、C、C++、Basic、Ada、Java、C# 等，各种脚本语言也被看作是此种类型</p>
</blockquote>
<ul>
<li>函数式语言</li>
</ul>
<blockquote>
<p>这种语言的语义基础是基于数学函数概念的值映射的λ算子可计算模型，如 Lisp、Haskell、ML、Scheme 、F#</p>
</blockquote>
<ul>
<li>逻辑式语言</li>
</ul>
<blockquote>
<p>这种语言的语义基础是基于一组已知规则的形式逻辑系统,如 Prolog</p>
</blockquote>
<ul>
<li>面向对象语言</li>
</ul>
<blockquote>
<p>模块化，如 Smalltalk</p>
</blockquote>
<h3 id="7-4-组成"><a href="#7-4-组成" class="headerlink" title="7.4 组成"></a>7.4 组成</h3><ol>
<li>接口分析</li>
<li>寻址分析</li>
<li>位操作分析</li>
<li>任务支持分析</li>
<li>控制程序分析</li>
</ol>
<h3 id="7-5-C、C-语言执行流程"><a href="#7-5-C、C-语言执行流程" class="headerlink" title="7.5 C、C++语言执行流程"></a>7.5 C、C++语言执行流程</h3><p>【预处理 hello.c-hello.s 将stdio.h内容加入】【汇编生成hello.o】【链接生成hello.exe】</p>
<h3 id="7-6-Java编程hello"><a href="#7-6-Java编程hello" class="headerlink" title="7.6 Java编程hello"></a>7.6 Java编程hello</h3><ol>
<li>编写</li>
</ol>
<ul>
<li>Hello.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> l.hello;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>MANIFEST.MF</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Manifest-Version: 1.0  </span><br><span class="line">Created-By: x</span><br><span class="line">Main-Class: l.hello.Hello</span><br><span class="line"></span><br><span class="line">//最后一行空白不能省略</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>编译Hello.class字节码文件</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -d . 将包名生成树结构</span></span><br><span class="line">javac -d . Hello.java</span><br><span class="line"><span class="comment"># 帮助后面加</span></span><br><span class="line">--<span class="built_in">help</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>打包</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 手动写MANIFEST.MF</span></span><br><span class="line">jar cvfm hello.jar MANIFEST.MF ./l/hello/Hello.class</span><br><span class="line"><span class="comment"># 自动MANIFEST.MF</span></span><br><span class="line">jar cvfe Hello.jar l.hello.Hello l/hello/Hello.class</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>执行 .jar 文件</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -jar hello.jar</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>执行war包</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1. 把 war 文件放到 tomcat 的 webapps 文件夹中</span></span><br><span class="line"><span class="comment"># 2. --jar</span></span><br><span class="line">java --jar 文件名.war</span><br><span class="line"><span class="comment"># 3. 修改端口</span></span><br><span class="line">java -jar jenkins.war --httpPort=9999</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>反编译</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># .class文件</span></span><br><span class="line">javap ./l/hello/Hello.class</span><br><span class="line"><span class="comment"># jar包 </span></span><br><span class="line"><span class="comment"># 1. jar后缀修改为zip，然后解压再通过javap </span></span><br><span class="line"><span class="comment"># 2. 利用集成开发工具或其他工具JGUI JD-GUI  jad-gui vscode插件Decompiler </span></span><br><span class="line"><span class="comment"># 3. 通过java-decompiler.jar手动执行命令反编译整个jar包，在idea插件文件中可以找到plugins/java-decompiler/lib/java-decompiler.jar</span></span><br><span class="line"><span class="comment"># 确定反编译jar包位置 /d/java/jdk/lib/tools.jar</span></span><br><span class="line"><span class="comment"># 确定反编译后文件的输出位置，注意输出目录必须得事先存在，反编译过程不会自动创建，如果不存在就会报错目标目录不存在/d/test/</span></span><br><span class="line"><span class="comment"># # 引号里的就是反编译插件jar包，后面跟的是jar包执行主类，最后的是需要反编译的jar包以及输出目录，执行命令进行反编译</span></span><br><span class="line">java -<span class="built_in">cp</span> <span class="string">&quot;./java-decompiler.jar&quot;</span> java -<span class="built_in">cp</span> <span class="string">&quot;./java-decompiler.jar&quot;</span> org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler -dgs=<span class="literal">true</span> ./hello.jar ./l</span><br></pre></td></tr></table></figure>

<h3 id="7-7-Java执行流程"><a href="#7-7-Java执行流程" class="headerlink" title="7.7 Java执行流程"></a>7.7 Java执行流程</h3><ol>
<li>编译：java源代码 java编译器（javac）生成字节码文件（.class）</li>
<li>类加载：类加载器把字节码文件通过加载、校验（文件格式验证、元数据验证、字节码验证、符号引用验证）、准备内存、转换解析（一般是序列化）和初始化（main方法）加载到虚拟机的方法区，现在也叫元数据</li>
<li>创建：通过new 或者反射将创建的对象存入堆中</li>
<li>链接：方法调用，执行引擎（相当于jvm的cpu）解释为机器码</li>
<li>执行：通过Java方法栈和本地方法栈从内存中获取指令、译码、执行</li>
<li>多线程：切换上下文</li>
<li>结束：存入寄存器，打印或者存储或堆回收</li>
</ol>
<h3 id="7-8-JVM"><a href="#7-8-JVM" class="headerlink" title="7.8 JVM"></a>7.8 JVM</h3><ol>
<li>概述</li>
</ol>
<blockquote>
<p>JVM是一种仿真计算机硬件和软件的功能实现的指令系统</p>
</blockquote>
<ol start="2">
<li>功能</li>
</ol>
<blockquote>
<p>在实际计算机上模拟各种java开发的功能</p>
</blockquote>
<ol start="3">
<li>组成</li>
</ol>
<blockquote>
<p>一套字节码指令集、一组寄存器、一个栈、一个垃圾回收堆和一个存储方法域。</p>
</blockquote>
<ol start="4">
<li>种类</li>
</ol>
<blockquote>
<p>Sun Classic Vm 、Exact Vm 、<strong>Sun公司的Hotspot</strong>、<strong>BEA公司的JRockit</strong>、<strong>IBM公司的J9 VM</strong></p>
</blockquote>
<h2 id="8-总结"><a href="#8-总结" class="headerlink" title="8. 总结"></a>8. 总结</h2><p>从计算机的组成到语言的实现有了基本上的了解</p>
]]></content>
      <tags>
        <tag>探索</tag>
        <tag>计算机</tag>
      </tags>
  </entry>
</search>
